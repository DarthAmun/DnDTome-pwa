{"version":3,"sources":["data/races/Trait.tsx","database/MyDatabase.tsx","data/races/Subrace.tsx","data/races/Race.tsx","data/Monster.tsx","components/form_elements/EnumField.tsx","components/entities/monsters/MonsterTile.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/world/Location.tsx","components/general_elements/RollableProp.tsx","data/Gear.tsx","data/Item.tsx","data/campaign/Campaign.tsx","data/classes/Feature.tsx","data/classes/Subclass.tsx","data/classes/FeatureSet.tsx","data/world/World.tsx","data/Spell.tsx","data/classes/Class.tsx","components/general_elements/Dialog.tsx","components/entities/npcs/NpcTile.tsx","components/entities/chars/CharTile.tsx","data/campaign/Group.tsx","data/campaign/Npc.tsx","data/campaign/Quest.tsx","data/world/Event.tsx","../node_modules/peerjs/dist sync","components/entities/locations/LocationTile.tsx","components/entities/events/EventTile.tsx","data/IEntity.tsx","data/Selection.tsx","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","components/form_elements/FileField.tsx","components/general_elements/ErrorTile.tsx","data/Book.tsx","data/RandomTable.tsx","components/entities/locations/details/LocationEditView.tsx","data/campaign/Note.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignView.tsx","components/form_elements/NumberArrayField.tsx","components/form_elements/ShortTextField.tsx","components/entities/classes/details/ClasseEditView.tsx","components/entities/classes/details/ClasseView.tsx","components/entities/events/details/EventEditView.tsx","components/entities/events/details/EventView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearView.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/items/details/ItemEditView.tsx","components/entities/items/details/ItemView.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookView.tsx","components/entities/locations/details/LocationView.tsx","components/entities/monsters/details/MonsterEditView.tsx","components/entities/monsters/details/MonsterView.tsx","components/entities/npcs/details/NpcEditView.tsx","components/entities/npcs/details/NpcView.tsx","components/entities/quests/details/QuestEditView.tsx","components/entities/quests/details/QuestView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceView.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/entities/selections/details/SelectionEditView.tsx","components/entities/selections/details/SelectionView.tsx","components/entities/spells/details/SpellEditView.tsx","components/entities/spells/details/SpellView.tsx","components/entities/subclasses/details/SubclasseEditView.tsx","components/entities/subclasses/details/SubclasseView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceView.tsx","components/entities/worlds/details/WorldEditView.tsx","data/world/BuildWorld.tsx","services/WorldService.tsx","components/entities/worlds/details/WorldView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/details/ToEntity.tsx","services/DatabaseService.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/CheckField.tsx"],"names":["Trait","name","text","level","this","isTrait","arg","undefined","nameCheck","textCheck","levelCheck","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","version","stores","chars_spells","chars_monsters","chars_items","upgrade","trans","toCollection","modify","char","campaign","table","Dexie","Subrace","id","type","filename","abilityScores","traits","sources","isSubrace","typeCheck","abilityScoresCheck","traitsCheck","Array","isArray","sourcesCheck","Race","pic","age","alignment","size","speed","lang","isRace","picCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","Monster","subtype","ac","hp","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","subtypeCheck","acCheck","hpCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","EnumField","options","value","label","icon","transform","onChange","handleChange","option","Field","LabelText","Icon","StyledSelect","classNamePrefix","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","Select","input","buttons","MonsterTile","monster","isLegendary","useCallback","trim","includes","formatCr","getPicture","Tile","to","Type","Flag","CR","ImageName","Image","Name","PropWrapper","Prop","WideProp","faRunning","faLink","Link","boxShadow","headerColor","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","BackButton","action","Back","onClick","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Location","map","dimension","markers","width","isLocation","mapCheck","dimensionCheck","markersCheck","RollableProp","title","rolledValue","webhook","useWebhook","PropText","rollString","roll","rollCommand","result","krit","fail","newName","newJson","username","embeds","author","icon_url","fields","sendEmbedMessage","JSON","stringify","rollDiscord","cursor","PropTitle","float","padding","lineHeight","fontSize","margin","marginLeft","faDiscord","span","backgroundColorLink","Gear","description","cost","damage","weight","properties","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","Campaign","players","logs","notes","flow","isCampaign","playersCheck","logsCheck","npcsCheck","notesCheck","FeatureType","featureTypeArray","getOptionFromEnum","opt","forEach","toString","Feature","normal","isFeature","selectionsCheck","Subclass","features","isSubclass","featuresCheck","isFeatureSet","FeatureSet","profBonus","bonis","spellslots","profBonusCheck","World","isWorld","locationCheck","eventCheck","Spell","school","time","range","components","duration","ritual","isSpell","classesCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","NpcTile","npc","RowProp","ImgContainer","CharTile","calcLevel","classe","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","Group","isGroup","monstersCheck","flowCheck","Npc","isNpc","Quest","rewards","followQuest","isQuest","followQuestCheck","rewardsCheck","Event","date","isEvent","dateCheck","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","LocationTile","location","EventTile","event","faCalendarAlt","isIEntity","Selection","selectionOptions","isSelection","selectionOptionsCheck","EditDialog","activeElement","onSave","onClose","onDelete","useState","setLabel","useEffect","StringField","TextButton","faTimes","faSave","newElement","onSaveClick","Map","editable","onEdit","showEditDialog","setEditDialaog","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","position","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","console","log","editMarker","FormatedText","FileField","accept","isMulti","Input","target","files","multiple","ErrorTile","buttonText","onButton","Text","faPlusCircle","Book","cover","data","pages","tags","Blob","RandomTable","header","rows","LocationEditView","http","sizeOf","parse","get","response","chunks","on","chunk","push","buffer","Buffer","concat","CenterWrapper","View","faImage","Note","content","memo","StyledNode","Position","Top","onConnect","params","Left","Right","Bottom","isNode","isEdge","nodeTypes","customeNode","CustomeNode","FlowChart","initElements","isEditable","elements","setElements","setActiveElement","FlowContainer","onNodeDragStop","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","FlowBar","IconButton","faPlus","newNode","x","length","y","addNewNode","newElm","CampaignEditView","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","TabBar","children","tab","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","filter","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","characterList","npcList","recivePromiseByAttribute","Promise","all","timeEnd","NoteSearchBar","hasTitle","onSend","open","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","tabs","setTabs","filters","setFilters","then","newTabs","Loading","Header","SearchableNoteView","applyFilters","NoteWrapper","faTags","SearchableView","sort","toLocaleString","NumberArrayField","values","max","array","setArray","handleValueChange","ShortTextField","textarea","ClasseEditView","setSelections","reciveAll","select","onFeatureSetChange","oldFeature","featureSet","onBoniChange","oldBoni","boni","onFeatureChange","oldFeatureSet","feature","ClassView","FeatureView","FeatureWrapper","FeatureNumber","indexOf","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","CheckField","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","NumberField","ClasseView","send","setSend","setSubclasses","hardSubselect","setHardSubselect","history","useHistory","reciveAllFiltered","fieldName","results","ImageView","subclass","link","SubclasseLink","CreateButton","newSubclass","createNewWithId","createNewSubclass","faPaperPlane","P2PSender","FeatureRow","FeatureHeadProp","colSpan","SpellProp","count","levels","i","printSpellslots","spellslot","FeatureProp","tr","th","td","src","img","button","EventEditView","EventView","json","setJson","inline","formatDiscordText","GearEditView","gear","faCoins","faWeightHanging","faCrosshairs","GearView","GroupEditView","group","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","BuildGroup","buildGroup","monsterList","GroupView","loadedGroup","setLoadedGroup","ItemEditView","item","ItemView","itemBase","setItemBase","hasAttunment","className","Rarity","toLowerCase","BookEditView","book","faFileImport","file","fileList","from","triggerImportFiles","TagView","tag","TagWrapper","oldTag","onTagChange","removeTag","BookView","pdfjs","GlobalWorkerOptions","workerSrc","setBase","numPages","setNumPages","pageNumber","setPageNumber","reader","FileReader","readAsDataURL","onloadend","base64data","changePage","offset","prevPageNumber","DocumentWrapper","disabled","faArrowRight","faArrowLeft","onLoadSuccess","onItemClick","itemPageNumber","LocalLoadingSpinner","navigator","appVersion","window","msSaveBlob","URL","createObjectURL","showPdf","faExternalLinkAlt","msSaveOrOpenBlob","pdfURL","document","createElement","download","href","body","appendChild","removeChild","downloadFile","faFileDownload","Tag","faTag","LocationView","MonsterEditView","FieldGroup","MonsterView","image","formatScore","score","Math","floor","makeSave","attr","replaceAll","split","save","parseInt","faShieldAlt","NpcEditView","NpcView","QuestEditView","quest","newQuest","QuestView","RaceEditView","onTraitChange","oldTrait","trait","TraitView","TraitWrapper","TraitName","TraitLevel","removeTrait","TraitText","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","RandomTableEditView","randomTable","onRowChange","placeholder","row","RowWrapper","RowCount","cells","removeRow","RandomTableView","rand","setRand","faDice","lastRowValues","round","random","rollForRandom","min","TableHeadProp","cell","TableProp","SelectionEditView","SelectionWrapper","SelectionName","entityName","SelectionLevel","SelectionText","entityPrerequsite","entityText","SelectionView","SpellEditView","spell","faHistory","faPowerOff","rotate","faHourglassHalf","faMortarPestle","faUser","SpellView","formatLevel","hasRitual","hasConcentration","School","Level","SubclasseEditView","SubclassView","SubclasseView","SubraceEditView","SubraceView","WorldEditView","world","newLocation","oldLocation","newLocationlList","onChangeLocation","removeLocation","addNewLocation","newEvent","oldEvent","newEventlList","onChangeEvent","removeEvent","addNewEvent","BuildWorld","buildWorld","eventList","locationList","WorldView","loadedWorld","setLoadedWorld","localeCompare","EntityDetail","entity","tableName","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEntity","msg","updateWithCallback","setTimeout","editAndSaveEntity","views","faExclamationTriangle","remove","goBack","TopBar","obj","newObj","duplicateEntity","faClone","entityId","React","toLocaleLowerCase","ToEntity","match","setEntityName","setEntity","error","setError","makeEntity","newEntity","recivePromise","newMatch","path","entities","createNewEntity","charAt","toUpperCase","update","db","finally","close","callback","saveNew","put","prom","saveNewFromList","refinedEntities","bulkPut","saveWithCallback","add","delete","toArray","reciveCount","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttributeCount","equals","reciveAllPromise","test","hasTag","fieldPart","arrayTest","filterPart","val","sortedFiled","reverse","sortBy","reciveAllFilteredPromise","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","deleteAll","clear","exportFilteredFromTable","blob","decodeURIComponent","encodeURI","encodeURIComponent","LinkCheck","entitiyFound","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","command","sendMessage","newCommand","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","formatTable","textPart","tableRows","isHead","formatText","FormatedTextContainer","setName","peer","setPeer","brokerId","password","generateBrokerId","newPeer","Peer","host","secure","conn","errorData","disconnected","destroyed","reconnect","faExclamationCircle","step","Bar","child","Tab","isActive","filedName","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Options","Option","defaultChecked","checked","Checkmark"],"mappings":"uLAEqBA,EAInB,WAAYC,EAAcC,EAAcC,GAAgB,yBAHxDF,UAGuD,OAFvDC,UAEuD,OADvDC,WACuD,EACrDC,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,EACZE,KAAKD,MAAQA,GAIV,SAASE,EAAQC,GACtB,QAAYC,IAARD,EAAmB,CACrB,IAAME,OAAyBD,IAAbD,EAAIL,MAAyC,iBAAZK,EAAIL,KACjDQ,OAAyBF,IAAbD,EAAIJ,MAAyC,iBAAZI,EAAIJ,KACjDQ,OAA2BH,IAAdD,EAAIH,OAA2C,iBAAbG,EAAIH,MACzD,OAAOG,GAAOE,GAAaC,GAAaC,EAExC,OAAO,I,yGCEEC,EAAb,kDAsBE,aAAe,IAAD,8BACZ,cAAM,cAtBRC,YAqBc,IApBdC,WAoBc,IAnBdC,WAmBc,IAlBdC,cAkBc,IAjBdC,WAiBc,IAhBdC,cAgBc,IAfdC,aAec,IAddC,gBAcc,IAbdC,WAac,IAZdC,gBAYc,IAXdC,WAWc,IAVdC,gBAUc,IATdC,kBASc,IARdC,eAQc,IAPdC,YAOc,IANdC,UAMc,IALdC,YAKc,IAJdC,eAIc,IAHdC,YAGc,IAFdC,YAEc,EAEZ,EAAKC,QAAQ,GAAGC,OAAO,CACrBrB,OACE,sGAEJ,EAAKoB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,mEAET,EAAKmB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,kFAET,EAAKkB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,qOAEJ,EAAKiB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFK,MACE,+9BAEJ,EAAKY,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFK,MACE,69BACFc,aAAc,oCACdC,eAAgB,4BAChBC,YACE,8FAEJ,EAAKJ,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iSAEJ,EAAKY,QAAQ,GAAGC,OAAO,CACrBC,aAAc,KACdC,eAAgB,KAChBC,YAAa,KAEbxB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,kCAEd,EAAKW,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,yCAET,EAAKU,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKS,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKS,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKQ,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKQ,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QA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","file":"static/js/12.2e4f495e.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(19).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters:\n        \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(20)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups:\n          \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n      .upgrade((trans: any) => {\n        return trans.chars.toCollection().modify((char: Char) => {\n          if (char.campaign === undefined) char = { ...char, campaign: \"\" };\n        });\n      });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const dimensionCheck =\n    arg.dimension !== undefined &&\n    typeof arg.dimension.height == \"number\" &&\n    typeof arg.dimension.width == \"number\";\n  const markersCheck = arg.markers !== undefined && Array.isArray(arg.markers);\n  return arg && nameCheck && sourcesCheck && mapCheck && dimensionCheck && markersCheck;\n}\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../data/chars/Char\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendEmbedMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\n\ninterface $RollableProps {\n  char?: Char;\n  title: string;\n  value?: string | number;\n  rolledValue: number;\n}\n\nconst RollableProp = ({ char, title, value, rolledValue }: $RollableProps) => {\n  let webhook = useWebhook();\n\n  const rollDiscord = () => {\n    let rollString: string = \"\";\n    let roll: number = 0;\n\n    if (rolledValue >= 0) {\n      const { result, text } = rollCommand(\"d20+\" + rolledValue);\n      roll = result;\n      rollString = \"d20(`\" + (result - rolledValue) + \"`)+\" + rolledValue + text;\n    } else {\n      const { result, text } = rollCommand(\"d20\" + rolledValue);\n      roll = result;\n      rollString = \"d20(`\" + (result - rolledValue) + \"`)\" + rolledValue + text;\n    }\n\n    let krit = false;\n    if (roll - rolledValue === 20) krit = true;\n    let fail = false;\n    if (roll - rolledValue === 1) fail = true;\n\n    if (rollString !== \"\" && webhook !== undefined) {\n      const newName =\n        char !== undefined\n          ? rolledValue >= 0\n            ? title + \"(+\" + rolledValue + \")\"\n            : title + \"(\" + rolledValue + \")\"\n          : title;\n      rollString = char !== undefined ? rollString : \"\";\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: char !== undefined ? char.name : \"???\",\n              icon_url: char !== undefined ? char.pic : \"\",\n            },\n            fields: [\n              {\n                name: newName,\n                value:\n                  roll +\n                  (fail ? \" :red_circle:\" : \"\") +\n                  (krit ? \" :green_circle:\" : \"\") +\n                  (rollString !== \"\" ? \" ||\" + rollString + \"||\" : \"\"),\n              },\n            ],\n          },\n        ],\n      };\n      sendEmbedMessage(webhook, JSON.stringify(newJson));\n    }\n  };\n\n  return (\n    <PropText\n      onClick={() => rollDiscord()}\n      style={{ cursor: webhook !== undefined ? \"pointer\" : \"default\" }}\n    >\n      <PropTitle>{title}:</PropTitle>\n      {value !== undefined ? value + \" \" : \"\"}\n      {value !== undefined\n        ? \"(\" + (rolledValue >= 0 ? \"+\" + rolledValue : rolledValue) + \")\"\n        : rolledValue}\n      {webhook !== undefined && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n            height: \"10px\",\n            lineHeight: \"10px\",\n            fontSize: \"10px\",\n            margin: \"0px\",\n            marginLeft: \"5px\",\n          }}\n          icon={faDiscord}\n        />\n      )}\n    </PropText>\n  );\n};\n\nexport default RollableProp;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logsCheck = arg.logs !== undefined && Array.isArray(arg.logs);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\n\nexport default class World implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  locations: string[];\n  events: string[];\n  map: string;\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    description?: string,\n    locations?: string[],\n    events?: string[],\n    map?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isWorld(arg: any): arg is World {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const eventCheck = arg.events !== undefined && Array.isArray(arg.events);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return (\n    arg && nameCheck && descriptionCheck && locationCheck && eventCheck && sourcesCheck && mapCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  notes: Note[];\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    notes?: Note[],\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.notes = notes || [];\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    notesCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  char: Char | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    char?: Char | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.char = char;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return arg && nameCheck && picCheck && descriptionCheck && traitsCheck && sourcesCheck;\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\n//quests:\"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\nexport default class Quest implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  rewards: string;\n  followQuest: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    rewards?: string,\n    followQuest?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.rewards = rewards || \"\";\n    this.followQuest = followQuest || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isQuest(arg: any): arg is Quest {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const followQuestCheck = arg.followQuest !== undefined && typeof arg.followQuest == \"string\";\n  const rewardsCheck = arg.rewards !== undefined && typeof arg.rewards == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    followQuestCheck &&\n    rewardsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findQuestFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Event implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  date: string;\n  sources: string;\n\n  constructor(id?: number, name?: string, description?: string, date?: string, sources?: string) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.date = date || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isEvent(arg: any): arg is Event {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const dateCheck = arg.date !== undefined && typeof arg.date == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return arg && nameCheck && descriptionCheck && dateCheck && sourcesCheck && mapCheck;\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 239;","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Location from \"../../../data/world/Location\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationTile = ({ location }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <Tile to={\"/location-detail/id/\" + location.id}>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{location.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{location.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {location.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default LocationTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Event from \"../../../data/world/Event\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventTile = ({ event }: $Props) => {\n  return (\n    <Tile to={\"/event-detail/id/\" + event.id}>\n      <Name>\n        <b>{event.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faCalendarAlt} />\n          {event.date}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {event.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default EventTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityPrerequsite: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Location from \"../../../../data/world/Location\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport Map from \"../../../general_elements/map/Map\";\n\nimport { faLink, faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\ninterface $Props {\n  location: Location;\n  onEdit: (value: Location) => void;\n}\n\nconst LocationEditView = ({ location, onEdit }: $Props) => {\n  useEffect(() => {\n    if (location.map !== undefined && location.map !== \"\") {\n      let url = require(\"url\");\n      let http = require(\"http\");\n      let sizeOf = require(\"image-size\");\n\n      let options = url.parse(location.map);\n      http.get(options, function (response: any) {\n        let chunks: any = [];\n        response\n          .on(\"data\", function (chunk: any) {\n            chunks.push(chunk);\n          })\n          .on(\"end\", function () {\n            let buffer = Buffer.concat(chunks);\n            let size = sizeOf(buffer);\n            onEdit({ ...location, dimension: { height: size.height, width: size.width } });\n          });\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.map]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={location.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...location, name: name })}\n        />\n\n        <StringField\n          value={location.map}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...location, map: pic })}\n        />\n        <NumberField\n          value={location.dimension.width}\n          label=\"Map width\"\n          onChange={(width) =>\n            onEdit({ ...location, dimension: { ...location.dimension, width: width } })\n          }\n        />\n        <NumberField\n          value={location.dimension.height}\n          label=\"Map height\"\n          onChange={(height) =>\n            onEdit({ ...location, dimension: { ...location.dimension, height: height } })\n          }\n        />\n        <StringField\n          value={location.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...location, sources: sources })}\n        />\n      </View>\n      <Map editable={true} location={location} onEdit={onEdit} />\n    </CenterWrapper>\n  );\n};\n\nexport default LocationEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      let newTabs = [\"General\"];\n      if (buildCampaign.characters.length > 0) newTabs.push(\"Players\");\n      if (buildCampaign.npcs.length > 0) newTabs.push(\"Npcs\");\n      setTabs([...newTabs, \"Notes\", \"Log\", \"Graph\", \"Map\"]);\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && loadedCampaign.characters && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && loadedCampaign.npcs && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClasseEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClasseView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [hardSubselect, setHardSubselect] = useState<boolean>(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      hardSubselect\n        ? [\n            { fieldName: \"type\", value: classe.name, sort: 0 },\n            { fieldName: \"sources\", value: classe.sources, sort: 0 },\n          ]\n        : [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe, hardSubselect]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <CheckField value={hardSubselect} label=\"Hard Select\" onChange={setHardSubselect} />\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclasse-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink key={index} onClick={() => history.push(link)}>\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={classe.featureSets[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(classe.featureSets[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Event from \"../../../../data/world/Event\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n  onEdit: (value: Event) => void;\n}\n\nconst EventEditView = ({ event, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={event.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...event, name: name })}\n        />\n        <StringField\n          value={event.date}\n          label=\"Date\"\n          onChange={(date) => onEdit({ ...event, date: date })}\n        />\n        <StringField\n          value={event.sources}\n          label=\"Sources\"\n          onChange={(sources) => onEdit({ ...event, sources: sources })}\n        />\n        <TextField\n          value={event.description}\n          label=\"Description\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...event, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Event from \"../../../../data/world/Event\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventView = ({ event }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: event.name,\n            },\n            fields: [\n              {\n                name: \"Date\",\n                value: event.date ? event.date : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: event.description ? formatDiscordText(event.description) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [event, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{event.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCalendarAlt} />\n            {event.date}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {event.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <PropTitle>Description</PropTitle>\n          <FormatedText text={event.description} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${event.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${event.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={event} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: gear.name,\n              icon_url: gear.pic,\n            },\n            fields: [\n              {\n                name: \"Weight\",\n                value: gear.weight ? gear.weight : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Cost\",\n                value: gear.cost ? gear.cost : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Properties\",\n                value: gear.properties ? gear.properties : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Damgae\",\n                value: gear.damage ? gear.damage : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Type\",\n                value: gear.type ? gear.type : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: gear.description ? formatDiscordText(gear.description) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [gear, webhook]);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        {webhook !== undefined && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${gear.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport Note from \"../../../../data/campaign/Note\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Notes\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {group.notes !== undefined &&\n            group.notes.map((note: Note, index: number) => {\n              return (\n                <Container key={index}>\n                  <StringField\n                    value={note.title}\n                    label=\"Title\"\n                    onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                  <TextField\n                    value={note.content}\n                    label=\"Feature Text\"\n                    onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                  />\n                  <StringField\n                    value={note.tags}\n                    label=\"Tags\"\n                    onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                  />\n                </Container>\n              );\n            })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monsters/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\nimport Note from \"../../../../data/campaign/Note\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport NoteSearchBar from \"../../campaigns/NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.group.notes.length > 0) newTabs.push(\"Notes\");\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedGroup.group.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../data/Item\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../data/Item\";\nimport Gear from \"../../../../data/Gear\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: item.name,\n              icon_url: item.pic,\n            },\n            fields: [\n              {\n                name: \"Bonus\",\n                value: item.magicBonus ? item.magicBonus : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Rarity\",\n                value: item.rarity ? item.rarity : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Type\",\n                value: item.type ? item.type : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Base\",\n                value: item.base ? item.base : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Damage\",\n                value: itemBase && itemBase.damage ? itemBase.damage : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Properties\",\n                value: itemBase && itemBase.properties ? itemBase.properties : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: formatDiscordText(item.description),\n              },\n            ],\n          },\n        ],\n      };\n\n      setJson(JSON.stringify(newJson));\n    }\n  }, [item, webhook, itemBase]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        {webhook !== undefined && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${item.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${item.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Location from \"../../../../data/world/Location\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport Map from \"../../../general_elements/map/Map\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\nimport \"leaflet/dist/leaflet.css\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationView = ({ location }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{location.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{location.name}</b>\n          </Name>\n        )}\n      </View>\n\n      <Map editable={false} location={location} />\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${location.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={location} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default LocationView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faRunning, faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport RollableProp from \"../../../general_elements/RollableProp\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: monster.name,\n              icon_url: monster.pic,\n            },\n            image: {\n              url: monster.pic,\n            },\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [monster, webhook]);\n\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const makeSave = (attr: string): number => {\n    let boni = formatScore(monster[attr]);\n    if (monster.savingThrows !== \"\") {\n      monster.savingThrows\n        .replaceAll(\" \", \"\")\n        .split(\",\")\n        .forEach((save: string) => {\n          if (save.includes(attr)) {\n            boni = parseInt(save.replaceAll(attr, \"\").replaceAll(\"+\", \"\").trim());\n          }\n        });\n    }\n    return boni;\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <RollableProp title={\"Str\"} value={monster.str} rolledValue={makeSave(\"str\")} />\n          <RollableProp title={\"Dex\"} value={monster.dex} rolledValue={makeSave(\"dex\")} />\n          <RollableProp title={\"Con\"} value={monster.con} rolledValue={makeSave(\"con\")} />\n          <RollableProp title={\"Int\"} value={monster.int} rolledValue={makeSave(\"int\")} />\n          <RollableProp title={\"Wis\"} value={monster.wis} rolledValue={makeSave(\"wis\")} />\n          <RollableProp title={\"Cha\"} value={monster.cha} rolledValue={makeSave(\"cha\")} />\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && <Prop>{monster.dmgVulnerabilitie}</Prop>}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        {webhook !== undefined && monster.pic !== \"\" && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${monster.name} image`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${monster.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Npc from \"../../../../data/campaign/Npc\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n  onEdit: (value: Npc) => void;\n}\n\nconst NpcEditView = ({ npc, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={npc.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...npc, name: name })}\n        />\n        <StringField\n          value={npc.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...npc, pic: pic })}\n        />\n        <StringField\n          value={npc.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...npc, sources: sources })}\n        />\n        <TextField\n          value={npc.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...npc, description: description })}\n        />\n        <TextField\n          value={npc.traits}\n          label=\"Traits\"\n          icon={faBookOpen}\n          onChange={(traits) => onEdit({ ...npc, traits: traits })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcView = ({ npc }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={npc.description} />\n          </Text>\n          <Text>\n            <PropTitle>Traits: </PropTitle>\n            <FormatedText text={npc.traits} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${npc.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={npc} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Quest from \"../../../../data/campaign/Quest\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n  onEdit: (value: Quest) => void;\n}\n\nconst QuestEditView = ({ quest, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={quest.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...quest, name: name })}\n        />\n\n        <StringField\n          value={quest.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...quest, pic: pic })}\n        />\n        <StringField\n          value={quest.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...quest, sources: sources })}\n        />\n        <TextField\n          value={quest.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...quest, description: description })}\n        />\n        <TextField\n          value={quest.rewards}\n          label=\"Rewards\"\n          height={\"50px\"}\n          icon={faBookOpen}\n          onChange={(rewards) => onEdit({ ...quest, rewards: rewards })}\n        />\n        <TextField\n          value={quest.followQuest}\n          label=\"Followup\"\n          height={\"30px\"}\n          icon={faBookOpen}\n          onChange={(newQuest) => onEdit({ ...quest, followQuest: newQuest })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestView = ({ quest }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: quest.name,\n              icon_url: quest.pic,\n            },\n            fields: [\n              {\n                name: \"Descritption\",\n                value: quest.description ? formatDiscordText(quest.description) : \"-\",\n              },\n              {\n                name: \"Reward\",\n                value: quest.rewards ? formatDiscordText(quest.rewards) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [quest, webhook]);\n\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={quest.description} />\n          </Text>\n          <Text>\n            <FormatedText text={quest.rewards} />\n          </Text>\n          <Prop>\n            <FormatedText text={quest.followQuest} />\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${quest.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${quest.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={quest} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      <View>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          );\n        })}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityPrerequsite: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityPrerequsite: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityPrerequsite: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) => onSelectionChange(selection, \"entityName\", name)}\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) => onSelectionChange(selection, \"level\", level)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeSelection(selection)} />\n                <SelectionText\n                  value={selection.entityPrerequsite}\n                  label=\"Prerequsite\"\n                  onChange={(text) => onSelectionChange(selection, \"entityPrerequsite\", text)}\n                />\n                <SelectionText\n                  value={selection.entityText}\n                  label=\"Text\"\n                  onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n                />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityPrerequsite: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                {trait.entityPrerequsite !== \"\" && (\n                  <Prop>\n                    <PropTitle>Prerequisite:</PropTitle>\n                    {trait.entityPrerequsite}\n                  </Prop>\n                )}\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../data/Spell\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: spell.name,\n              icon_url: spell.pic,\n            },\n            fields: [\n              {\n                name: \"Level\",\n                value: spell.level ? spell.level : \"-\",\n                inline: true,\n              },\n              {\n                name: \"School\",\n                value: spell.school ? spell.school : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Range\",\n                value: spell.range ? spell.range : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Duration\",\n                value: spell.duration ? spell.duration : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Time\",\n                value: spell.time ? spell.time : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: formatDiscordText(spell.text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [spell, webhook]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${spell.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${spell.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport { faLink, faPlus, faTrash, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclasse: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclasseEditView = ({ subclasse, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const onBoniChange = (oldFeature: FeatureSet, oldBoni: Boni, field: string, value: string) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclasse, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclasse.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(0, featureSet.spellslots.length - 1),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclasse.features.length - 1 >= 0) {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclasse.features[subclasse.features.length - 1].bonis,\n            spellslots: subclasse.features[subclasse.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclasse.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclasse, name: name })}\n        />\n        <StringField\n          value={subclasse.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclasse, type: type })}\n        />\n        <StringField\n          value={subclasse.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclasse, sources: sources })}\n        />\n      </SubclassView>\n      {subclasse.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) => onFeatureSetChange(featureSet, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeFeatureSet(featureSet)} />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) => onSpellslotChange(featureSet, spellslots)}\n              />\n              <IconButton icon={faMinus} onClick={() => removeSpellslot(featureSet)} />\n              <IconButton icon={faPlus} onClick={() => addNewSpellslot(featureSet)} />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) => onBoniChange(featureSet, boni, \"name\", name)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeBoni(boni)} />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) => onBoniChange(featureSet, boni, \"value\", value)}\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) => onFeatureChange(featureSet, feature, \"name\", name)}\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) => onFeatureChange(featureSet, feature, \"type\", type)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeFeature(feature)} />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) => onFeatureChange(featureSet, feature, \"text\", text)}\n                      />\n                      {feature.selections &&\n                        feature.selections.map((selection: string, index: number) => {\n                          return (\n                            <FeatureContainer key={index}>\n                              <EnumField\n                                options={selections}\n                                value={{ value: selection, label: selection }}\n                                label=\"Name\"\n                                onChange={(name) =>\n                                  onSelectionChange(featureSet, feature, selection, name)\n                                }\n                              />\n                              <IconButton\n                                icon={faTrash}\n                                onClick={() => removeSelection(selection)}\n                              />\n                            </FeatureContainer>\n                          );\n                        })}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton text={\"Add new Level\"} icon={faPlus} onClick={() => addNewFeatureSet()} />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclasse: Subclass;\n}\n\nconst SubclasseView = ({ subclasse }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    console.log(subclasse);\n  }, [subclasse]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclasse.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclasse.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclasse.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclasse.features !== undefined &&\n          subclasse.features.length !== 0 &&\n          subclasse.features[0].spellslots &&\n          subclasse.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={subclasse.features[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclasse.features[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(subclasse.features[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {subclasse.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclasse.features !== undefined && subclasse.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclasse.features[0].bonis &&\n                      subclasse.features[0].bonis.length > 0 &&\n                      subclasse.features[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclasse.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclasse.features !== undefined &&\n            subclasse.features.map((featureSet) => {\n              return featureSet.features.map((feature, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{feature.name}:</PropTitle>\n                    <FormatedText text={feature.text} />\n                  </Text>\n                );\n              });\n            })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclasse.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclasse} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport World from \"../../../../data/world/World\";\n\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldEditView = ({ world, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeLocation = (oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations\n        .filter((location: string) => location !== oldLocation)\n        .map((location: string) => {\n          return location;\n        });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const addNewLocation = () => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        return location;\n      });\n      newLocationlList.push(\"\");\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const onChangeLocation = (newLocation: string, oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        if (location === oldLocation) {\n          return newLocation;\n        } else {\n          return location;\n        }\n      });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n\n  const removeEvent = (oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events\n        .filter((event: string) => event !== oldEvent)\n        .map((event: string) => {\n          return event;\n        });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const addNewEvent = () => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        return event;\n      });\n      newEventlList.push(\"\");\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const onChangeEvent = (newEvent: string, oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        if (event === oldEvent) {\n          return newEvent;\n        } else {\n          return event;\n        }\n      });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={world.name}\n            label=\"World Name\"\n            onChange={(name) => onEdit({ ...world, name: name })}\n          />\n          <StringField\n            value={world.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...world, sources: sources })}\n          />\n          <TextField\n            value={world.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...world, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Locations\" && (\n        <>\n          {world.locations.map((location: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"locations\"}\n                  value={location}\n                  label=\"Location\"\n                  onChange={(newLocation) => onChangeLocation(newLocation, location)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLocation(location)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Location\"} icon={faPlus} onClick={() => addNewLocation()} />\n        </>\n      )}\n      {activeTab === \"Events\" && (\n        <>\n          {world.events.map((event: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"events\"}\n                  value={event}\n                  label=\"Event\"\n                  onChange={(newEvent) => onChangeEvent(newEvent, event)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEvent(event)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Event\"} icon={faPlus} onClick={() => addNewEvent()} />\n        </>\n      )}\n      {activeTab === \"World Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={world.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...world, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default WorldEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Location from \"./Location\";\nimport Event from \"./Event\";\nimport World from \"./World\";\n\nexport default class BuildWorld {\n  world: World;\n  locations: Location[];\n  events: Event[];\n  map: Location;\n\n  constructor(world?: World, locations?: Location[], events?: Event[], map?: Location) {\n    this.world = world || new World();\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildWorld from \"../data/world/BuildWorld\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildWorld = async (world: World): Promise<BuildWorld> => {\n  console.time(\"t\");\n  let events: Event[];\n  let locations: Location[];\n  let map: Location;\n\n  console.time(\"load\");\n  let eventList: Promise<Event>[] = [];\n  let locationList: Promise<Location>[] = [];\n\n  world.events.forEach((event: string) => {\n    eventList.push(recivePromiseByAttribute(\"events\", \"name\", event));\n  });\n  world.locations.forEach((location: string) => {\n    locationList.push(recivePromiseByAttribute(\"locations\", \"name\", location));\n  });\n  events = await Promise.all(eventList);\n  locations = await Promise.all(locationList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", world.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildWorld(world, locations, events, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport World from \"../../../../data/world/World\";\nimport Location from \"../../../../data/world/Location\";\nimport Event from \"../../../../data/world/Event\";\nimport BuildWorld from \"../../../../data/world/BuildWorld\";\nimport { buildWorld } from \"../../../../services/WorldService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport LocationTile from \"../../locations/LocationTile\";\nimport EventTile from \"../../events/EventTile\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldView = ({ world, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedWorld, setLoadedWorld] = useState<BuildWorld>(new BuildWorld());\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  useEffect(() => {\n    buildWorld(world).then((buildWorld) => {\n      setLoadedWorld(buildWorld);\n      setLoading(false);\n    });\n  }, [world, setLoadedWorld]);\n\n  const getPicture = useCallback(() => {\n    if (loadedWorld !== undefined) {\n      if (loadedWorld.map.map === \"\" || loadedWorld.map.map === null) {\n        return \"\";\n      }\n      return loadedWorld.map.map;\n    }\n    return \"\";\n  }, [loadedWorld]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedWorld && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedWorld.world.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedWorld.world.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedWorld.world.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedWorld.world.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Locations\" && (\n            <PropWrapper>\n              {loadedWorld.locations.map((location: Location, index: number) => {\n                return <LocationTile location={location} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Events\" && (\n            <PropWrapper>\n              {loadedWorld.events\n                .sort((a, b) => a.date.localeCompare(b.date))\n                .map((event: Event, index: number) => {\n                  return <EventTile event={event} key={index} />;\n                })}\n            </PropWrapper>\n          )}\n          {activeTab === \"World Map\" && <Map editable={false} location={loadedWorld.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WorldView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport CampaignEditView from \"../../entities/campaigns/details/CampaignEditView\";\nimport CampaignView from \"../../entities/campaigns/details/CampaignView\";\nimport ClasseEditView from \"../../entities/classes/details/ClasseEditView\";\nimport ClasseView from \"../../entities/classes/details/ClasseView\";\nimport EventEditView from \"../../entities/events/details/EventEditView\";\nimport EventView from \"../../entities/events/details/EventView\";\nimport GearEditView from \"../../entities/gear/details/GearEditView\";\nimport GearView from \"../../entities/gear/details/GearView\";\nimport GroupEditView from \"../../entities/groups/details/GroupEditView\";\nimport GroupView from \"../../entities/groups/details/GroupView\";\nimport ItemEditView from \"../../entities/items/details/ItemEditView\";\nimport ItemView from \"../../entities/items/details/ItemView\";\nimport BookEditView from \"../../entities/library/details/BookEditView\";\nimport BookView from \"../../entities/library/details/BookView\";\nimport LocationEditView from \"../../entities/locations/details/LocationEditView\";\nimport LocationView from \"../../entities/locations/details/LocationView\";\nimport MonsterEditView from \"../../entities/monsters/details/MonsterEditView\";\nimport MonsterView from \"../../entities/monsters/details/MonsterView\";\nimport NpcEditView from \"../../entities/npcs/details/NpcEditView\";\nimport NpcView from \"../../entities/npcs/details/NpcView\";\nimport QuestEditView from \"../../entities/quests/details/QuestEditView\";\nimport QuestView from \"../../entities/quests/details/QuestView\";\nimport RaceEditView from \"../../entities/races/details/RaceEditView\";\nimport RaceView from \"../../entities/races/details/RaceView\";\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport SelectionEditView from \"../../entities/selections/details/SelectionEditView\";\nimport SelectionView from \"../../entities/selections/details/SelectionView\";\nimport SpellEditView from \"../../entities/spells/details/SpellEditView\";\nimport SpellView from \"../../entities/spells/details/SpellView\";\nimport SubclasseEditView from \"../../entities/subclasses/details/SubclasseEditView\";\nimport SubclasseView from \"../../entities/subclasses/details/SubclasseView\";\nimport SubraceEditView from \"../../entities/subraces/details/SubraceEditView\";\nimport SubraceView from \"../../entities/subraces/details/SubraceView\";\nimport WorldEditView from \"../../entities/worlds/details/WorldEditView\";\nimport WorldView from \"../../entities/worlds/details/WorldView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  const views = {\n    CampaignView: CampaignView,\n    CampaignEditView: CampaignEditView,\n    ClasseView: ClasseView,\n    ClasseEditView: ClasseEditView,\n    EventView: EventView,\n    EventEditView: EventEditView,\n    GearView: GearView,\n    GearEditView: GearEditView,\n    GroupView: GroupView,\n    GroupEditView: GroupEditView,\n    ItemView: ItemView,\n    ItemEditView: ItemEditView,\n    BookView: BookView,\n    BookEditView: BookEditView,\n    LocationView: LocationView,\n    LocationEditView: LocationEditView,\n    MonsterView: MonsterView,\n    MonsterEditView: MonsterEditView,\n    NpcView: NpcView,\n    NpcEditView: NpcEditView,\n    QuestView: QuestView,\n    QuestEditView: QuestEditView,\n    RaceView: RaceView,\n    RaceEditView: RaceEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n    SelectionView: SelectionView,\n    SelectionEditView: SelectionEditView,\n    SpellView: SpellView,\n    SpellEditView: SpellEditView,\n    SubclasseView: SubclasseView,\n    SubclasseEditView: SubclasseEditView,\n    SubraceView: SubraceView,\n    SubraceEditView: SubraceEditView,\n    WorldView: WorldView,\n    WorldEditView: WorldEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\nimport Book from \"../../../data/Book\";\nimport Group from \"../../../data/campaign/Group\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport Gear from \"../../../data/Gear\";\nimport Item from \"../../../data/Item\";\nimport Monster from \"../../../data/Monster\";\nimport Race from \"../../../data/races/Race\";\nimport Subrace from \"../../../data/races/Subrace\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport Spell from \"../../../data/Spell\";\nimport World from \"../../../data/world/World\";\nimport Class from \"../../../data/classes/Class\";\nimport Subclass from \"../../../data/classes/Subclass\";\nimport Event from \"../../../data/world/Event\";\nimport Selection from \"../../../data/Selection\";\nimport Location from \"../../../data/world/Location\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setEntityName(name);\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  const entities = {\n    campaign: new Campaign(0, match.params.name),\n    classe: new Class(0, match.params.name),\n    event: new Event(0, match.params.name),\n    gear: new Gear(0, match.params.name),\n    group: new Group(0, match.params.name),\n    item: new Item(0, match.params.name),\n    book: new Book(0, match.params.name),\n    location: new Location(0, match.params.name),\n    monster: new Monster(0, match.params.name),\n    npc: new Npc(0, match.params.name),\n    quest: new Quest(0, match.params.name),\n    race: new Race(match.params.name),\n    randomTable: new RandomTable(0, match.params.name),\n    selection: new Selection(0, match.params.name),\n    spell: new Spell(match.params.name),\n    subclasse: new Subclass(0, match.params.name),\n    subrace: new Subrace(match.params.name),\n    world: new World(0, match.params.name),\n  };\n\n  const createNewEntity = () => {\n    let newEntity: IEntity = entities[entityName];\n    delete newEntity.id;\n    createNewWithId(entityName + \"s\", newEntity, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            fields: [\n              {\n                name: \"Text\",\n                value: formatDiscordText(text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div``;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}