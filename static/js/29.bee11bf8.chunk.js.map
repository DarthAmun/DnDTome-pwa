{"version":3,"sources":["logo192.png","data/world/Location.tsx","components/entities/npc/NpcTile.tsx","components/entities/chars/CharTile.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","data/campaign/Campaign.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","data/campaign/Note.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignView.tsx","components/entities/campaigns/details/CampaignDetail.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/entities/campaigns/details/link_wrapper/IdToCampaign.tsx","database/MyDatabase.tsx","data/Filter.tsx","components/SearchbarStyle.tsx","components/form_elements/TextField.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx"],"names":["module","exports","Location","id","name","sources","map","dimension","markers","this","height","width","isLocation","arg","nameCheck","undefined","sourcesCheck","mapCheck","NpcTile","npc","getPicture","useCallback","pic","Tile","to","fallback","Image","PropWrapper","Name","WideProp","Icon","icon","faLink","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","RowProp","main","highlight","Prop","FontAwesomeIcon","ImgContainer","Empty","props","CharTile","char","calcLevel","level","classes","forEach","classe","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","alignment","memo","data","StyledNode","type","position","Position","Top","style","onConnect","params","console","log","Left","FormatedText","text","label","Right","Bottom","input","EditDialog","activeElement","onSave","onClose","useState","setLabel","useEffect","isNode","isEdge","Dialog","StringField","value","onChange","TextButton","faTimes","onClick","faSave","newElement","onSaveClick","nodeTypes","customeNode","CustomeNode","FlowBar","FlowChart","initElements","isEditable","onEdit","elements","setElements","setActiveElement","showEditDialog","setEditDialaog","FlowContainer","onNodeDragStop","event","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","IconButton","faPlus","newNode","toString","x","length","y","concat","addNewNode","newElm","onDelete","Map","location","editable","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","e","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","editMarker","Campaign","description","players","logs","npcs","notes","flow","filename","isCampaign","picCheck","descriptionCheck","playersCheck","Array","isArray","logCheck","npcsCheck","notesCheck","update","tableName","db","MyAppDatabase","open","then","table","finally","close","updateWithCallback","callback","result","saveNew","entity","put","prom","saveWithCallback","add","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","filter","fieldName","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","removeChild","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","Note","title","content","tags","CampaignEditView","campaign","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","CenterWrapper","TabBar","children","tab","View","faImage","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","time","characterList","npcList","Promise","timeEnd","NoteSearchBar","hasTitle","onSend","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","setFilters","Loading","Header","ImageName","Text","PropTitle","SearchableView","faTags","date","toLocaleString","span","backgroundColorLink","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","CampaignDetail","isNew","editMode","setMode","campaignObj","editCampaign","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateCampaign","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","faExclamationTriangle","campaignId","Message","editAndSaveCampaign","button","hoverColor","placeholder","Field","LabelText","Input","Bar","NameWrapper","Logo","src","LogoImg","HomeCredits","packageJson","version","header","img","NavButton","Button","NavMenu","useLocation","Menu","TopSide","className","pathname","faHome","Seperator","MiddleSide","LeftSide","faMapMarkedAlt","faTable","RightSide","faMeteor","faIdCard","faDragon","BottomSide","faChartPie","faCog","RightTooltip","Navigation","Nav","AppWrapper","moveNav","handlers","useSwipeable","onSwipedRight","onSwipedLeft","App","Content","LinkCheck","entitiyFound","setEntity","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","first","Back","ToggleLeft","ToggleRight","EditToggle","IdToCampaign","match","campaigns","spells","items","gears","monsters","races","subraces","subclasses","chars","encounters","books","selections","randomTables","quests","worlds","locations","events","groups","stores","chars_spells","chars_monsters","chars_items","Dexie","filedName","Tooltip","LeftTooltip","FixedBar","SearchBar","CreateButton","ExportButton","FieldGroup","textarea","child","Tab","isActive","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","option","Options","opt","Option"],"mappings":"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AY,2CAEd,EAAKnG,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKnG,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKpG,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKpG,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdZ,UACE,yFAEJ,EAAKxF,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdZ,UACE,uFACFa,OACE,2FACFhV,KAAM,gEACNiV,OAAQ,4EACRC,UAAW,iEACXC,OAAQ,uEAEV,EAAKxG,QAAQ,IAAI0G,OAAO,CACtBjB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACV3e,QAAS,qFACT4e,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY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","file":"static/js/29.bee11bf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return arg && nameCheck && sourcesCheck && mapCheck;\n}\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n\n          <WideProp>\n            <Icon icon={faLink} />\n            {npc.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logCheck = arg.log !== undefined && Array.isArray(arg.log);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npc/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled(View)`\n  margin-top: 50px;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport CampaignEditView from \"./CampaignEditView\";\nimport CampaignView from \"./CampaignView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  campaign: Campaign;\n  isNew: boolean;\n}\n\nconst CampaignDetail = ({ campaign, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [campaignObj, editCampaign] = useState<Campaign>(campaign);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteCampaign = (campaignId: number | undefined) => {\n    remove(\"campaigns\", campaignId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (campaignObj !== campaign) {\n      setUnsavedChanges(true);\n    }\n  }, [campaignObj, campaign]);\n\n  const updateCampaign = (tableName: string, campaignObj: Campaign) => {\n    console.log(campaignObj);\n    updateWithCallback(tableName, campaignObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveCampaign = (campaign: Campaign) => {\n    editCampaign(campaign);\n    updateCampaign(\"campaigns\", campaign);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateCampaign(\"campaigns\", campaignObj)} icon={faSave} />\n            <IconButton onClick={() => deleteCampaign(campaignObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CampaignEditView campaign={campaignObj} onEdit={(value) => editCampaign(value)} />\n      ) : (\n        <CampaignView campaign={campaignObj} onEdit={(value) => editAndSaveCampaign(value)} />\n      )}\n    </>\n  );\n};\n\nexport default CampaignDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>DnDTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n  faHome,\n  faTable,\n  faMapMarkedAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiBookshelf,\n  GiSolarSystem,\n  GiScrollUnfurled,\n  GiDjinn,\n} from \"react-icons/gi\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport { MdEvent } from \"react-icons/md\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n        <Seperator />\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBookmarklet />\n            <RightTooltip>Campaigns</RightTooltip>\n          </Link>\n          <Link\n            to=\"/quest-overview\"\n            className={location.pathname === \"/quest-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiScrollUnfurled />\n            <RightTooltip>Quests</RightTooltip>\n          </Link>\n           <Link\n            to=\"/group-overview\"\n            className={location.pathname === \"/group-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <HiUserGroup />\n            <RightTooltip>Groups</RightTooltip>\n          </Link>\n          <Link\n            to=\"/npc-overview\"\n            className={location.pathname === \"/npc-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiDjinn />\n            <RightTooltip>Npc's</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/world-overview\"\n            className={location.pathname === \"/world-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSolarSystem />\n            <RightTooltip>Worlds</RightTooltip>\n          </Link>\n          <Link\n            to=\"/location-overview\"\n            className={location.pathname === \"/location-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMapMarkedAlt} />\n            <RightTooltip>Locations</RightTooltip>\n          </Link>\n          <Link\n            to=\"/event-overview\"\n            className={location.pathname === \"/event-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <MdEvent />\n            <RightTooltip>Events</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/randomTable-overview\"\n            className={location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link to=\"/library\" className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}>\n            <GiBookshelf />\n            <RightTooltip>Library</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/item-overview\"\n            className={location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiCrystalWand />\n            <RightTooltip>Magic Items</RightTooltip>\n          </Link>\n          <Link\n            to=\"/gear-overview\"\n            className={location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBackpack />\n            <RightTooltip>Gear</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n          <Link\n            to=\"/class-overview\"\n            className={location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiPlagueDoctorProfile />\n            <RightTooltip>Classes</RightTooltip>\n          </Link>\n          <Link\n            to=\"/selection-overview\"\n            className={location.pathname === \"/selection-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <BiSelectMultiple />\n            <RightTooltip>Selections</RightTooltip>\n          </Link>\n          <Link\n            to=\"/char-overview\"\n            className={location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faIdCard} />\n            <RightTooltip>Chars</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/monster-overview\"\n            className={location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faDragon} />\n            <RightTooltip>Monsters</RightTooltip>\n          </Link>\n          <Link\n            to=\"/encounter-overview\"\n            className={location.pathname === \"/encounter-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSwordClash />\n            <RightTooltip>Encounters</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link to=\"/options\" className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}>\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport CampaignDetail from \"../CampaignDetail\";\n\ntype TParams = { id: string };\n\nconst IdToCampaign = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [campaign, loading, error] = useItem(db.campaigns, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && campaign === undefined && <>Fail by Id</>}\n      {!error && !loading && campaign !== undefined ? (\n        <CampaignDetail campaign={campaign} isNew={campaign.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToCampaign;\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, map, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import styled from \"styled-components\";\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nexport const Bar = styled.div<SearchMode>`\n  position: absolute;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 125px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  position: fixed;\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n\n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}