{"version":3,"sources":["components/form_elements/AutoStringField.tsx","components/form_elements/CheckField.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/EnumField.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx"],"names":["AutoStringField","optionTable","filters","value","label","icon","transform","onChange","useState","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","undefined","Promise","all","items","o","concat","useEffect","reciveAllFiltered","data","Array","length","onSearch","searchTerm","newOptions","filter","option","name","includes","Field","LabelText","Icon","Input","type","e","target","Options","map","opt","index","Option","key","onClick","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","CheckField","defaultChecked","checked","Checkmark","buttons","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","player","campaign","pic","classes","background","spells","spellSlots","activeSelections","currencyBonis","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","EnumField","handleChange","StyledSelect","classNamePrefix","Select","CharLabGeneral","char","completed","CenterWrapper","CharView","StringField","IconButton","faCheckCircle","disabled","CharLabClass","setClasses","changeClassLevel","oldClassSet","classSet","changeClass","changeClassSubclass","subclass","fieldName","sort","results","PropWrapper","NumberField","faTrash","oldClass","newClassList","removeClass","TextButton","text","faPlus","addNewClass","Text","PropTitle","FormatedText","proficiencies","equipment","span","backgroundColorLink","CharLabRace","setRace","setSubrace","abilityScores","traits","trait","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","prof","setProf","calcLevel","featureSets","featureSet","profBonus","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","onChangeItem","newItem","i","origin","onChangeItemAttribute","item","Container","attuned","attunment","attribute","charAt","toUpperCase","slice","oldItem","newItemList","removeItem","addNewItem","CharLab","history","useHistory","activeTab","setTab","newChar","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","recalcClasses","bonis","fullClassList","classList","recivePromiseByAttribute","class","boni","isCurrency","max","spellslots","slots","updatedBonis","newBoni","updatedOldBonis","old","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","TabBar","children","tab","View","nextTab","Prop","faEdit","then","saveWithCallback","result","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","webhook","useWebhook","json","setJson","formatedText","setFormatedText","newText","formatDiscordText","substring","newJson","username","content","JSON","stringify","cut","cutStart","cutEnd","substr","rollDiscord","command","rollCommand","rolls","sendMessage","newCommand","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","style","float","padding","faDiscord","sendEmbedMessage","th","td","step","Bar","child","Tab","isActive","props"],"mappings":"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","file":"static/js/14.342aa037.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <AutoStringField\n          optionTable={\"campaigns\"}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20\" + rolls + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \" \" + rolls + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n"],"sourceRoot":""}