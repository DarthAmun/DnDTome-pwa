{"version":3,"sources":["components/form_elements/ImageField.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","data/chars/ClassSet.tsx","data/Monster.tsx","services/PeerIdService.tsx","components/form_elements/FileField.tsx","data/campaign/Npc.tsx","components/general_elements/Dialog.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/encounter/Encounter.tsx","../node_modules/peerjs/dist sync","hooks/DexieHooks.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/p2p/P2PEncounter.tsx","components/general_elements/ErrorTile.tsx","data/encounter/Player.tsx","services/EncounterService.tsx","components/form_elements/SingleSelectField.tsx","components/entities/encounters/details/EncounterEditView.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/entities/encounters/details/link_wrapper/NameToEncounter.tsx","components/form_elements/NumberField.tsx"],"names":["ImageImportField","label","onFinished","Files","isMulti","accept","icon","faFileImport","onChange","file","fileList","console","log","files","Array","from","reader","FileReader","onload","event","target","result","readAsDataURL","changeFile","styled","div","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","this","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","arg","nameCheck","undefined","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","isClassSet","ClassSet","classe","level","subclasse","classeCheck","levelCheck","subclasseCheck","Monster","sources","size","type","subtype","cr","savingThrows","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","generateBrokerId","min","max","password","characters","i","length","Math","floor","random","FileField","transform","Field","LabelText","Icon","Input","e","multiple","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","input","Npc","char","monster","traits","description","isNpc","traitsCheck","descriptionCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","onClick","DamageDialog","damageText","damageClick","healText","healClick","useState","dmg","setDmg","value","style","float","AutoStringField","optionTable","filters","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","Promise","all","o","concat","useEffect","reciveAllFiltered","data","onSearch","searchTerm","newOptions","filter","option","includes","slice","Options","map","opt","index","Option","key","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Encounter","enemies","players","isPlaying","currentInit","roundCounter","mapBase64","dimension","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","mapBase64Check","currentInitCheck","roundCounterCheck","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","TinyNumberField","showMax","Max","span","Board","img","showName","currentPlayerNumber","onChangePlayers","onChangeDimension","board","setBoard","dragItem","setDragItem","makeDrag","makeDrop","makeRow","row","list","j","PlayerSlot","cord","updatePlayers","makeBoard","BoardRow","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","Image","isDead","isCurrent","Empty","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","padding","fontSize","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","send","JSON","stringify","errorData","parse","connect","minWidth","faExclamationCircle","ErrorTile","buttonText","onButton","Tile","PropWrapper","Name","Text","PropTitle","faPlusCircle","boxShadow","headerColor","backgroundColorLink","Player","tempHp","initBonus","tag","isEnemy","crExpTable","exp","expTable","easy","medium","hard","deadly","calcDifficulty","calcExp","enemyExp","enemy","crExp","difficulty","SingleSelectField","handleChange","StyledSelect","classNamePrefix","Select","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","onChangeEnemy","found","recivePromiseByAttribute","results","classSet","onChangePlayerField","newPlayer","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","FieldGroup","base64","IconButton","faTrash","Prop","CharView","Container","newMonster","NumberField","newEnemyList","splice","removeEnemy","TextButton","faPlus","addNewEnemy","newPlayerList","removePlayer","addNewPlayer","EncounterView","dmView","history","useHistory","damageDialog","setDamageDialog","damageDialogIndex","setDamageDialogIndex","setPlayers","newField","finishEncounter","newEnemies","getMap","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","sort","b","localeCompare","Row","current","PropField","MainLink","PropRight","DamageButton","faSkullCrossbones","faHandHoldingHeart","button","disabled","PlayerImage","tr","td","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","NameToEncounter","match","db","MyAppDatabase","encounters","params","loading","newEncounter","createNewEncounter"],"mappings":"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","file":"static/js/14.d02bb5d0.chunk.js","sourcesContent":["import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FileField from \"./FileField\";\n\ninterface $Props {\n  label?: string;\n  onFinished: (base64: string) => void;\n}\n\nconst ImageImportField = ({ label, onFinished }: $Props) => {\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        onFinished(event.target.result);\n      };\n      reader.readAsDataURL(files[0]);\n      console.log(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label={label || \"\"}\n          isMulti={false}\n          accept={\"image/png, image/jpeg\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n    </>\n  );\n};\n\nexport default ImageImportField;\n\nconst Files = styled.div`\n  flex: 1 1 auto;\n`;\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  picBase64: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    picBase64?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\nimport Monster from \"../Monster\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  picBase64: string;\n  char: Char | undefined;\n  monster: Monster | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    picBase64?: string,\n    char?: Char | undefined,\n    monster?: Monster | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.char = char || undefined;\n    this.monster = monster || undefined;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    descriptionCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  mapBase64: string;\n  dimension: { width: number; height: number; size: number; zoom: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    mapBase64?: string,\n    dimension?: { width: number; height: number; size: number; zoom: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.mapBase64 = mapBase64 || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const mapBase64Check = arg.mapBase64 !== undefined && typeof arg.mapBase64 == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    mapBase64Check &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 256;","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"../../../data/encounter/Player\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  showName,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<Player>();\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            showName={showName}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, showName, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: Player, index: number) => {\n        if (\n          (playerIcon.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.cord !== undefined &&\n            playerIcon.cord[0] === cord[0] &&\n            playerIcon.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, showName, player, isDead, isCurrent }: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n    };\n\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {showName ? player.name : \"???\"}\n      </ImageElm>\n    );\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n`;\n\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isEnemy: boolean;\n  isMonster: boolean;\n  isNpc: boolean;\n  level: number;\n  cord: number[];\n  pic: string;\n  size: string;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isEnemy?: boolean,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    level?: number,\n    cord?: number[],\n    pic?: string,\n    size?: string\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isEnemy = isEnemy || false;\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.level = level || 0;\n    this.cord = cord || [0, 0];\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck &&\n    picCheck &&\n    sizeCheck\n  );\n}\n","import { isNpc } from \"../data/campaign/Npc\";\nimport { isChar } from \"../data/chars/Char\";\nimport BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { isMonster } from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  let players = [...characters, ...enemies];\n  if (encounter.isPlaying) {\n    players = players.sort((a: BuildPlayer, b: BuildPlayer) => {\n      if (a.player.init === b.player.init) {\n        let aDex: number = 0;\n        let bDex: number = 0;\n        if (isNpc(a.entity) && a.entity.char !== undefined) aDex = a.entity.char.dex;\n        else if (isNpc(a.entity) && a.entity.monster !== undefined) aDex = a.entity.monster.dex;\n        else if (isMonster(a.entity) || isChar(a.entity)) aDex = a.entity.dex;\n        if (isNpc(b.entity) && b.entity.char !== undefined) bDex = b.entity.char.dex;\n        else if (isNpc(b.entity) && b.entity.monster !== undefined) bDex = b.entity.monster.dex;\n        else if (isMonster(b.entity) || isChar(b.entity)) bDex = b.entity.dex;\n\n        if (bDex === aDex) return a.player.name.localeCompare(b.player.name);\n        return bDex - aDex;\n      }\n      return b.player.init - a.player.init;\n    });\n  }\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isNpc) newPlayer = await recivePromiseByAttribute(\"npcs\", \"name\", player.name);\n  else if (player.isMonster)\n    newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { recivePromiseByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport ImageImportField from \"../../../form_elements/ImageField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = [...encounter.enemies];\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = async (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = [...encounter.enemies];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newEnemy));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: true,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n        pic: results[0].pic,\n        size: results[0].size,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: true,\n        isMonster: true,\n        isNpc: false,\n        level: level,\n        pic: results[0].pic,\n        size: \"medium\",\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n          pic: results[0].monster.pic,\n          size: results[0].monster.size,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isEnemy: true,\n          isMonster: false,\n          isNpc: true,\n          level: level,\n          pic: results[0].char.pic,\n          size: \"medium\",\n        };\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n      }\n      onEdit({ ...encounter, enemies: enemies });\n    } else {\n      enemies[i] = { ...oldEnemy, name: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    }\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = [...encounter.players];\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = async (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = [...encounter.players];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newPlayer));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    console.log(results[0] && isChar(results[0]));\n    if (results[0] && isMonster(results[0])) {\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: false,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n        pic: results[0].pic,\n        size: results[0].size,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      console.log(results[0]);\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: false,\n        isMonster: false,\n        isNpc: false,\n        level: level,\n        pic: results[0].pic,\n        size: \"medium\",\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isEnemy: false,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n          pic: results[0].monster.pic,\n          size: results[0].monster.size,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isEnemy: false,\n          isNpc: true,\n          level: level,\n          pic: results[0].char.pic,\n          size: \"medium\",\n        };\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n      }\n      onEdit({ ...encounter, players: players });\n    } else {\n      players[i] = { ...oldPlayer, name: newPlayer };\n      onEdit({ ...encounter, players: players });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <StringField\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n        <FieldGroup>\n          <ImageImportField\n            label=\"Map\"\n            onFinished={(base64) => onEdit({ ...encounter, mapBase64: base64 })}\n          />\n          <IconButton icon={faTrash} onClick={() => onEdit({ ...encounter, mapBase64: \"\" })} />\n        </FieldGroup>\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <StringField\n                value={enemy.pic}\n                label=\"Pic\"\n                onChange={(pic) => onChangePlayerField(\"pic\", pic, enemy, index)}\n              />\n              <SingleSelectField\n                options={[\n                  { value: \"tiny\", label: \"tiny\" },\n                  { value: \"small\", label: \"small\" },\n                  { value: \"medium\", label: \"medium\" },\n                  { value: \"large\", label: \"large\" },\n                  { value: \"huge\", label: \"huge\" },\n                  { value: \"gargantuan\", label: \"gargantuan\" },\n                ]}\n                value={enemy.size}\n                label={\"Size\"}\n                onChange={(size) => onChangePlayerField(\"size\", size, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <StringField\n                value={player.pic}\n                label=\"Pic\"\n                onChange={(pic) => onChangePlayerField(\"pic\", pic, player, index)}\n              />\n              <SingleSelectField\n                options={[\n                  { value: \"tiny\", label: \"tiny\" },\n                  { value: \"small\", label: \"small\" },\n                  { value: \"medium\", label: \"medium\" },\n                  { value: \"large\", label: \"large\" },\n                  { value: \"huge\", label: \"huge\" },\n                  { value: \"gargantuan\", label: \"gargantuan\" },\n                ]}\n                value={player.size}\n                label={\"Size\"}\n                onChange={(size) => onChangePlayerField(\"size\", size, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 2 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n\n  @media (max-width: 576px) {\n    flex-wrap: wrap;\n  }\n`;\n","import {\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GiBroadsword, GiHeartBottle } from \"react-icons/gi\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { DamageDialog } from \"../../../general_elements/Dialog\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\nimport { LoadingSpinner } from \"../../../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [damageDialog, setDamageDialog] = useState<boolean>(false);\n  const [damageDialogIndex, setDamageDialogIndex] = useState<number>(0);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      const { difficulty } = calcDifficulty(encounter);\n      setDifficulty(difficulty);\n    }\n  }, [encounter]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      console.log([...encounter.players, ...encounter.enemies]);\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter.players, encounter.enemies]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (encounter !== undefined) {\n      if (oldPlayer.isEnemy) {\n        let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, enemies: newPlayers });\n      } else {\n        let newPlayers = encounter.players.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, players: newPlayers });\n      }\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        if (player.init < 0) {\n          let roll = rollDie(20);\n          roll += player.initBonus || 0;\n          return { ...player, init: roll };\n        } else {\n          return player;\n        }\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        if (enemy.init < 0) {\n          let roll = rollDie(20);\n          roll += enemy.initBonus || 0;\n          return { ...enemy, init: roll };\n        } else {\n          return enemy;\n        }\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: true,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const finishEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        return { ...player, init: -1 };\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        return { ...enemy, init: -1 };\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: false,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const nextPlayer = () => {\n    if (encounter !== undefined) {\n      let nextInit = (encounter.currentInit + 1) % players.length;\n      let roundCounter = encounter.roundCounter;\n      if ((encounter.currentInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n\n      let counter = 0;\n      while (players[nextInit].currentHp <= 0) {\n        if ((nextInit + 1) % players.length === 0) {\n          roundCounter++;\n        }\n        nextInit = (nextInit + 1) % players.length;\n        counter++;\n        if (counter > players.length) {\n          break;\n        }\n      }\n      if (counter > players.length) {\n        finishEncounter();\n      } else {\n        onEdit({\n          ...encounter,\n          currentInit: nextInit,\n          roundCounter: roundCounter,\n        });\n      }\n    }\n  };\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          let newEnemies: Player[] = [];\n          players.forEach((player: Player) => {\n            if (player.isEnemy) {\n              newEnemies.push(player);\n            }\n          });\n          onEdit({ ...encounter, players: newPlayers, enemies: newEnemies });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const showDamageDialog = (i: number) => {\n    setDamageDialogIndex(i);\n    setDamageDialog(true);\n  };\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={(value) => onEdit(value)} isHost={true} />\n      <CenterWrapper>\n        {encounter && damageDialog && (\n          <DamageDialog\n            name={players[damageDialogIndex].name}\n            damageText={\"Damage\"}\n            damageClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp - currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            healText={\"Heal\"}\n            healClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp + currentHp > players[damageDialogIndex].hp\n                  ? players[damageDialogIndex].hp\n                  : players[damageDialogIndex].currentHp + currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            abortText={\"Back\"}\n            abortClick={() => {\n              setDamageDialog(false);\n            }}\n          />\n        )}\n        <View mode={dmView ? 1 : 0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            {dmView && (\n              <PropElm>\n                <PropTitle>Difficulty: </PropTitle>\n                {difficulty}\n              </PropElm>\n            )}\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n            {encounter && !encounter.isPlaying && (\n              <TextButton\n                text={\"Start Encounter\"}\n                icon={faPlayCircle}\n                onClick={() => startEncounter()}\n              />\n            )}\n            {encounter && encounter.isPlaying && (\n              <>\n                <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n                <TextButton\n                  text={\"End Encounter\"}\n                  icon={faStopCircle}\n                  onClick={() => finishEncounter()}\n                />\n              </>\n            )}\n          </PropWrapper>\n          {!encounter && <LoadingSpinner />}\n          {encounter && (\n            <Table>\n              <thead>\n                <tr>\n                  <th>Init</th>\n                  <th>Name</th>\n                  {dmView && <th>Current Hp</th>}\n                  {dmView && <th>AC</th>}\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {encounter &&\n                  players\n                    .sort((a: Player, b: Player) => {\n                      if (b.init === a.init || !encounter.isPlaying) {\n                        return a.name.localeCompare(b.name);\n                      }\n                      return b.init - a.init;\n                    })\n                    .map((player: Player, index: number) => {\n                      return (\n                        <Row\n                          current={encounter.currentInit === index && encounter.isPlaying}\n                          isDead={player.currentHp <= 0}\n                          key={index}\n                        >\n                          <PropField>\n                            <TinyNumberField\n                              value={player.init}\n                              onChange={(init) => onChangePlayerField(\"init\", init, player)}\n                            />\n                          </PropField>\n                          <Prop>\n                            {player.pic !== \"\" && player.pic !== undefined ? (\n                              <PlayerImage player={player}></PlayerImage>\n                            ) : (\n                              <></>\n                            )}\n                            {player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/monster-detail/name/${player.name}`)}\n                              >\n                                {dmView ? player.name : \"???\"}\n                              </MainLink>\n                            )}\n                            {!player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                              >\n                                {player.name}\n                              </MainLink>\n                            )}\n                          </Prop>\n                          <PropRight>\n                            <DamageButton onClick={() => showDamageDialog(index)}>\n                              <GiBroadsword />\n                              <GiHeartBottle />\n                            </DamageButton>\n                            {dmView && `${player.currentHp} / ${player.hp}`}\n                          </PropRight>\n                          {dmView && <Prop>{player.ac}</Prop>}\n                          {/* <Prop>{player.tag}</Prop> */}\n                          <td>\n                            {player.currentHp > 0 && (\n                              <IconButton\n                                icon={faSkullCrossbones}\n                                onClick={() => killPlayer(player)}\n                              />\n                            )}\n                            {player.currentHp <= 0 && (\n                              <IconButton\n                                icon={faHandHoldingHeart}\n                                onClick={() => revicePlayer(player)}\n                              />\n                            )}\n                          </td>\n                        </Row>\n                      );\n                    })}\n              </tbody>\n            </Table>\n          )}\n        </View>\n        {encounter && getMap() !== \"\" && (\n          <Board\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={dmView}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={(dimension) => onEdit({ ...encounter, dimension: dimension })}\n            img={getMap()}\n          ></Board>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterView;\n\nconst DamageButton = styled.button`\n  svg {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  font-size: 16px;\n  float: left;\n  padding: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border-radius: 10px;\n  border: none;\n\n  transition: color 0.2s;\n  background: ${({ theme }) => theme.buttons.backgroundColor};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n`;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropRight = styled(Prop)`\n  text-align: right;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Encounter from \"../../../../../data/encounter/Encounter\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(db.encounters, \"name\", match.params.name);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter(0, match.params.name);\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && encounter === undefined && (\n        <ErrorTile\n          text={\"No such encounter exists. Want to creat such encounter?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEncounter()}\n        />\n      )}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} isNew={encounter.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}