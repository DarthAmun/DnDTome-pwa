{"version":3,"sources":["components/entities/npc/NpcTile.tsx","components/entities/chars/CharTile.tsx","components/entities/monster/MonsterTile.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","data/campaign/Group.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/groups/details/GroupDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/entities/groups/details/link_wrapper/NameToGroup.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/form_elements/TextField.tsx","components/general_elements/ErrorTile.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx"],"names":["NpcTile","npc","getPicture","useCallback","undefined","pic","Tile","to","id","Image","PropWrapper","Name","name","WideProp","Icon","icon","faLink","sources","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","RowProp","main","highlight","Prop","FontAwesomeIcon","ImgContainer","Empty","props","CharTile","char","calcLevel","level","classes","forEach","classe","PropRowWrapper","player","race","subrace","map","classSet","index","key","subclasse","background","alignment","MonsterTile","monster","isLegendary","lAblt","trim","sAblt","includes","formatCr","cr","Type","type","subtype","Flag","CR","ImageName","size","faRunning","speed","lang","headerColor","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","memo","data","StyledNode","position","Position","Top","onConnect","params","console","log","Left","FormatedText","text","label","Right","Bottom","input","EditDialog","activeElement","onSave","onClose","useState","setLabel","useEffect","isNode","isEdge","Dialog","StringField","value","onChange","TextButton","faTimes","onClick","faSave","newElement","onSaveClick","nodeTypes","customeNode","CustomeNode","FlowBar","FlowChart","initElements","isEditable","onEdit","elements","setElements","setActiveElement","showEditDialog","setEditDialaog","FlowContainer","onNodeDragStop","event","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","IconButton","faPlus","newNode","toString","x","length","y","concat","addNewNode","newElm","Group","description","players","npcs","monsters","flow","filename","this","isGroup","arg","nameCheck","picCheck","descriptionCheck","playersCheck","Array","isArray","npcsCheck","monstersCheck","flowCheck","sourcesCheck","GroupEditView","group","activeTab","setTab","CenterWrapper","TabBar","children","tab","View","faImage","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","filter","removePlayer","push","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","graph","BuildGroup","champaign","characters","buildGroup","a","time","characterList","npcList","monsterList","recivePromiseByAttribute","Promise","all","timeEnd","GroupView","loading","setLoading","loadedGroup","setLoadedGroup","tabs","setTabs","then","newTabs","Loading","Header","Text","PropTitle","span","backgroundColorLink","GroupDetail","isNew","editMode","setMode","groupObj","editGroup","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateGroup","tableName","updateWithCallback","result","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","faExclamationTriangle","groupId","remove","Message","editAndSaveGroup","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","height","button","hoverColor","placeholder","Field","LabelText","Input","e","target","LinkCheck","entitiyFound","setEntity","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","textPart","table","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","NameToGroup","match","db","MyAppDatabase","groups","buttonText","onButton","newGroup","createNewWithId","createNewGroup","Back","ToggleLeft","ToggleRight","EditToggle","textarea","ErrorTile","faPlusCircle","Bar","child","Tab","isActive","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllPromise","items","o","reciveAll","onSearch","searchTerm","newOptions","option","Options","opt","Option"],"mappings":"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","file":"static/js/33.7e2d6bf3.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npc/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monster/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Group from \"../../../../data/campaign/Group\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport GroupEditView from \"./GroupEditView\";\nimport GroupView from \"./GroupView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  group: Group;\n  isNew: boolean;\n}\n\nconst GroupDetail = ({ group, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [groupObj, editGroup] = useState<Group>(group);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGroup = (groupId: number | undefined) => {\n    remove(\"groups\", groupId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (groupObj !== group) {\n      setUnsavedChanges(true);\n    }\n  }, [groupObj, group]);\n\n  const updateGroup = (tableName: string, groupObj: Group) => {\n    console.log(groupObj);\n    updateWithCallback(tableName, groupObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveGroup = (group: Group) => {\n    editGroup(group);\n    updateGroup(\"groups\", group);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateGroup(\"groups\", groupObj)} icon={faSave} />\n            <IconButton onClick={() => deleteGroup(groupObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GroupEditView group={groupObj} onEdit={(value) => editGroup(value)} />\n      ) : (\n        <GroupView group={groupObj} onEdit={(value) => editAndSaveGroup(value)} />\n      )}\n    </>\n  );\n};\n\nexport default GroupDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Group from \"../../../../../data/campaign/Group\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport GroupDetail from \"../GroupDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGroup = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [group, loading, error] = useItemByAttr(db.groups, \"name\", match.params.name);\n\n  const createNewGroup = () => {\n    let newGroup = new Group(0, match.params.name);\n    delete newGroup.id;\n    createNewWithId(\"groups\", newGroup, (id) => {\n      history.push(`/group-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && group === undefined && (\n        <ErrorTile\n          text={\"No such group exists. Want to creat such group?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewGroup()}\n        />\n      )}\n      {!error && !loading && group !== undefined ? (\n        <GroupDetail group={group} isNew={group.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToGroup;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}