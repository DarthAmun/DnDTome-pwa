{"version":3,"sources":["components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Services/OptionService.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Loading.tsx","components/Options/Options.tsx","components/Entities/Spells/SpellTile.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/TextButton.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassTile.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","buttons","color","backgroundColor","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","id","result","finally","close","remove","delete","reciveAll","toArray","array","reciveByAttribute","name","where","equalsIgnoreCase","reciveAllPromise","a","recivePromiseByAttribute","reciveAllFiltered","filters","filter","obj","test","forEach","push","fieldName","toLowerCase","includes","Array","arrayTest","filterPart","val","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","saveNew","entity","filename","put","prom","createNewWithId","reciveCount","count","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","isArray","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","scanImportFileTest","json","file","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","errors","item","gear","spell","monster","class","subclass","JSON","stringify","failedObject","Errors","exportAll","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faMeteor","faDragon","faIdCard","faCog","primaryHover","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","map","child","index","Tab","key","e","FileField","transform","Field","LabelText","Icon","Input","files","FontAwesomeIcon","IconButton","disabled","SimpleButton","DisabledSimpleButton","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","reload","isReload","loading","isLoading","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","triggerImportFiles","fileList","from","i","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","max","setTimeout","triggerDeleteAll","clear","deleteAll","Message","tab","OptionSection","SelectionTitle","faFileImport","General","ExternalLink","rel","faPatreon","faDiscord","OptionTab","SectionRow","SectionText","faFileExport","faTrashAlt","SpellTile","formatTime","useCallback","split","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","trim","getPicture","Tile","fallback","School","Flag","Level","ImageName","PropWrapper","Prop","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","WideProp","faUser","faLink","Link","props","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","isMulti","classNamePrefix","Select","StringField","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setName","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","newSpell","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","results","slice","filterArray","SpellContainer","dataLength","next","s","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","state","action","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","equals","first","FormatedText","formatedText","setFormatedText","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","span","th","td","SpellView","CenterWrapper","View","Text","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","SpellDetail","editMode","setMode","spellObj","editSpell","unsavedChanges","setUnsavedChanges","TopBar","faArrowLeft","goBack","EditToggle","mode","ToggleLeft","ToggleRight","faExclamationTriangle","updateSpell","faSave","spellId","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCoins","faWeightHanging","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","gearId","NameToGear","IdToGear","GearTile","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterTile","isLegendary","Type","CR","faRunning","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","newMonster","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","PropTitle","faShieldAlt","src","img","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","monsterId","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","trait","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","field","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","raceId","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","subraceId","NameToSubrace","IdToSubrace","RaceTile","ImgContainer","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","hasAttunment","Rarity","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","itemId","NameToItem","IdToItem","ItemTile","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","newItem","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","TextButton","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","classeId","NameToClass","IdToClass","ClassTile","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","subclassId","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","char","deathSaves","setDeathSaves","prof","setProf","calcLevel","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","classSet","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","sort","f1","f2","b","baseitem","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","charId","NameToChar","IdToChar","CharTile","PropRowWrapper","RowProp","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","render","getElementById","URL","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94d51928.chunk.js","sourcesContent":["interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    }\n  }\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size\n    }\n  }\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n  }\n}\n\n//Saves = strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf\n//Skills =  acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf,\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).toArray();\n      return array;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .filter((obj) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          callback(data);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: string;\n  speed: string;\n  cr: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: string,\n    speed?: string,\n    cr?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || \"\";\n    this.speed = speed || \"\";\n    this.cr = cr || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"string\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"string\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string,text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return arg && nameCheck && textCheck && levelCheck;\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor();\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor();\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor();\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor();\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves  || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import { reciveAll, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst scanImportFileTest = async (\n  json: any,\n  file: File,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (Array.isArray(json)) {\n    let failCount = 0;\n    let failedObj: string[] = [];\n    let promList: Promise<any>[] = [];\n\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, file.name));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, file.name));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, file.name));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, file.name));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, file.name));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, file.name));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, file.name));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, file.name));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, file.name));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAll = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMeteor, faCog, faDragon, faIdCard } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      {/* <Link\n        to=\"/encounter\"\n        className={location.pathname === \"/encounter\" ? \"menuItemActiv\" : \"\"}\n      >\n        <img\n          alt=\"\"\n          src={encounterIcon}\n          style={{\n            width: \"20px\",\n            marginTop: \"10px\",\n            marginRight: \"5px\",\n            float: \"left\",\n          }}\n        />\n      </Link> */}\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input onChange={(e) => onChange(e.target.files)} type=\"file\"></Input>\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nconst Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n  position: fixed;\n  z-index: 1000;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  animation: bounce 2s linear infinite;\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\nimport { importFiles, exportAll } from \"../../Services/OptionService\";\nimport { deleteAll, reciveCount } from \"../../Services/DatabaseService\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileImport,\n  faTrashAlt,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport { LoadingSpinner } from \"../Loading\";\n\nconst Options = () => {\n  const { theme, setTheme } = useTheme();\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \"of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      }\n    );\n  };\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      {activeTab === \"General\" && (\n        <General>\n          <OptionSection>\n            <SelectionTitle>Want to support me?</SelectionTitle>\n            <ExternalLink\n              href=\"https://www.patreon.com/bePatron?u=25310394\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"patreon\"\n            >\n              <FontAwesomeIcon icon={faPatreon} /> Become a patron\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>\n              Found some bugs? Or have some feedback?\n            </SelectionTitle>\n            <ExternalLink\n              href=\"https://discord.gg/2KB3tzG\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"discord\"\n            >\n              <FontAwesomeIcon icon={faDiscord} /> Join the discord\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Theme</SelectionTitle>\n            <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n          </OptionSection>\n        </General>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Spells?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"spells\", \"DnDTome_spells.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {spellAmount} Spells?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"spells\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Gear?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"gears\", \"DnDTome_gear.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {gearAmount} Gear?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"gears\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Items?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"items\", \"DnDTome_items.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {itemAmount} Items?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"items\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Monsters?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"monsters\", \"DnDTome_monsters.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {monsterAmount} Monsters?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"monsters\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Races\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Races?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"races\", \"DnDTome_races.json\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subraces?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"subraces\", \"DnDTome_subraces.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {raceAmount} Races?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"races\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subraceAmount} Subraces?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subraces\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Classes\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Classes?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"classes\", \"DnDTome_classes.json\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subclasses?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAll(\"subclasses\", \"DnDTome_subclasses.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {classAmount} Classes?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"classes\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subclassAmount} Subclasses?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subclasses\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Chars\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Chars?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"chars\", \"DnDTome_chars.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {charAmount} Chars?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"chars\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[]\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      ></Input>\n    </Field>\n  );\n};\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringField\n        value={time}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(time) => setTime(time)}\n      />\n      <StringField\n        value={range}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(range) => setRange(range)}\n      />\n      <StringField\n        value={duration}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(duration) => setDuration(duration)}\n      />\n      <StringField\n        value={components}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(components) => setComponents(components)}\n      />\n      <StringField\n        value={classes}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(classes) => setClasses(classes)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <StringField\n        value={text}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(text) => setText(text)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      {/* {!error && loading && <LoadingSpinner />}\n        {!error && !loading && ( */}\n      <SpellContainer\n        dataLength={spells.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {spells!.map((spell: Spell, index: number) => {\n          return <SpellTile key={index} spell={spell}></SpellTile>;\n        })}\n      </SpellContainer>\n      {/* )}\n        {error && <>Fail</>} */}\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n      console.time(\"filtered get all\");\n        table\n          .filter((obj: T) => {\n            let test: boolean[] = [];\n            filters.forEach((filter) => {\n              if (typeof filter.value === \"string\") {\n                test.push(\n                  // @ts-ignore\n                  obj[filter.fieldName]\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                );\n              } else if (typeof filter.value === \"number\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (typeof filter.value === \"boolean\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (filter.value instanceof Array) {\n                let arrayTest: boolean = false;\n                filter.value.forEach(\n                  (filterPart: string | boolean | number) => {\n                    if (typeof filterPart === \"string\") {\n                      if (\n                        // @ts-ignore\n                        obj[filter.fieldName]\n                          .toLowerCase()\n                          .includes(filterPart.toLowerCase())\n                      )\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"number\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"boolean\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    }\n                  }\n                );\n                test.push(arrayTest);\n              }\n            });\n\n            let result = true;\n            test.forEach((val) => {\n              if (!val) result = false;\n            });\n            return result;\n          })\n          .sortBy(\"name\")\n          .then((data) => {\n            console.timeEnd(\"filtered get all\");\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellDetail = ({ spell }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = (spellId: number | undefined) => {\n    remove(\"spells\", spellId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj,spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSpell(spellObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearDetail = ({ gear }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = (gearId: number | undefined) => {\n    remove(\"gears\", gearId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteGear(gearObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={cost}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(cost) => setCost(cost)}\n      />\n      <StringField\n        value={weight}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(weight) => setWeight(weight)}\n      />\n      <StringField\n        value={damage}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(damage) => setDamage(damage)}\n      />\n      <StringField\n        value={properties}\n        label=\"Properties\"\n        onChange={(properties) => setProperties(properties)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <GearContainer\n        dataLength={gears.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {gears!.map((gear: Gear, index: number) => {\n          return <GearTile key={index} gear={gear}></GearTile>;\n        })}\n      </GearContainer>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n\n  svg {\n  margin-right: 5px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(\"\");\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField value={cr} label=\"Cr\" onChange={(cr: string) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringField\n        value={alignment}\n        label=\"Alignment\"\n        onChange={(alignment: string) => setAlignment(alignment)}\n      />\n      <StringField\n        value={speed}\n        label=\"Speed\"\n        onChange={(speed: string) => setSpeed(speed)}\n      />\n      <StringField\n        value={skills}\n        label=\"Skills\"\n        onChange={(skills: string) => setSkills(skills)}\n      />\n      <StringField\n        value={senses}\n        label=\"Senses\"\n        onChange={(senses: string) => setSenses(senses)}\n      />\n      <StringField\n        value={lang}\n        label=\"Languages\"\n        onChange={(lang: string) => setLang(lang)}\n      />\n      <StringField\n        value={dmgVulnerabilitie}\n        label=\"Vulnerabilities\"\n        onChange={(dmgVulnerabilitie: string) => setDmgVulnerabilitie(dmgVulnerabilitie)}\n      />\n      <StringField\n        value={dmgResistance}\n        label=\"Resistances\"\n        onChange={(dmgResistance: string) => setDmgResistance(dmgResistance)}\n      />\n      <StringField\n        value={dmgImmunities}\n        label=\"Immunities\"\n        onChange={(dmgImmunities: string) => setDmgImmunities(dmgImmunities)}\n      />\n      <StringField\n        value={conImmunities}\n        label=\"Condition Immunities\"\n        onChange={(conImmunities: string) => setConImmunities(conImmunities)}\n      />\n      <StringField\n        value={ablt}\n        label=\"Abilities\"\n        onChange={(ablt: string) => setAblt(ablt)}\n      />\n      <StringField\n        value={sAblt}\n        label=\"Spezial Abilities\"\n        onChange={(sAblt: string) => setSAblt(sAblt)}\n      />\n      <StringField\n        value={lAblt}\n        label=\"Legendary Abilities\"\n        onChange={(lAblt: string) => setLAblt(lAblt)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources: string) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  \n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <MonsterContainer\n        dataLength={monsters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {monsters!.map((monster: Monster, index: number) => {\n          return <MonsterTile key={index} monster={monster}></MonsterTile>;\n        })}\n      </MonsterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        {monster.ablt && (\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.sAblt && (\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.lAblt && (\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <StringField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterDetail = ({ monster }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = (monsterId: number | undefined) => {\n    remove(\"monsters\", monsterId);\n    history.goBack();\n  };\n  \n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj,monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteMonster(monsterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View>\n            <TraitWrapper key={index}>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceDetail = ({ race }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = (raceId: number | undefined) => {\n    remove(\"races\", raceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj,race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteRace(raceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceDetail = ({ subrace }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = (subraceId: number | undefined) => {\n    remove(\"subraces\", subraceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj,subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubrace(subraceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={abilityScores}\n        label=\"Ability Scores\"\n        onChange={(abilityScores: string) => setAbilityScores(abilityScores)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <RaceContainer\n        dataLength={races.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {races!.map((race: Race, index: number) => {\n          return <RaceTile key={index} race={race}></RaceTile>;\n        })}\n      </RaceContainer>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemDetail = ({ item }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = (itemId: number | undefined) => {\n    remove(\"items\", itemId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj,item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n  \n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteItem(itemObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faLink, faSearch, faRedoAlt, faBook, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ItemContainer\n        dataLength={items.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {items!.map((item: Item, index: number) => {\n          return <ItemTile key={index} item={item}></ItemTile>;\n        })}\n      </ItemContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassDetail = ({ classe }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = (classeId: number | undefined) => {\n    remove(\"classes\", classeId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteClass(classObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses]  = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    \n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ClassContainer\n      dataLength={classes.length}\n      next={fetchMoreData}\n      hasMore={scrollParam.hasMore}\n      loader={<LoadingSpinner />}>\n        {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n      </ClassContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassDetail = ({ subclass }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = (subclassId: number | undefined) => {\n    remove(\"subclasses\", subclassId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj,subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubclass(subclassObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (newItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  },\n  i: number) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharDetail = ({ char }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = (charId: number | undefined) => {\n    remove(\"chars\", charId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar(charObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <CharContainer\n        dataLength={chars.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {chars!.map((char: Char, index: number) => {\n          return <CharTile key={index} char={char}></CharTile>;\n        })}\n      </CharContainer>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (newItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  },\n  i: number) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={CharOverview}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}