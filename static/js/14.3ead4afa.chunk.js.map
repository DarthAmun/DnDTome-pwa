{"version":3,"sources":["components/p2p/P2PSender.tsx","components/general_elements/TabBar.tsx","components/general_elements/Dialog.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","services/PeerIdService.tsx","components/form_elements/FileField.tsx","../node_modules/peerjs/dist sync","../../src/index.tsx","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/SpellsOptions.tsx","components/options/GearsOptions.tsx","components/options/ItemsOptions.tsx","components/options/MonstersOptions.tsx","components/options/RacesOptions.tsx","components/options/ClassesOptions.tsx","components/options/CharsOptions.tsx","components/options/EncountersOptions.tsx","components/options/SelectionsOptions.tsx","data/classes/Boni.tsx","components/form_elements/ImportField.tsx","services/5eToolService.tsx","components/options/OtherImportOptions.tsx","components/options/LocationsOptions.tsx","components/options/CampaignsOptions.tsx","components/options/NpcsOptions.tsx","components/options/QuestsOptions.tsx","components/options/EventsOptions.tsx","components/options/WorldsOptions.tsx","components/options/GroupsOptions.tsx","components/options/DiscordOptions.tsx","components/options/RandomTablesOptions.tsx","components/options/FeatsOptions.tsx","components/options/BackgrounsOptions.tsx","components/options/Options.tsx"],"names":["P2PSender","data","mode","useState","name","setName","peer","setPeer","error","setError","useEffect","undefined","brokerId","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","send","disconnected","destroyed","reconnect","reciveAllPromise","then","results","id","value","label","onChange","Icon","icon","faExclamationCircle","styled","FontAwesomeIcon","theme","main","highlight","TabBar","children","activeTab","Bar","map","child","index","Tab","onClick","e","isActive","div","tile","color","backgroundColor","input","buttons","props","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","DamageDialog","damageText","damageClick","healText","healClick","dmg","setDmg","style","float","ShortRestDialod","buildChar","values","setValues","maxValues","setMaxValues","hitDices","setHitDices","newValues","newMaxValues","newHitDices","character","classes","forEach","classe","classesClass","sources","push","level","length","val","i","max","changeValue","heal","newCommand","slice","rollCommand","result","ClassSet","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","pic","picBase64","background","spells","spellSlots","activeSelections","currencyBonis","currentFeatureUses","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","abilityImprovs","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","deathSaves","isChar","nameCheck","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","min","password","characters","Math","floor","random","FileField","accept","isMulti","transform","Field","LabelText","Input","target","files","type","multiple","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","ProgressBar","alignmentOption","bgColor","completed","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","transitionDuration","transitionTimingFunction","className","containerStyles","fillerStyles","Number","transition","display","alignItems","justifyContent","labelStyles","fontWeight","fontSize","outsideStyles","React.createElement","propTypes","PropTypes.oneOfType","PropTypes.string","PropTypes.number","isRequired","PropTypes.oneOf","PropTypes.bool","defaultProps","scanImportFileTest","json","fileName","callback","a","promList","obj","isClass","saveNew","isSubclass","isRace","isSubrace","isMonster","isSpell","isGear","isItem","isEncounter","isSelection","isCampaign","isQuest","isNpc","isWorld","isLocation","isEvent","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","body","appendChild","click","removeChild","exportAll","time","gears","races","subraces","subclasses","chars","encounters","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","feats","backgrounds","notes","timeEnd","v","newV","char","newChar","monster","newMonster","exportAllRight","exportAllLeft","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","state","setState","connect","Loading","StringField","TextButton","faCheck","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","boxShadow","button","SpellsOptions","amount","triggerDeleteAll","triggerDeleteByAttr","setSend","source","setSource","sourceList","setSourceList","reciveAttributeSelection","toString","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","MultipleSelectField","options","faPaperPlane","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","setRaces","raceList","setRaceList","setSubraces","subraceList","setSubraceList","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","setClasses","classList","setClassList","setSubclasses","subclassList","setSubclassList","CharsOptions","EncountersOptions","SelectionsOptions","isReload","triggerRegroupAll","newSelections","selection","sels","filter","ns","selectionOptions","deleteAll","resaveFromList","faUserCog","Boni","isCurrency","rest","FeatureRest","none","ImportModus","replaceTag","clearText","replace","split","trim","startsWith","scaleTextSplit","substring","replaceTags","newText","replaceAll","includes","start","indexOf","end","makeItems","rarity","entries","recursiveTextAdder","description","damage","dmg1","dmgType","properties","range","property","prop","weight","Gear","parseGear","magicBonus","bonusSpellAttack","parseInt","bonusWeapon","bonusAc","attunment","reqAttune","base","baseItem","toLowerCase","Item","parseItem","makeSubrace","subname","subtype","subabilityScores","ability","scores","Object","key","abilityScores","subtraits","entry","convertText","Trait","Subrace","makeClass","hitdice","hd","faces","proficiencies","startingProficiencies","armor","weapons","wpn","choose","from","skill","equipment","startingEquipment","default","eqp","featureSets","classTableGroups","col","title","rows","row","rowIndex","FeatureSet","spellslots","colLabels","colIndex","clearLabel","bonis","toRoll","number","classFeatures","feature","featureRaw","featureParts","additional","count","classFeature","objFeature","toLocaleLowerCase","Feature","features","addAdditionalClassFeatures","isAbilityImprov","newFeature","Class","makeSubclass","subclassFeatures","subclassFeature","subclassShortName","featureSet","feat","addAdditionalSubclassFeatures","Subclass","seperator","item","s","makeSelection","prequisite","prerequisite","key2","value2","key3","value3","entityName","entityPrerequsite","entityText","ImportField","modus","setFiles","Files","NORMAL","ETOOLS","faFileImport","file","fileList","changeFile","FileTile","filesDone","setFilesDone","fails","setFails","maxCount","setMax","listOfNewEntities","setListOfNewEntites","convertTypes","useCallback","types","newTypes","make5eToolsEntity","listOfNew","newList","_copy","tags","cr","align","size","save","sense","langs","languages","lang","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conImmunities","conditionImmune","traits","trait","tra","spellcasting","spellcast","headerEntries","spellSlotInfo","slots","spell","will","daily","spellTime","action","lactions","legendary","Monster","average","makeMonster","newEntitiy","newSpell","fromClassList","school","unit","condition","distance","components","m","duration","concentration","entriesHigherLevel","textPart","Spell","meta","ritual","makeSpell","newItem","newRace","age","Race","makeRace","newSubrace","newClass","subclass","newSubclass","newFeat","makeFeat","newBackground","makeBackground","make5eToolsSelections","featureType","selc","importImage","base64","entityTable","reciveAllFilteredPromise","Filter","entities","update","f","IMAGE","fileReader","FileReader","onloadend","event","readAsDataURL","content","parse","l","list","concat","scanImportFile","readAsText","newTableName","bulkList","saveNewFromList","FileWrapper","round","fail","Fails","OtherImportOptions","LocationsOptions","CampaignsOptions","NpcsOptions","QuestsOptions","EventsOptions","WorldsOptions","GroupsOptions","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","RandomTablesOptions","FeatsOptions","BackgroundsOptions","Options","setTab","showResetDialog","setResetDialog","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","campaignAmount","setCampaignAmount","questAmount","setQuestAmount","locationAmount","setLocationAmount","worldAmount","setWorldAmount","eventAmount","setEventAmount","npcAmount","setNpcAmount","groupAmount","setGroupAmount","selectionAmount","setSelectionAmount","randomTableAmount","setRandomTableAmount","featAmount","setFeatAmount","backgroundAmount","setBackgroundAmount","setData","reciveCount","attrs","deleteAllByAttrs","returnTile","ClassTile","RaceTile","MonsterTile","SpellTile","GearTile","gear","ItemTile","EncounterTile","encounter","CampaignTile","QuestTile","quest","LocationTile","location","NpcTile","npc","WorldTile","world","isGroup","GroupTile","group","EventTile","isRandomTable","RandomTableTile","randomTable","CharTile","faExclamationTriangle","deleteDatabase","OptionWrapper","tab","OptionSectionLarge"],"mappings":"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","file":"static/js/14.3ead4afa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\nimport BuildChar from \"../../data/chars/BuildChar\";\nimport { rollCommand } from \"../../services/DiceService\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $ShortRestProps {\n  buildChar: BuildChar;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\nexport const ShortRestDialod = ({\n  buildChar,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $ShortRestProps) => {\n  const [values, setValues] = useState<number[]>([]);\n  const [maxValues, setMaxValues] = useState<number[]>([]);\n  const [hitDices, setHitDices] = useState<string[]>([]);\n\n  useEffect(() => {\n    let newValues: number[] = [];\n    let newMaxValues: number[] = [];\n    let newHitDices: string[] = [];\n    buildChar.character.classes.forEach((classe) => {\n      buildChar.classes.forEach((classesClass) => {\n        if (classe.classe === classesClass.name + \"|\" + classesClass.sources) {\n          newValues.push(classe.level);\n          newMaxValues.push(classe.level);\n          newHitDices.push(classesClass.hitDices);\n        }\n      });\n    });\n    setValues(newValues);\n    setMaxValues(newMaxValues);\n    setHitDices(newHitDices);\n  }, [buildChar]);\n\n  const changeValue = (value: number, i: number) => {\n    let newValues = [...values];\n    newValues[i] = value;\n    setValues(newValues);\n  };\n  const heal = () => {\n    let heal = 0;\n    let newCommand = \"\";\n    values.forEach((val: number, i) => {\n      newCommand += val + hitDices[i] + \"+\";\n    });\n    newCommand = newCommand.slice(0, -1);\n\n    heal = rollCommand(newCommand).result;\n    healClick(heal);\n  };\n\n  return (\n    <DialogWrapper>\n      <ButtonBar>\n        {values.length > 0 &&\n          values.map((val: number, i) => {\n            return (\n              <>\n                <NumberField\n                  key={i}\n                  value={val}\n                  max={maxValues[i]}\n                  label=\"Amount\"\n                  onChange={(value) => changeValue(value, i)}\n                />\n                of {hitDices[i]}\n              </>\n            );\n          })}\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton\n          text={healText}\n          onClick={() => heal()}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\nimport { FeatureRest } from \"../classes/Feature\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: { origin: string; prepared: boolean }[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number; rest: FeatureRest }[];\n  currentFeatureUses: { origin: string; value: number; max: number; rest: FeatureRest }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  abilityImprovs: { origin: string; level: number; s1: string; s2: string; feat: string }[];\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n  deathSaves: number[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: { origin: string; prepared: boolean }[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number; rest: FeatureRest }[],\n    currentFeatureUses?: { origin: string; value: number; max: number; rest: FeatureRest }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    abilityImprovs?: { origin: string; level: number; s1: string; s2: string; feat: string }[],\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number,\n    deathSaves?: number[]\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.currentFeatureUses = currentFeatureUses || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.abilityImprovs = abilityImprovs || [];\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n    this.deathSaves = deathSaves || [0, 0, 0, 0, 0, 0];\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    (picCheck || picBase64Check) &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 261;","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor,\n  completed,\n  baseBgColor,\n  height,\n  width,\n  margin,\n  padding,\n  borderRadius,\n  labelAlignment,\n  labelColor,\n  labelSize,\n  isLabelVisible,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    backgroundColor: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: Number(completed) > 100 ? `100%` : `${Number(completed)}%`,\n    backgroundColor: bgColor,\n    transition: `width ${transitionDuration || \"1s\"} ${\n      transitionTimingFunction || \"ease-in-out\"\n    }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  return (\n    <div style={outsideStyles} className={className}>\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          {labelAlignment !== \"outside\" && (\n            <span style={labelStyles}>\n              {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\n            </span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span style={labelStyles}>\n          {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  bgColor: PropTypes.string,\n  baseBgColor: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  borderRadius: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes.string,\n  labelSize: PropTypes.string,\n  isLabelVisible: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n};\n\nexport default ProgressBar;\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Char, { isChar } from \"../data/chars/Char\";\nimport Class, { isClass } from \"../data/classes/Class\";\nimport Subclass, { isSubclass } from \"../data/classes/Subclass\";\nimport Encounter, { isEncounter } from \"../data/encounter/Encounter\";\nimport Gear, { isGear } from \"../data/Gear\";\nimport Item, { isItem } from \"../data/Item\";\nimport Monster, { isMonster } from \"../data/Monster\";\nimport Race, { isRace } from \"../data/races/Race\";\nimport Subrace, { isSubrace } from \"../data/races/Subrace\";\nimport Selection, { isSelection } from \"../data/Selection\";\nimport Spell, { isSpell } from \"../data/Spell\";\nimport Campaign, { isCampaign } from \"../data/campaign/Campaign\";\nimport Quest, { isQuest } from \"../data/campaign/Quest\";\nimport Npc, { isNpc } from \"../data/campaign/Npc\";\nimport Location, { isLocation } from \"../data/world/Location\";\nimport Event, { isEvent } from \"../data/world/Event\";\nimport World, { isWorld } from \"../data/world/World\";\nimport Group from \"../data/campaign/Group\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isClass(obj)) {\n      promList.push(saveNew(\"classes\", obj as Class, fileName));\n    } else if (isSubclass(obj)) {\n      promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n    } else if (isRace(obj)) {\n      promList.push(saveNew(\"races\", obj as Race, fileName));\n    } else if (isSubrace(obj)) {\n      promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n    } else if (isMonster(obj)) {\n      promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n    } else if (isSpell(obj)) {\n      promList.push(saveNew(\"spells\", obj as Spell, fileName));\n    } else if (isGear(obj)) {\n      promList.push(saveNew(\"gears\", obj as Gear, fileName));\n    } else if (isItem(obj)) {\n      promList.push(saveNew(\"items\", obj as Item, fileName));\n    } else if (isEncounter(obj)) {\n      promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n    } else if (isSelection(obj)) {\n      promList.push(saveNew(\"selections\", obj as Selection, fileName));\n    } else if (isCampaign(obj)) {\n      promList.push(saveNew(\"campaigns\", obj as Campaign, fileName));\n    } else if (isQuest(obj)) {\n      promList.push(saveNew(\"quests\", obj as Quest, fileName));\n    } else if (isNpc(obj)) {\n      promList.push(saveNew(\"npcs\", obj as Npc, fileName));\n    } else if (isWorld(obj)) {\n      promList.push(saveNew(\"worlds\", obj as World, fileName));\n    } else if (isLocation(obj)) {\n      promList.push(saveNew(\"locations\", obj as Location, fileName));\n    } else if (isEvent(obj)) {\n      promList.push(saveNew(\"events\", obj as Event, fileName));\n    } else if (isChar(obj)) {\n      promList.push(saveNew(\"chars\", obj as Char, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  console.time(\"Get all\");\n  let spells = await reciveAllPromise(\"spells\");\n  let items = await reciveAllPromise(\"items\");\n  let gears = await reciveAllPromise(\"gears\");\n  let monsters = await reciveAllPromise(\"monsters\");\n  let races = await reciveAllPromise(\"races\");\n  let subraces = await reciveAllPromise(\"subraces\");\n  let classes = await reciveAllPromise(\"classes\");\n  let subclasses = await reciveAllPromise(\"subclasses\");\n  let chars = await reciveAllPromise(\"chars\");\n  let encounters = await reciveAllPromise(\"encounters\");\n  let selections = await reciveAllPromise(\"selections\");\n  let randomTables = await reciveAllPromise(\"randomTables\");\n  let campaigns = await reciveAllPromise(\"campaigns\");\n  let quests = await reciveAllPromise(\"quests\");\n  let npcs = await reciveAllPromise(\"npcs\");\n  let worlds = await reciveAllPromise(\"worlds\");\n  let locations = await reciveAllPromise(\"locations\");\n  let events = await reciveAllPromise(\"events\");\n  let groups = await reciveAllPromise(\"groups\");\n  let feats = await reciveAllPromise(\"feats\");\n  let backgrounds = await reciveAllPromise(\"backgrounds\");\n  let notes = await reciveAllPromise(\"notes\");\n  console.timeEnd(\"Get all\");\n\n  console.time(\"Remove Base64 Images\");\n  spells = spells.map((v: Spell) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  items = items.map((v: Item) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  gears = gears.map((v: Gear) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  monsters = monsters.map((v: Monster) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  races = races.map((v: Race) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  classes = classes.map((v: Class) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  chars = chars.map((v: Char) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  campaigns = campaigns.map((v: Campaign) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  quests = quests.map((v: Quest) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  npcs = npcs.map((v: Npc) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    if (newV.char !== undefined) {\n      let newChar: Char = { ...newV.char };\n      newChar.picBase64 = \"\";\n      newV.char = newChar;\n    } else if (newV.monster !== undefined) {\n      let newMonster: Monster = { ...newV.monster };\n      newMonster.picBase64 = \"\";\n      newV.monster = newMonster;\n    }\n    return newV;\n  });\n  groups = groups.map((v: Group) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  console.timeEnd(\"Remove Base64 Images\");\n\n  let all: any = {\n    spells: spells,\n    items: items,\n    gears: gears,\n    monsters: monsters,\n    races: races,\n    subraces: subraces,\n    classes: classes,\n    subclasses: subclasses,\n    chars: chars,\n    encounters: encounters,\n    selections: selections,\n    randomTables: randomTables,\n    campaigns: campaigns,\n    quests: quests,\n    npcs: npcs,\n    worlds: worlds,\n    locations: locations,\n    events: events,\n    groups: groups,\n    feats: feats,\n    backgrounds: backgrounds,\n    notes: notes,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nexport const exportAllRight = async (filename: string) => {\n  console.time(\"Get all\");\n  let spells = await reciveAllPromise(\"spells\");\n  let items = await reciveAllPromise(\"items\");\n  let gears = await reciveAllPromise(\"gears\");\n  let monsters = await reciveAllPromise(\"monsters\");\n  let races = await reciveAllPromise(\"races\");\n  let subraces = await reciveAllPromise(\"subraces\");\n  let classes = await reciveAllPromise(\"classes\");\n  let subclasses = await reciveAllPromise(\"subclasses\");\n  let chars = await reciveAllPromise(\"chars\");\n  let feats = await reciveAllPromise(\"feats\");\n  let backgrounds = await reciveAllPromise(\"backgrounds\");\n  console.timeEnd(\"Get all\");\n\n  console.time(\"Remove Base64 Images\");\n  spells = spells.map((v: Spell) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  items = items.map((v: Item) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  gears = gears.map((v: Gear) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  monsters = monsters.map((v: Monster) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  races = races.map((v: Race) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  classes = classes.map((v: Class) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  chars = chars.map((v: Char) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  console.timeEnd(\"Remove Base64 Images\");\n\n  let all: any = {\n    spells: spells,\n    items: items,\n    gears: gears,\n    monsters: monsters,\n    races: races,\n    subraces: subraces,\n    classes: classes,\n    subclasses: subclasses,\n    chars: chars,\n    feats: feats,\n    backgrounds: backgrounds,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n\nexport const exportAllLeft = async (filename: string) => {\n  console.time(\"Get all\");\n  let encounters = await reciveAllPromise(\"encounters\");\n  let selections = await reciveAllPromise(\"selections\");\n  let randomTables = await reciveAllPromise(\"randomTables\");\n  let campaigns = await reciveAllPromise(\"campaigns\");\n  let quests = await reciveAllPromise(\"quests\");\n  let npcs = await reciveAllPromise(\"npcs\");\n  let worlds = await reciveAllPromise(\"worlds\");\n  let locations = await reciveAllPromise(\"locations\");\n  let events = await reciveAllPromise(\"events\");\n  let groups = await reciveAllPromise(\"groups\");\n  let notes = await reciveAllPromise(\"notes\");\n  console.timeEnd(\"Get all\");\n\n  console.time(\"Remove Base64 Images\");\n  campaigns = campaigns.map((v: Campaign) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  quests = quests.map((v: Quest) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  npcs = npcs.map((v: Npc) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    if (newV.char !== undefined) {\n      let newChar: Char = { ...newV.char };\n      newChar.picBase64 = \"\";\n      newV.char = newChar;\n    } else if (newV.monster !== undefined) {\n      let newMonster: Monster = { ...newV.monster };\n      newMonster.picBase64 = \"\";\n      newV.monster = newMonster;\n    }\n    return newV;\n  });\n  groups = groups.map((v: Group) => {\n    let newV = { ...v };\n    newV.picBase64 = \"\";\n    return newV;\n  });\n  console.timeEnd(\"Remove Base64 Images\");\n\n  let all: any = {\n    encounters: encounters,\n    selections: selections,\n    randomTables: randomTables,\n    campaigns: campaigns,\n    quests: quests,\n    npcs: npcs,\n    worlds: worlds,\n    locations: locations,\n    events: events,\n    groups: groups,\n    notes: notes,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { faCheck, faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thorbenkuck.de\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField value={peerId} label={\"ID to recive from\"} onChange={(id) => setId(id)} />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton text={\"Accept\"} icon={faCheck} onClick={() => acceptData()} />\n          <TextButton text={\"Decline\"} icon={faCheck} onClick={() => declineData()} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"spells\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Spells by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"spells\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all spells`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"gears\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Gear by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"gears\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all gears`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"items\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Items by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"items\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all items`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Monsters by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"monsters\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  const [races, setRaces] = useState<string[]>([]);\n  const [raceList, setRaceList] = useState<{ value: string; label: string }[]>([]);\n  const [subraces, setSubraces] = useState<string[]>([]);\n  const [subraceList, setSubraceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"races\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setRaceList(sources);\n    });\n    reciveAttributeSelection(\"subraces\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSubraceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"races\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Races by</SectionText>\n          <MultipleSelectField\n            options={raceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setRaces(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"races\", races)} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"subraces\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Subraces by</SectionText>\n          <MultipleSelectField\n            options={subraceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSubraces(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"subraces\", subraces)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  \n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  const [classes, setClasses] = useState<string[]>([]);\n  const [classList, setClassList] = useState<{ value: string; label: string }[]>([]);\n  const [subclasses, setSubclasses] = useState<string[]>([]);\n  const [subclassList, setSubclassList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"classes\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setClassList(sources);\n    });\n    reciveAttributeSelection(\"subclasses\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSubclassList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"classes\", \"DnDTome_classes.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"classes\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Classes by</SectionText>\n          <MultipleSelectField\n            options={classList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setClasses(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"classes\", classes)} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"subclasses\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Subclasses by</SectionText>\n          <MultipleSelectField\n            options={subclassList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSubclasses(sources)}\n          />\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteByAttr(\"subclasses\", subclasses)}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n  faUserCog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport Selection from \"../../data/Selection\";\nimport { deleteAll, reciveAllPromise, resaveFromList } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  amount: number;\n  isReload: (val: boolean) => void;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SelectionsOptions = ({ amount, isReload, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const triggerRegroupAll = async () => {\n    let newSelections: Selection[] = [];\n    let selections: Selection[] = await reciveAllPromise(\"selections\");\n    selections.forEach((selection) => {\n      let sels = newSelections.filter((ns) => ns.name === selection.name);\n      if (sels.length > 0) {\n        sels[0].selectionOptions = [...sels[0].selectionOptions, ...selection.selectionOptions];\n      } else {\n        newSelections.push(selection);\n      }\n    });\n    deleteAll(\"selections\");\n    resaveFromList(\"selections\", newSelections);\n    isReload(true);\n  };\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Selections?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"selections\", \"DnDTome_selections.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Selections?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"selections\")} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Regroup</SelectionTitle>\n        <SectionRow>\n          <SectionText>Regroup all {amount} Selections?</SectionText>\n          <IconButton icon={faUserCog} onClick={() => triggerRegroupAll()} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all selections`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"selections\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SelectionsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import IEntity from \"../IEntity\";\nimport { FeatureRest } from \"./Feature\";\n\nexport default class Boni implements IEntity {\n  name: string;\n  value: string;\n  isCurrency: boolean;\n  rest: FeatureRest;\n\n  constructor(name: string, value: string, isCurrency: boolean, rest: FeatureRest) {\n    this.name = name;\n    this.value = value;\n    this.isCurrency = isCurrency;\n    this.rest = rest | FeatureRest.none;\n  }\n}\n\nexport function isBoni(arg: any): arg is Boni {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const valueCheck = arg.value !== undefined && typeof arg.value == \"string\";\n  const isCurrencyCheck = arg.isCurrency !== undefined && typeof arg.isCurrency == \"boolean\";\n  return arg && nameCheck && valueCheck && isCurrencyCheck;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport Selection from \"../../data/Selection\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { isGear } from \"../../data/Gear\";\nimport { isItem } from \"../../data/Item\";\nimport { reciveAllFilteredPromise, saveNewFromList, update } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport {\n  makeBackground,\n  makeClass,\n  makeFeat,\n  makeItems,\n  makeMonster,\n  makeRace,\n  makeSelection,\n  makeSpell,\n  makeSubclass,\n  makeSubrace,\n} from \"../../services/5eToolService\";\nimport Filter from \"../../data/Filter\";\n\nexport enum ImportModus {\n  NORMAL,\n  ETOOLS,\n  IMAGE,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\n            modus === ImportModus.NORMAL || modus === ImportModus.ETOOLS ? \".json\" : \"image/*\"\n          }\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>{files && files.length > 0 && <FileTile modus={modus} files={files} />}</Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  files: File[];\n  modus: ImportModus;\n}\n\nconst FileTile = ({ files, modus }: $FileProps) => {\n  const [filesDone, setFilesDone] = useState<number>(0);\n  const [fails, setFails] = useState<any[]>([]);\n  const [maxCount, setMax] = useState<number>(0);\n  const [listOfNewEntities, setListOfNewEntites] = useState<\n    { tableName: string; newEntitiy: IEntity }[]\n  >([]);\n\n  const convertTypes = useCallback((types: string[]): string[] => {\n    let newTypes: string[] = [];\n    if (types !== undefined && Array.isArray(types))\n      newTypes = types.map((type: string) => {\n        if (typeof type == \"string\")\n          switch (type.split(\":\")[0]) {\n            case \"OR\":\n              return \"Onomancy Resonant\";\n            case \"EI\":\n              return \"Invocations\";\n            case \"AF\":\n              return \"Alchemical Formular\";\n            case \"MV\":\n              return \"Maneuver\";\n            case \"FS\":\n              return \"Fighting Styles\";\n            case \"AI\":\n              return \"Artificer Infusion\";\n            case \"AS\":\n              return \"Arcane Shot\";\n            case \"ED\":\n              return \"Elemental Disciplin\";\n            case \"MM\":\n              return \"Metamagic\";\n            case \"RN\":\n              return \"Rune\";\n            case \"PB\":\n              return \"Pact Boon\";\n            default:\n              return \"Unknown\";\n          }\n        return \"Unknown\";\n      });\n    return newTypes;\n  }, []);\n\n  const make5eToolsEntity = useCallback(\n    (\n      key: string,\n      obj: any,\n      fileName: string,\n      json: any,\n      listOfNew: { tableName: string; newEntitiy: IEntity }[]\n    ) => {\n      let newList = [...listOfNew];\n      if (key === \"monster\") {\n        const newMonster = makeMonster(obj);\n        if (newMonster.name !== \"\") newList.push({ tableName: \"monsters\", newEntitiy: newMonster });\n      } else if (key === \"spell\") {\n        const newSpell = makeSpell(obj, fileName);\n        if (newSpell.name !== \"\") newList.push({ tableName: \"spells\", newEntitiy: newSpell });\n      } else if (key === \"item\" || key === \"baseitem\") {\n        const newItem = makeItems(obj, fileName);\n        if (newItem.name !== \"\")\n          if (isGear(newItem)) {\n            newList.push({ tableName: \"gears\", newEntitiy: newItem });\n          } else if (isItem(newItem)) {\n            newList.push({ tableName: \"items\", newEntitiy: newItem });\n          }\n      } else if (key === \"race\") {\n        const newRace = makeRace(obj, fileName);\n        if (newRace.name !== \"\") {\n          newList.push({ tableName: \"races\", newEntitiy: newRace });\n          if (obj._copy === undefined && obj.source !== \"DMG\") {\n            if (obj.subraces !== undefined) {\n              obj.subraces.forEach(async (subrace: any) => {\n                const newSubrace = makeSubrace(subrace, newRace, fileName);\n                newList.push({ tableName: \"subraces\", newEntitiy: newSubrace });\n              });\n            }\n          }\n        }\n      } else if (key === \"class\") {\n        const newClass = makeClass(obj, json, fileName);\n        if (newClass.name !== \"\") {\n          newList.push({ tableName: \"classes\", newEntitiy: newClass });\n          if (obj.subclasses !== undefined) {\n            obj.subclasses.forEach(async (subclass: any) => {\n              const newSubclass = makeSubclass(subclass, json, newClass.name, fileName);\n              newList.push({ tableName: \"subclasses\", newEntitiy: newSubclass });\n            });\n          }\n        }\n      } else if (key === \"subclass\") {\n        if (obj.className !== undefined) {\n          const newSubclass = makeSubclass(obj, json, obj.className, fileName);\n          if (newSubclass.name !== \"\")\n            newList.push({ tableName: \"subclasses\", newEntitiy: newSubclass });\n        }\n      } else if (key === \"feat\") {\n        const newFeat = makeFeat(obj, json, fileName);\n        if (newFeat.name !== \"\") newList.push({ tableName: \"feats\", newEntitiy: newFeat });\n      } else if (key === \"background\") {\n        const newBackground = makeBackground(obj, json, fileName);\n        if (newBackground.name !== \"\")\n          newList.push({ tableName: \"backgrounds\", newEntitiy: newBackground });\n      }\n      return newList;\n    },\n    []\n  );\n\n  const make5eToolsSelections = useCallback(\n    (value: any[], fileName: string, listOfNew: { tableName: string; newEntitiy: IEntity }[]) => {\n      let newList = [...listOfNew];\n      let selections: Selection[] = [];\n\n      value.forEach((obj: any) => {\n        convertTypes(obj.featureType).forEach((type: string) => {\n          if (type === \"Unknown\") type = fileName;\n          if (selections.filter((selc) => selc.name === type).length <= 0) {\n            selections.push({\n              name: type,\n              filename: fileName,\n              selectionOptions: [makeSelection(obj)],\n            });\n          } else {\n            selections = selections.map((selc) => {\n              if (selc.name === type) {\n                return {\n                  ...selc,\n                  selectionOptions: [...selc.selectionOptions, makeSelection(obj)],\n                };\n              }\n              return selc;\n            });\n          }\n        });\n      });\n\n      selections.forEach((selc: Selection) => {\n        newList.push({ tableName: \"selections\", newEntitiy: selc });\n      });\n      return newList;\n    },\n    [convertTypes]\n  );\n\n  const scanImportFile = (json: any, filename: string) => {\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        setMax((m) => m + value.length);\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: IEntity) => {\n            setListOfNewEntites((l) => [...l, { tableName: key, newEntitiy: obj }]);\n          });\n        } else if (modus === ImportModus.ETOOLS) {\n          if (key === \"optionalfeature\") {\n            setListOfNewEntites((l) => {\n              let list = make5eToolsSelections(value, filename, l);\n              if (list.length - l.length === 0)\n                setFails((f) =>\n                  f.concat(\n                    value.map((val) => {\n                      return { obj: val, filename: filename };\n                    })\n                  )\n                );\n              return list;\n            });\n          } else {\n            // eslint-disable-next-line\n            value.forEach((obj: any) => {\n              setListOfNewEntites((l) => {\n                let list = make5eToolsEntity(key, obj, filename, json, l);\n                if (list.length - l.length === 0)\n                  setFails((f) => f.concat({ obj: obj, filename: filename }));\n                return list;\n              });\n            });\n          }\n        }\n      }\n    }\n    setFilesDone((f) => f + 1);\n  };\n\n  const importImage = async (base64: string, fileName: string) => {\n    let entityTable: string = fileName.split(\"_\")[0];\n    let entityName: string = fileName.split(\"_\")[1].split(\".\")[0].trim();\n    console.log(entityTable, entityName);\n\n    let entities = await reciveAllFilteredPromise(entityTable, [new Filter(\"name\", entityName)]);\n\n    let newList: IEntity[] = [];\n    if (entities !== undefined) entities.forEach((entity: IEntity) => newList.push(entity));\n    console.log(\"... found \" + newList.length + \" entities that match \" + entityName + \" ...\");\n\n    newList.forEach((entity: any) => {\n      if (\n        (entity.picBase64 === \"\" && entity.pic === \"\") ||\n        entity.name.toLowerCase() === entityName.toLowerCase()\n      ) {\n        console.log(\"... updated \" + entity.name + \" ...\");\n        update(entityTable, { ...entity, picBase64: base64 });\n      } else {\n        console.log(\"... not updated \" + entity.name + \" since already having a picture...\");\n      }\n    });\n    setFilesDone((f) => f + 1);\n  };\n\n  useEffect(() => {\n    setFilesDone(0);\n    setMax(0);\n    setFails([]);\n    setListOfNewEntites([]);\n\n    console.log(\"-+ Start Filereader +-\");\n\n    if (modus === ImportModus.IMAGE) {\n      setMax((m) => m + files.length);\n      files.forEach((file) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = function (event: any) {\n          console.log(\"Image (\" + file.name + \") import started...\");\n          importImage(event.target.result, file.name);\n        };\n        fileReader.readAsDataURL(file);\n      });\n    } else {\n      files.forEach((file) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = function () {\n          const content = fileReader.result;\n          if (content !== null) {\n            let json = JSON.parse(content.toString());\n            console.log(\"Json loaded from \" + file.name);\n            scanImportFile(json, file.name);\n            console.log(\"---------\");\n          }\n        };\n        fileReader.readAsText(file);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n\n  const save = useCallback(async () => {\n    let listOfNew = [...listOfNewEntities];\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n    }\n    console.log(\"Done saving\");\n  }, [listOfNewEntities]);\n\n  useEffect(() => {\n    if (filesDone === files.length) {\n      save();\n    }\n  }, [filesDone, files.length, save]);\n\n  return (\n    <FileWrapper>\n      Files done: {filesDone}/{files.length} | Found entities:{maxCount} (Failed entities:{\" \"}\n      {fails.length})\n      <ProgressBar\n        completed={Math.round((filesDone / files.length) * 100)}\n        isLabelVisible={false}\n        bgColor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n      {fails &&\n        fails.length > 0 &&\n        filesDone === files.length &&\n        fails.map((fail) => {\n          return (\n            <Fails>\n              {fail.filename} - {fail.obj.name} ... failed.\n            </Fails>\n          );\n        })}\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  padding: 10px;\n`;\n\nconst Fails = styled.div`\n  width: clac(100% - 20px);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n`;\n","import Background from \"../data/Background\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport Feature, { FeatureRest } from \"../data/classes/Feature\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Feat from \"../data/Feat\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\n\nconst replaceTag = (text: string) => {\n  let clearText = text.replace(\"{@\", \"\").replace(\"}\", \"\").split(\"|\")[0].trim();\n\n  switch (true) {\n    case clearText.startsWith(\"scaledamage\"):\n      let scaleTextSplit = text.replace(\"{@\", \"\").replace(\"}\", \"\").split(\"|\");\n      let scaleText = scaleTextSplit[scaleTextSplit.length - 1].trim();\n      return scaleText;\n    case clearText.startsWith(\"damage\"):\n      return \"[[dice.\" + clearText.substring(6, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"dice\"):\n      return \"[[dice.+\" + clearText.substring(4, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"hit\"):\n      return \"[[dice.+\" + clearText.substring(3, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"recharge\"):\n      return \"(Recharge \" + clearText.substring(8, clearText.length).trim() + \" [[dice.d6]])\";\n    case clearText.startsWith(\"item\"):\n      return \"[[gear.\" + clearText.substring(4, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"spell\"):\n      return \"[[spell.\" + clearText.substring(6, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"filter\"):\n      return \"\" + clearText.substring(6, clearText.length).trim();\n    case clearText.startsWith(\"bold\"):\n      return \"\" + clearText.substring(4, clearText.length).trim();\n    default:\n      return clearText;\n  }\n};\n\nconst replaceTags = (text: string): string => {\n  if (text) {\n    text = text\n      .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n      .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n      .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n      .replaceAll(\"{@atk rw\", \"Ranged Weapon Attack: \")\n      .replaceAll(\"{@dc\", \"DC\")\n      .replaceAll(\"[\", \"\")\n      .replaceAll(\"]\", \"\")\n      .replaceAll(\"{@h}\", \"Hit: \");\n\n    let newText: string = text;\n    while (newText.includes(\"{@\")) {\n      if (newText.includes(\"{@\") && !newText.includes(\"}\")) {\n        newText = newText.replace(\"{@\", \"\");\n        break;\n      }\n      if (!newText.includes(\"{@\") && newText.includes(\"}\")) {\n        newText = newText.replace(\"}\", \"\");\n        break;\n      }\n\n      let start = newText.indexOf(\"{@\");\n      let end = newText.indexOf(\"}\");\n      if (start > end) {\n        newText = newText.replace(\"}\", \"\");\n      } else {\n        newText =\n          newText.substring(0, start) +\n          replaceTag(newText.substring(start, end + 1)) +\n          newText.substring(end + 1, newText.length);\n      }\n    }\n\n    newText = newText\n      .replaceAll(\"}\", \"\")\n      .replaceAll(\"{\", \"\")\n      .replaceAll(\" + \", \"+\")\n      .replaceAll(\"+ \", \"+\")\n      .replaceAll(\" +\", \"+\");\n    return newText.trim();\n  }\n  return \"\";\n};\n\nconst parseGear = (obj: any, fileName: string) => {\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text, additional);\n  const description = replaceTags(text);\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    switch (obj.type) {\n      case \"A\":\n        type = \"ammunition\";\n        break;\n      case \"AIR\":\n        type = \"air vehicle\";\n        break;\n      case \"AT\":\n        type = \"tools\";\n        break;\n      case \"EXP\":\n        type = \"explosive\";\n        break;\n      case \"FD\":\n        type = \"food\";\n        break;\n      case \"GS\":\n        type = \"game set\";\n        break;\n      case \"HA\":\n        type = \"heavy armor\";\n        break;\n      case \"INS\":\n        type = \"instrument\";\n        break;\n      case \"LA\":\n        type = \"light armor\";\n        break;\n      case \"M\":\n        type = \"martial weapon\";\n        break;\n      case \"MA\":\n        type = \"medium armor\";\n        break;\n      case \"MNT\":\n        type = \"mount\";\n        break;\n      case \"R\":\n        type = \"martial ranged weapon\";\n        break;\n      case \"S\":\n        type = \"simple weapon\";\n        break;\n      case \"SCF\":\n        type = \"spellcasting focus\";\n        break;\n      case \"SHP\":\n        type = \"ship\";\n        break;\n      case \"TG\":\n        type = \"trade good\";\n        break;\n      case \"VEH\":\n        type = \"vehicle\";\n        break;\n      default:\n        type = \"gear\";\n    }\n  }\n\n  let damage = \"\";\n  if (obj.dmg1 !== undefined) {\n    damage += obj.dmg1;\n    if (obj.dmgType !== undefined) {\n      switch (obj.dmgType) {\n        case \"S\":\n          damage += \" slashing damage\";\n          break;\n        case \"P\":\n          damage += \" piercing damage\";\n          break;\n        case \"B\":\n          damage += \" bludgeoning damage\";\n          break;\n        case \"R\":\n          damage += \" radiant damage\";\n      }\n    }\n  }\n\n  let properties = \"\";\n  if (obj.range !== undefined) {\n    properties += \"ranged (\" + obj.range + \"), \";\n  }\n  if (obj.property !== undefined) {\n    obj.property.forEach((prop: string) => {\n      switch (prop) {\n        case \"L\":\n          properties += \"light, \";\n          break;\n        case \"AF\":\n          properties += \"radiant damage, \";\n          break;\n        case \"RLD\":\n          properties += \"loading, \";\n          break;\n        case \"2H\":\n          properties += \"two-handed, \";\n          break;\n        case \"F\":\n          properties += \"finesse, \";\n          break;\n        case \"H\":\n          properties += \"heavy, \";\n          break;\n        case \"R\":\n          properties += \"reach, \";\n          break;\n        case \"T\":\n          properties += \"thrown, \";\n          break;\n        case \"V\":\n          properties += \"versatile, \";\n      }\n    });\n  }\n  properties = properties.trim();\n\n  let weight = obj.weight;\n  if (typeof weight == \"number\") {\n    weight = weight + \"lbs\";\n  }\n\n  let value = obj.value;\n  if (typeof value == \"number\") {\n    if (value / 100 > 1) {\n      value = value / 100 + \"gp\";\n    } else if (value / 10 > 1) {\n      value = value / 10 + \"sp\";\n    } else {\n      value = value + \"cp\";\n    }\n  }\n\n  let newGear = new Gear(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    \"\",\n    value,\n    damage,\n    weight,\n    properties,\n    type,\n    fileName\n  );\n  return newGear;\n};\n\nconst parseItem = (obj: any, fileName: string) => {\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text, additional);\n  const description = replaceTags(text);\n\n  let magicBonus = 0;\n  if (obj.bonusSpellAttack !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusSpellAttack.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusWeapon !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusWeapon.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusAc !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusAc.replaceAll(\"+\", \"\"));\n  }\n\n  let attunment = 0;\n  if (obj.reqAttune !== undefined) {\n    attunment = obj.reqAttune ? 1 : 0;\n  }\n\n  let base = \"\";\n  if (obj.baseItem !== undefined) {\n    let baseParts: string[] = obj.baseItem.split(\"|\");\n    base = baseParts[0];\n  }\n  base = base.toLowerCase().trim();\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    switch (obj.type) {\n      case \"A\":\n        type = \"ammunition\";\n        break;\n      case \"AIR\":\n        type = \"air vehicle\";\n        break;\n      case \"AT\":\n        type = \"tools\";\n        break;\n      case \"EXP\":\n        type = \"explosive\";\n        break;\n      case \"FD\":\n        type = \"food\";\n        break;\n      case \"GS\":\n        type = \"game set\";\n        break;\n      case \"HA\":\n        type = \"heavy armor\";\n        break;\n      case \"INS\":\n        type = \"instrument\";\n        break;\n      case \"LA\":\n        type = \"light armor\";\n        break;\n      case \"M\":\n        type = \"martial weapon\";\n        break;\n      case \"MA\":\n        type = \"medium armor\";\n        break;\n      case \"MNT\":\n        type = \"mount\";\n        break;\n      case \"R\":\n        type = \"martial ranged weapon\";\n        break;\n      case \"S\":\n        type = \"simple weapon\";\n        break;\n      case \"SCF\":\n        type = \"spellcasting focus\";\n        break;\n      case \"SHP\":\n        type = \"ship\";\n        break;\n      case \"TG\":\n        type = \"trade good\";\n        break;\n      case \"VEH\":\n        type = \"vehicle\";\n        break;\n      default:\n        type = \"gear\";\n    }\n  }\n\n  let rarity: string = \"\";\n  if (obj.rarity !== undefined) {\n    rarity = obj.rarity;\n  }\n  rarity = rarity.toLowerCase().trim();\n\n  let newItem = new Item(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    \"\",\n    rarity,\n    magicBonus,\n    attunment,\n    base,\n    type,\n    fileName\n  );\n  return newItem;\n};\n\nexport const makeItems = (obj: any, fileName: string): Item | Gear => {\n  if (obj !== undefined && obj.rarity !== undefined) {\n    if (obj.rarity === \"none\" || obj.rarity === \"unknown\") {\n      return parseGear(obj, fileName);\n    } else {\n      return parseItem(obj, fileName);\n    }\n  }\n  return new Item();\n};\n\nexport const makeRace = (obj: any, fileName: string): Race => {\n  if (obj._copy === undefined) {\n    const name = obj.name;\n    const sources = obj.source;\n\n    let speed = \"\";\n    if (obj.speed !== undefined) {\n      if (typeof obj.speed == \"number\") {\n        speed += \"walk \" + obj.speed + \"ft.\";\n      } else if (typeof obj.speed == \"number\") {\n        speed = obj.speed;\n      } else {\n        for (const [key, value] of Object.entries(obj.speed)) {\n          if (typeof value === \"number\") {\n            speed += key + \" \" + value + \"ft, \";\n          } else if (typeof value === \"boolean\") {\n          } else {\n            speed += key + \" \";\n            for (const value2 of Object.entries(value as Object)) {\n              if (typeof value2[1] === \"number\") {\n                speed += value2[1] + \"ft, \";\n              } else if (typeof value2[1] === \"string\") {\n                speed += value2[1];\n              }\n            }\n            speed += \", \";\n          }\n        }\n      }\n      speed = speed.trim();\n    }\n\n    let abilityScores = \"\";\n    if (obj.ability !== undefined)\n      obj.ability.forEach((scores: any) => {\n        for (const [key, value] of Object.entries(scores as Object)) {\n          if (typeof value == \"number\") {\n            if (value >= 0) abilityScores += key + \" +\" + value + \", \";\n            abilityScores += key + \" \" + value + \", \";\n          }\n        }\n      });\n    abilityScores = abilityScores.trim();\n\n    let age = \"\";\n    let alignment = \"\";\n    let size = \"\";\n    let lang = \"\";\n    let traits: Trait[] = [];\n    if (obj.entries !== undefined) {\n      obj.entries.forEach((entry: any) => {\n        if (entry.name === \"Age\") {\n          age += entry.entries[0];\n        } else if (entry.name === \"Alignment\") {\n          alignment += entry.entries[0];\n        } else if (entry.name === \"Size\") {\n          size += entry.entries[0];\n        } else if (entry.name === \"Languages\") {\n          lang += entry.entries[0];\n        } else if (Array.isArray(entry.entries)) {\n          if (typeof entry.entries[0] == \"string\") {\n            let convertText = replaceTags(entry.entries[0]);\n            traits.push(new Trait(entry.name, convertText, 1));\n          } else {\n            traits.push(new Trait(entry.name, \"\", 1));\n          }\n        }\n      });\n    }\n\n    return new Race(\n      name,\n      0,\n      fileName,\n      \"\",\n      \"\",\n      abilityScores,\n      age,\n      alignment,\n      size,\n      speed,\n      lang,\n      traits,\n      sources\n    );\n  }\n  return new Race();\n};\n\nexport const makeSubrace = (obj: any, race: Race, fileName: string): Subrace => {\n  const subname = obj.name;\n  const subtype = race.name + \"|\" + race.sources;\n\n  let subabilityScores = \"\";\n  if (obj.ability !== undefined)\n    obj.ability.forEach((scores: any) => {\n      for (const [key, value] of Object.entries(scores as Object)) {\n        if (typeof value == \"number\") {\n          if (value >= 0) race.abilityScores += key + \" +\" + value + \", \";\n          subabilityScores += key + \" \" + value + \", \";\n        }\n      }\n    });\n  subabilityScores = subabilityScores.trim();\n\n  let subtraits: Trait[] = [];\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((entry: any) => {\n      if (Array.isArray(entry.entries)) {\n        let convertText = \"\";\n        if (typeof entry.entries[0] == \"string\") {\n          convertText = replaceTags(entry.entries[0]);\n        }\n        subtraits.push(new Trait(entry.name, convertText, 1));\n      }\n    });\n  }\n\n  return new Subrace(subname, 0, subtype, fileName, subabilityScores, subtraits, race.sources);\n};\n\nexport const makeSpell = (obj: any, fileName: string): Spell => {\n  let classes = \"\";\n  if (obj.classes !== undefined && obj.classes.fromClassList !== undefined) {\n    obj.classes.fromClassList.forEach((classe: { name: string; source: string }) => {\n      classes += classe.name + \", \";\n    });\n  }\n\n  let school = \"\";\n  if (obj.school === \"V\") school = \"Evocation\";\n  else if (obj.school === \"D\") school = \"Divination\";\n  else if (obj.school === \"N\") school = \"Necromancy\";\n  else if (obj.school === \"T\") school = \"Transmutation\";\n  else if (obj.school === \"I\") school = \"Illusion\";\n  else if (obj.school === \"C\") school = \"Conjuration\";\n  else if (obj.school === \"A\") school = \"Abjuration\";\n  else if (obj.school === \"E\") school = \"Enchantment\";\n  else if (obj.school === \"P\") school = \"Psion\";\n  else if (obj.school === \"CR\") school = \"Chronomancy\";\n  else school = obj.school !== undefined && obj.school !== null ? obj.school.toString() : \"\";\n  school = school.trim();\n\n  let time = \"\";\n  if (obj.time !== undefined) {\n    time =\n      obj.time[0].number +\n      \" \" +\n      obj.time[0].unit +\n      \" \" +\n      (obj.time[0].condition ? obj.time[0].condition : \"\");\n  }\n  time = time.toLowerCase().trim();\n\n  let range = \"\";\n  if (obj.range !== undefined) {\n    if (obj.range.type === \"point\") {\n      range =\n        (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n        \" \" +\n        obj.range.distance.type;\n    } else if (obj.range.type === \"special\") {\n      range = obj.range.type;\n    } else {\n      range =\n        (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n        \" \" +\n        obj.range.distance.type +\n        \" \" +\n        obj.range.type;\n    }\n  }\n  range = range.trim();\n\n  let components = \"\";\n  if (obj.components !== undefined) {\n    components = (obj.components.v ? \"V, \" : \"\") + (obj.components.s ? \"S, \" : \"\");\n    if (obj.components.m !== undefined) {\n      if (obj.components.m.text !== undefined) {\n        components = \"M (\" + obj.components.m.text + \")\";\n      } else {\n        components = \"M (\" + obj.components.m + \")\";\n      }\n    }\n  }\n  components = components.trim();\n\n  let duration = \"\";\n  if (obj.duration !== undefined) {\n    let concentration = obj.duration[0].concentration;\n    duration =\n      (concentration ? \"Concentration, \" : \"\") +\n      obj.duration[0].type +\n      \" \" +\n      (obj.duration[0].duration !== undefined\n        ? obj.duration[0].duration.type + \" \" + obj.duration[0].duration.amount\n        : \"\");\n  }\n  duration = duration.trim();\n\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text, additional);\n  if (obj.entriesHigherLevel !== undefined && obj.entriesHigherLevel.entries !== undefined) {\n    obj.entriesHigherLevel.forEach((entry: any) => {\n      text += \"At Higher Levels: \";\n      if (Array.isArray(entry.entries)) {\n        entry.entries.forEach((textPart: string | any) => {\n          text += textPart + \"\\n\";\n        });\n      } else {\n        text += entry.entries + \"\\n\";\n      }\n    });\n  }\n  text = replaceTags(text);\n\n  return new Spell(\n    obj.name,\n    classes,\n    obj.source,\n    obj.level,\n    school,\n    time,\n    range,\n    components,\n    duration,\n    obj.meta && obj.meta.ritual ? 1 : 0,\n    text,\n    0,\n    fileName,\n    \"\"\n  );\n};\n\nexport const makeMonster = (obj: any): Monster => {\n  if (obj._copy === undefined) {\n    let type = \"\";\n    let subtype = \"\";\n    if (typeof obj.type === \"string\") {\n      type = obj.type;\n    } else {\n      type = obj.type.type;\n      if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n    }\n\n    let cr = 0;\n    if (obj.cr !== undefined) {\n      if (typeof obj.cr === \"string\") {\n        if (obj.cr === \"1/8\") {\n          cr = 0.125;\n        } else if (obj.cr === \"1/4\") {\n          cr = 0.25;\n        } else if (obj.cr === \"1/2\") {\n          cr = 0.5;\n        } else {\n          cr = +obj.cr;\n        }\n      } else {\n        if (obj.cr.cr === \"1/8\") {\n          cr = 0.125;\n        } else if (obj.cr.cr === \"1/4\") {\n          cr = 0.25;\n        } else if (obj.cr.cr === \"1/2\") {\n          cr = 0.5;\n        } else {\n          cr = +obj.cr.cr;\n        }\n      }\n    }\n\n    let alignment = \"\";\n    if (obj.alignment !== undefined) {\n      obj.alignment?.forEach((align: string) => {\n        if (align === \"L\") alignment += \"lawfull \";\n        if (align === \"N\") alignment += \"neutral \";\n        if (align === \"C\") alignment += \"chaotic \";\n        if (align === \"G\") alignment += \"good \";\n        if (align === \"E\") alignment += \"evil \";\n      });\n    }\n    alignment = alignment.trim();\n\n    let size = \"\";\n    if (obj.size !== undefined) {\n      if (obj.size === \"L\") size += \"large \";\n      else if (obj.size === \"H\") size += \"huge \";\n      else if (obj.size === \"T\") size += \"tiny \";\n      else if (obj.size === \"M\") size += \"medium \";\n      else if (obj.size === \"S\") size += \"small \";\n      else if (obj.size === \"G\") size += \"gargantuan \";\n    }\n    size = size.trim();\n\n    let ac = 0;\n    if (typeof obj.ac[0] === \"number\") {\n      ac = obj.ac[0];\n    } else {\n      ac = obj.ac[0].ac;\n    }\n\n    let speed = \"\";\n    for (const [key, value] of Object.entries(obj.speed)) {\n      if (typeof value === \"number\") {\n        speed += key + \" \" + value + \"ft, \";\n      } else if (typeof value === \"boolean\") {\n      } else {\n        speed += key + \" \";\n        for (const value2 of Object.entries(value as Object)) {\n          if (typeof value2[1] === \"number\") {\n            speed += value2[1] + \"ft, \";\n          } else if (typeof value2[1] === \"string\") {\n            speed += value2[1];\n          }\n        }\n        speed += \", \";\n      }\n    }\n    speed.trim();\n\n    let saves = \"\";\n    if (obj.save !== undefined)\n      for (const [key, value] of Object.entries(obj.save)) {\n        saves += key + \" \" + value + \", \";\n      }\n    saves.trim();\n\n    let skills = \"\";\n    if (obj.skill !== undefined)\n      for (const [key, value] of Object.entries(obj.skill)) {\n        skills += key + \" \" + value + \", \";\n      }\n    skills.trim();\n\n    let senses = \"\";\n    if (obj.senses !== undefined) {\n      if (Array.isArray(obj.senses)) {\n        obj.senses.forEach((sense: string) => {\n          senses += sense + \", \";\n        });\n      } else {\n        senses = obj.senses;\n      }\n    }\n    senses.trim();\n\n    let langs = \"\";\n    if (obj.languages !== undefined) {\n      if (Array.isArray(obj.languages)) {\n        obj.languages.forEach((lang: string) => {\n          langs += lang + \", \";\n        });\n      } else {\n        langs = obj.languages;\n      }\n    }\n    langs.trim();\n\n    let vulnerabilities = \"\";\n    obj.vulnerable &&\n      obj.vulnerable.forEach((vul: string) => {\n        vulnerabilities += vul + \", \";\n      });\n    vulnerabilities.trim();\n\n    let resistencies = \"\";\n    obj.resist &&\n      obj.resist.forEach((res: string) => {\n        resistencies += res + \", \";\n      });\n    resistencies.trim();\n\n    let immunities = \"\";\n    obj.immune &&\n      obj.immune.forEach((imu: string) => {\n        immunities += imu + \", \";\n      });\n    immunities.trim();\n\n    let conImmunities = \"\";\n    obj.conditionImmune &&\n      obj.conditionImmune.forEach((imu: string) => {\n        conImmunities += imu + \", \";\n      });\n    conImmunities.trim();\n\n    let traits = \"\";\n    obj.trait &&\n      obj.trait.forEach((tra: { name: string; entries: string[] }) => {\n        traits += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            traits += entry + \" \\n\";\n          });\n          traits += \"\\n\";\n        }\n      });\n    obj.spellcasting &&\n      obj.spellcasting.forEach((spellcast: any) => {\n        traits += spellcast.name + \" \\n\";\n        traits += spellcast.headerEntries + \" \\n\";\n        if (spellcast.spells !== undefined) {\n          for (const [key, value] of Object.entries(spellcast.spells)) {\n            const spellSlotInfo: any = value;\n            traits += key + \" level \";\n            if (spellSlotInfo.slots !== undefined) traits += `(${spellSlotInfo.slots} Slots)`;\n            traits += \": \";\n            if (\n              spellSlotInfo !== undefined &&\n              spellSlotInfo.spells !== undefined &&\n              Array.isArray(spellSlotInfo.spells)\n            ) {\n              // eslint-disable-next-line\n              spellSlotInfo.spells.forEach((spell: any) => {\n                if (typeof spell == \"string\") {\n                  traits += spell + \", \";\n                }\n              });\n            }\n            traits += \"\\n\";\n          }\n          traits += \"\\n\";\n        }\n        if (spellcast.will !== undefined) {\n          traits += \"At will: \";\n          // eslint-disable-next-line\n          spellcast.will.forEach((spell: any) => {\n            if (typeof spell == \"string\") {\n              traits += spell + \", \";\n            }\n          });\n          traits += \"\\n\";\n        }\n        if (spellcast.daily !== undefined) {\n          for (const [key, value] of Object.entries(spellcast.daily)) {\n            const spellTime: any = value;\n            switch (key) {\n              case \"1e\":\n                traits += \"1/day each: \";\n                break;\n              case \"2e\":\n                traits += \"2/day each: \";\n                break;\n              case \"3e\":\n                traits += \"3/day each: \";\n                break;\n              case \"1\":\n                traits += \"1/day: \";\n                break;\n              case \"2\":\n                traits += \"2/day: \";\n                break;\n              case \"3\":\n                traits += \"3/day: \";\n                break;\n            }\n            if (spellTime !== undefined && Array.isArray(value)) {\n              // eslint-disable-next-line\n              value.forEach((spell: any) => {\n                if (typeof spell == \"string\") {\n                  traits += spell + \", \";\n                }\n              });\n            }\n            traits += \"\\n\";\n          }\n          traits += \"\\n\";\n        }\n      });\n    traits = replaceTags(traits);\n\n    let actions = \"\";\n    obj.action &&\n      obj.action.forEach((tra: { name: string; entries: string[] }) => {\n        actions += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            actions += entry + \" \\n\";\n          });\n          actions += \" \\n\";\n        }\n      });\n    actions = replaceTags(actions);\n\n    let lactions = \"\";\n    obj.legendary &&\n      obj.legendary.forEach((tra: { name: string; entries: string[] }) => {\n        lactions += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            lactions += entry + \" \\n\";\n          });\n          lactions += \" \\n\";\n        }\n      });\n    lactions = replaceTags(lactions);\n\n    return new Monster(\n      0,\n      obj.name,\n      obj.source,\n      \"\",\n      \"\",\n      size,\n      type,\n      subtype,\n      alignment,\n      ac,\n      obj.hp.average,\n      speed,\n      cr,\n      obj.str,\n      obj.dex,\n      obj.con,\n      obj.int,\n      obj.wis,\n      obj.cha,\n      saves,\n      skills,\n      senses,\n      langs,\n      vulnerabilities,\n      resistencies,\n      immunities,\n      conImmunities,\n      traits,\n      actions,\n      lactions\n    );\n  }\n  return new Monster();\n};\n\nconst addAdditionalClassFeatures = (\n  additional: string[],\n  featureSets: FeatureSet[],\n  json: any,\n  sources: string\n) => {\n  additional.forEach((feature: any) => {\n    const featureParts: string[] = feature.split(\"|\");\n\n    let text = \"\";\n    let additional: string[] = [];\n    json.classFeature.forEach((objFeature: any) => {\n      if (\n        objFeature.name === featureParts[0] &&\n        objFeature.className === featureParts[1] &&\n        objFeature.source === sources\n      ) {\n        text = recursiveTextAdder(objFeature.entries, text, additional);\n      }\n    });\n    text = replaceTags(text);\n\n    if (text !== undefined && text !== null && text !== \"\") {\n      if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n      }\n      if (featureSets[+featureParts[3] - 1] === undefined) {\n        featureSets.push(\n          new FeatureSet(\n            +featureParts[3],\n            [new Feature(featureParts[0], text, \"\", 0, FeatureRest.none, 0, [], undefined)],\n            [],\n            []\n          )\n        );\n      } else {\n        featureSets[+featureParts[3] - 1].features.push(\n          new Feature(featureParts[0], text, \"\", 0, FeatureRest.none, 0, [], undefined)\n        );\n      }\n    }\n  });\n};\n\nexport const makeClass = (obj: any, json: any, fileName: string): Class => {\n  const name = obj.name;\n  const sources = obj.source;\n  const hitdice = obj.hd ? \"d\" + obj.hd.faces : \"\";\n\n  let proficiencies = \"\";\n  if (obj.startingProficiencies !== undefined) {\n    if (obj.startingProficiencies.armor !== undefined) {\n      proficiencies = \"Armor: \";\n      obj.startingProficiencies.armor?.forEach((armor: string) => {\n        proficiencies += armor + \", \";\n      });\n    }\n    if (obj.startingProficiencies.weapons !== undefined) {\n      proficiencies += \"\\nWeapons: \";\n      obj.startingProficiencies.weapons?.forEach((wpn: string) => {\n        proficiencies += wpn + \", \";\n      });\n    }\n    if (obj.startingProficiencies.skills !== undefined) {\n      proficiencies += \"\\nSkills: \";\n      obj.startingProficiencies.skills[0]?.choose.from.forEach((skill: string) => {\n        proficiencies += skill + \", \";\n      });\n    }\n    proficiencies = replaceTags(proficiencies);\n  }\n\n  let equipment = \"\";\n  if (obj.startingEquipment) {\n    obj.startingEquipment.default?.forEach((eqp: string) => {\n      equipment += eqp + \", \";\n    });\n    equipment = replaceTags(equipment);\n  }\n\n  let featureSets: FeatureSet[] = [];\n  if (obj.classTableGroups !== undefined) {\n    obj.classTableGroups.forEach((col: any) => {\n      if (col.title !== undefined && col.title.includes(\"Slots\")) {\n        col.rows.forEach((row: number[], rowIndex: number) => {\n          if (featureSets[rowIndex] === undefined) {\n            featureSets.push(new FeatureSet(rowIndex + 1, [], [], []));\n          }\n          featureSets[rowIndex].spellslots = row;\n        });\n      } else {\n        col.colLabels.forEach((label: string, colIndex: number) => {\n          let clearLabel = replaceTags(label).split(\"|\")[0].trim();\n          col.rows.forEach((row: any, rowIndex: number) => {\n            if (featureSets[rowIndex] === undefined) {\n              featureSets.push(new FeatureSet(rowIndex + 1, [], [], []));\n            }\n            let bonis: Boni[] | undefined = featureSets[rowIndex].bonis;\n            if (bonis === undefined) bonis = [];\n            if (typeof row[colIndex] == \"number\") {\n              bonis.push(new Boni(clearLabel, row[colIndex] + \"\", true, FeatureRest.none));\n            } else if (typeof row[colIndex] == \"string\") {\n              let text = replaceTags(row[colIndex]).split(\"|\")[0].trim();\n              bonis.push(new Boni(clearLabel, text, false, FeatureRest.none));\n            } else {\n              if (row[colIndex].value !== undefined) {\n                bonis.push(new Boni(clearLabel, row[colIndex].value + \"\", false, FeatureRest.none));\n              } else if (row[colIndex].toRoll !== undefined) {\n                let text = row[colIndex].toRoll[0].number + \"d\" + row[colIndex].toRoll[0].faces;\n                bonis.push(new Boni(clearLabel, text, false, FeatureRest.none));\n              }\n            }\n            featureSets[rowIndex].bonis = bonis;\n          });\n        });\n      }\n    });\n  }\n\n  if (obj.classFeatures !== undefined) {\n    obj.classFeatures.forEach((feature: any) => {\n      let featureRaw: string = \"\";\n      if (typeof feature === \"string\") {\n        featureRaw = feature;\n      }\n      const featureParts: string[] = featureRaw.split(\"|\");\n\n      let text = \"\";\n      let additional: string[] = [];\n      let selections: { count: number } = { count: 0 };\n      json.classFeature?.forEach((objFeature: any) => {\n        if (objFeature.name === featureParts[0] && objFeature.source === sources) {\n          const newText = recursiveTextAdder(objFeature.entries, text, additional, selections);\n          if (additional.length > 0)\n            addAdditionalClassFeatures(additional, featureSets, json, sources);\n          text = newText;\n        }\n      });\n      text = replaceTags(text);\n\n      if (text !== undefined && text !== null && text !== \"\") {\n        let isAbilityImprov: boolean = false;\n        if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n          isAbilityImprov = true;\n        }\n        let newFeature: Feature = new Feature(\n          featureParts[0],\n          text,\n          \"\",\n          0,\n          FeatureRest.none,\n          0,\n          [],\n          undefined\n        );\n        [...Array(selections.count)].forEach(() => {\n          newFeature.selections.push(featureParts[0]);\n        });\n        if (featureSets[+featureParts[3] - 1] === undefined) {\n          featureSets.push(\n            new FeatureSet(\n              +featureParts[3],\n              isAbilityImprov ? [] : [newFeature],\n              [],\n              [],\n              isAbilityImprov\n            )\n          );\n        } else {\n          if (!isAbilityImprov) featureSets[+featureParts[3] - 1].features.push(newFeature);\n          if (isAbilityImprov) featureSets[+featureParts[3] - 1].isAbilityImprov = isAbilityImprov;\n        }\n      }\n    });\n  }\n\n  return new Class(0, name, featureSets, hitdice, proficiencies, equipment, fileName, sources, \"\");\n};\n\nconst addAdditionalSubclassFeatures = (additional: string[], features: FeatureSet[], json: any) => {\n  additional.forEach((feature: any) => {\n    const featureParts: string[] = feature.split(\"|\");\n\n    let text = \"\";\n    json.subclassFeature.forEach((objFeature: any) => {\n      if (\n        objFeature.subclassShortName === featureParts[3] &&\n        objFeature.className === featureParts[1] &&\n        objFeature.name === featureParts[0]\n      ) {\n        text = recursiveTextAdder(objFeature.entries, text, additional);\n      }\n    });\n    text = replaceTags(text);\n\n    let filteredFeatures = features.filter((featureSet) => featureSet.level === +featureParts[5]);\n    if (filteredFeatures.length === 0) {\n      features.push(new FeatureSet(+featureParts[5], [], [], []));\n    }\n\n    if (text !== undefined && text !== null && text !== \"\") {\n      if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n        text = \"\";\n      } else\n        features\n          .filter((featureSet) => featureSet.level === +featureParts[5])\n          .forEach((feat) => {\n            feat.features.push(\n              new Feature(featureParts[0], text, \"\", 0, FeatureRest.none, 0, [], undefined)\n            );\n          });\n    }\n  });\n};\n\nexport const makeSubclass = (obj: any, json: any, classe: string, fileName: string): Subclass => {\n  let features: FeatureSet[] = [];\n  if (obj.subclassFeatures !== undefined) {\n    obj.subclassFeatures.forEach((feature: any) => {\n      let featureRaw: string = \"\";\n      if (typeof feature != \"string\") {\n        featureRaw = feature.classFeature || \"\";\n      } else {\n        featureRaw = feature;\n      }\n      const featureParts: string[] = featureRaw.split(\"|\");\n\n      let text = \"\";\n      let additional: string[] = [];\n      json.subclassFeature?.forEach((objFeature: any) => {\n        if (\n          objFeature.subclassShortName === featureParts[3] &&\n          objFeature.name === featureParts[0]\n        ) {\n          const newText = recursiveTextAdder(objFeature.entries, text, additional);\n          if (additional.length > 0) addAdditionalSubclassFeatures(additional, features, json);\n          text = newText;\n        }\n      });\n      text = replaceTags(text);\n\n      let filteredFeatures = features.filter((featureSet) => featureSet.level === +featureParts[5]);\n      if (filteredFeatures.length === 0) {\n        features.push(new FeatureSet(+featureParts[5], [], [], []));\n      }\n\n      if (text !== undefined && text !== null && text !== \"\") {\n        if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n          text = \"\";\n        }\n        features\n          .filter((featureSet) => featureSet.level === +featureParts[5])\n          .forEach((feat) => {\n            feat.features.push(\n              new Feature(featureParts[0], text, \"\", 0, FeatureRest.none, 0, [], undefined)\n            );\n          });\n      }\n    });\n  }\n  return new Subclass(0, obj.name, classe, features, fileName, obj.source);\n};\n\nconst recursiveTextAdder = (\n  entries: any,\n  text: string,\n  additional: string[],\n  selections?: { count: number },\n  seperator?: string\n): string => {\n  let newText: string = text;\n  if (entries !== undefined && entries !== null) {\n    if (typeof entries == \"string\" || typeof entries == \"number\") {\n      newText += entries + \"\";\n    } else if (entries.type !== undefined && entries.type === \"options\") {\n      if (entries.count !== undefined && selections !== undefined) selections.count = entries.count;\n    } else if (Array.isArray(entries)) {\n      entries.forEach((entry) => {\n        const text = recursiveTextAdder(entry, newText, additional, selections, seperator);\n        newText = text;\n        // additional.concat(additional);\n      });\n      newText += \"\\n\";\n    } else if (entries.entries !== undefined) {\n      if (entries.name !== undefined) newText += entries.name + \"\\n\";\n      const text = recursiveTextAdder(entries.entries, newText, additional, selections, seperator);\n      newText = text + \"\\r\\n\";\n      // newAdditional.concat(additional);\n    } else if (entries.items !== undefined) {\n      entries.items.forEach((item: any) => {\n        if (typeof item == \"string\" || typeof item == \"number\") {\n          newText += \"\\r\\n• \" + item;\n        } else if (item.type !== undefined && item.type === \"item\") {\n          newText += \"\\r\\n• \" + item.name + \": \" + item.entry;\n        }\n      });\n      newText += \"\\n\\n\";\n    } else if (entries.type !== undefined && entries.type === \"refClassFeature\") {\n      additional.push(entries.classFeature);\n    } else if (entries.type !== undefined && entries.type === \"refSubclassFeature\") {\n      additional.push(entries.subclassFeature);\n    } else if (entries.type !== undefined && entries.type === \"table\") {\n      newText += \"\\n ||tableStart||\";\n      if (entries.colLabels) {\n        newText += \"||\";\n        entries.colLabels.forEach((s: string) => (newText += s + \"|\"));\n        newText += \"|\";\n      }\n      if (entries.rows) {\n        newText += \"||\";\n        entries.rows.forEach((row: string[]) => {\n          newText += \"||\";\n          if (Array.isArray(row))\n            row.forEach((s: string) => {\n              newText += s + \"|\";\n            });\n          newText += \"|\";\n        });\n        newText += \"|\";\n      }\n      newText += \"||tableEnd||\\r\\n\";\n    } else if (typeof entries == \"object\") {\n      for (const value of Object.entries(entries)) {\n        if (value[0] !== undefined) {\n          const text = recursiveTextAdder(value[0], newText, additional, selections, seperator);\n          newText = text + (seperator || \": \");\n          // newAdditional.concat(additional);\n        }\n        if (value[1] !== undefined) {\n          const text = recursiveTextAdder(value[1], newText, additional, selections, seperator);\n          newText = text;\n          // newAdditional.concat(additional);\n        }\n        newText += \"\\r\\n\";\n      }\n    }\n  }\n  return newText;\n};\n\nexport const makeSelection = (\n  obj: any\n): {\n  entityName: string;\n  entityPrerequsite: string;\n  entityText: string;\n  level: number;\n} => {\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text, additional);\n  text = replaceTags(text);\n\n  let level: number = 0;\n  let prequisite: string = \"\";\n  if (\n    obj.prerequisite !== undefined &&\n    Array.isArray(obj.prerequisite) &&\n    obj.prerequisite.length > 0\n  ) {\n    for (const [key, value] of Object.entries(obj.prerequisite[0])) {\n      if (key === \"level\") {\n        for (const [key2, value2] of Object.entries(value as Object)) {\n          if (key2 === \"level\") {\n            level = value2;\n          } else {\n            prequisite += key2 + \": \" + value2.name + \", \";\n          }\n        }\n      } else if (typeof value === \"number\") {\n        prequisite += key + \": \" + value + \", \";\n      } else if (typeof value === \"string\") {\n        prequisite += key + \": \" + value + \", \";\n      } else if (Array.isArray(value)) {\n        prequisite += key + \": \";\n        // eslint-disable-next-line\n        value.forEach((val) => {\n          prequisite += val + \", \";\n        });\n      } else {\n        prequisite += key + \" \";\n        for (const [key2, value2] of Object.entries(value as Object)) {\n          if (typeof value2 === \"number\") {\n            prequisite += key2 + \": \" + value2 + \", \";\n          } else if (typeof value2 === \"string\") {\n            prequisite += key2 + \": \" + value2 + \", \";\n          } else {\n            prequisite += key + \" \";\n            for (const [key3, value3] of Object.entries(value as Object)) {\n              if (typeof value3 === \"number\") {\n                prequisite += key3 + \": \" + value3 + \", \";\n              } else if (typeof value3 === \"string\") {\n                prequisite += key3 + \": \" + value3 + \", \";\n              }\n            }\n            prequisite += \", \";\n          }\n        }\n        prequisite += \", \";\n      }\n    }\n  }\n\n  let name = obj.name;\n  name = obj.source !== undefined ? name + \" (\" + obj.source + \")\" : name;\n\n  return {\n    entityName: name,\n    entityPrerequsite: prequisite,\n    entityText: text,\n    level: level,\n  };\n};\n\nexport const makeFeat = (obj: any, json: any, fileName: string): Feat => {\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.ability !== undefined) text = recursiveTextAdder(obj.ability, text, additional);\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text, additional);\n  text = replaceTags(text);\n\n  let prequisite = \"\";\n  if (obj.prerequisite !== undefined)\n    prequisite = recursiveTextAdder(obj.prerequisite, prequisite, additional);\n  prequisite = replaceTags(prequisite);\n\n  return {\n    name: obj.name,\n    prerequisite: prequisite,\n    description: text,\n    sources: obj.source,\n  };\n};\n\nexport const makeBackground = (obj: any, json: any, fileName: string): Background => {\n  let proficiencies = \"\";\n  let text = \"\";\n  let additional: string[] = [];\n  if (obj.entries !== undefined) {\n    let entries = [...obj.entries];\n    if (entries[0].type === \"list\") {\n      proficiencies = recursiveTextAdder(entries[0], proficiencies, additional);\n      entries = entries.slice(1);\n    }\n    proficiencies = replaceTags(proficiencies);\n\n    text = recursiveTextAdder(entries, text, additional);\n    text = replaceTags(text);\n  }\n\n  return {\n    name: obj.name,\n    proficiencies: proficiencies,\n    description: text,\n    sources: obj.source,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\n\nconst OtherImportOptions = () => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools</SelectionTitle>\n        <ImportField modus={ImportModus.ETOOLS} />\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default OtherImportOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst LocationsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Locations?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"locations\", \"DnDTome_locations.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Locations?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"locations\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all locations`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"locations\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default LocationsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CampaignsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Campaigns?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"campaigns\", \"DnDTome_campaigns.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Campaigns?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"campaigns\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all campaigns`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"campaigns\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CampaignsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst NpcsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Npcs?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"npcs\", \"DnDTome_npcs.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Npcs?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"npcs\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all npcs`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"npcs\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default NpcsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst QuestsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Quests?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"quests\", \"DnDTome_quests.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Quests?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"quests\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all quests`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"quests\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default QuestsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EventsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Events?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"events\", \"DnDTome_events.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Events?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"events\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all events`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"events\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EventsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst WorldsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Worlds?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"worlds\", \"DnDTome_worlds.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Worlds?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"worlds\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all worlds`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"worlds\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default WorldsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GroupsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Groups?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"groups\", \"DnDTome_groups.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Groups?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"groups\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all groups`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"groups\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GroupsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RandomTablesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all random Tables?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"randomTables\", \"DnDTome_randomTables.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} random Tables?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"randomTables\")} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all random Tables`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"randomTables\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RandomTablesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst FeatsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"feats\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Feats?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"feats\", \"DnDTome_feats.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Feats?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"feats\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Feats by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"feats\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all feats`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"feats\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default FeatsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst BackgroundsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"backgrounds\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Backgrounds?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"backgrounds\", \"DnDTome_backgrounds.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Backgrounds?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"backgrounds\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Backgrounds by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteByAttr(\"backgrounds\", source)}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all backgrounds`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"backgrounds\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default BackgroundsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll, exportAllLeft, exportAllRight } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveCount,\n  reciveAllPromise,\n  deleteAllByAttrs,\n  deleteDatabase,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\nimport { isChar } from \"../../data/chars/Char\";\nimport { isClass } from \"../../data/classes/Class\";\nimport { isSubclass } from \"../../data/classes/Subclass\";\nimport { isEncounter } from \"../../data/encounter/Encounter\";\nimport { isGear } from \"../../data/Gear\";\nimport { isItem } from \"../../data/Item\";\nimport { isMonster } from \"../../data/Monster\";\nimport { isRace } from \"../../data/races/Race\";\nimport { isSubrace } from \"../../data/races/Subrace\";\nimport { isSpell } from \"../../data/Spell\";\nimport { isCampaign } from \"../../data/campaign/Campaign\";\nimport { isNpc } from \"../../data/campaign/Npc\";\nimport { isQuest } from \"../../data/campaign/Quest\";\nimport { isLocation } from \"../../data/world/Location\";\nimport { isGroup } from \"../../data/campaign/Group\";\nimport { isWorld } from \"../../data/world/World\";\nimport { isEvent } from \"../../data/world/Event\";\n\nimport { faExclamationTriangle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport ClassTile from \"../entities/classes/ClassTile\";\nimport EncounterTile from \"../entities/encounters/EncounterTile\";\nimport CharTile from \"../entities/chars/CharTile\";\nimport GearTile from \"../entities/gear/GearTile\";\nimport ItemTile from \"../entities/items/ItemTile\";\nimport MonsterTile from \"../entities/monsters/MonsterTile\";\nimport RaceTile from \"../entities/races/RaceTile\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\nimport SelectionsOptions from \"./SelectionsOptions\";\nimport OtherImportOptions from \"./OtherImportOptions\";\nimport CampaignTile from \"../entities/campaigns/CampaignTile\";\nimport QuestTile from \"../entities/quests/QuestTile\";\nimport LocationTile from \"../entities/locations/LocationTile\";\nimport NpcTile from \"../entities/npcs/NpcTile\";\nimport LocationsOptions from \"./LocationsOptions\";\nimport CampaignsOptions from \"./CampaignsOptions\";\nimport NpcsOptions from \"./NpcsOptions\";\nimport QuestsOptions from \"./QuestsOptions\";\nimport EventTile from \"../entities/events/EventTile\";\nimport WorldTile from \"../entities/worlds/WorldTile\";\nimport EventsOptions from \"./EventsOptions\";\nimport WorldsOptions from \"./WorldsOptions\";\nimport GroupTile from \"../entities/groups/GroupTile\";\nimport GroupsOptions from \"./GroupsOptions\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport RandomTableTile from \"../entities/random_tables/RandomTableTile\";\nimport { isRandomTable } from \"../../data/RandomTable\";\nimport RandomTablesOptions from \"./RandomTablesOptions\";\nimport { Dialog } from \"../general_elements/Dialog\";\nimport FeatsOptions from \"./FeatsOptions\";\nimport BackgroundsOptions from \"./BackgrounsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [showResetDialog, setResetDialog] = useState<boolean>(false);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [campaignAmount, setCampaignAmount] = useState<number>(0);\n  const [questAmount, setQuestAmount] = useState<number>(0);\n  const [locationAmount, setLocationAmount] = useState<number>(0);\n  const [worldAmount, setWorldAmount] = useState<number>(0);\n  const [eventAmount, setEventAmount] = useState<number>(0);\n  const [npcAmount, setNpcAmount] = useState<number>(0);\n  const [groupAmount, setGroupAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n  const [randomTableAmount, setRandomTableAmount] = useState<number>(0);\n  const [featAmount, setFeatAmount] = useState<number>(0);\n  const [backgroundAmount, setBackgroundAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"campaigns\", (result: number) => {\n        setCampaignAmount(result);\n      });\n      reciveCount(\"quests\", (result: number) => {\n        setQuestAmount(result);\n      });\n      reciveCount(\"worlds\", (result: number) => {\n        setWorldAmount(result);\n      });\n      reciveCount(\"events\", (result: number) => {\n        setEventAmount(result);\n      });\n      reciveCount(\"locations\", (result: number) => {\n        setLocationAmount(result);\n      });\n      reciveCount(\"npcs\", (result: number) => {\n        setNpcAmount(result);\n      });\n      reciveCount(\"groups\", (result: number) => {\n        setGroupAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveCount(\"randomTables\", (result: number) => {\n        setRandomTableAmount(result);\n      });\n      reciveCount(\"feats\", (result: number) => {\n        setFeatAmount(result);\n      });\n      reciveCount(\"backgrounds\", (result: number) => {\n        setBackgroundAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const triggerDeleteByAttr = (tableName: string, attrs: string[]) => {\n    deleteAllByAttrs(tableName, \"sources\", attrs);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isCampaign(entity)) {\n      return <CampaignTile key={index} campaign={entity} />;\n    } else if (isQuest(entity)) {\n      return <QuestTile key={index} quest={entity} />;\n    } else if (isLocation(entity)) {\n      return <LocationTile key={index} location={entity} />;\n    } else if (isNpc(entity)) {\n      return <NpcTile key={index} npc={entity} />;\n    } else if (isWorld(entity)) {\n      return <WorldTile key={index} world={entity} />;\n    } else if (isGroup(entity)) {\n      return <GroupTile key={index} group={entity} />;\n    } else if (isEvent(entity)) {\n      return <EventTile key={index} event={entity} />;\n    } else if (isRandomTable(entity)) {\n      return <RandomTableTile key={index} randomTable={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  const resetDatabase = () => {\n    deleteDatabase();\n    isReload(true);\n  };\n\n  return (\n    <>\n      {showResetDialog && (\n        <Dialog\n          message={`Reset Database?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            resetDatabase();\n            setResetDialog(false);\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setResetDialog(false);\n          }}\n        />\n      )}\n      <OptionWrapper>\n        <OptionSection>\n          <SelectionTitle>Import</SelectionTitle>\n          <ImportField modus={ImportModus.NORMAL} />\n        </OptionSection>\n        <OptionSection>\n          <SelectionTitle>Import Images</SelectionTitle>\n          <ImportField modus={ImportModus.IMAGE} />\n        </OptionSection>\n        <OptionSection>\n          <SelectionTitle>Export All</SelectionTitle>\n          <SectionRow>\n            <SectionText>Export all as one file?</SectionText>\n            <IconButton icon={faFileExport} onClick={() => exportAll(\"DnDTome_all.json\")} />\n          </SectionRow>\n        </OptionSection>\n        <OptionSection>\n          <SelectionTitle>Export Campaigns, Worlds etc</SelectionTitle>\n          <SectionRow>\n            <SectionText>Export Campaigns, Worlds etc as one file?</SectionText>\n            <IconButton\n              icon={faFileExport}\n              onClick={() => exportAllLeft(\"DnDTome_all_campagin.json\")}\n            />\n          </SectionRow>\n        </OptionSection>\n        <OptionSection>\n          <SelectionTitle>Export Spells, Monsters etc</SelectionTitle>\n          <SectionRow>\n            <SectionText>Export Spells, Monsters etc as one file?</SectionText>\n            <IconButton\n              icon={faFileExport}\n              onClick={() => exportAllRight(\"DnDTome_all_entities.json\")}\n            />\n          </SectionRow>\n        </OptionSection>\n        <OptionSection>\n          <SelectionTitle>Reset Database</SelectionTitle>\n          <IconButton icon={faTrashAlt} onClick={() => setResetDialog(true)} />\n        </OptionSection>\n      </OptionWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Feats\",\n          \"Backgrounds\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Selections\",\n          \"Chars\",\n          \"Encounters\",\n          \"Campaigns\",\n          \"Quests\",\n          \"Groups\",\n          \"Npc's\",\n          \"Worlds\",\n          \"Events\",\n          \"Locations\",\n          \"Random Table\",\n          \"Other Imports\",\n          \"Discord\",\n          \"Receive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions\n          amount={gearAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions\n          amount={itemAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Feats\" && (\n        <FeatsOptions\n          amount={featAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Backgrounds\" && (\n        <BackgroundsOptions\n          amount={backgroundAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions\n          amount={monsterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions\n          amounts={[raceAmount, subraceAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Selections\" && (\n        <SelectionsOptions\n          amount={selectionAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          isReload={isReload}\n        />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions amount={encounterAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Campaigns\" && (\n        <CampaignsOptions amount={campaignAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Quests\" && (\n        <QuestsOptions amount={questAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Groups\" && (\n        <GroupsOptions amount={groupAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Npc's\" && (\n        <NpcsOptions amount={npcAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Worlds\" && (\n        <WorldsOptions amount={worldAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Events\" && (\n        <EventsOptions amount={eventAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Locations\" && (\n        <LocationsOptions amount={locationAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Random Table\" && (\n        <RandomTablesOptions amount={randomTableAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Other Imports\" && <OtherImportOptions />}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1;\n  min-width: max-content;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n"],"sourceRoot":""}