{"version":3,"sources":["components/form_elements/NumberField.tsx","components/form_elements/ImageField.tsx","data/chars/ClassSet.tsx","components/form_elements/SingleSelectField.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","services/PeerIdService.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/FileField.tsx","components/general_elements/Dialog.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","../node_modules/peerjs/dist sync","hooks/DexieHooks.tsx","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","data/encounter/Player.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","data/encounter/Slot.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx"],"names":["NumberField","value","max","step","label","icon","transform","onChange","Field","LabelText","Icon","Input","type","e","target","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","ImageImportField","onFinished","Files","isMulti","accept","faFileImport","file","fileList","console","log","files","Array","from","reader","FileReader","onload","event","result","readAsDataURL","changeFile","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","SingleSelectField","options","style","handleChange","option","StyledSelect","classNamePrefix","Select","buttons","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","abilityImprovs","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","generateBrokerId","min","password","characters","i","length","Math","floor","random","AutoStringField","optionTable","filters","useState","term","setTerm","optionsTable","allOptions","setOptions","filteredOptions","setFilteredOptions","useEffect","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","Promise","all","results","newList","entities","entity","reciveAllFiltered","data","onSearch","searchTerm","time","newOptions","filter","toLowerCase","startsWith","sort","b","abs","slice","timeEnd","onKeyDown","key","applyTerm","Options","map","opt","index","Option","onClick","sources","FileField","multiple","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","DamageDialog","damageText","damageClick","healText","healClick","dmg","setDmg","float","BackButton","action","Back","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","useItemByMultiAttr","obj","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","send","JSON","stringify","errorData","newData","parse","connect","minWidth","faExclamationCircle","TinyNumberField","showMax","Max","span","Board","img","players","showName","dimension","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","fogSize","setFogSize","makeDrag","makeDrop","toggleFog","cord","newBoard","width","newFog","slot","makeFog","f","BoardWrapper","BoardBar","zoom","size","zIndex","toggle","faFill","BoardContainer","LayerWrapper","Grid","PlayerSlot","updatePlayers","MapLayer","src","drag","dragOver","preventDefault","defineSize","isMonster","GridCell","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isVisible","Empty","Image","isDead","isCurrent","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","split","Player","tempHp","initBonus","tag","isEnemy","isNpc","crExpTable","cr","exp","expTable","easy","medium","hard","deadly","calcDifficulty","calcExp","crExp","enemyExp","enemies","enemy","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","removeEnemy","newEnemyList","splice","addNewEnemy","onChangeEnemyField","field","newEnemy","oldEnemy","onChangeEnemy","found","recivePromiseByMultiAttribute","classSet","monster","char","removePlayer","newPlayerList","addNewPlayer","onChangePlayerField","newPlayer","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","FieldGroup","base64","mapBase64","IconButton","faTrash","PropWrapper","Prop","PropTitle","CharView","Container","newMonster","TextButton","faPlus","backgroundColorLink","Slot","EncounterView","dmView","history","useHistory","damageDialog","setDamageDialog","damageDialogIndex","setDamageDialogIndex","setPlayers","initTracker","showInitTracker","newField","finishEncounter","newEnemies","isPlaying","currentInit","roundCounter","getMap","toggleVisibility","show","window","ScrollWrapper","Name","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","localeCompare","Row","current","PropField","MainLink","PropRight","DamageButton","faSkullCrossbones","faHandHoldingHeart","faEye","MoveButton","faArrowAltCircleRight","faArrowAltCircleLeft","board","button","disabled","PlayerImage","css","tr","td","TopBar","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove"],"mappings":"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","file":"static/js/5.6d638e3a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FileField from \"./FileField\";\n\ninterface $Props {\n  label?: string;\n  onFinished: (base64: string) => void;\n}\n\nconst ImageImportField = ({ label, onFinished }: $Props) => {\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        onFinished(event.target.result);\n      };\n      reader.readAsDataURL(files[0]);\n      console.log(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label={label || \"\"}\n          isMulti={false}\n          accept={\"image/png, image/jpeg\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n    </>\n  );\n};\n\nexport default ImageImportField;\n\nconst Files = styled.div`\n  flex: 1 1 auto;\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  style?: any;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, style, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field style={style}>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  abilityImprovs: { origin: string; level: number; s1: string; s2: string; feat: string }[];\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    abilityImprovs?: { origin: string; level: number; s1: string; s2: string; feat: string }[],\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.abilityImprovs = abilityImprovs || [];\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    (picCheck || picBase64Check) &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable?: string | string[];\n  options?: IEntity[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  options,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [term, setTerm] = useState<string>(value);\n  const [optionsTable] = useState<string | string[]>(optionTable !== undefined ? optionTable : []);\n  const [allOptions, setOptions] = useState<IEntity[]>(options !== undefined ? options : []);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  useEffect(() => {\n    setTerm(value);\n  }, [value]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[] | undefined>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      let results = await Promise.all(itemList);\n\n      let newList: IEntity[] = [];\n      results.forEach((entities: IEntity[] | undefined) => {\n        if (entities !== undefined) entities.forEach((entity: IEntity) => newList.push(entity));\n      });\n      setOptions(newList);\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionTable !== undefined) {\n      if (typeof optionsTable === \"string\") {\n        reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n          setOptions(data);\n        });\n      }\n      if (optionsTable instanceof Array && optionsTable.length > 0) {\n        findAllItems(optionsTable);\n      }\n    }\n  }, [optionTable, optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      console.time(\"search\");\n      setTerm(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = allOptions\n          .filter((option) => option.name.toLowerCase().startsWith(searchTerm.toLowerCase()))\n          .sort(\n            (a, b) =>\n              Math.abs(a.name.length - searchTerm.length) -\n              Math.abs(b.name.length - searchTerm.length)\n          )\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n      console.timeEnd(\"search\");\n    },\n    [allOptions]\n  );\n\n  const applyTerm = (e: any) => {\n    if (e.key === \"Enter\") {\n      onChange(term);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={term}\n        onChange={(e) => onSearch(e.target.value)}\n        onKeyDown={(e) => applyTerm(e)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option\n                key={index}\n                onClick={(e) => {\n                  setTerm(opt.name + \"|\" + opt.sources);\n                  onChange(opt.name + \"|\" + opt.sources);\n                }}\n              >\n                {opt.name}|{opt.sources}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 257;","import Dexie, { DexieError } from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n\nexport const useItemByMultiAttr = <T, U>(table: Dexie.Table<T, U>, obj: Object) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(obj)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, obj, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          var newData = JSON.parse(data);\n          // if (encounter !== newData && encounter?.name === newData.name) {\n          if (encounter !== data) {\n            onEdit(newData);\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        var newData = JSON.parse(data);\n        // if (encounter !== newData && encounter?.name === newData.name) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(newData);\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\", height: \"30px\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Slot from \"../../../data/encounter/Slot\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport SingleSelectField from \"../../form_elements/SingleSelectField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: Slot[];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: Slot[]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<Slot[]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n  const [fogSize, setFogSize] = useState<string>(\"dot\");\n\n  useEffect(() => {\n    setFogBoard(fogBoard);\n  }, [fogBoard]);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number) => {\n      if (fog) {\n        let newBoard = [...currentFogBoard];\n        if (fogSize === \"cross\") {\n          if (cord - dimension.width >= 0)\n            newBoard[cord - dimension.width].fog = !newBoard[cord - dimension.width].fog;\n          if ((cord - 1) % dimension.width < cord % dimension.width && cord - 1 >= 0)\n            newBoard[cord - 1].fog = !newBoard[cord - 1].fog;\n          newBoard[cord].fog = !newBoard[cord].fog;\n          if ((cord + 1) % dimension.width > cord % dimension.width)\n            newBoard[cord + 1].fog = !newBoard[cord + 1].fog;\n          if (cord + dimension.width < dimension.width * dimension.height)\n            newBoard[cord + dimension.width].fog = !newBoard[cord + dimension.width].fog;\n        } else if (fogSize === \"quarter\") {\n          if (\n            cord - dimension.width - 1 >= 0 &&\n            (cord - dimension.width - 1) % dimension.width < cord % dimension.width\n          )\n            newBoard[cord - dimension.width - 1].fog = !newBoard[cord - dimension.width - 1].fog;\n          if (cord - dimension.width >= 0)\n            newBoard[cord - dimension.width].fog = !newBoard[cord - dimension.width].fog;\n          if (\n            cord - dimension.width + 1 >= 0 &&\n            (cord - dimension.width + 1) % dimension.width > cord % dimension.width\n          )\n            newBoard[cord - dimension.width + 1].fog = !newBoard[cord - dimension.width + 1].fog;\n          if ((cord - 1) % dimension.width < cord % dimension.width && cord - 1 >= 0)\n            newBoard[cord - 1].fog = !newBoard[cord - 1].fog;\n          newBoard[cord].fog = !newBoard[cord].fog;\n          if ((cord + 1) % dimension.width > cord % dimension.width)\n            newBoard[cord + 1].fog = !newBoard[cord + 1].fog;\n          if (\n            cord + dimension.width - 1 < dimension.width * dimension.height &&\n            (cord + dimension.width - 1) % dimension.width < cord % dimension.width\n          )\n            newBoard[cord + dimension.width - 1].fog = !newBoard[cord + dimension.width - 1].fog;\n          if (cord + dimension.width < dimension.width * dimension.height)\n            newBoard[cord + dimension.width].fog = !newBoard[cord + dimension.width].fog;\n          if (\n            cord + dimension.width + 1 < dimension.width * dimension.height + 1 &&\n            (cord + dimension.width + 1) % dimension.width > cord % dimension.width\n          )\n            newBoard[cord + dimension.width + 1].fog = !newBoard[cord + dimension.width + 1].fog;\n        } else if (fogSize === \"full\") {\n          const newFog = !newBoard[cord].fog;\n          [...currentFogBoard].forEach((slot: Slot, index) => {\n            newBoard[index].fog = newFog;\n          });\n        } else {\n          newBoard[cord].fog = !newBoard[cord].fog;\n        }\n        setFogBoard(newBoard);\n      }\n    },\n    [setFogBoard, fog, currentFogBoard, fogSize, dimension]\n  );\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(currentFogBoard);\n    }\n  }, [fog, currentFogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <SingleSelectField\n            options={[\n              { value: \"dot\", label: \"dot\" },\n              { value: \"cross\", label: \"cross\" },\n              { value: \"quarter\", label: \"quarder\" },\n              { value: \"full\", label: \"full\" },\n            ]}\n            style={{ zIndex: \"600\" }}\n            value={fogSize}\n            label={\"Fog Tool\"}\n            onChange={setFogSize}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <LayerWrapper zoom={dimension.zoom / 100}>\n          <Grid>\n            {fogBoard?.map((slot: Slot, i: number) => {\n              return (\n                <PlayerSlot\n                  isHost={isHost}\n                  key={i}\n                  cord={i}\n                  showName={showName}\n                  players={players}\n                  size={dimension.size}\n                  zoom={dimension.zoom / 100}\n                  fog={slot.fog}\n                  makeDrop={makeDrop}\n                  makeDrag={makeDrag}\n                  toggleFog={toggleFog}\n                  updatePlayers={onChangePlayers}\n                  currentPlayerNumber={currentPlayerNumber}\n                />\n              );\n            })}\n          </Grid>\n          <MapLayer zoom={dimension.zoom / 100} src={img} />\n        </LayerWrapper>\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number;\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <GridCell\n      size={size * zoom}\n      fog={fog}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players.map((playerIcon: Player, index: number) => {\n        if ((!playerIcon.isVisible || isHost) && playerIcon.cord === cord)\n          return (\n            <Image\n              key={\"icon\" + index}\n              index={index}\n              drag={drag}\n              player={playerIcon}\n              isHost={isHost}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </GridCell>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  padding: 5px;\n  height: calc(100vh - 140px);\n  width: calc(100vw - 110px);\n\n  @media (max-width: 576px) {\n    width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\nconst LayerWrapper = styled.div<ZoomProp>`\n  width: calc(100px * ${({ zoom }) => zoom * 10});\n  position: absolute;\n  left: 0;\n  right: 0;\n`;\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  max-height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-between;\n`;\n\nconst Grid = styled.div`\n  z-index: 100;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: flex-start;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\nconst GridCell = styled.div<SizeProp>`\n  flex: 1 1;\n  min-width: calc(${({ size }) => size}px + 1px);\n  max-width: calc(${({ size }) => size}px + 1px);\n  min-height: calc(${({ size }) => size}px + 1px);\n  max-height: calc(${({ size }) => size}px + 1px);\n  margin-left: -1px;\n  margin-top: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: relative;\n  box-sizing: border-box;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      zIndex: 200,\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name.split(\"|\")[0]} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isEnemy: boolean;\n  isMonster: boolean;\n  isNpc: boolean;\n  isVisible: boolean;\n  level: number;\n  cord: number;\n  pic: string;\n  size: string;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isEnemy?: boolean,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    isVisible?: boolean,\n    level?: number,\n    cord?: number,\n    pic?: string,\n    size?: string\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isEnemy = isEnemy || false;\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.isVisible = isVisible || true;\n    this.level = level || 0;\n    this.cord = cord || 0;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck &&\n    picCheck &&\n    sizeCheck\n  );\n}\n","import Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  console.time(\"calcDifficulty\");\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      if (player.isMonster) {\n        crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n          if (player.level === crExp.cr) {\n            calcExp.easy += crExp.exp;\n            calcExp.medium += crExp.exp;\n            calcExp.hard += crExp.exp;\n            calcExp.deadly += crExp.exp;\n          }\n        });\n      } else {\n        calcExp.easy += expTable[player.level].easy;\n        calcExp.medium += expTable[player.level].medium;\n        calcExp.hard += expTable[player.level].hard;\n        calcExp.deadly += expTable[player.level].deadly;\n      }\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  console.timeEnd(\"calcDifficulty\");\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport {\n  reciveAllFilteredPromise,\n  recivePromiseByMultiAttribute,\n} from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport ImageImportField from \"../../../form_elements/ImageField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n  const [allOptions, setOptions] = useState<IEntity[]>([]);\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const findAllItems = useCallback(async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[] | undefined>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllFilteredPromise(table, []));\n    });\n    let results = await Promise.all(itemList);\n\n    let newList: IEntity[] = [];\n    results.forEach((entities: IEntity[] | undefined) => {\n      if (entities !== undefined) entities.forEach((entity: IEntity) => newList.push(entity));\n    });\n    setOptions(newList);\n  }, []);\n\n  useEffect(() => {\n    findAllItems([\"monsters\", \"chars\", \"npcs\"]);\n  }, [findAllItems]);\n\n  const removeEnemy = useCallback(\n    (i: number) => {\n      let newEnemyList = [...encounter.enemies];\n      newEnemyList.splice(i, 1);\n      onEdit({ ...encounter, enemies: newEnemyList });\n    },\n    [encounter, onEdit]\n  );\n  const addNewEnemy = useCallback(() => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  }, [encounter, onEdit]);\n  const onChangeEnemyField = useCallback(\n    (field: string, newEnemy: string | number, oldEnemy: Player, i: number) => {\n      let enemies = [...encounter.enemies];\n      enemies[i] = { ...oldEnemy, [field]: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    },\n    [encounter, onEdit]\n  );\n  const onChangeEnemy = useCallback(\n    async (newEnemy: string, oldEnemy: Player, i: number) => {\n      let enemies = [...encounter.enemies];\n\n      let found: any[] = [];\n      let [name, sources] = newEnemy.split(\"|\");\n      found.push(recivePromiseByMultiAttribute(\"monsters\", { name: name, sources: sources }));\n      found.push(recivePromiseByMultiAttribute(\"npcs\", { name: name, sources: sources }));\n      found.push(recivePromiseByMultiAttribute(\"chars\", { name: name, sources: sources }));\n      let results = await Promise.all(found);\n      results = results.filter((e) => e !== undefined);\n\n      if (results[0] && isMonster(results[0])) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: results[0].cr,\n          pic: results[0].pic,\n          size: results[0].size,\n          cord: 0,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else if (results[0] && isChar(results[0])) {\n        let level = 0;\n        results[0].classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: level,\n          pic: results[0].pic,\n          size: \"medium\",\n          cord: 0,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else if (results[0] && isNpc(results[0])) {\n        if (results[0].monster !== undefined) {\n          enemies[i] = {\n            ...oldEnemy,\n            name: newEnemy,\n            hp: results[0].monster.hp,\n            currentHp: results[0].monster.hp,\n            ac: results[0].monster.ac,\n            isEnemy: true,\n            isMonster: true,\n            isNpc: true,\n            isVisible: true,\n            level: results[0].monster.cr,\n            pic: results[0].monster.pic,\n            size: results[0].monster.size,\n            cord: 0,\n          };\n        } else if (results[0].char !== undefined) {\n          let level = 0;\n          results[0].char.classes.forEach((classSet: ClassSet) => {\n            level += classSet.level;\n          });\n          enemies[i] = {\n            ...oldEnemy,\n            name: newEnemy,\n            hp: results[0].char.hp,\n            currentHp: results[0].char.hp,\n            ac: results[0].char.ac,\n            isEnemy: true,\n            isMonster: false,\n            isNpc: true,\n            isVisible: true,\n            level: level,\n            pic: results[0].char.pic,\n            size: \"medium\",\n            cord: 0,\n          };\n        } else {\n          enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n        }\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const removePlayer = useCallback(\n    (i: number) => {\n      let newPlayerList = [...encounter.players];\n      newPlayerList.splice(i, 1);\n      onEdit({ ...encounter, players: newPlayerList });\n    },\n    [encounter, onEdit]\n  );\n  const addNewPlayer = useCallback(() => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  }, [encounter, onEdit]);\n  const onChangePlayerField = useCallback(\n    (field: string, newPlayer: string | number, oldPlayer: Player, i: number) => {\n      let players = [...encounter.players];\n      players[i] = { ...oldPlayer, [field]: newPlayer };\n      onEdit({ ...encounter, players: players });\n    },\n    [encounter, onEdit]\n  );\n  const onChangePlayer = useCallback(\n    async (newPlayer: string, oldPlayer: Player, i: number) => {\n      let players = [...encounter.players];\n\n      let found: any[] = [];\n      let [name, sources] = newPlayer.split(\"|\");\n      found.push(recivePromiseByMultiAttribute(\"monsters\", { name: name, sources: sources }));\n      found.push(recivePromiseByMultiAttribute(\"npcs\", { name: name, sources: sources }));\n      found.push(recivePromiseByMultiAttribute(\"chars\", { name: name, sources: sources }));\n      let results = await Promise.all(found);\n      results = results.filter((e) => e !== undefined);\n\n      if (results[0] && isMonster(results[0])) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: false,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: results[0].cr,\n          pic: results[0].pic,\n          size: results[0].size,\n          cord: 0,\n        };\n        onEdit({ ...encounter, players: players });\n      } else if (results[0] && isChar(results[0])) {\n        let level = 0;\n        results[0].classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: false,\n          isMonster: false,\n          isNpc: false,\n          isVisible: true,\n          level: level,\n          pic: results[0].pic,\n          size: \"medium\",\n          cord: 0,\n        };\n        onEdit({ ...encounter, players: players });\n      } else if (results[0] && isNpc(results[0])) {\n        if (results[0].monster !== undefined) {\n          players[i] = {\n            ...oldPlayer,\n            name: newPlayer,\n            hp: results[0].monster.hp,\n            currentHp: results[0].monster.hp,\n            ac: results[0].monster.ac,\n            isEnemy: false,\n            isMonster: true,\n            isNpc: true,\n            isVisible: true,\n            level: results[0].monster.cr,\n            pic: results[0].monster.pic,\n            size: results[0].monster.size,\n            cord: 0,\n          };\n        } else if (results[0].char !== undefined) {\n          let level = 0;\n          results[0].char.classes.forEach((classSet: ClassSet) => {\n            level += classSet.level;\n          });\n          players[i] = {\n            ...oldPlayer,\n            name: newPlayer,\n            hp: results[0].char.hp,\n            currentHp: results[0].char.hp,\n            ac: results[0].char.ac,\n            isMonster: false,\n            isEnemy: false,\n            isNpc: true,\n            isVisible: true,\n            level: level,\n            pic: results[0].char.pic,\n            size: \"medium\",\n            cord: 0,\n          };\n        } else {\n          players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n        }\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <StringField\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n        <FieldGroup>\n          <ImageImportField\n            label=\"Map\"\n            onFinished={(base64) => onEdit({ ...encounter, mapBase64: base64 })}\n          />\n          <IconButton icon={faTrash} onClick={() => onEdit({ ...encounter, mapBase64: \"\" })} />\n        </FieldGroup>\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {allOptions.length > 0 &&\n          encounter.enemies.map((enemy: Player, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  // optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                  options={allOptions}\n                  value={enemy.name}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.currentHp}\n                  label=\"Current Hp\"\n                  onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.hp}\n                  label=\"Hp\"\n                  onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.ac}\n                  label=\"AC\"\n                  onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.initBonus}\n                  label=\"Init Bonus\"\n                  onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.level}\n                  label=\"Cr\"\n                  onChange={(level) => onChangeEnemyField(\"level\", level, enemy, index)}\n                />\n                <StringField\n                  value={enemy.pic}\n                  label=\"Pic\"\n                  onChange={(pic) => onChangeEnemyField(\"pic\", pic, enemy, index)}\n                />\n                <SingleSelectField\n                  options={[\n                    { value: \"tiny\", label: \"tiny\" },\n                    { value: \"small\", label: \"small\" },\n                    { value: \"medium\", label: \"medium\" },\n                    { value: \"large\", label: \"large\" },\n                    { value: \"huge\", label: \"huge\" },\n                    { value: \"gargantuan\", label: \"gargantuan\" },\n                  ]}\n                  value={enemy.size}\n                  label={\"Size\"}\n                  onChange={(size) => onChangePlayerField(\"size\", size, enemy, index)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n              </Container>\n            );\n          })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {allOptions.length > 0 &&\n          encounter.players.map((player: Player, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  // optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                  options={allOptions}\n                  value={player.name}\n                  label=\"Character\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n                />\n                <NumberField\n                  value={player.currentHp}\n                  label=\"Current Hp\"\n                  onChange={(currentHp) =>\n                    onChangePlayerField(\"currentHp\", currentHp, player, index)\n                  }\n                />\n                <NumberField\n                  value={player.hp}\n                  label=\"Hp\"\n                  onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n                />\n                <NumberField\n                  value={player.ac}\n                  label=\"AC\"\n                  onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n                />\n                <NumberField\n                  value={player.initBonus}\n                  label=\"Init Bonus\"\n                  onChange={(initBonus) =>\n                    onChangePlayerField(\"initBonus\", initBonus, player, index)\n                  }\n                />\n                <NumberField\n                  value={player.level}\n                  label=\"Level\"\n                  onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n                />\n                <StringField\n                  value={player.pic}\n                  label=\"Pic\"\n                  onChange={(pic) => onChangePlayerField(\"pic\", pic, player, index)}\n                />\n                <SingleSelectField\n                  options={[\n                    { value: \"tiny\", label: \"tiny\" },\n                    { value: \"small\", label: \"small\" },\n                    { value: \"medium\", label: \"medium\" },\n                    { value: \"large\", label: \"large\" },\n                    { value: \"huge\", label: \"huge\" },\n                    { value: \"gargantuan\", label: \"gargantuan\" },\n                  ]}\n                  value={player.size}\n                  label={\"Size\"}\n                  onChange={(size) => onChangePlayerField(\"size\", size, player, index)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n              </Container>\n            );\n          })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 2 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n\n  @media (max-width: 576px) {\n    flex-wrap: wrap;\n  }\n`;\n","export default class Slot {\n  fog: boolean;\n\n  constructor(fog?: boolean) {\n    this.fog = fog || true;\n  }\n}\n","import {\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight,\n  faEye,\n  faEyeSlash,\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GiBroadsword, GiHeartBottle } from \"react-icons/gi\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { DamageDialog } from \"../../../general_elements/Dialog\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport Slot from \"../../../../data/encounter/Slot\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [damageDialog, setDamageDialog] = useState<boolean>(false);\n  const [damageDialogIndex, setDamageDialogIndex] = useState<number>(0);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [initTracker, showInitTracker] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      const { difficulty } = calcDifficulty(encounter);\n      setDifficulty(difficulty);\n    }\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number | boolean,\n    oldPlayer: Player\n  ) => {\n    if (encounter !== undefined) {\n      if (oldPlayer.isEnemy) {\n        let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, enemies: newPlayers });\n      } else {\n        let newPlayers = encounter.players.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, players: newPlayers });\n      }\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        if (player.init < 0) {\n          let roll = rollDie(20);\n          roll += player.initBonus || 0;\n          return { ...player, init: roll };\n        } else {\n          return player;\n        }\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        if (enemy.init < 0) {\n          let roll = rollDie(20);\n          roll += enemy.initBonus || 0;\n          return { ...enemy, init: roll };\n        } else {\n          return enemy;\n        }\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: true,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const finishEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        return { ...player, init: -1 };\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        return { ...enemy, init: -1 };\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: false,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const nextPlayer = () => {\n    if (encounter !== undefined) {\n      let nextInit = (encounter.currentInit + 1) % players.length;\n      let roundCounter = encounter.roundCounter;\n      if ((encounter.currentInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n\n      let counter = 0;\n      while (players[nextInit].currentHp <= 0 || players[nextInit].isVisible) {\n        if ((nextInit + 1) % players.length === 0) {\n          roundCounter++;\n        }\n        nextInit = (nextInit + 1) % players.length;\n        counter++;\n        if (counter > players.length) {\n          break;\n        }\n      }\n      if (counter > players.length) {\n        finishEncounter();\n      } else {\n        onEdit({\n          ...encounter,\n          currentInit: nextInit,\n          roundCounter: roundCounter,\n        });\n      }\n    }\n  };\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          let newEnemies: Player[] = [];\n          players.forEach((player: Player) => {\n            if (player.isEnemy) {\n              newEnemies.push(player);\n            }\n          });\n          onEdit({ ...encounter, players: newPlayers, enemies: newEnemies });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const onChangeDimension = (dimension: {\n    width: number;\n    height: number;\n    size: number;\n    zoom: number;\n  }) => {\n    if (dimension.zoom === encounter.dimension.zoom) {\n      console.time(\"makeFogBoard\");\n      let newBoard: Slot[] = [...Array(dimension.width * dimension.height)].map(() => {\n        return new Slot();\n      });\n      console.timeEnd(\"makeFogBoard\");\n      onEdit({ ...encounter, dimension: dimension, board: newBoard });\n    } else {\n      onEdit({ ...encounter, dimension: dimension });\n    }\n  };\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  const showDamageDialog = (i: number) => {\n    setDamageDialogIndex(i);\n    setDamageDialog(true);\n  };\n\n  const toggleVisibility = (player: Player) => {\n    onChangePlayerField(\"isVisible\", !player.isVisible, player);\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {encounter && damageDialog && (\n          <DamageDialog\n            name={players[damageDialogIndex].name}\n            damageText={\"Damage\"}\n            damageClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp - currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            healText={\"Heal\"}\n            healClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp + currentHp > players[damageDialogIndex].hp\n                  ? players[damageDialogIndex].hp\n                  : players[damageDialogIndex].currentHp + currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            abortText={\"Back\"}\n            abortClick={() => {\n              setDamageDialog(false);\n            }}\n          />\n        )}\n        <View\n          mode={dmView ? 1 : 0}\n          show={initTracker}\n          window={encounter.map !== \"\" || encounter.mapBase64 !== \"\"}\n        >\n          <ScrollWrapper window={encounter.map !== \"\" || encounter.mapBase64 !== \"\"}>\n            <Name>\n              <b>{encounter?.name}</b>\n            </Name>\n            <PropWrapper>\n              {dmView && (\n                <PropElm>\n                  <PropTitle>Difficulty: </PropTitle>\n                  {difficulty}\n                </PropElm>\n              )}\n              <PropElm>\n                <PropTitle>Round: </PropTitle>\n                {encounter?.roundCounter}\n              </PropElm>\n              {encounter && !encounter.isPlaying && (\n                <TextButton\n                  text={\"Start Encounter\"}\n                  icon={faPlayCircle}\n                  onClick={() => startEncounter()}\n                />\n              )}\n              {encounter && encounter.isPlaying && (\n                <>\n                  <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n                  <TextButton\n                    text={\"End Encounter\"}\n                    icon={faStopCircle}\n                    onClick={() => finishEncounter()}\n                  />\n                </>\n              )}\n            </PropWrapper>\n            {!encounter && <LoadingSpinner />}\n            {encounter && (\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Init</th>\n                    <th>Name</th>\n                    {dmView && <th>Current Hp</th>}\n                    {dmView && <th>AC</th>}\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {encounter &&\n                    players\n                      .sort((a: Player, b: Player) => {\n                        if (b.init === a.init || !encounter.isPlaying) {\n                          return a.name.localeCompare(b.name);\n                        }\n                        return b.init - a.init;\n                      })\n                      .filter((a) => !a.isVisible || dmView)\n                      .map((player: Player, index: number) => {\n                        return (\n                          <Row\n                            current={encounter.currentInit === index && encounter.isPlaying}\n                            isDead={player.currentHp <= 0}\n                            key={index}\n                          >\n                            <PropField>\n                              <TinyNumberField\n                                value={player.init}\n                                onChange={(init) => onChangePlayerField(\"init\", init, player)}\n                              />\n                            </PropField>\n                            <Prop>\n                              {player.pic !== \"\" && player.pic !== undefined ? (\n                                <PlayerImage player={player}></PlayerImage>\n                              ) : (\n                                <></>\n                              )}\n                              {player.isMonster && (\n                                <MainLink\n                                  onClick={() =>\n                                    history.push(`/monster-detail/name/${player.name}`)\n                                  }\n                                >\n                                  {dmView\n                                    ? `${player.name.split(\"|\")[0]} ${index}`\n                                    : `??? ${index}`}\n                                </MainLink>\n                              )}\n                              {!player.isMonster && (\n                                <MainLink\n                                  onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                                >\n                                  {player.name}\n                                </MainLink>\n                              )}\n                            </Prop>\n                            <PropRight>\n                              <DamageButton onClick={() => showDamageDialog(index)}>\n                                <GiBroadsword />\n                                <GiHeartBottle />\n                              </DamageButton>\n                              {dmView && `${player.currentHp} / ${player.hp}`}\n                            </PropRight>\n                            {dmView && <Prop>{player.ac}</Prop>}\n                            {/* <Prop>{player.tag}</Prop> */}\n                            <Prop style={{ minWidth: \"100px\" }}>\n                              {player.currentHp > 0 && (\n                                <IconButton\n                                  icon={faSkullCrossbones}\n                                  onClick={() => killPlayer(player)}\n                                />\n                              )}\n                              {player.currentHp <= 0 && (\n                                <IconButton\n                                  icon={faHandHoldingHeart}\n                                  onClick={() => revicePlayer(player)}\n                                />\n                              )}\n                              {player.isVisible && (\n                                <IconButton\n                                  icon={faEyeSlash}\n                                  onClick={() => toggleVisibility(player)}\n                                />\n                              )}\n                              {!player.isVisible && (\n                                <IconButton icon={faEye} onClick={() => toggleVisibility(player)} />\n                              )}\n                            </Prop>\n                          </Row>\n                        );\n                      })}\n                </tbody>\n              </Table>\n            )}\n          </ScrollWrapper>\n          {(encounter.map !== \"\" || encounter.mapBase64 !== \"\") && (\n            <MoveButton onClick={() => showInitTracker((i) => !i)}>\n              <FontAwesomeIcon icon={initTracker ? faArrowAltCircleRight : faArrowAltCircleLeft} />\n            </MoveButton>\n          )}\n        </View>\n        {encounter && (encounter.map !== \"\" || encounter.mapBase64 !== \"\") && (\n          <Board\n            isHost={dmView}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={dmView}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={(dimension) => onChangeDimension(dimension)}\n            onChangeBoard={(board) => onEdit({ ...encounter, board: board })}\n            img={getMap()}\n          />\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterView;\n\nconst DamageButton = styled.button`\n  svg {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  font-size: 16px;\n  float: left;\n  padding: 5px;\n  margin-right: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border-radius: 10px;\n  border: none;\n\n  transition: color 0.2s;\n  background: ${({ theme }) => theme.buttons.backgroundColor};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n`;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode: number;\n  show: boolean;\n  window: boolean;\n};\n\nconst View = styled.div<viewType>`\n  ${(props) => {\n    if (props.window) {\n      let css = \"position: fixed;top: 120px;\";\n      if (!props.show) {\n        css += \"left: 100px;\";\n      } else {\n        if (!props.mode) {\n          css += \"left: -360px;\";\n        } else {\n          css += \"left: -510px;\";\n        }\n      }\n      return (\n        css +\n        \"transition: left 0.5s; z-index: 500; height: calc(100vh - 140px); overflow-x: visible; box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.3);\"\n      );\n    } else {\n      return \"max-width: 600px;\";\n    }\n  }}\n\n  color: ${({ theme }) => theme.tile.color};\n\n  font-size: 16px;\n  ${(props) => {\n    if (!props.mode) {\n      return props.window ? \"min-width: 450px;\" : \"width: 450px;\";\n    } else {\n      return props.window ? \"min-width: 600px;\" : \"width: 600px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    width: 100%;\n  }\n`;\ntype wrapperType = {\n  window: boolean;\n};\nconst ScrollWrapper = styled.div<wrapperType>`\n  ${(props) => {\n    if (props.window) {\n      return \"width: 100%; height: 100%; overflow-y: auto; position: absolute; z-index: 500;\";\n    }\n  }}\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n  white-space: nowrap;\n  display: table-cell;\n`;\n\nconst PropRight = styled(Prop)`\n  text-align: right;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n\nconst MoveButton = styled.div`\n  position: absolute;\n  top: 40vh;\n  right: -40px;\n  z-index: 400;\n\n  height: 40px;\n  width: 40px;\n  text-align: center;\n  line-height: 40px;\n  transform: rotate(45deg);\n  cursor: pointer;\n\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  color: ${({ theme }) => theme.buttons.color};\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n        <P2PEncounter\n          encounter={encounterObj}\n          onEdit={(value) => editEncounter(value)}\n          isHost={true}\n        />\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n"],"sourceRoot":""}