{"version":3,"sources":["components/form_elements/AutoStringField.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","data/Monster.tsx","data/campaign/Npc.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/encounter/Encounter.tsx","hooks/DexieHooks.tsx","data/encounter/Player.tsx","data/encounter/BuildEncounter.tsx","data/encounter/BuildPlayer.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/form_elements/NumberField.tsx"],"names":["AutoStringField","optionTable","filters","value","label","icon","transform","onChange","useState","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","undefined","Promise","all","items","o","concat","useEffect","reciveAllFiltered","data","Array","length","onSearch","searchTerm","newOptions","filter","option","name","includes","Field","LabelText","Icon","Input","type","e","target","Options","map","opt","index","Option","key","onClick","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","player","campaign","pic","classes","background","spells","spellSlots","activeSelections","currencyBonis","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","Monster","sources","size","subtype","cr","savingThrows","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Npc","char","monster","traits","description","isNpc","traitsCheck","descriptionCheck","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Encounter","enemies","players","isPlaying","currentInit","roundCounter","dimension","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","currentInitCheck","roundCounterCheck","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Player","tempHp","initBonus","tag","cord","BuildEncounter","encounter","characters","difficulty","calcExp","easy","medium","hard","deadly","BuildPlayer","entity","buildEncounter","console","time","characterList","enemyList","buildPlayer","enemy","timeEnd","sort","b","aDex","bDex","localeCompare","calcDifficulty","recivePromiseByAttribute","newPlayer","crExpTable","exp","expTable","enemyExp","crExp","EncounterEditView","onEdit","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangeEnemy","found","results","classSet","onChangePlayerField","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","PropWrapper","Prop","PropTitle","CharView","Container","newMonster","NumberField","IconButton","faTrash","newEnemyList","splice","removeEnemy","TextButton","text","faPlus","addNewEnemy","newPlayerList","removePlayer","addNewPlayer","span","backgroundColorLink","TinyNumberField","max","showMax","Max","Board","img","currentPlayerNumber","onChangePlayers","onChangeDimension","board","setBoard","dragItem","setDragItem","makeDrag","makeDrop","makeRow","row","list","j","updatePlayers","makeBoard","BoardRow","log","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","PlayerSlot","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isDead","isCurrent","Empty","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","EncounterView","dmView","history","useHistory","loadedEncounter","setLoadedEncounter","loading","isLoading","newField","finishEncounter","newEnemies","Name","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","PropField","MainLink","faSkullCrossbones","faHandHoldingHeart","PlayerImage","tr","td","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","result","setTimeout","editAndSaveEncounter","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","Message"],"mappings":"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","file":"static/js/5.506ea4f6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\nimport Monster from \"../Monster\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  char: Char | undefined;\n  monster: Monster | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    char?: Char | undefined,\n    monster?: Monster | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.char = char || undefined;\n    this.monster = monster || undefined;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return arg && nameCheck && picCheck && descriptionCheck && traitsCheck && sourcesCheck;\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  dimension: { width: number; height: number; size: number, zoom: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    dimension?: { width: number; height: number; size: number, zoom: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  isNpc: boolean;\n  level: number;\n  cord: number[];\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    level?: number,\n    cord?: number[]\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.level = level || 0;\n    this.cord = cord || [0, 0];\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import BuildPlayer from \"./BuildPlayer\";\nimport Encounter from \"./Encounter\";\n\nexport default class BuildEncounter {\n  encounter: Encounter;\n  characters: BuildPlayer[];\n  enemies: BuildPlayer[];\n  players: BuildPlayer[];\n  difficulty: {\n    difficulty: string;\n    calcExp: {\n      easy: number;\n      medium: number;\n      hard: number;\n      deadly: number;\n    };\n  };\n\n  constructor(\n    encounter?: Encounter,\n    characters?: BuildPlayer[],\n    enemies?: BuildPlayer[],\n    players?: BuildPlayer[],\n    difficulty?: {\n      difficulty: string;\n      calcExp: {\n        easy: number;\n        medium: number;\n        hard: number;\n        deadly: number;\n      };\n    }\n  ) {\n    this.encounter = encounter || new Encounter();\n    this.characters = characters || [];\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.difficulty = difficulty || {\n      difficulty: \"\",\n      calcExp: {\n        easy: 0,\n        medium: 0,\n        hard: 0,\n        deadly: 0,\n      },\n    };\n  }\n}\n","import Npc from \"../campaign/Npc\";\nimport Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Player from \"./Player\";\n\nexport default class BuildPlayer {\n  player: Player;\n  entity: Char | Monster | Npc;\n\n  constructor(player?: Player, entity?: Char | Monster | Npc) {\n    this.player = player || new Player();\n    this.entity = entity || new Monster();\n  }\n}\n","import { isNpc } from \"../data/campaign/Npc\";\nimport { isChar } from \"../data/chars/Char\";\nimport BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { isMonster } from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  let players = [...characters, ...enemies];\n  if (encounter.isPlaying) {\n    players = players.sort((a: BuildPlayer, b: BuildPlayer) => {\n      if (a.player.init === b.player.init) {\n        let aDex: number = 0;\n        let bDex: number = 0;\n        if (isNpc(a.entity) && a.entity.char !== undefined) aDex = a.entity.char.dex;\n        else if (isNpc(a.entity) && a.entity.monster !== undefined) aDex = a.entity.monster.dex;\n        else if (isMonster(a.entity) || isChar(a.entity)) aDex = a.entity.dex;\n        if (isNpc(b.entity) && b.entity.char !== undefined) bDex = b.entity.char.dex;\n        else if (isNpc(b.entity) && b.entity.monster !== undefined) bDex = b.entity.monster.dex;\n        else if (isMonster(b.entity) || isChar(b.entity)) bDex = b.entity.dex;\n\n        if (bDex === aDex) return a.player.name.localeCompare(b.player.name);\n        return bDex - aDex;\n      }\n      return b.player.init - a.player.init;\n    });\n  }\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isNpc) newPlayer = await recivePromiseByAttribute(\"npcs\", \"name\", player.name);\n  else if (player.isMonster)\n    newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { recivePromiseByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = async (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = [...encounter.enemies];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newEnemy));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: level,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isNpc: true,\n          level: level,\n        };\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n      }\n      onEdit({ ...encounter, enemies: enemies });\n    } else {\n      enemies[i] = { ...oldEnemy, name: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    }\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = async (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = [...encounter.players];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newPlayer));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: results[0].cr,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isMonster: true,\n        isNpc: false,\n        level: level,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isMonster: true,\n          isNpc: true,\n          level: results[0].monster.cr,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isNpc: true,\n          level: level,\n        };\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n      }\n      onEdit({ ...encounter, players: players });\n    } else {\n      players[i] = { ...oldPlayer, name: newPlayer };\n      onEdit({ ...encounter, players: players });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"locations\"}\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = useCallback((player: BuildPlayer) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: BuildPlayer): number => {\n      if (player.player.isMonster) {\n        const monster = player.entity as Monster;\n        switch (monster.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, player, isDead, isCurrent }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: size - 6 + \"px\",\n    width: size - 6 + \"px\",\n    opacity: isDead ? \"0.5\" : \"1\",\n    border: isCurrent ? \"\" : \"none\",\n  };\n\n  if (pic !== \"\") {\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n`;\n\nconst Empty = styled.div``;\n","import {\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { buildEncounter } from \"../../../../services/EncounterService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { LoadingSpinner } from \"../../../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loadedEncounter, setLoadedEncounter] = useState<BuildEncounter>(new BuildEncounter());\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    buildEncounter(encounter).then((buildEncounter) => {\n      setLoadedEncounter(buildEncounter);\n      isLoading(false);\n    });\n  }, [encounter, setLoadedEncounter]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = loadedEncounter.encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = loadedEncounter.encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % loadedEncounter.players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % loadedEncounter.players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (loadedEncounter.players[nextInit].player.currentHp <= 0) {\n      if ((nextInit + 1) % loadedEncounter.players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % loadedEncounter.players.length;\n      counter++;\n      if (counter > loadedEncounter.players.length) {\n        break;\n      }\n    }\n    if (counter > loadedEncounter.players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  const onChangeDimension = useCallback(\n    (dimension: { width: number; height: number; size: number; zoom: number }) => {\n      onEdit({ ...loadedEncounter.encounter, dimension: dimension });\n    },\n    [loadedEncounter.encounter, onEdit]\n  );\n\n  const onChangePlayers = useCallback(\n    (players: BuildPlayer[]) => {\n      if (players !== loadedEncounter.players) {\n        let newPlayers: Player[] = [];\n        players.forEach((player: BuildPlayer) => {\n          if (!player.player.isMonster) {\n            newPlayers.push(player.player);\n          }\n        });\n        let newEnemies: Player[] = [];\n        players.forEach((player: BuildPlayer) => {\n          if (player.player.isMonster) {\n            newEnemies.push(player.player);\n          }\n        });\n\n        onEdit({ ...loadedEncounter.encounter, players: newPlayers, enemies: newEnemies });\n      }\n    },\n    [loadedEncounter.encounter, loadedEncounter.players, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <View mode={dmView ? 1 : 0}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          {dmView && (\n            <PropElm>\n              <PropTitle>Difficulty: </PropTitle>\n              {loadedEncounter.difficulty.difficulty}\n            </PropElm>\n          )}\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                {dmView && <th>Current Hp</th>}\n                {dmView && <th>Hp</th>}\n                {dmView && <th>AC</th>}\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {loadedEncounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                return (\n                  <Row\n                    current={encounter.currentInit === index && encounter.isPlaying}\n                    isDead={buildPlayer.player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.init}\n                        onChange={(init) => onChangePlayerField(\"init\", init, buildPlayer.player)}\n                      />\n                    </PropField>\n                    <Prop>\n                      {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                        <PlayerImage player={buildPlayer}></PlayerImage>\n                      ) : (\n                        <></>\n                      )}\n                      {buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {dmView ? buildPlayer.player.name : \"???\"}\n                        </MainLink>\n                      )}\n                      {!buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    {dmView && (\n                      <>\n                        <PropField>\n                          <TinyNumberField\n                            value={buildPlayer.player.currentHp}\n                            max={buildPlayer.player.hp}\n                            onChange={(currentHp) =>\n                              onChangePlayerField(\"currentHp\", currentHp, buildPlayer.player)\n                            }\n                          />\n                        </PropField>\n                        <Prop>{buildPlayer.player.hp}</Prop>\n                        <Prop>{buildPlayer.player.ac}</Prop>\n                      </>\n                    )}\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {buildPlayer.player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killPlayer(buildPlayer.player)}\n                        />\n                      )}\n                      {buildPlayer.player.currentHp <= 0 && (\n                        <IconButton\n                          icon={faHandHoldingHeart}\n                          onClick={() => revicePlayer(buildPlayer.player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n      {loadedEncounter && encounter.map !== \"\" && encounter.map !== undefined && (\n        <Board\n          onChangePlayers={onChangePlayers}\n          players={loadedEncounter.players}\n          dimension={\n            encounter.dimension !== undefined\n              ? encounter.dimension\n              : { width: 20, height: 20, size: 20, zoom: 100 }\n          }\n          currentPlayerNumber={loadedEncounter.encounter.currentInit}\n          onChangeDimension={onChangeDimension}\n          img={encounter.map}\n        ></Board>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 300px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}