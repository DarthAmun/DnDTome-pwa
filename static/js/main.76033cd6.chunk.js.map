{"version":3,"sources":["dndtome icon_v2.png","../node_modules/peerjs/dist sync","components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Data/Encounter/Encounter.tsx","Services/OptionService.tsx","Services/5eToolService.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Loading.tsx","components/FormElements/StringField.tsx","components/FormElements/TextButton.tsx","components/P2P/P2PReciver.tsx","components/Entities/Classes/ClassTile.tsx","components/Encounters/EncounterTile.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Spells/SpellTile.tsx","components/Options/GeneralOptions.tsx","components/P2P/P2PSender.tsx","Services/peerIdService.tsx","components/Options/SpellsOptions.tsx","components/Options/GearsOptions.tsx","components/Options/ItemsOptions.tsx","components/Options/MonstersOptions.tsx","components/Options/RacesOptions.tsx","components/Options/ClassesOptions.tsx","components/Options/CharsOptions.tsx","components/Options/EncountersOptions.tsx","components/Options/Options.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringSearchField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/GeneralElements/Dialog.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","components/Encounters/EncounterSearchBar.tsx","components/Encounters/EncounterOverview.tsx","Data/Encounter/Player.tsx","Services/EncounterService.tsx","components/Encounters/Detail/EncounterEditView.tsx","Services/DiceService.tsx","components/FormElements/TinyNumberField.tsx","components/Encounters/Detail/EncounterView.tsx","components/Encounters/Detail/EncounterDetail.tsx","components/Encounters/Detail/LinkWrapper/NameToEncounter.tsx","components/Encounters/Detail/LinkWrapper/IdToEncounter.tsx","components/Statistics/Gear/CostRatioChart.tsx","components/Statistics/Gear/DamageRatioChart.tsx","components/Statistics/Gear/GearTypeRatioChart.tsx","components/Statistics/Gear/WeightRatioChart.tsx","components/Statistics/General/AmountOfEntitiesChart.tsx","components/Statistics/Items/AttunmentRatioChart.tsx","components/Statistics/Items/BaseRatioChart.tsx","components/Statistics/Items/ItemTypeRatioChart.tsx","components/Statistics/Items/MagicBonusRatioChart.tsx","components/Statistics/Items/RarityRatioChart.tsx","components/Statistics/Monsters/CrRatioChart.tsx","components/Statistics/Monsters/LegendaryRatioChart.tsx","components/Statistics/Monsters/MonsterTypeRatioChart.tsx","components/Statistics/Spells/ActionsRatioChart.tsx","components/Statistics/Spells/LevelRatioChart.tsx","components/Statistics/Spells/RitualRatioChart.tsx","components/Statistics/Spells/SchoolsRatioChart.tsx","components/Statistics/Statistics.tsx","components/Library/BookTile.tsx","Data/Book.tsx","components/Library/LibrarySearchBar.tsx","components/Library/Library.tsx","components/Library/Detail/BookView.tsx","components/Library/Detail/BookEditView.tsx","components/Library/Detail/BookDetail.tsx","components/Library/Detail/LinkWrapper/IdToBook.tsx","components/Library/Detail/LinkWrapper/NameToBook.tsx","components/Home/Home.tsx","components/Help/Help.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","lightTheme","buttons","color","backgroundColor","disabled","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","result","finally","close","saveNew","entity","filename","a","put","prom","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","name","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","isArray","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","Encounter","enemies","players","isPlaying","currentInit","roundCounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","scanImportFileTest","json","fileName","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","errors","item","gear","spell","monster","class","subclass","JSON","stringify","failedObject","Errors","exportAllFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","tableList","results","list","parseGear","textPart","entryTextPart","listItem","colLabels","rows","cel","convertText","trim","dmg1","dmgType","property","prop","source","parseItem","bonusSpellAttack","Number","parseInt","bonusWeapon","bonusAc","reqAttune","baseItem","baseParts","split","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faHome","faMeteor","faIdCard","faDragon","faCog","faChartPie","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","map","child","index","Tab","key","FileField","accept","isMulti","transform","Field","LabelText","Icon","Input","files","multiple","FontAwesomeIcon","IconButton","SimpleButton","DisabledSimpleButton","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","LocalLoadingSpinner","Wrapper","LocalSpinner","StringField","TextButton","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","console","log","faExclamationCircle","faCheck","ClassTile","getPicture","useCallback","Tile","fallback","PropWrapper","Prop","faLink","Link","Image","ImageElm","src","Empty","img","EncounterTile","encounter","faUser","PropTitle","span","CharTile","char","calcLevel","PropRowWrapper","RowProp","classSet","ImgContainer","props","GearTile","ImageName","faCoins","faWeightHanging","WideProp","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ItemTile","hasAttunment","Rarity","Flag","MonsterTile","isLegendary","formatCr","Type","CR","faRunning","RaceTile","SpellTile","formatTime","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","School","Level","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","GeneralOptions","General","OptionSection","SelectionTitle","ExternalLink","rel","faPatreon","faDiscord","P2PSender","mode","setName","setPeer","brokerId","min","max","password","characters","i","Math","floor","random","generateBrokerId","newPeer","errorData","send","disconnected","destroyed","reconnect","SpellsOptions","amount","triggerDeleteAll","setSend","OptionTab","SectionRow","SectionText","faFileExport","faTrashAlt","faPaperPlane","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","CharsOptions","EncountersOptions","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","isReload","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","setData","triggerImportFiles","fileList","from","file","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","setTimeout","trigger5eToolsSpellImport","fromClassList","number","unit","condition","distance","typ","v","s","m","concentration","newSpell","meta","import5eToolsSpellsFiles","trigger5eToolsMonsterImport","_copy","tags","align","value2","save","skill","sense","langs","languages","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conditionImmune","trait","tra","entry","action","lactions","legendary","newMonster","average","import5eToolsMonstersFiles","trigger5eToolsItemsImport","baseitem","newGear","newItem","import5eToolsItemsFiles","clear","deleteAll","returnTile","Message","faFileImport","tab","OptionSectionLarge","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","classNamePrefix","Select","StringSearchField","field","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","setSort","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","slice","filterArray","SpellContainer","dataLength","next","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","first","FormatedText","formatedText","setFormatedText","formatTable","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","th","td","SpellView","CenterWrapper","View","Text","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","Dialog","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","ButtonBar","SpellDetail","isNew","editMode","setMode","spellObj","editSpell","showDeleteDialog","setDeleteDialog","unsavedChanges","setUnsavedChanges","faExclamationTriangle","goBack","TopBar","faArrowLeft","EditToggle","ToggleLeft","ToggleRight","title","updateSpell","faSave","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","NameToGear","IdToGear","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","faShieldAlt","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","NameToSubrace","IdToSubrace","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","NameToItem","IdToItem","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","NameToClass","IdToClass","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","deathSaves","setDeathSaves","prof","setProf","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","f1","f2","b","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","NameToChar","IdToChar","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","EncounterSearchBar","newEncounter","createNewEncounter","EncounterOverview","allEncounters","setAllEncounters","setEncounters","EncounterContainer","Player","tempHp","initBonus","tag","crExpTable","exp","expTable","easy","hard","deadly","calcDifficulty","calcExp","enemyExp","enemy","crExp","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","newEnemy","oldEnemy","onChangePlayerField","newPlayer","oldPlayer","onChangeEnemy","newEnemyList","removeEnemy","addNewEnemy","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","rollDie","round","TinyNumberField","EncounterView","setPlayers","newPlayers","newField","finishEncounter","newEnemies","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Table","Row","isDead","PropField","faSkullCrossbones","EncounterDetail","encounterObj","editEncounter","updateEncounter","encounterId","editAndSaveEncounter","NameToEncounter","IdToEncounter","CostRatioChart","setLoading","generalCounts","setGeneralCounts","makeSchoolsData","costs","names","counts","colors","labels","datasets","paddingBottom","DamageRatioChart","GearTypeRatioChart","WeightRatioChart","weights","AmountOfEntitiesChart","makeGeneralCountsData","AttunmentRatioChart","attunments","BaseRatioChart","ItemTypeRatioChart","MagicBonusRatioChart","magicBoni","RarityRatioChart","CrRatioChart","crs","LegendaryRatioChart","leg","noleg","MonsterTypeRatioChart","ActionsRatioChart","times","newTimes","startsWith","LevelRatioChart","RitualRatioChart","rituals","SchoolsRatioChart","Statistics","BookTile","book","cover","pages","faTags","Tag","Book","LibrarySearchBar","setTags","setPages","newBook","createNewBook","Library","allBooks","setAllBooks","setBooks","LibraryContainer","pdfjs","GlobalWorkerOptions","workerSrc","BookView","numPages","setNumPages","pageNumber","setPageNumber","reader","readAsDataURL","base64data","changePage","prevPageNumber","DocumentWrapper","faArrowRight","onLoadSuccess","onItemClick","itemPageNumber","appVersion","msSaveBlob","url","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","TagWrapper","faTag","BookEditView","TagView","oldTag","onTagChange","removeTag","BookDetail","bookObj","editBook","updateBook","IdToBook","NameToBook","Home","bookAmount","setBookAmount","HomeSectionLarge","logo","alt","HomeSection","faQuestionCircle","Help","HelpSection","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","getElementById","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76033cd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dndtome icon_v2.b0a4f31d.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 242;","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\nimport Encounter from \"../Data/Encounter/Encounter\";\nimport Book from \"../Data/Book\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n  }\n}\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nconst applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if(hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName]\n            .toLowerCase()\n            .includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName]\n              .toLowerCase()\n              .includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (\n  tableName: string,\n  attribute: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves  || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\nimport IEntity from \"../Data/IEntity\";\nimport Encounter, { isEncounter } from \"../Data/Encounter/Encounter\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file.name, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  let failCount = 0;\n  let failedObj: string[] = [];\n  let promList: Promise<any>[] = [];\n\n  if (Array.isArray(json)) {\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, fileName));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, fileName));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, fileName));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, fileName));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, fileName));\n      } else if (isEncounter(obj)) {\n        promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, fileName));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  } else {\n    if (isClass(json)) {\n      promList.push(saveNew(\"classes\", json as Class, fileName));\n    } else if (isSubclass(json)) {\n      promList.push(saveNew(\"subclasses\", json as Subclass, fileName));\n    } else if (isRace(json)) {\n      promList.push(saveNew(\"races\", json as Race, fileName));\n    } else if (isSubrace(json)) {\n      promList.push(saveNew(\"subraces\", json as Subrace, fileName));\n    } else if (isMonster(json)) {\n      promList.push(saveNew(\"monsters\", json as Monster, fileName));\n    } else if (isSpell(json)) {\n      promList.push(saveNew(\"spells\", json as Spell, fileName));\n    } else if (isGear(json)) {\n      promList.push(saveNew(\"gears\", json as Gear, fileName));\n    } else if (isItem(json)) {\n      promList.push(saveNew(\"items\", json as Item, fileName));\n    } else if (isEncounter(json)) {\n      promList.push(saveNew(\"encounters\", json as Encounter, fileName));\n    } else if (isChar(json)) {\n      saveNew(\"chars\", json as Char, fileName);\n    } else {\n      failCount++;\n      failedObj.push(\n        scanForFormatErrors(json)\n          .replaceAll(\"true\", \"success!\")\n          .replaceAll(\"false\", \"fail!\")\n      );\n    }\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  tableList.push(reciveAllPromise(\"encounters\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Spell from \"../Data/Spell\";\nimport { saveNew } from \"./DatabaseService\";\n\nexport const import5eToolsSpellsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.spell.forEach((obj: any) => {\n            let classes = \"\";\n            if (\n              obj.classes !== undefined &&\n              obj.classes.fromClassList !== undefined\n            ) {\n              obj.classes.fromClassList.forEach(\n                (classe: { name: string; source: string }) => {\n                  classes += classe.name + \", \";\n                }\n              );\n            }\n\n            let school = \"\";\n            if (obj.school === \"V\") school = \"Evocation\";\n            if (obj.school === \"D\") school = \"Divination\";\n            if (obj.school === \"N\") school = \"Necromancy\";\n            if (obj.school === \"T\") school = \"Transmutation\";\n            if (obj.school === \"I\") school = \"Illusion\";\n            if (obj.school === \"C\") school = \"Conjuration\";\n            if (obj.school === \"A\") school = \"Abjuration\";\n            if (obj.school === \"E\") school = \"Enchantment\";\n\n            let time = \"\";\n            if (obj.time !== undefined) {\n              time =\n                obj.time[0].number +\n                \" \" +\n                obj.time[0].unit +\n                \" \" +\n                (obj.time[0].condition ? obj.time[0].condition : \"\");\n            }\n\n            let range = \"\";\n            if (obj.range !== undefined) {\n              range =\n                obj.range.type +\n                \" \" +\n                (obj.distance\n                  ? obj.range.distance.typ +\n                    \" \" +\n                    (obj.range.distance.amount ? obj.range.distance.amount : \"\")\n                  : \"\");\n            }\n\n            let components = \"\";\n            if (obj.components !== undefined) {\n              components =\n                (obj.components.v ? \"V, \" : \"\") +\n                (obj.components.s ? \"S, \" : \"\");\n              if (obj.components.m !== undefined) {\n                if (obj.components.m.text !== undefined) {\n                  components = \"M (\" + obj.components.m.text + \")\";\n                } else {\n                  components = \"M (\" + obj.components.m + \")\";\n                }\n              }\n            }\n\n            let duration = \"\";\n            if (obj.duration !== undefined) {\n              let concentration = obj.duration[0].concentration;\n              duration =\n                (concentration ? \"Concentration, \" : \"\") +\n                obj.duration[0].type +\n                \" \" +\n                (obj.duration[0].duration !== undefined\n                  ? obj.duration[0].duration.type +\n                    \" \" +\n                    obj.duration[0].duration.amount\n                  : \"\");\n            }\n\n            let text = \"\";\n            obj.entries.forEach((textPart: string | any) => {\n              if (typeof textPart === \"string\") {\n                text += textPart + \"\\n\";\n              } else {\n                if (\n                  textPart.name !== undefined &&\n                  textPart.entries !== undefined\n                ) {\n                  text += \"\\n\" + textPart.name + \". \";\n                  textPart.entries.forEach((entryTextPart: string) => {\n                    text += entryTextPart + \"\\n\";\n                  });\n                } else if (textPart.items !== undefined) {\n                  textPart.items.forEach((listItem: string) => {\n                    text += \"• \" + listItem + \"\\n\";\n                  });\n                } else if (\n                  textPart.type !== undefined &&\n                  textPart.type === \"table\"\n                ) {\n                  text += \"||table||\\n\";\n                  if (textPart.colLabels !== undefined) {\n                    text += \"||\";\n                    textPart.colLabels.forEach((listItem: string) => {\n                      text += listItem + \"|\";\n                    });\n                    text += \"|\\n\";\n                  }\n                  textPart.rows.forEach((rows: string[]) => {\n                    text += \"||\";\n                    rows.forEach((cel: string) => {\n                      text += cel + \"|\";\n                    });\n                    text += \"|\\n\";\n                  });\n                  text += \"||table||\\n\";\n                } else {\n                  let convertText = JSON.stringify(textPart);\n                  convertText = convertText\n                    .replaceAll(\"},\", \"\\n\")\n                    .replaceAll(\"[\", \"\")\n                    .replaceAll(\"]\", \"\")\n                    .replaceAll(\"}\", \"\")\n                    .replaceAll(\"{@\", \"\")\n                    .replaceAll(\"{\", \"\");\n                  convertText = convertText.trim();\n                  text += convertText;\n                }\n              }\n            });\n            text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n            text = text.trim();\n\n            let newSpell = new Spell(\n              obj.name,\n              classes,\n              obj.source,\n              obj.level,\n              school,\n              time,\n              range,\n              components,\n              duration,\n              obj.meta && obj.meta.ritual ? 1 : 0,\n              text,\n              0,\n              file.name,\n              \"\"\n            );\n            promList.push(saveNew(\"spells\", newSpell, file.name));\n          });\n          await Promise.all(promList);\n          callback(json.spell.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsMonstersFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.monster.forEach((obj: any) => {\n            if (obj._copy === undefined) {\n              let type = \"\";\n              let subtype = \"\";\n              if (typeof obj.type === \"string\") {\n                type = obj.type;\n              } else {\n                type = obj.type.type;\n                if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n              }\n\n              let cr = 0;\n              if (obj.cr !== undefined) {\n                if (typeof obj.cr === \"string\") {\n                  if (obj.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr;\n                  }\n                } else {\n                  if (obj.cr.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr.cr;\n                  }\n                }\n              }\n\n              let alignment = \"\";\n              if (obj.alignment !== undefined) {\n                obj.alignment.forEach((align: string) => {\n                  if (align === \"L\") alignment += \"lawfull \";\n                  if (align === \"N\") alignment += \"neutral \";\n                  if (align === \"C\") alignment += \"chaotic \";\n                  if (align === \"G\") alignment += \"good \";\n                  if (align === \"E\") alignment += \"evil \";\n                });\n              }\n              alignment = alignment.trim();\n\n              let size = \"\";\n              if (obj.size !== undefined) {\n                if (obj.size === \"L\") size += \"large \";\n                else if (obj.size === \"H\") size += \"huge \";\n                else if (obj.size === \"T\") size += \"tiny \";\n                else if (obj.size === \"M\") size += \"medium \";\n                else if (obj.size === \"S\") size += \"small \";\n                else if (obj.size === \"G\") size += \"gargantuan \";\n              }\n              size = size.trim();\n\n              let ac = 0;\n              if (typeof obj.ac[0] === \"number\") {\n                ac = obj.ac[0];\n              } else {\n                ac = obj.ac[0].ac;\n              }\n\n              let speed = \"\";\n              for (const [key, value] of Object.entries(obj.speed)) {\n                if (typeof value === \"number\") {\n                  speed += key + \" \" + value + \"ft, \";\n                } else if (typeof value === \"boolean\") {\n                } else {\n                  speed += key + \" \";\n                  for (const value2 of Object.entries(\n                    value as Object\n                  )) {\n                    if (typeof value2[1] === \"number\") {\n                      speed += value2[1] + \"ft, \";\n                    } else if (typeof value2[1] === \"string\") {\n                      speed += value2[1];\n                    }\n                  }\n                  speed += \", \";\n                }\n              }\n              speed.trim();\n\n              let saves = \"\";\n              if (obj.save !== undefined)\n                for (const [key, value] of Object.entries(obj.save)) {\n                  saves += key + \" \" + value + \", \";\n                }\n              saves.trim();\n\n              let skills = \"\";\n              if (obj.skill !== undefined)\n                for (const [key, value] of Object.entries(obj.skill)) {\n                  skills += key + \" \" + value + \", \";\n                }\n              skills.trim();\n\n              let senses = \"\";\n              obj.senses &&\n                obj.senses.forEach((sense: string) => {\n                  senses += sense + \", \";\n                });\n              senses.trim();\n\n              let langs = \"\";\n              obj.languages &&\n                obj.languages.forEach((lang: string) => {\n                  langs += lang + \", \";\n                });\n              langs.trim();\n\n              let vulnerabilities = \"\";\n              obj.vulnerable &&\n                obj.vulnerable.forEach((vul: string) => {\n                  vulnerabilities += vul + \", \";\n                });\n              vulnerabilities.trim();\n\n              let resistencies = \"\";\n              obj.resist &&\n                obj.resist.forEach((res: string) => {\n                  resistencies += res + \", \";\n                });\n              resistencies.trim();\n\n              let immunities = \"\";\n              obj.immune &&\n                obj.immune.forEach((imu: string) => {\n                  immunities += imu + \", \";\n                });\n              immunities.trim();\n\n              let conImmunities = \"\";\n              obj.conditionImmune &&\n                obj.conditionImmune.forEach((imu: string) => {\n                  conImmunities += imu + \", \";\n                });\n              conImmunities.trim();\n\n              let traits = \"\";\n              obj.trait &&\n                obj.trait.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    traits += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        traits += entry + \" \\n\";\n                      });\n                      traits += \"\\n\";\n                    }\n                  }\n                );\n              traits = traits\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              traits = traits.trim();\n\n              let actions = \"\";\n              obj.action &&\n                obj.action.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    actions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        actions += entry + \" \\n\";\n                      });\n                      actions += \" \\n\";\n                    }\n                  }\n                );\n              actions = actions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              actions = actions.trim();\n\n              let lactions = \"\";\n              obj.legendary &&\n                obj.legendary.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    lactions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        lactions += entry + \" \\n\";\n                      });\n                      lactions += \" \\n\";\n                    }\n                  }\n                );\n              lactions = lactions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              lactions = lactions.trim();\n\n              let newMonster = new Monster(\n                0,\n                obj.name,\n                obj.source,\n                \"\",\n                size,\n                type,\n                subtype,\n                alignment,\n                ac,\n                obj.hp.average,\n                speed,\n                cr,\n                obj.str,\n                obj.dex,\n                obj.con,\n                obj.int,\n                obj.wis,\n                obj.cha,\n                saves,\n                skills,\n                senses,\n                langs,\n                vulnerabilities,\n                resistencies,\n                immunities,\n                conImmunities,\n                traits,\n                actions,\n                lactions\n              );\n              promList.push(saveNew(\"monsters\", newMonster, file.name));\n            }\n          });\n          await Promise.all(promList);\n          callback(json.monster.length);\n        }\n      };\n      fileReader.readAsText(file);\n      console.log(\"Done\");\n    });\n  }\n};\n\nexport const import5eToolsItemsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n\n          let items: any[] = [];\n          if (json.item !== undefined) items = json.item;\n          if (json.baseitem !== undefined) items = json.baseitem;\n\n          items.forEach((obj: any) => {\n            if (obj.rarity !== undefined) {\n              if (obj.rarity === \"none\" || obj.rarity === \"unknown\") {\n                let newGear: Gear = parseGear(obj, file.name);\n                promList.push(saveNew(\"gears\", newGear, file.name));\n              } else {\n                let newItem: Item = parseItem(obj, file.name);\n                promList.push(saveNew(\"items\", newItem, file.name));\n              }\n            }\n          });\n          await Promise.all(promList);\n          callback(items.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst parseGear = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    type = obj.type;\n  }\n\n  let damage = \"\";\n  if (obj.dmg1 !== undefined) {\n    damage += obj.dmg1;\n    if (obj.dmgType !== undefined) {\n      if (obj.dmgType === \"S\") damage += \" slashing damage\";\n      else if (obj.dmgType === \"P\") damage += \" piercing damage\";\n      else if (obj.dmgType === \"B\") damage += \" bludgeoning damage\";\n      else if (obj.dmgType === \"R\") damage += \" radiant damage\";\n    }\n  }\n\n  let properties = \"\";\n  if (obj.range !== undefined) {\n    properties += \"ranged (\" + obj.range + \"), \";\n  }\n  if (obj.property !== undefined) {\n    obj.property.forEach((prop: string) => {\n      if (prop === \"L\") properties += \"light, \";\n      else if (prop === \"AF\") properties += \"radiant damage, \";\n      else if (prop === \"RLD\") properties += \"loading, \";\n      else if (prop === \"2H\") properties += \"two-handed, \";\n      else if (prop === \"F\") properties += \"finesse, \";\n      else if (prop === \"H\") properties += \"heavy, \";\n      else if (prop === \"R\") properties += \"reach, \";\n      else if (prop === \"T\") properties += \"thrown, \";\n      else if (prop === \"V\") properties += \"versatile, \";\n    });\n  }\n  properties = properties.trim();\n\n  let newGear = new Gear(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.value,\n    damage,\n    obj.weight,\n    properties,\n    type,\n    fileName\n  );\n  return newGear;\n};\n\nconst parseItem = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let magicBonus = 0;\n  if (obj.bonusSpellAttack !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusSpellAttack.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusWeapon !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusWeapon.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusAc !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusAc.replaceAll(\"+\", \"\"));\n  }\n\n  let attunment = 0;\n  if (obj.reqAttune !== undefined) {\n    attunment = obj.reqAttune ? 1 : 0;\n  }\n\n  let base = \"\";\n  let type = \"\";\n  if (obj.baseItem !== undefined) {\n    let baseParts: string[] = obj.baseItem.split(\"|\");\n    base = baseParts[0];\n    type = baseParts[0];\n  }\n\n  let newItem = new Item(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.rarity,\n    magicBonus,\n    attunment,\n    base,\n    type,\n    fileName\n  );\n  return newItem;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/home\"\n        className={\n          location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faHome} />\n        Home\n      </Link>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/encounter-overview\"\n        className={location.pathname === \"/encounter-overview\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiSwordClash />\n        Encounters\n      </Link>\n      <Link\n        to=\"/library\"\n        className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiBookmarklet />\n        Library\n      </Link>\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n      <Link\n        to=\"/statistics\"\n        className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faChartPie} />\n        Statistics\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.tile.color};\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e:any) => void);\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../Services/OptionService\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport TextButton from \"../FormElements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDragon, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterTile = ({ encounter }: $Props) => {\n  return (\n    <Tile to={\"/encounter-detail/id/\" + encounter.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faUser} />\n            {encounter.players.length}\n          </Prop>\n          <Prop>\n            <Icon icon={faDragon} />\n            {encounter.enemies.length}\n          </Prop>\n          {encounter.isPlaying && (\n            <>\n              <Prop>Aktiv playing</Prop>\n              <Prop>\n                <PropTitle>Round: </PropTitle>\n                {encounter.roundCounter}\n              </Prop>\n            </>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EncounterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\n\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Want to support me?</SelectionTitle>\n        <ExternalLink\n          href=\"https://www.patreon.com/bePatron?u=25310394\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"patreon\"\n        >\n          <FontAwesomeIcon icon={faPatreon} /> Become a patron\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Found some bugs? Or have some feedback?</SelectionTitle>\n        <ExternalLink\n          href=\"https://discord.gg/2KB3tzG\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"discord\"\n        >\n          <FontAwesomeIcon icon={faDiscord} /> Join the discord\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport { generateBrokerId } from \"../../Services/peerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField\n            value={peer.id}\n            label={`Your ${name} ID:`}\n            onChange={() => {}}\n          />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"gears\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all gears`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"items\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all items`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subraces\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n            }\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"classes\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subclasses\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { importFiles, exportAll } from \"../../Services/OptionService\";\nimport {\n  import5eToolsItemsFiles,\n  import5eToolsMonstersFiles,\n  import5eToolsSpellsFiles,\n} from \"../../Services/5eToolService\";\nimport {\n  deleteAll,\n  reciveCount,\n  reciveAllPromise,\n} from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport { isChar } from \"../../Data/Chars/Char\";\nimport { isClass } from \"../../Data/Classes/Class\";\nimport { isSubclass } from \"../../Data/Classes/Subclass\";\nimport { isEncounter } from \"../../Data/Encounter/Encounter\";\nimport { isGear } from \"../../Data/Gear\";\nimport { isItem } from \"../../Data/Item\";\nimport { isMonster } from \"../../Data/Monster\";\nimport { isRace } from \"../../Data/Races/Race\";\nimport { isSubrace } from \"../../Data/Races/Subrace\";\nimport { isSpell } from \"../../Data/Spell\";\n\nimport { faFileImport, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport P2PReciver from \"../P2P/P2PReciver\";\nimport ClassTile from \"../Entities/Classes/ClassTile\";\nimport EncounterTile from \"../Encounters/EncounterTile\";\nimport CharTile from \"../Entities/Chars/CharTile\";\nimport GearTile from \"../Entities/Gear/GearTile\";\nimport ItemTile from \"../Entities/Item/ItemTile\";\nimport MonsterTile from \"../Entities/Monster/MonsterTile\";\nimport RaceTile from \"../Entities/Races/RaceTile\";\nimport SpellTile from \"../Entities/Spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \" of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsSpellImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsSpellsFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsMonsterImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsMonstersFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsItemsImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsItemsFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"DnDTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n          \"Encounters\",\n          \"Other Import\",\n          \"Recive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions amount={gearAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions amount={itemAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions\n          amount={monsterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions\n          amounts={[raceAmount, subraceAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions\n          amount={encounterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Other Import\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Spells</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsSpellImport(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Monsters</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsMonsterImport(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Items/Gear</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsItemsImport(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Recive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (\n    value: string,\n    sort: { name: string; label: string; sort: number }\n  ) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value, sort)}\n      ></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />\n          )}\n          {sort.sort === 2 && (\n            <IconButton\n              onClick={() => changeSort()}\n              icon={faChevronCircleDown}\n            />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringSearchField\n        value={time}\n        sort={sort}\n        field={\"time\"}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(\n          time: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTime(time);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={range}\n        sort={sort}\n        field={\"range\"}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setRange(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={duration}\n        sort={sort}\n        field={\"duration\"}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDuration(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={components}\n        sort={sort}\n        field={\"components\"}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setComponents(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={classes}\n        sort={sort}\n        field={\"classes\"}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setClasses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={text}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setText(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div\n        id=\"scrollable\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <SpellContainer\n          dataLength={spells.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {spells!.map((spell: Spell, index: number) => {\n            return <SpellTile key={index} spell={spell}></SpellTile>;\n          })}\n        </SpellContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport P2PSender from \"../../../P2P/P2PSender\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  spell: Spell;\n  isNew: boolean;\n}\n\nconst SpellDetail = ({ spell, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj, spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${spell.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"spells\", spell.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSpell()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  gear: Gear;\n  isNew: boolean;\n}\n\nconst GearDetail = ({ gear, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${gear.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"gears\", gear.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteGear()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={cost}\n        sort={sort}\n        field={\"cost\"}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setCost(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={weight}\n        sort={sort}\n        field={\"weight\"}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setWeight(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={damage}\n        sort={sort}\n        field={\"damage\"}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDamage(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={properties}\n        sort={sort}\n        field={\"properties\"}\n        label=\"Properties\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setProperties(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <GearContainer\n          dataLength={gears.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {gears!.map((gear: Gear, index: number) => {\n            return <GearTile key={index} gear={gear}></GearTile>;\n          })}\n        </GearContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\nimport NumberField from \"../../FormElements/NumberField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringSearchField\n        value={alignment}\n        sort={sort}\n        field={\"alignment\"}\n        label=\"Alignment\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAlignment(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={speed}\n        sort={sort}\n        field={\"speed\"}\n        label=\"Speed\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSpeed(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={skills}\n        sort={sort}\n        field={\"skills\"}\n        label=\"Skills\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSkills(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={senses}\n        sort={sort}\n        field={\"senses\"}\n        label=\"Senses\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSenses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lang}\n        sort={sort}\n        field={\"lang\"}\n        label=\"Languages\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLang(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgVulnerabilitie}\n        sort={sort}\n        field={\"dmgVulnerabilitie\"}\n        label=\"Vulnerabilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgVulnerabilitie(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgResistance}\n        sort={sort}\n        field={\"dmgResistance\"}\n        label=\"Resistances\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgResistance(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgImmunities}\n        sort={sort}\n        field={\"dmgImmunities\"}\n        label=\"Immunities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={conImmunities}\n        sort={sort}\n        field={\"conImmunities\"}\n        label=\"Con. Immun.\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setConImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={ablt}\n        sort={sort}\n        field={\"ablt\"}\n        label=\"Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sAblt}\n        sort={sort}\n        field={\"sAblt\"}\n        label=\"Spezial Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lAblt}\n        sort={sort}\n        field={\"lAblt\"}\n        label=\"Legendary Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <MonsterContainer\n          dataLength={monsters.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {monsters!.map((monster: Monster, index: number) => {\n            return <MonsterTile key={index} monster={monster}></MonsterTile>;\n          })}\n        </MonsterContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  monster: Monster;\n  isNew: boolean;\n}\n\nconst MonsterDetail = ({ monster, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj, monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${monster.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"monsters\", monster.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteMonster()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView\n          monster={monsterObj}\n          onEdit={(value) => editMonster(value)}\n        />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View key={index}>\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  race: Race;\n  isNew: boolean;\n}\n\nconst RaceDetail = ({ race, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj, race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${race.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"races\", race.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteRace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  subrace: Subrace;\n  isNew: boolean;\n}\n\nconst SubraceDetail = ({ subrace, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj, subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subrace.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subraces\", subrace.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSubrace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView\n          subrace={subraceObj}\n          onEdit={(value) => editSubrace(value)}\n        />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={abilityScores}\n        sort={sort}\n        field={\"abilityScores\"}\n        label=\"Ability Scores\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <RaceContainer\n          dataLength={races.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {races!.map((race: Race, index: number) => {\n            return <RaceTile key={index} race={race}></RaceTile>;\n          })}\n        </RaceContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${item.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  item: Item;\n  isNew: boolean;\n}\n\nconst ItemDetail = ({ item, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj, item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${item.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"items\", item.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteItem()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ItemContainer\n          dataLength={items.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {items!.map((item: Item, index: number) => {\n            return <ItemTile key={index} item={item}></ItemTile>;\n          })}\n        </ItemContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  classe: Class;\n  isNew: boolean;\n}\n\nconst ClassDetail = ({ classe, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${classe.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"classes\", classe.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteClass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses] = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ClassContainer\n          dataLength={classes.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n        </ClassContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclass.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclass} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  subclass: Subclass;\n  isNew: boolean;\n}\n\nconst SubclassDetail = ({ subclass, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj, subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subclass.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subclasses\", subclass.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSubclass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView\n          subclass={subclassObj}\n          onEdit={(value) => editSubclass(value)}\n        />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${char.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={char} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  char: Char;\n  isNew: boolean;\n}\n\nconst CharDetail = ({ char, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${char.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"chars\", char.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <CharContainer\n          dataLength={chars.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {chars!.map((char: Char, index: number) => {\n            return <CharTile key={index} char={char}></CharTile>;\n          })}\n        </CharContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport StringField from \"../FormElements/StringField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst EncounterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Encounter\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default EncounterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 120px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../Loading\";\nimport EncounterTile from \"./EncounterTile\";\nimport EncounterSearchBar from \"./EncounterSearchBar\";\n\nconst EncounterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEncounters, setAllEncounters] = useState<Encounter[]>([]);\n  const [encounters, setEncounters] = useState<Encounter[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"encounters\", filters, (results: any[]) => {\n      setAllEncounters(results);\n      setEncounters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (encounters.length === allEncounters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEncounters((s) =>\n      s.concat(allEncounters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <EncounterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <EncounterContainer\n        dataLength={encounters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {encounters!.map((encounter: Encounter, index: number) => {\n          return <EncounterTile key={index} encounter={encounter}></EncounterTile>;\n        })}\n      </EncounterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default EncounterOverview;\n\nconst EncounterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import Encounter from \"../Data/Encounter/Encounter\";\nimport Player from \"../Data/Encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport IEntity from \"../../../Data/IEntity\";\nimport { isMonster } from \"../../../Data/Monster\";\nimport { reciveByAttribute } from \"../../../Services/DatabaseService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport AutoStringField from \"../../FormElements/AutoStringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport TextButton from \"../../FormElements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport { rollDie } from \"../../../Services/DiceService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport TinyNumberField from \"../../FormElements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterDetail = ({ encounter }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteEncounter(encounterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView\n          encounter={encounterObj}\n          onEdit={(value) => editEncounter(value)}\n        />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          onEdit={(value) => editAndSaveEncounter(value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(\n    db.encounters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItem(db.encounters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToEncounter;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CostRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const costs = await reciveAttributeSelectionPromise(\"gears\", \"cost\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cost of costs) {\n      if (cost !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"cost\",\n          cost.toString()\n        );\n        promList.push({\n          name: cost.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cost Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CostRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst DamageRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"damage\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"damage\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Damage Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default DamageRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst GearTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"type\",\n          type as number\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default GearTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst WeightRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const weights = await reciveAttributeSelectionPromise(\"gears\", \"weight\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const weight of weights) {\n      if (weight !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"weight\",\n          weight.toString()\n        );\n        promList.push({\n          name: weight.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Weight Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default WeightRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reciveCountPromise } from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AmountOfEntitiesChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeGeneralCountsData();\n  }, []);\n\n  const makeGeneralCountsData = async () => {\n    let promList: { name: string; count: number }[] = [];\n    promList.push({\n      name: \"spells\",\n      count: await reciveCountPromise(\"spells\"),\n    });\n    promList.push({ name: \"gears\", count: await reciveCountPromise(\"gears\") });\n    promList.push({ name: \"items\", count: await reciveCountPromise(\"items\") });\n    promList.push({\n      name: \"monsters\",\n      count: await reciveCountPromise(\"monsters\"),\n    });\n    promList.push({ name: \"races\", count: await reciveCountPromise(\"races\") });\n    promList.push({\n      name: \"subraces\",\n      count: await reciveCountPromise(\"subraces\"),\n    });\n    promList.push({\n      name: \"classes\",\n      count: await reciveCountPromise(\"classes\"),\n    });\n    promList.push({\n      name: \"subclasses\",\n      count: await reciveCountPromise(\"subclasses\"),\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Amount of Entities</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AmountOfEntitiesChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 20em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AttunmentRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const attunments = await reciveAttributeSelectionPromise(\"items\", \"attunment\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const attunment of attunments) {\n      if (attunment !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"attunment\",\n          attunment as number\n        );\n        promList.push({\n          name: attunment.toString() === \"0\" ? \"no attunment\" : \"attunment\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Attunment Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AttunmentRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst BaseRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const bases = await reciveAttributeSelectionPromise(\"items\", \"base\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const base of bases) {\n      if (base !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"base\",\n          base.toString()\n        );\n        promList.push({\n          name: base.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Base Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default BaseRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ItemTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"items\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ItemTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MagicBonusRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const magicBoni = await reciveAttributeSelectionPromise(\n      \"items\",\n      \"magicBonus\"\n    );\n\n    let promList: { name: string; count: number }[] = [];\n    for (const magicBonus of magicBoni) {\n      if (magicBonus !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"magicBonus\",\n          magicBonus as number\n        );\n        promList.push({\n          name: \"+\" + magicBonus.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MagicBonusRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RarityRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\"items\", \"rarity\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"rarity\",\n          rarity.toString()\n        );\n        promList.push({\n          name: rarity.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RarityRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CrRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const crs = await reciveAttributeSelectionPromise(\"monsters\", \"cr\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cr of crs) {\n      if (cr !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"cr\",\n          cr as number\n        );\n        promList.push({\n          name: cr.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cr Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CrRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LegendaryRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\n      \"monsters\",\n      \"lAblt\"\n    );\n\n    let leg = 0;\n    let noleg = 0;\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        leg += count;\n      } else {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        noleg += count;\n      }\n    }\n\n    promList.push({\n      name: \"Legendary\",\n      count: leg,\n    });\n    promList.push({\n      name: \"no Legendary\",\n      count: noleg,\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Legendary Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LegendaryRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MonsterTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"monsters\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MonsterTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ActionsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    let times = await reciveAttributeSelectionPromise(\"spells\", \"time\");\n    console.log(times);\n\n    let newTimes:string[] = [];\n    times.forEach((time) => {\n      if(!time.toString().startsWith(\"1 reaction\")) {\n        newTimes.push(time.toString());\n      }\n    })\n\n    let promList: { name: string; count: number }[] = [];\n    for (const time of newTimes) {\n      if (time !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"time\",\n          time.toString()\n        );\n        promList.push({\n          name: time.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Time Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ActionsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800em;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LevelRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const levels = await reciveAttributeSelectionPromise(\"spells\", \"level\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const level of levels) {\n      if (level !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"level\",\n          level as number\n        );\n        promList.push({\n          name: \"Level \" + level.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Level Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LevelRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RitualRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rituals = await reciveAttributeSelectionPromise(\"spells\", \"ritual\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const ritual of rituals) {\n      if (ritual !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"ritual\",\n          ritual as number\n        );\n        promList.push({\n          name: ritual.toString() === \"0\" ? \"no Ritual\" : \"Ritual\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Ritual Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RitualRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst SchoolsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const schools = await reciveAttributeSelectionPromise(\"spells\", \"school\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const school of schools) {\n      if (school !== \"\")\n        promList.push({\n          name: school.toString(),\n          count: await recivePromiseByAttributeCount(\n            \"spells\",\n            \"school\",\n            school.toString()\n          ),\n        });\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>School Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default SchoolsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport CostRatioChart from \"./Gear/CostRatioChart\";\nimport DamageRatioChart from \"./Gear/DamageRatioChart\";\nimport GearTypeRatioChart from \"./Gear/GearTypeRatioChart\";\nimport WeightRatioChart from \"./Gear/WeightRatioChart\";\nimport AmountOfEntitiesChart from \"./General/AmountOfEntitiesChart\";\nimport AttunmentRatioChart from \"./Items/AttunmentRatioChart\";\nimport BaseRatioChart from \"./Items/BaseRatioChart\";\nimport ItemTypeRatioChart from \"./Items/ItemTypeRatioChart\";\nimport MagicBonusRatioChart from \"./Items/MagicBonusRatioChart\";\nimport RarityRatioChart from \"./Items/RarityRatioChart\";\nimport CrRatioChart from \"./Monsters/CrRatioChart\";\nimport LegendaryRatioChart from \"./Monsters/LegendaryRatioChart\";\nimport MonsterTypeRatioChart from \"./Monsters/MonsterTypeRatioChart\";\nimport ActionsRatioChart from \"./Spells/ActionsRatioChart\";\nimport LevelRatioChart from \"./Spells/LevelRatioChart\";\nimport RitualRatioChart from \"./Spells/RitualRatioChart\";\nimport SchoolsRatioChart from \"./Spells/SchoolsRatioChart\";\n\nconst Statistics = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Gears\", \"Magic Items\", \"Monsters\"]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <OptionTab>\n          <AmountOfEntitiesChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <SchoolsRatioChart />\n          <LevelRatioChart />\n          <RitualRatioChart />\n          <ActionsRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <GearTypeRatioChart />\n          <DamageRatioChart />\n          <CostRatioChart />\n          <WeightRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <RarityRatioChart />\n          <AttunmentRatioChart />\n          <MagicBonusRatioChart />\n          <BaseRatioChart />\n          <ItemTypeRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <LegendaryRatioChart />\n          <MonsterTypeRatioChart />\n          <CrRatioChart />\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Statistics;\n\nconst OptionTab = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{book.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              {book.pages}\n            </RowProp>\n            <RowProp>\n              <FontAwesomeIcon icon={faTags} />\n              {book.tags &&\n                book.tags.map((tag: string, index: number) => (\n                  <Tag key={index}>{tag}</Tag>\n                ))}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","export default class Book {\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\nimport Filter from \"../../Data/Filter\";\nimport Book from \"../../Data/Book\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport NumberField from \"../FormElements/NumberField\";\nimport StringSearchField from \"../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst LibrarySearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={tags}\n        sort={sort}\n        field={\"tags\"}\n        label=\"Tags\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTags(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField\n        value={pages}\n        label=\"Pages\"\n        onChange={(pages: number) => setPages(pages)}\n      />\n\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Book\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default LibrarySearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport { LoadingSpinner } from \"../Loading\";\nimport BookTile from \"./BookTile\";\nimport LibrarySearchBar from \"./LibrarySearchBar\";\n\nconst Library = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allBooks, setAllBooks] = useState<Book[]>([]);\n  const [books, setBooks] = useState<Book[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"books\", filters, (results: any[]) => {\n      setAllBooks(results);\n      setBooks(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (books.length === allBooks.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setBooks((s) =>\n      s.concat(allBooks.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <LibrarySearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={books.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {books!.map((book: Book, index: number) => {\n            return <BookTile key={index} book={book}></BookTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default Library;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport FileField from \"../../FormElements/FileField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Dialog from \"../../GeneralElements/Dialog\";\n\ninterface $Props {\n  book: Book;\n  isNew: boolean;\n}\n\nconst BookDetail = ({ book, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj, book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${book.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"books\", book.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateBook(\"books\", bookObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteBook()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { id: string };\n\nconst IdToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItem(db.books, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToBook;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToBook;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Book from \"../../Data/Book\";\nimport Class from \"../../Data/Classes/Class\";\nimport Subclass from \"../../Data/Classes/Subclass\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Gear from \"../../Data/Gear\";\nimport Item from \"../../Data/Item\";\nimport Monster from \"../../Data/Monster\";\nimport Race from \"../../Data/Races/Race\";\nimport Subrace from \"../../Data/Races/Subrace\";\nimport Spell from \"../../Data/Spell\";\nimport {\n  createNewWithId,\n  reciveAllPromise,\n  reciveCount,\n} from \"../../Services/DatabaseService\";\n\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiBookmarklet,\n  GiSwordClash,\n} from \"react-icons/gi\";\nimport {\n  faChartPie,\n  faCog,\n  faDragon,\n  faIdCard,\n  faMeteor,\n  faPlusCircle,\n  faQuestionCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AppWrapper from \"../AppWrapper\";\nimport TextButton from \"../FormElements/TextButton\";\nimport logo from \"../../dndtome icon_v2.png\";\n\nconst Home = () => {\n  let history = useHistory();\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [bookAmount, setBookAmount] = useState<number>(0);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"books\", (result: number) => {\n        setBookAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <General>\n        <HomeSectionLarge>\n          <img src={logo} alt=\"logo\"/>\n        </HomeSectionLarge>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faMeteor} /> Spells\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${spellAmount} spells in your collection. `}\n            {spellAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to spells\"}\n              onClick={() => history.push(`/spell-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSpell()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiCrystalWand /> Magic Items\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${itemAmount} magic items in your collection. `}\n            {itemAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to items\"}\n              onClick={() => history.push(`/item-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewItem()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBackpack /> Gears\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${gearAmount} gears in your collection. `}\n            {gearAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to gears\"}\n              onClick={() => history.push(`/gear-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewGear()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiWomanElfFace /> Races\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${raceAmount} races in your collection. `}\n            {raceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to races\"}\n              onClick={() => history.push(`/race-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subraces</SelectionTitle>\n          <SectionText>\n            {`You have ${subraceAmount} subraces in your collection. `}\n            {subraceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubrace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiPlagueDoctorProfile /> Classes\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${classAmount} classes in your collection. `}\n            {classAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to classes\"}\n              onClick={() => history.push(`/class-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewClass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subclass</SelectionTitle>\n          <SectionText>\n            {`You have ${subclassAmount} subclass in your collection. `}\n            {subclassAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubclass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faIdCard} /> Characters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${charAmount} characters in your collection. `}\n            {charAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to characters\"}\n              onClick={() => history.push(`/char-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => history.push(`/char-lab`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faDragon} /> Monsters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${monsterAmount} monsters in your collection. `}\n            {monsterAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to monsters\"}\n              onClick={() => history.push(`/monster-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewMonster()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiSwordClash /> Encounters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${encounterAmount} encounters in your collection. `}\n            {encounterAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to encounters\"}\n              onClick={() => history.push(`/encounter-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewEncounter()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBookmarklet /> Library\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${bookAmount} pdf's in your collection. `}\n            {bookAmount <= 0 && `Try adding one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to library\"}\n              onClick={() => history.push(`/library`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Add\"}\n              onClick={() => createNewBook()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faChartPie} /> Statistics\n          </SelectionTitle>\n          <SectionText>For more Statistics on your collection...</SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to statistics\"}\n              onClick={() => history.push(`/statistics`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faCog} /> Options\n          </SelectionTitle>\n          <SectionText>\n            To import/export or to make other adjustments to your collection...\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to options\"}\n              onClick={() => history.push(`/options`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Help\n          </SelectionTitle>\n          <SectionText>\n            Help on where to find what and how to add tables or hyperlinks inside of text fields.\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Help\"}\n              onClick={() => history.push(`/help`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Home;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nconst HomeSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n`;\nconst HomeSectionLarge = styled(HomeSection)`\n  min-width: calc(100% - 1em);\n  background-color: transparent;\n  box-shadow: none;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  max-height: 20px;\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n\nconst ButtonBar = styled(SectionText)`\n  align-self: flex-end;\n  max-height: 50px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport FormatedText from \"../GeneralElements/FormatedText\";\nimport TabBar from \"../GeneralElements/TabBar\";\n\nconst Help = () => {\n  const [activeTab, setTab] = useState<string>(\"Create\");\n\n  return (\n    <AppWrapper>\n      <General>\n        <TabBar\n          children={[\"Create\", \"Import\", \"Export\", \"Text Formating\"]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"Create\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create Entitys</SelectionTitle>\n              <SectionText>\n                To create a new Spell for example go to Spells and hit \"Add\n                Spell\" in the top middle.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create Sub-Entitys</SelectionTitle>\n              <SectionText>\n                For subclasses/subraces you need to visit a class/race and click\n                the little circled + in the subclass/subrace section of the\n                class/race.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Import\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>\n                How to import Entitiys via .json files\n              </SelectionTitle>\n              <SectionText>\n                Go to options and select a file in the top left file select\n                dialog titled \"Import\".\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>\n                How to import Entitiys via the send functionallity\n              </SelectionTitle>\n              <SectionText>\n                Go to options and navigate to recive. Add the ID of the sender\n                to the filed and accept sended entities.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import 5eTools files</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to \"Other Import\" and select the file\n                dialog suited for the entity you want to import.\n              </SectionText>\n              <SectionText>Your entity is not listed there?</SectionText>\n              <SectionText>\n                Those will be updated and added gradually.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import from other sources</SelectionTitle>\n              <SectionText>\n                As of now only dndtome and 5eTools .json files are supported.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Export\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>\n                How to export Entitiys to .json files\n              </SelectionTitle>\n              <SectionText>\n                Go to options and click the \"export\"-Button located in the top\n                right section titled \"Export\". This will export your hole\n                collection to one big file! (Excluding your pdf library)\n              </SectionText>\n              <SectionText>\n                Or go to options and navigate to the entities you want to send\n                for example \"Spells\". There you can export all your spells to\n                one file.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>\n                How to send Entitiys via the send functionallity\n              </SelectionTitle>\n              <SectionText>\n                Go to options and navigate to the entities you want to send for\n                example \"Spells\". Click the \"Send all Spells\"-Button and copy\n                the ID.\n              </SectionText>\n              <SectionText>\n                Or go to the entities overview and choose a single entity for\n                example a spell called \"Heal\". Click the \"Send Heal\"-Button and\n                copy the ID.\n              </SectionText>\n              <SectionText>You can now send the ID to the reciver.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export 5eTools files</SelectionTitle>\n              <SectionText>Not supported as of now.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export to other sources</SelectionTitle>\n              <SectionText>\n                As of now you can only export to dndtome .json files.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Text Formating\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create a hyper-link</SelectionTitle>\n              <SectionText>\n                You can add a hyper-link in every textarea.\n              </SectionText>\n              <SectionText>\n                To do so write: [[spell.Heal Me]] to link to the spell with the\n                name \"Heal Me\".\n              </SectionText>\n              <SectionText>\n                Result: <FormatedText text={\"[[spell.Heal Me]]\"} />\n              </SectionText>\n              <SectionText>This works for all entities.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table</SelectionTitle>\n              <SectionText>You can add a table in every textarea.</SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"Cell1\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||\"Header1\"|\"Header2\"|\"Header3\"|...||||\"Cell1\"|\"Cell2\"|\"Cell3\"|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Help;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst HelpSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\nimport EncounterOverview from \"./components/Encounters/EncounterOverview\";\nimport NameToEncounter from \"./components/Encounters/Detail/LinkWrapper/NameToEncounter\";\nimport IdToEncounter from \"./components/Encounters/Detail/LinkWrapper/IdToEncounter\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Library from \"./components/Library/Library\";\nimport IdToBook from \"./components/Library/Detail/LinkWrapper/IdToBook\";\nimport NameToBook from \"./components/Library/Detail/LinkWrapper/NameToBook\";\nimport Home from \"./components/Home/Home\";\nimport Help from \"./components/Help/Help\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/home\" component={Home}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n          <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n          <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n          <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n          <Route path=\"/statistics\" component={Statistics}></Route>\n          <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n          <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n          <Route path=\"/library\" component={Library}></Route>\n          <Route path=\"/help\" component={Help}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}