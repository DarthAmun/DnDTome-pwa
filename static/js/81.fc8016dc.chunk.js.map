{"version":3,"sources":["components/entities/monster/details/link_wrapper/IdToMonster.tsx"],"names":["IdToMonster","match","db","MyAppDatabase","useItem","monsters","params","id","monster","loading","error","undefined","isNew","name"],"mappings":"iLAyBeA,UAfK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACfC,EAAK,IAAIC,IADgD,EAE7BC,YAAQF,EAAGG,UAAWJ,EAAMK,OAAOC,IAFN,mBAExDC,EAFwD,KAE/CC,EAF+C,KAEtCC,EAFsC,KAI/D,OACE,kBAAC,IAAD,MACIA,GAASD,GAAW,kBAAC,IAAD,MACrBC,IAAUD,GAAW,mDACpBC,IAAUD,QAAuBE,IAAZH,GACrB,kBAAC,IAAD,CAAeA,QAASA,EAASI,MAAwB,KAAjBJ,EAAQK","file":"static/js/81.fc8016dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n"],"sourceRoot":""}