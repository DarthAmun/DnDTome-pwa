{"version":3,"sources":["components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","services/CharacterService.tsx","components/form_elements/CheckField.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/DataSelectField.tsx","data/chars/BuildChar.tsx","components/form_elements/EnumField.tsx","components/form_elements/AutoStringField.tsx","data/Modifier.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","components/form_elements/SingleSelectField.tsx","hooks/QueryHook.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx"],"names":["LinkCheck","type","name","useState","loading","setLoading","entitiyFound","setEntity","useEffect","newType","recivePromiseByAttributeCount","then","count","icon","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","FormatedTextContainer","FormatedText","text","webhook","useWebhook","json","setJson","formatedText","setFormatedText","history","useHistory","undefined","newText","formatDiscordText","length","substring","newJson","username","content","JSON","stringify","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","adv","dis","includes","rollCommand","result","rolls","result2","rollString","resultText","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","formatLink","index","parts","split","formattedParts","forEach","part","codePart","linkParts","linkEntity","push","TextPart","DiscordPart","onClick","Adv","Dis","entityParts","link","Link","formatTable","textPart","newTable","table","tableEnd","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","IconButton","style","backgroundColor","float","padding","faDiscord","sendEmbedMessage","styled","div","span","theme","tile","backgroundColorLink","th","input","color","td","NumberField","max","step","label","transform","onChange","Field","LabelText","Icon","Input","e","target","FontAwesomeIcon","main","highlight","TabBar","children","activeTab","Bar","child","Tab","isActive","buttons","props","recalcClasses","char","a","bonis","spellSlots","fullClassList","classList","classes","classe","sources","recivePromiseByMultiAttribute","Promise","all","classSet","class","featureSet","featureSets","level","boni","isCurrency","origin","spellslots","slots","updatedBonis","newBoni","updatedOldBonis","currencyBonis","old","Array","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","calcLevel","calcProf","Math","ceil","buildCharacter","character","console","time","prof","subclasses","classFeatures","raceFeatures","gears","items","monsters","subclassList","itemList","gearList","baseList","monsterList","spellList","subclasse","item","monster","spells","spell","currentItems","base","recivePromiseByAttribute","currentGears","currentBases","filter","q","idx","findIndex","g","log","race","subrace","classLevel","charClass","subclass","features","traits","trait","originItem","toLowerCase","gear","timeEnd","modifiers","concat","extractModifier","description","feature","BuildChar","extractTarget","newModifiers","rawModifier","Modifier","ModifierOperator","EQUAL","ADD","SUBSTRACT","applyMods","newChar","sort","b","operator","mod","replacePlaceholder","isArray","modPromises","resolve","reject","entity","oldCharacter","rawPlaceholder","replace","floor","eval","CheckField","defaultChecked","checked","Checkmark","ClassSet","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","Char","id","player","campaign","pic","picBase64","background","activeSelections","ac","hp","currentHp","init","speed","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","DataSelectField","optionTable","filters","optionsTable","options","setOptions","findAllItems","entityList","reciveAllFilteredPromise","entities","o","handleChange","option","StyledSelect","isMulti","classNamePrefix","Select","Race","Subrace","EnumField","AutoStringField","term","setTerm","allOptions","filteredOptions","setFilteredOptions","reciveAllFiltered","data","onSearch","searchTerm","newOptions","startsWith","slice","onKeyDown","key","applyTerm","Options","opt","Option","op","tar","_defineProperties","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","SingleSelectField","useQuery","URLSearchParams","useLocation","search","CharLabGeneral","completed","CenterWrapper","CharView","StringField","faCheckCircle","disabled","CharLabClass","setClasses","setSubclasses","reciveAll","results","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","PropWrapper","faTrash","oldClass","newClassList","removeClass","c","s","TextButton","faPlus","addNewClass","Text","PropTitle","proficiencies","CharLabRace","races","setRaces","subraces","setSubraces","r","abilityScores","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","setRace","setSubrace","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","fieldName","onChangeItem","newItem","onChangeItemAttribute","equipment","Container","attuned","attunment","attribute","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","CharLab","get","setTab","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","tab","View","nextTab","Prop","faEdit","saveWithCallback"],"mappings":"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","file":"static/js/12.a8cfd604.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string, adv: boolean, dis: boolean) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n        const { result: result2, rolls: rolls2 } = rollCommand(newCommand);\n\n        let krit = false;\n        if (!adv && !dis && result - value === 20) krit = true;\n        else if (adv && (result - value === 20 || result2 - value === 20)) krit = true;\n        else if (dis && result - value === 20 && result2 - value === 20) krit = true;\n\n        let fail = false;\n        if (!adv && !dis && result - value === 1) fail = true;\n        else if (adv && result - value === 1 && result - value === 1) fail = true;\n        else if (dis && (result - value === 1 || result - value === 1)) fail = true;\n\n        let rollString = \"d20\" + rolls + rolls2 + command;\n        rollString += adv ? \"adv\" : \"\";\n        rollString += dis ? \"dis\" : \"\";\n\n        if (result !== undefined && webhook !== undefined) {\n          if (adv) {\n            let resultText =\n              result >= result2\n                ? \"**\" + result + \"** ~~\" + result2 + \"~~\"\n                : \"~~\" + result + \"~~ **\" + result2 + \"**\";\n            sendMessage(\n              webhook,\n              resultText +\n                \" \" +\n                text +\n                (fail ? \" :red_circle:\" : \"\") +\n                (krit ? \" :green_circle:\" : \"\") +\n                \" ||\" +\n                rollString +\n                \"||\"\n            );\n          } else if (dis) {\n            let resultText =\n              result >= result2\n                ? \"~~\" + result + \"~~ **\" + result2 + \"**\"\n                : \"**\" + result + \"** ~~\" + result2 + \"~~\";\n            sendMessage(\n              webhook,\n              resultText +\n                \" \" +\n                text +\n                (fail ? \" :red_circle:\" : \"\") +\n                (krit ? \" :green_circle:\" : \"\") +\n                \" ||\" +\n                rollString +\n                \"||\"\n            );\n          } else {\n            sendMessage(\n              webhook,\n              result +\n                \" \" +\n                text +\n                (fail ? \" :red_circle:\" : \"\") +\n                (krit ? \" :green_circle:\" : \"\") +\n                \" ||\" +\n                rollString +\n                \"||\"\n            );\n          }\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        const { result: result2, rolls: rolls2 } = rollCommand(command);\n\n        let rollString = command + rolls + rolls2;\n        rollString += adv ? \" adv\" : \"\";\n        rollString += dis ? \" dis\" : \"\";\n\n        if (result !== undefined && webhook !== undefined) {\n          if (adv) {\n            let resultText =\n              result >= result2\n                ? \"**\" + result + \"** ~~\" + result2 + \"~~\"\n                : \"~~\" + result + \"~~ **\" + result2 + \"**\";\n            sendMessage(webhook, resultText + \" \" + text + \" ||\" + rollString + \"||\");\n          } else if (dis) {\n            let resultText =\n              result >= result2\n                ? \"~~\" + result + \"~~ **\" + result2 + \"**\"\n                : \"**\" + result + \"** ~~\" + result2 + \"~~\";\n            sendMessage(webhook, resultText + \" \" + text + \" ||\" + rollString + \"||\");\n          } else {\n            sendMessage(webhook, result + \" \" + text + \" ||\" + rollString + \"||\");\n          }\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string, index: number): JSX.Element => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={\"TextPart\" + index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1], false, false)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <Adv onClick={() => rollDiscord(linkParts[1], true, false)}>Adv</Adv>\n                    <Dis onClick={() => rollDiscord(linkParts[1], false, true)}>Dis</Dis>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                if (linkParts[1].includes(\"|\")) {\n                  const entityParts = linkParts[1].split(\"|\");\n                  const link: string =\n                    \"/\" + linkEntity + \"-detail/name/\" + entityParts[0] + \"|\" + entityParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={entityParts[0]} /> {entityParts[0]} (\n                        {entityParts[1]})\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                } else {\n                  const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                }\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else if (text.length > 0) {\n          return <TextPart key={\"TextPart\" + index}>{text}</TextPart>;\n        }\n      }\n      return <></>;\n    },\n    // eslint-disable-next-line\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string): JSX.Element[] => {\n      if (textPart.includes(\"||tableStart||\")) {\n        let newTable: JSX.Element[] = [];\n        const table: string[] = text.split(\"||tableStart||\");\n\n        table.forEach((textPart: string, index: number) => {\n          if (textPart.includes(\"||tableEnd||\")) {\n            const tableEnd = textPart.split(\"||tableEnd||\");\n            const tableRows: string[] = tableEnd[0].split(\"||\");\n            let isHead = true;\n            newTable.push(\n              <table key={\"table\" + index}>\n                <tbody key={\"tbody\" + index}>\n                  {tableRows.map((row: string, index: number) => {\n                    if (row.includes(\"|\")) {\n                      if (isHead) {\n                        isHead = false;\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                            })}\n                          </tr>\n                        );\n                      } else {\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableProp key={index}>{formatLink(cell, index)}</TableProp>;\n                            })}\n                          </tr>\n                        );\n                      }\n                    } else {\n                      return <></>;\n                    }\n                  })}\n                </tbody>\n              </table>\n            );\n            newTable.push(formatLink(tableEnd[1], index));\n          } else {\n            newTable.push(formatLink(table[0], index));\n          }\n        });\n        return newTable;\n      }\n      return [formatLink(textPart, 0)];\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n`;\nconst Adv = styled(Link)`\n  background-color: #7289da;\n  color: white;\n  border-radius: 0px;\n`;\nconst Dis = styled(Link)`\n  background-color: #7289da;\n  color: white;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import BuildChar from \"../data/chars/BuildChar\";\nimport Char from \"../data/chars/Char\";\nimport ClassSet from \"../data/chars/ClassSet\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Modifier, { ModifierOperator } from \"../data/Modifier\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { recivePromiseByAttribute, recivePromiseByMultiAttribute } from \"./DatabaseService\";\n\nexport const recalcClasses = async (char: Char) => {\n  let bonis: { origin: string; value: number; max: number }[] = [];\n  let spellSlots: {\n    origin: string;\n    slots: number[];\n    max: number[];\n  }[] = [];\n  let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n  let classList: Promise<Class>[] = [];\n\n  char.classes.forEach((classe) => {\n    let [name, sources] = classe.classe.split(\"|\");\n    classList.push(recivePromiseByMultiAttribute(\"classes\", { name: name, sources: sources }));\n  });\n  const results = await Promise.all(classList);\n  results.forEach((classe: Class) => {\n    char.classes.forEach((classSet) => {\n      if (classe.name === classSet.classe.split(\"|\")[0]) {\n        fullClassList.push({ class: classe, classSet: classSet });\n      }\n    });\n  });\n\n  fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n    let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n    if (featureSet.bonis) {\n      featureSet.bonis.forEach((boni: Boni) => {\n        if (boni.isCurrency) {\n          bonis = [\n            ...bonis,\n            {\n              origin: boni.name,\n              value: +boni.value,\n              max: +boni.value,\n            },\n          ];\n        }\n      });\n    }\n    if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n      spellSlots = [\n        ...spellSlots,\n        {\n          origin: classe.class.name,\n          slots: featureSet.spellslots,\n          max: featureSet.spellslots,\n        },\n      ];\n    }\n  });\n\n  let updatedBonis = bonis.map((newBoni) => {\n    let updatedOldBonis = char.currencyBonis.map((old) => {\n      if (newBoni.origin === old.origin) {\n        return {\n          origin: newBoni.origin,\n          value: old.value,\n          max: newBoni.max,\n        };\n      } else {\n        return null;\n      }\n    });\n    if (\n      updatedOldBonis &&\n      updatedOldBonis.length > 0 &&\n      updatedOldBonis[0] !== undefined &&\n      updatedOldBonis[0] !== null\n    ) {\n      return updatedOldBonis[0];\n    } else {\n      return newBoni;\n    }\n  });\n  if (updatedBonis && updatedBonis.length > 0) {\n    bonis = Array.from(updatedBonis);\n  }\n\n  if (char.spellSlots && char.spellSlots.length > 0) {\n    let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n      let updatedOldSlots = char.spellSlots.map((old) => {\n        if (newSpellSlots.origin === old.origin) {\n          return {\n            origin: newSpellSlots.origin,\n            slots: old.slots,\n            max: newSpellSlots.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldSlots &&\n        updatedOldSlots.length > 0 &&\n        updatedOldSlots[0] !== undefined &&\n        updatedOldSlots[0] !== null\n      ) {\n        return updatedOldSlots[0];\n      } else {\n        return newSpellSlots;\n      }\n    });\n    if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n      spellSlots = Array.from(updatedSpellSlots);\n    }\n  }\n\n  let updatedChar = {\n    ...char,\n    spellSlots: spellSlots,\n    currencyBonis: bonis,\n  };\n  return updatedChar;\n};\n\nexport const calcLevel = (char: Char): number => {\n  let level = 0;\n  char.classes.forEach((classe) => {\n    level += classe.level;\n  });\n  return level;\n};\n\nexport const calcProf = (char: Char): number => {\n  let level = calcLevel(char);\n  return Math.ceil(level / 4) + 1;\n};\n\nexport const buildCharacter = async (character: Char): Promise<BuildChar> => {\n  console.time(\"build Character\");\n  let level: number = calcLevel(character);\n  let prof: number = calcProf(character);\n  let classes: Class[] = [];\n  let subclasses: Subclass[] = [];\n  let classFeatures: FeatureSet[] = [];\n  let race: Race;\n  let subrace: Subrace;\n  let raceFeatures: Trait[] = [];\n  let gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let spells: Spell[];\n  let monsters: Monster[] = [];\n\n  console.time(\"load\");\n  let classList: Promise<Class>[] = [];\n  let subclassList: Promise<Subclass>[] = [];\n  let itemList: Promise<Item>[] = [];\n  let gearList: Promise<Gear>[] = [];\n  let baseList: Promise<Gear>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n  let spellList: Promise<Spell>[] = [];\n\n  character.classes.forEach((classe) => {\n    let [name, sources] = classe.classe.split(\"|\");\n    classList.push(recivePromiseByMultiAttribute(\"classes\", { name: name, sources: sources }));\n    [name, sources] = classe.subclasse.split(\"|\");\n    subclassList.push(\n      recivePromiseByMultiAttribute(\"subclasses\", { name: name, sources: sources })\n    );\n  });\n  character.items.forEach((item) => {\n    let [name, sources] = item.origin.split(\"|\");\n    itemList.push(recivePromiseByMultiAttribute(\"items\", { name: name, sources: sources }));\n    gearList.push(recivePromiseByMultiAttribute(\"gears\", { name: name, sources: sources }));\n  });\n  character.monsters.forEach((monster: string) => {\n    let [name, sources] = monster.split(\"|\");\n    monsterList.push(recivePromiseByMultiAttribute(\"monsters\", { name: name, sources: sources }));\n  });\n  character.spells.forEach((spell: string) => {\n    let [name, sources] = spell.split(\"|\");\n    spellList.push(recivePromiseByMultiAttribute(\"spells\", { name: name, sources: sources }));\n  });\n\n  let currentItems = await Promise.all(itemList);\n  currentItems.forEach((item) => {\n    if (item !== undefined) {\n      let [name, sources] = item.base.split(\"|\");\n      if (sources !== undefined) {\n        baseList.push(recivePromiseByMultiAttribute(\"gears\", { name: name, sources: sources }));\n      } else {\n        baseList.push(recivePromiseByAttribute(\"gears\", \"name\", name));\n      }\n    }\n  });\n\n  classes = await Promise.all(classList);\n  subclasses = await Promise.all(subclassList);\n  monsters = await Promise.all(monsterList);\n  spells = await Promise.all(spellList);\n  let currentGears = await Promise.all(gearList);\n  let currentBases = await Promise.all(baseList);\n\n  currentBases = currentBases\n    .filter((q) => q !== undefined)\n    .filter((q, idx) => currentBases.findIndex((g) => g.name === q.name) === idx);\n\n  console.log(currentBases);\n\n  let [name, sources] = character.race.race.split(\"|\");\n  race = await recivePromiseByMultiAttribute(\"races\", { name: name, sources: sources });\n  [name, sources] = character.race.subrace.split(\"|\");\n  subrace = await recivePromiseByMultiAttribute(\"subraces\", { name: name, sources: sources });\n\n  classes.forEach((classe: Class) => {\n    if (classe !== undefined) {\n      let classLevel = 0;\n      character.classes.forEach((charClass) => {\n        if (charClass !== undefined)\n          if (classe.name === charClass.classe.split(\"|\")[0]) {\n            classLevel = charClass.level;\n          }\n      });\n      classe.featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet !== undefined) {\n          if (featureSet.level <= classLevel) {\n            classFeatures.push(featureSet);\n          }\n        }\n      });\n      subclasses?.forEach((subclass: Subclass) => {\n        if (subclass !== undefined)\n          if (subclass.type.split(\"|\")[0] === classe.name) {\n            subclass.features.forEach((featureSet: FeatureSet) => {\n              if (featureSet.level <= classLevel) {\n                classFeatures.push(featureSet);\n              }\n            });\n          }\n      });\n    }\n  });\n\n  if (race !== undefined) {\n    race.traits.forEach((trait: Trait) => {\n      if (trait !== undefined) {\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n      }\n    });\n    subrace?.traits.forEach((trait: Trait) => {\n      if (trait !== undefined) {\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n      }\n    });\n  }\n  character.items.forEach((originItem) => {\n    if (originItem !== undefined) {\n      currentItems.forEach(async (item: Item) => {\n        if (item !== undefined) {\n          if (\n            originItem.origin.toLowerCase() ===\n            item.name.toLowerCase() + \"|\" + item.sources.toLowerCase()\n          ) {\n            if (item.base !== \"\") {\n              currentBases.forEach((base: Gear) => {\n                if (base !== undefined) {\n                  let [name, sources] = item.base.split(\"|\");\n                  if (\n                    (sources !== undefined &&\n                      base.name.toLowerCase() + \"|\" + base.sources.toLowerCase() ===\n                        name.toLowerCase()) ||\n                    (sources === undefined && base.name.toLowerCase() === name.toLowerCase())\n                  ) {\n                    items.push({ ...originItem, item: item, base: base });\n                  }\n                }\n              });\n            } else {\n              items.push({ ...originItem, item: item, base: undefined });\n            }\n          }\n        }\n      });\n      currentGears.forEach((gear: Gear) => {\n        if (gear !== undefined)\n          if (\n            originItem.origin.toLowerCase() ===\n            gear.name.toLowerCase() + \"|\" + gear.sources.toLowerCase()\n          ) {\n            gears.push({ ...originItem, gear: gear });\n          }\n      });\n    }\n  });\n  console.timeEnd(\"load\");\n\n  console.time(\"modifier\");\n  let modifiers: Modifier[] = [];\n  gears.forEach((gear) => {\n    modifiers = modifiers.concat(extractModifier(gear.gear.description, \"Gear: \" + gear.origin));\n  });\n  items.forEach((item) => {\n    modifiers = modifiers.concat(\n      extractModifier(item.item.description, \"Magic Item: \" + item.origin)\n    );\n  });\n  raceFeatures.forEach((trait) => {\n    modifiers = modifiers.concat(extractModifier(trait.text, \"Race Feature: \" + trait.name));\n  });\n  classFeatures.forEach((featureSet) => {\n    featureSet.features.forEach((feature) => {\n      modifiers = modifiers.concat(extractModifier(feature.text, \"Class Feature: \" + feature.name));\n    });\n  });\n  console.timeEnd(\"modifier\");\n\n  items = items.filter((item) => item !== undefined);\n  gears = gears.filter((gear) => gear !== undefined);\n  spells = spells.filter((spell) => spell !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"build Character\");\n  return new BuildChar(\n    character,\n    level,\n    prof,\n    classes,\n    subclasses,\n    classFeatures,\n    race,\n    subrace,\n    raceFeatures,\n    gears,\n    items,\n    spells,\n    monsters,\n    modifiers\n  );\n};\n\nconst cut = (str: string, cutStart: number, cutEnd: number) => {\n  return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n};\n\nconst extractTarget = (target: string): string | string[] => {\n  if (target.includes(\".\")) {\n    return target.split(\".\");\n  }\n  return target;\n};\n\nconst extractModifier = (text: string, origin: string): Modifier[] => {\n  let newModifiers: Modifier[] = [];\n\n  while (text.includes(\"{{\")) {\n    const cutStart = text.indexOf(\"{{\");\n    const cutEnd = text.indexOf(\"}}\");\n    const rawModifier = text.substring(cutStart + 2, cutEnd);\n    text = cut(text, cutStart, cutEnd + 1);\n\n    if (rawModifier.includes(\"=\")) {\n      const split = rawModifier.split(\"=\");\n\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.EQUAL,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"+\")) {\n      const split = rawModifier.split(\"+\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.ADD,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"-\")) {\n      const split = rawModifier.split(\"-\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.SUBSTRACT,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    }\n  }\n  return newModifiers;\n};\n\nexport const applyMods = async (char: BuildChar, modifiers: boolean): Promise<BuildChar> => {\n  if (modifiers) {\n    let newChar = char;\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (typeof mod.target == \"string\") {\n          const target: string = mod.target;\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: replacePlaceholder(newChar, mod.value),\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: newChar.character[target] + mod.value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) + value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) - value,\n              },\n            };\n          }\n        } else if (Array.isArray(mod.target) && mod.target[1] !== \"add\") {\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: replacePlaceholder(newChar, mod.value),\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: newChar.character[mod.target[0]][mod.target[1]] + mod.value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) + value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) - value,\n                },\n              },\n            };\n          }\n        }\n      });\n\n    let modPromises: Promise<boolean>[] = [];\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (mod.target[1] === \"add\" && typeof mod.value == \"string\") {\n          const value: string = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              recivePromiseByAttribute(mod.target[0], \"name\", value.replaceAll('\"', \"\")).then(\n                (entity) => {\n                  newChar = { ...newChar, [mod.target[0]]: [...newChar[mod.target[0]], entity] };\n                  resolve(true);\n                }\n              );\n            })\n          );\n        }\n      });\n    await Promise.all(modPromises);\n    return newChar;\n  } else {\n    return { ...char, character: char.oldCharacter };\n  }\n};\n\nexport const replacePlaceholder = (char: BuildChar, text: string | number) => {\n  if (typeof text == \"string\" && text.includes(\"[\") && text.includes(\"]\")) {\n    text = text.replaceAll('\"', \"\");\n    while (text.includes(\"[\") && text.includes(\"]\")) {\n      const cutStart = text.indexOf(\"[\");\n      const cutEnd = text.indexOf(\"]\");\n      const rawPlaceholder = text.substring(cutStart + 1, cutEnd);\n      text = text.replace(text.substring(cutStart, cutEnd + 1), char.character[rawPlaceholder]);\n    }\n    // eslint-disable-next-line\n    return Math.floor(eval(text));\n  }\n  return text;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  optionTable: string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst DataSelectField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string[]>(optionTable);\n  const [options, setOptions] = useState<\n    {\n      value: string;\n      label: string;\n    }[]\n  >([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let entityList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        entityList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(entityList);\n      results.forEach((entities: IEntity[]) => {\n        entities.forEach((entity: IEntity) => {\n          setOptions((o) =>\n            o.concat({\n              value: entity.name + \"|\" + entity.sources,\n              label: entity.name + \"|\" + entity.sources,\n            })\n          );\n        });\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionsTable !== undefined && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n      setLoading(false);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {loading && <LocalLoadingSpinner />}\n      {!loading && (\n        <StyledSelect\n          isMulti={false}\n          classNamePrefix=\"react-select\"\n          value={{\n            value: value,\n            label: value,\n          }}\n          options={options}\n          onChange={(option: { value: string; label: string }) => handleChange(option)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default DataSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import Class from \"../classes/Class\";\nimport FeatureSet from \"../classes/FeatureSet\";\nimport Subclass from \"../classes/Subclass\";\nimport Gear from \"../Gear\";\nimport Item from \"../Item\";\nimport Modifier from \"../Modifier\";\nimport Monster from \"../Monster\";\nimport Race from \"../races/Race\";\nimport Subrace from \"../races/Subrace\";\nimport Trait from \"../races/Trait\";\nimport Spell from \"../Spell\";\nimport Char from \"./Char\";\n\nexport default class BuildChar {\n  character: Char;\n  oldCharacter: Char;\n  level: number;\n  prof: number;\n  classes: Class[];\n  subclasses: Subclass[];\n  classFeatures: FeatureSet[];\n  race: Race;\n  subrace: Subrace;\n  raceFeatures: Trait[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  spells: Spell[];\n  monsters: Monster[];\n  modifiers: Modifier[];\n\n  constructor(\n    character?: Char,\n    level?: number,\n    prof?: number,\n    classes?: Class[],\n    subclasses?: Subclass[],\n    classFeatures?: FeatureSet[],\n    race?: Race,\n    subrace?: Subrace,\n    raceFeatures?: Trait[],\n    gears?: {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    items?: {\n      item: Item;\n      base: Gear | undefined;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    spells?: Spell[],\n    monsters?: Monster[],\n    modifiers?: Modifier[]\n  ) {\n    this.character = character || new Char();\n    this.oldCharacter = character || new Char();\n    this.level = level || 0;\n    this.prof = prof || 0;\n    this.classes = classes || [];\n    this.subclasses = subclasses || [];\n    this.classFeatures = classFeatures || [];\n    this.race = race || new Race();\n    this.subrace = subrace || new Subrace();\n    this.raceFeatures = raceFeatures || [];\n    this.gears = gears || [];\n    this.items = items || [];\n    this.spells = spells || [];\n    this.monsters = monsters || [];\n    this.modifiers = modifiers || [];\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable?: string | string[];\n  options?: IEntity[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  options,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [term, setTerm] = useState<string>(value);\n  const [optionsTable] = useState<string | string[]>(optionTable !== undefined ? optionTable : []);\n  const [allOptions, setOptions] = useState<IEntity[]>(options !== undefined ? options : []);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionTable !== undefined) {\n      if (typeof optionsTable === \"string\") {\n        reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n          setOptions(data);\n        });\n      }\n      if (optionsTable instanceof Array && optionsTable.length > 0) {\n        findAllItems(optionsTable);\n      }\n    }\n  }, [optionTable, optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      console.time(\"search\");\n      setTerm(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = allOptions\n          .filter((option) => {\n            return option.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n      console.timeEnd(\"search\");\n    },\n    [allOptions]\n  );\n\n  const applyTerm = (e: any) => {\n    if (e.key === \"Enter\") {\n      onChange(term);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={term}\n        onChange={(e) => onSearch(e.target.value)}\n        onKeyDown={(e) => applyTerm(e)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option\n                key={index}\n                onClick={(e) => {\n                  setTerm(opt.name + \"|\" + opt.sources);\n                  onChange(opt.name + \"|\" + opt.sources);\n                }}\n              >\n                {opt.name}|{opt.sources}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","export enum ModifierOperator {\n  EQUAL,\n  ADD,\n  SUBSTRACT,\n}\n\nexport default class Modifier {\n  target: string | string[];\n  operator: ModifierOperator;\n  value: string | number;\n  origin: string;\n\n  constructor(\n    target: string | string[],\n    operator: ModifierOperator,\n    value: string | number,\n    origin: string\n  ) {\n    this.target = target;\n    this.operator = operator;\n    this.value = value;\n    this.origin = origin;\n  }\n\n  makeString(): string {\n    let op = \"\";\n    if (this.operator === ModifierOperator.ADD) {\n      op = \"+\";\n    } else if (this.operator === ModifierOperator.SUBSTRACT) {\n      op = \"-\";\n    } else if (this.operator === ModifierOperator.EQUAL) {\n      op = \"=\";\n    }\n\n    let tar = \"\";\n    if (Array.isArray(this.target)) {\n      tar = `${this.target[0]}.${this.target[1]}`;\n    } else {\n      tar = this.target;\n    }\n\n    return `${tar} ${op} ${this.value}`;\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  style?: any;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, style, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field style={style}>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <DataSelectField\n          optionTable={[\"campaigns\"]}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n\n  useEffect(() => {\n    reciveAll(\"classes\", (results: any[]) => {\n      setClasses(results);\n    });\n    reciveAll(\"subclasses\", (results: any[]) => {\n      setSubclasses(results);\n    });\n  }, []);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {classes &&\n          subclasses &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropWrapper key={index}>\n                <NumberField\n                  value={classSet.level}\n                  label=\"Level *\"\n                  onChange={(level) => changeClassLevel(classSet, level)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n                <SingleSelectField\n                  options={classes?.map((c) => {\n                    return { value: c.name + \"|\" + c.sources, label: c.name + \"|\" + c.sources };\n                  })}\n                  value={classSet.classe}\n                  label=\"Class *\"\n                  onChange={(classe) => changeClass(classSet, classe)}\n                />\n                <SingleSelectField\n                  options={subclasses\n                    ?.filter((s) => s.type === classSet.classe.split(\"|\")[0])\n                    .map((c) => {\n                      return { value: c.name + \"|\" + c.sources, label: c.name + \"|\" + c.sources };\n                    })}\n                  value={classSet.subclasse}\n                  label=\"Subclass\"\n                  onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n                />\n              </PropWrapper>\n            );\n          })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return classes\n                .filter((c) => c.name === classSet.classe)\n                .map((classe, i: number) => {\n                  return (\n                    <Text key={index + i}>\n                      <PropTitle>{classe.name}:</PropTitle>\n                      <FormatedText text={classe.proficiencies} />\n                    </Text>\n                  );\n                });\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAll, recivePromiseByMultiAttribute } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [races, setRaces] = useState<Race[]>();\n  const [subraces, setSubraces] = useState<Subrace[]>();\n\n  useEffect(() => {\n    let classList: Promise<Class>[] = [];\n    char.classes.forEach((classe: ClassSet) => {\n      let [name, sources] = classe.classe.split(\"|\");\n      classList.push(recivePromiseByMultiAttribute(\"classes\", { name: name, sources: sources }));\n    });\n    Promise.all(classList).then(setClasses);\n  }, [char.classes]);\n\n  useEffect(() => {\n    reciveAll(\"races\", (results: any[]) => {\n      setRaces(results);\n    });\n    reciveAll(\"subraces\", (results: any[]) => {\n      setSubraces(results);\n    });\n  }, []);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name + \"|\" + classe.sources}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        {races && subraces && (\n          <CharView>\n            <SingleSelectField\n              options={races?.map((c) => {\n                return { value: c.name + \"|\" + c.sources, label: c.name + \"|\" + c.sources };\n              })}\n              value={char.race.race}\n              label=\"Race *\"\n              onChange={(race) => onChange({ ...char, race: { ...char.race, race: race } })}\n            />\n            <SingleSelectField\n              options={subraces\n                ?.filter((s) => s.type === char.race.race)\n                .map((c) => {\n                  return { value: c.name + \"|\" + c.sources, label: c.name + \"|\" + c.sources };\n                })}\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onChange({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n            <IconButton\n              icon={faCheckCircle}\n              disabled={!(char && char.race && char.race.race.length > 1)}\n              onClick={() => completed(true, \"Abilities\")}\n            />\n            <PropWrapper>\n              {char.race &&\n                races\n                  .filter(\n                    (r) =>\n                      r.name === char.race.race.split(\"|\")[0] &&\n                      r.sources === char.race.race.split(\"|\")[1]\n                  )\n                  .map((race) => {\n                    return (\n                      <Text>\n                        <PropTitle>{race.name}:</PropTitle>\n                        <FormatedText text={race.abilityScores} />\n                        <br />\n                        <FormatedText text={race.speed} />\n                        {race.traits.map((trait: Trait, index: number) => {\n                          return (\n                            <TraitWrapper key={index}>\n                              <TraitName>{trait.name}</TraitName>\n                              <TraitLevel>Level: {trait.level}</TraitLevel>\n                              <TraitText>\n                                <FormatedText text={trait.text} />\n                              </TraitText>\n                            </TraitWrapper>\n                          );\n                        })}\n                      </Text>\n                    );\n                  })}\n              {char.race.subrace &&\n                subraces\n                  .filter(\n                    (r) =>\n                      r.name === char.race.subrace.split(\"|\")[0] &&\n                      r.sources === char.race.subrace.split(\"|\")[1]\n                  )\n                  .map((subrace) => {\n                    return (\n                      <Text>\n                        <PropTitle>{subrace.name}:</PropTitle>\n                        <FormatedText text={subrace.abilityScores} />\n                        <br />\n                        <FormatedText text={subrace.type} />\n                        {subrace.traits.map((trait: Trait, index: number) => {\n                          return (\n                            <TraitWrapper key={index}>\n                              <TraitName>{trait.name}</TraitName>\n                              <TraitLevel>Level: {trait.level}</TraitLevel>\n                              <TraitText>\n                                <FormatedText text={trait.text} />\n                              </TraitText>\n                            </TraitWrapper>\n                          );\n                        })}\n                      </Text>\n                    );\n                  })}\n            </PropWrapper>\n          </CharView>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { recivePromiseByMultiAttribute } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport { calcProf } from \"../../../../services/CharacterService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    let classList: Promise<Class>[] = [];\n    char.classes.forEach((classe: ClassSet) => {\n      let [name, sources] = classe.classe.split(\"|\");\n      classList.push(recivePromiseByMultiAttribute(\"classes\", { name: name, sources: sources }));\n    });\n    Promise.all(classList).then(setClasses);\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      let [name, sources] = char.race.race.split(\"|\");\n      recivePromiseByMultiAttribute(\"races\", { name: name, sources: sources }).then(setRace);\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      let [name, sources] = char.race.subrace.split(\"|\");\n      recivePromiseByMultiAttribute(\"subraces\", { name: name, sources: sources }).then(setSubrace);\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * calcProf(char) + formatScore(stat);\n    },\n    [formatScore, char]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter((item) => item.origin !== oldItem.origin);\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) => onChangeItemAttribute({ ...item, prof: prof }, index)}\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label: item.attribute.charAt(0).toUpperCase() + item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) => onChangeItemAttribute({ ...item, attribute: type }, index)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton text={\"Add new Item\"} icon={faPlus} onClick={() => addNewItem()} />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport {\n  recivePromiseByMultiAttribute,\n  saveWithCallback,\n} from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\nimport { useQuery } from \"../../../../hooks/QueryHook\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const name = useQuery().get(\"name\");\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char(-1, name !== null ? name : \"\"));\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n\n    let classList: Promise<Class>[] = [];\n    char.classes.forEach((classe: ClassSet) => {\n      let [name, sources] = classe.classe.split(\"|\");\n      classList.push(recivePromiseByMultiAttribute(\"classes\", { name: name, sources: sources }));\n    });\n    const results = await Promise.all(classList);\n\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    let updatedBonis = bonis.map((newBoni) => {\n      let updatedOldBonis = char.currencyBonis?.map((old) => {\n        if (newBoni.origin === old.origin) {\n          return {\n            origin: newBoni.origin,\n            value: old.value,\n            max: newBoni.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldBonis &&\n        updatedOldBonis.length > 0 &&\n        updatedOldBonis[0] !== undefined &&\n        updatedOldBonis[0] !== null\n      ) {\n        return updatedOldBonis[0];\n      } else {\n        return newBoni;\n      }\n    });\n    if (updatedBonis && updatedBonis.length > 0) {\n      bonis = Array.from(updatedBonis);\n    }\n\n    let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n      let updatedOldSlots = char.spellSlots?.map((old) => {\n        if (newSpellSlots.origin === old.origin) {\n          return {\n            origin: newSpellSlots.origin,\n            slots: old.slots,\n            max: newSpellSlots.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldSlots &&\n        updatedOldSlots.length > 0 &&\n        updatedOldSlots[0] !== undefined &&\n        updatedOldSlots[0] !== null\n      ) {\n        return updatedOldSlots[0];\n      } else {\n        return newSpellSlots;\n      }\n    });\n    if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n      spellSlots = Array.from(updatedSpellSlots);\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n"],"sourceRoot":""}