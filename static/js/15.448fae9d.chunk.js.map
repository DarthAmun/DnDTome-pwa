{"version":3,"sources":["data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/EnumField.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/CheckField.tsx"],"names":["ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","EnumField","options","value","label","icon","transform","onChange","handleChange","option","Field","LabelText","Icon","StyledSelect","classNamePrefix","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","Select","input","buttons","CharLabGeneral","char","completed","CenterWrapper","CharView","StringField","AutoStringField","optionTable","IconButton","faCheckCircle","disabled","length","onClick","CharLabClass","useState","setClasses","changeClassLevel","useCallback","oldClassSet","map","classSet","changeClass","changeClassSubclass","subclass","useEffect","reciveAllFiltered","fieldName","sort","results","index","PropWrapper","key","NumberField","faTrash","oldClass","newClassList","filter","removeClass","filters","TextButton","text","faPlus","push","addNewClass","Text","PropTitle","FormatedText","proficiencies","equipment","span","backgroundColorLink","CharLabRace","setRace","setSubrace","abilityScores","traits","trait","TraitWrapper","TraitName","TraitLevel","TraitText","type","CharLabAbilities","prof","setProf","calcLevel","forEach","featureSets","featureSet","profBonus","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","e","CharLabEquipment","onChangeItem","newItem","i","origin","onChangeItemAttribute","item","Container","CheckField","attuned","attunment","attribute","charAt","toUpperCase","slice","oldItem","newItemList","removeItem","addNewItem","CharLab","history","useHistory","activeTab","setTab","newChar","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","recalcClasses","a","bonis","fullClassList","classList","recivePromiseByAttribute","Promise","all","class","boni","isCurrency","max","spellslots","slots","updatedBonis","newBoni","updatedOldBonis","old","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","TabBar","children","tab","View","nextTab","Prop","faEdit","then","saveWithCallback","result","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","webhook","useWebhook","json","setJson","formatedText","setFormatedText","newText","formatDiscordText","substring","console","log","newJson","username","content","JSON","stringify","cut","cutStart","cutEnd","substr","rollDiscord","command","includes","rollCommand","sendMessage","newCommand","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","table","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","style","float","padding","faDiscord","sendEmbedMessage","th","td","step","Input","target","Bar","child","Tab","isActive","props","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllFilteredPromise","o","concat","data","onSearch","searchTerm","newOptions","Options","opt","Option","defaultChecked","checked","Checkmark"],"mappings":"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","file":"static/js/15.448fae9d.chunk.js","sourcesContent":["export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <AutoStringField\n          optionTable={\"campaigns\"}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      console.log(newText);\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div``;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}