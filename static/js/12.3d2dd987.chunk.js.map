{"version":3,"sources":["data/races/Subrace.tsx","data/Monster.tsx","components/entities/monsters/MonsterTile.tsx","data/world/Location.tsx","data/classes/Feature.tsx","components/form_elements/EnumField.tsx","data/classes/FeatureSet.tsx","data/Gear.tsx","data/Item.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/campaign/Campaign.tsx","data/world/World.tsx","data/Spell.tsx","data/classes/Class.tsx","components/entities/npcs/NpcTile.tsx","components/entities/chars/CharTile.tsx","data/classes/Subclass.tsx","data/campaign/Group.tsx","data/campaign/Npc.tsx","data/campaign/Quest.tsx","data/world/Event.tsx","components/general_elements/Dialog.tsx","components/entities/locations/LocationTile.tsx","components/entities/events/EventTile.tsx","data/IEntity.tsx","data/Selection.tsx","../node_modules/peerjs/dist sync","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","components/form_elements/FileField.tsx","components/general_elements/ErrorTile.tsx","data/Book.tsx","data/RandomTable.tsx","components/entities/locations/details/LocationEditView.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","data/campaign/Note.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignView.tsx","components/form_elements/NumberArrayField.tsx","components/form_elements/ShortTextField.tsx","components/entities/classes/details/ClasseEditView.tsx","components/entities/classes/details/ClasseView.tsx","components/entities/events/details/EventEditView.tsx","components/entities/events/details/EventView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearView.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/items/details/ItemEditView.tsx","components/entities/items/details/ItemView.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookView.tsx","components/entities/locations/details/LocationView.tsx","components/entities/monsters/details/MonsterEditView.tsx","components/entities/monsters/details/MonsterView.tsx","components/entities/npcs/details/NpcEditView.tsx","components/entities/npcs/details/NpcView.tsx","components/entities/quests/details/QuestEditView.tsx","components/entities/quests/details/QuestView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceView.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/entities/selections/details/SelectionEditView.tsx","components/entities/selections/details/SelectionView.tsx","components/entities/spells/details/SpellEditView.tsx","components/entities/spells/details/SpellView.tsx","components/entities/subclasses/details/SubclasseEditView.tsx","components/entities/subclasses/details/SubclasseView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceView.tsx","components/entities/worlds/details/WorldEditView.tsx","data/world/BuildWorld.tsx","services/WorldService.tsx","components/entities/worlds/details/WorldView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/details/ToEntity.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/form_elements/AutoStringField.tsx","data/races/Trait.tsx","components/form_elements/CheckField.tsx","database/MyDatabase.tsx","data/races/Race.tsx"],"names":["Subrace","name","id","type","filename","abilityScores","traits","sources","this","isSubrace","arg","nameCheck","undefined","typeCheck","abilityScoresCheck","traitsCheck","Array","isArray","isTrait","sourcesCheck","Monster","pic","size","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","picCheck","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","MonsterTile","monster","isLegendary","useCallback","trim","includes","formatCr","getPicture","Tile","to","Type","Flag","CR","ImageName","Image","Name","PropWrapper","Prop","WideProp","Icon","icon","faRunning","faLink","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","main","highlight","headerColor","FontAwesomeIcon","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Location","map","dimension","markers","height","width","isLocation","mapCheck","dimensionCheck","markersCheck","FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","forEach","option","toString","Feature","text","selections","normal","isFeature","textCheck","selectionsCheck","EnumField","options","transform","onChange","handleChange","Field","LabelText","StyledSelect","classNamePrefix","Select","input","buttons","FeatureSet","level","profBonus","features","bonis","spellslots","isFeatureSet","levelCheck","profBonusCheck","featuresCheck","Gear","description","cost","damage","weight","properties","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","BackButton","action","Back","onClick","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Campaign","players","logs","npcs","notes","flow","isCampaign","playersCheck","logsCheck","npcsCheck","notesCheck","World","locations","events","isWorld","locationCheck","eventCheck","Spell","classes","school","time","range","components","duration","ritual","isSpell","classesCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","NpcTile","npc","RowProp","ImgContainer","CharTile","char","calcLevel","classe","campaign","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","Subclass","isSubclass","Group","monsters","isGroup","monstersCheck","flowCheck","Npc","isNpc","Quest","rewards","followQuest","isQuest","followQuestCheck","rewardsCheck","Event","date","isEvent","dateCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","LocationTile","location","EventTile","event","faCalendarAlt","isIEntity","Selection","selectionOptions","isSelection","selectionOptionsCheck","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","EditDialog","activeElement","onSave","onClose","onDelete","useState","setLabel","useEffect","StringField","TextButton","faTimes","faSave","newElement","onSaveClick","Map","editable","onEdit","showEditDialog","setEditDialaog","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","position","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","console","log","editMarker","FormatedText","FileField","accept","isMulti","Input","target","files","multiple","ErrorTile","buttonText","onButton","Text","PropTitle","faPlusCircle","span","backgroundColorLink","Book","cover","data","pages","tags","Blob","RandomTable","header","rows","LocationEditView","http","sizeOf","parse","get","response","chunks","on","chunk","push","buffer","Buffer","concat","CenterWrapper","View","faImage","update","tableName","db","MyAppDatabase","open","then","table","finally","close","updateWithCallback","callback","result","saveNew","entity","put","prom","saveNewFromList","entities","refinedEntities","bulkPut","saveWithCallback","add","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromise","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","filter","fieldName","hasTag","fieldPart","toLowerCase","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","body","appendChild","removeChild","IconButton","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","Note","title","content","memo","StyledNode","Position","Top","onConnect","params","Left","Right","Bottom","isNode","isEdge","nodeTypes","customeNode","CustomeNode","FlowChart","initElements","isEditable","elements","setElements","setActiveElement","FlowContainer","onNodeDragStop","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","FlowBar","faPlus","newNode","x","length","y","addNewNode","newElm","CampaignEditView","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","TabBar","children","tab","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","characterList","npcList","Promise","timeEnd","NoteSearchBar","hasTitle","onSend","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","tabs","setTabs","setFilters","newTabs","Loading","Header","SearchableNoteView","NoteWrapper","faTags","SearchableView","toLocaleString","NumberArrayField","values","max","setArray","handleValueChange","ShortTextField","textarea","ClasseEditView","setSelections","select","onFeatureSetChange","oldFeature","featureSet","onBoniChange","oldBoni","boni","onFeatureChange","oldFeatureSet","feature","ClassView","FeatureView","FeatureWrapper","FeatureNumber","indexOf","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","CheckField","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","NumberField","ClasseView","send","setSend","subclasses","setSubclasses","hardSubselect","setHardSubselect","history","useHistory","results","ImageView","subclass","link","SubclasseLink","CreateButton","newSubclass","createNewSubclass","faPaperPlane","P2PSender","FeatureRow","FeatureHeadProp","colSpan","SpellProp","levels","i","printSpellslots","spellslot","FeatureProp","tr","th","td","src","img","EventEditView","EventView","GearEditView","gear","faCoins","faWeightHanging","faCrosshairs","GearView","GroupEditView","group","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","BuildGroup","buildGroup","monsterList","GroupView","loadedGroup","setLoadedGroup","ItemEditView","item","ItemView","itemBase","setItemBase","hasAttunment","className","Rarity","BookEditView","book","faFileImport","file","fileList","from","triggerImportFiles","TagView","tag","TagWrapper","oldTag","onTagChange","removeTag","BookView","pdfjs","GlobalWorkerOptions","workerSrc","version","setBase","numPages","setNumPages","pageNumber","setPageNumber","reader","FileReader","readAsDataURL","onloadend","base64data","changePage","offset","prevPageNumber","DocumentWrapper","faArrowRight","faArrowLeft","onLoadSuccess","onItemClick","itemPageNumber","LocalLoadingSpinner","appVersion","msSaveBlob","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","Tag","faTag","LocationView","MonsterEditView","FieldGroup","MonsterView","faShieldAlt","NpcEditView","NpcView","QuestEditView","quest","newQuest","QuestView","RaceEditView","onTraitChange","oldTrait","trait","age","TraitView","TraitWrapper","TraitName","TraitLevel","removeTrait","TraitText","RaceView","subraces","setSubraces","SubraceLink","newSubrace","createNewSubrace","RandomTableEditView","randomTable","onRowChange","placeholder","row","RowWrapper","RowCount","cells","removeRow","RandomTableView","rand","setRand","faDice","lastRowValues","split","Math","round","random","rollForRandom","min","TableHeadProp","cell","TableProp","SelectionEditView","SelectionWrapper","SelectionName","entityName","SelectionLevel","SelectionText","entityPrerequsite","entityText","SelectionView","SpellEditView","spell","faHistory","faPowerOff","rotate","faHourglassHalf","faMortarPestle","faUser","SpellView","formatLevel","hasRitual","hasConcentration","School","Level","SubclasseEditView","SubclassView","SubclasseView","SubraceEditView","SubraceView","WorldEditView","world","newLocation","oldLocation","newLocationlList","onChangeLocation","removeLocation","addNewLocation","newEvent","oldEvent","newEventlList","onChangeEvent","removeEvent","addNewEvent","BuildWorld","buildWorld","eventList","locationList","WorldView","loadedWorld","setLoadedWorld","localeCompare","EntityDetail","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEntity","msg","setTimeout","editAndSaveEntity","views","faExclamationTriangle","goBack","TopBar","newObj","duplicateEntity","faClone","entityId","React","toLocaleLowerCase","ToEntity","match","setEntityName","setEntity","error","setError","makeEntity","newEntity","newMatch","path","replaceAll","Race","createNewEntity","charAt","toUpperCase","LinkCheck","entitiyFound","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","formatTable","textPart","tableRows","isHead","formatText","setName","peer","setPeer","brokerId","password","floor","generateBrokerId","newPeer","Peer","host","secure","conn","errorData","disconnected","destroyed","reconnect","faExclamationCircle","step","Bar","child","Tab","isActive","filedName","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","items","o","onSearch","searchTerm","newOptions","Options","Option","Trait","defaultChecked","checked","Checkmark","spells","gears","races","chars","encounters","books","randomTables","campaigns","quests","worlds","groups","stores","chars_spells","chars_monsters","chars_items","upgrade","trans","toCollection","modify","Dexie","isRace","ageCheck"],"mappings":"+LAGqBA,EASnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAhBHL,QAgBE,OAfFD,UAeE,OAdFE,UAcE,OAbFE,mBAaE,OAZFC,YAYE,OAXFC,aAWE,OAVFH,cAUE,EACAI,KAAKP,KAAOA,GAAQ,GACpBO,KAAKN,GAAKA,EACVM,KAAKL,KAAOA,GAAQ,GACpBK,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKH,cAAgBA,GAAiB,GACtCG,KAAKF,OAASA,GAAU,GACxBE,KAAKD,QAAUA,GAAW,IAIvB,SAASE,EAAUC,GACxB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDY,OAAyBD,IAAbF,EAAIP,MAAyC,iBAAZO,EAAIP,KACjDW,OACkBF,IAAtBF,EAAIL,eAA2D,iBAArBK,EAAIL,cAC1CU,OACWH,IAAfF,EAAIJ,QACJU,MAAMC,QAAQP,EAAIJ,SAClBY,YAAQR,EAAIJ,OAAO,IACfa,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAC1C,OACEG,GACAC,GACAE,GACAC,GACAC,GACAI,I,iHC9CiBC,EAgCnB,WACElB,EACAD,EACAM,EACAc,EACAC,EACAnB,EACAoB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzC,GACC,yBA9DHF,QA8DE,OA7DFE,cA6DE,OA5DFH,UA4DE,OA3DFoB,SA2DE,OA1DFd,aA0DE,OAzDFe,UAyDE,OAxDFnB,UAwDE,OAvDFoB,aAuDE,OAtDFC,eAsDE,OArDFC,QAqDE,OApDFC,QAoDE,OAnDFC,WAmDE,OAlDFC,QAkDE,OAjDFC,SAiDE,OAhDFC,SAgDE,OA/CFC,SA+CE,OA9CFC,SA8CE,OA7CFC,SA6CE,OA5CFC,SA4CE,OA3CFC,kBA2CE,OA1CFC,YA0CE,OAzCFC,YAyCE,OAxCFC,UAwCE,OAvCFC,uBAuCE,OAtCFC,mBAsCE,OArCFC,mBAqCE,OApCFC,mBAoCE,OAnCFC,WAmCE,OAlCFC,UAkCE,OAjCFC,WAiCE,EACArC,KAAKP,KAAOA,GAAQ,GACpBO,KAAKD,QAAUA,GAAW,GAC1BC,KAAKN,GAAKA,EACVM,KAAKa,IAAMA,GAAO,GAClBb,KAAKc,KAAOA,GAAQ,GACpBd,KAAKL,KAAOA,GAAQ,GACpBK,KAAKe,QAAUA,GAAW,GAC1Bf,KAAKgB,UAAYA,GAAa,GAC9BhB,KAAKiB,GAAKA,GAAM,EAChBjB,KAAKkB,GAAKA,GAAM,EAChBlB,KAAKmB,MAAQA,GAAS,GACtBnB,KAAKoB,GAAKA,GAAM,EAChBpB,KAAKqB,IAAMA,GAAO,EAClBrB,KAAKsB,IAAMA,GAAO,EAClBtB,KAAKuB,IAAMA,GAAO,EAClBvB,KAAKwB,IAAMA,GAAO,EAClBxB,KAAKyB,IAAMA,GAAO,EAClBzB,KAAK0B,IAAMA,GAAO,EAClB1B,KAAK2B,aAAeA,GAAgB,GACpC3B,KAAK4B,OAASA,GAAU,GACxB5B,KAAK6B,OAASA,GAAU,GACxB7B,KAAK8B,KAAOA,GAAQ,GACpB9B,KAAK+B,kBAAoBA,GAAqB,GAC9C/B,KAAKgC,cAAgBA,GAAiB,GACtChC,KAAKiC,cAAgBA,GAAiB,GACtCjC,KAAKkC,cAAgBA,GAAiB,GACtClC,KAAKmC,MAAQA,GAAS,GACtBnC,KAAKoC,KAAOA,GAAQ,GACpBpC,KAAKqC,MAAQA,GAAS,GACtBrC,KAAKJ,SAAWA,GAAY,IAIzB,SAAS0C,EAAUpC,GACxB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CF,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACpCyC,OAAyBpC,IAAbF,EAAIY,MAAyC,iBAAZZ,EAAIY,KACjDT,OAAyBD,IAAbF,EAAIP,MAAyC,iBAAZO,EAAIP,KACjD8C,OACYrC,IAAhBF,EAAIa,SAA+C,iBAAfb,EAAIa,QACpC2B,OACctC,IAAlBF,EAAIc,WAAmD,iBAAjBd,EAAIc,UACtC2B,OAAqBvC,IAAXF,EAAIe,IAAqC,iBAAVf,EAAIe,GAC7C2B,OAAqBxC,IAAXF,EAAIgB,IAAqC,iBAAVhB,EAAIgB,GAC7C2B,OAA2BzC,IAAdF,EAAIiB,OAA2C,iBAAbjB,EAAIiB,MACnD2B,OAAqB1C,IAAXF,EAAIkB,IAAqC,iBAAVlB,EAAIkB,GAC7C2B,OAAuB3C,IAAZF,EAAImB,KAAuC,iBAAXnB,EAAImB,IAC/C2B,OAAuB5C,IAAZF,EAAIoB,KAAuC,iBAAXpB,EAAIoB,IAC/C2B,OAAuB7C,IAAZF,EAAIqB,KAAuC,iBAAXrB,EAAIqB,IAC/C2B,OAAuB9C,IAAZF,EAAIsB,KAAuC,iBAAXtB,EAAIsB,IAC/C2B,OAAuB/C,IAAZF,EAAIuB,KAAuC,iBAAXvB,EAAIuB,IAC/C2B,OAAuBhD,IAAZF,EAAIwB,KAAuC,iBAAXxB,EAAIwB,IAC/C2B,OACiBjD,IAArBF,EAAIyB,cAAyD,iBAApBzB,EAAIyB,aACzC2B,OAA6BlD,IAAfF,EAAI0B,QAA6C,iBAAd1B,EAAI0B,OACrD2B,OAA6BnD,IAAfF,EAAI2B,QAA6C,iBAAd3B,EAAI2B,OACrD2B,OAAyBpD,IAAbF,EAAI4B,MAAyC,iBAAZ5B,EAAI4B,KACjD2B,OACsBrD,IAA1BF,EAAI6B,mBAC4B,iBAAzB7B,EAAI6B,kBACP2B,OACkBtD,IAAtBF,EAAI8B,eAA2D,iBAArB9B,EAAI8B,cAC1C2B,OACkBvD,IAAtBF,EAAI+B,eAA2D,iBAArB/B,EAAI+B,cAC1C2B,OACkBxD,IAAtBF,EAAIgC,eAA2D,iBAArBhC,EAAIgC,cAC1C2B,OAA2BzD,IAAdF,EAAIiC,OAA2C,iBAAbjC,EAAIiC,MACnD2B,OAAyB1D,IAAbF,EAAIkC,MAAyC,iBAAZlC,EAAIkC,KACjD2B,OAA2B3D,IAAdF,EAAImC,OAA2C,iBAAbnC,EAAImC,MAEzD,OACEnC,GACAC,GACAoC,GACA5B,GACA6B,GACAnC,GACAoC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,I,8kGCnEWC,IArFK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QACfC,EAAcC,uBAAY,WAC9B,YAAgB/D,IAAZ6D,GAC2B,KAAzBA,EAAQ5B,MAAM+B,SAAiBH,EAAQ9B,MAAMkC,SAAS,aAIrD,GAHI,MAIV,CAACJ,IAEEK,EAAWH,uBAAY,WAC3B,YAAgB/D,IAAZ6D,EACiB,OAAfA,EAAQ7C,GACH,SACiB,MAAf6C,EAAQ7C,GACV,OACiB,KAAf6C,EAAQ7C,GACV,OAEA6C,EAAQ7C,GAGZ,KACN,CAAC6C,IAEEM,EAAaJ,uBAAY,WAC7B,YAAgB/D,IAAZ6D,EACkB,KAAhBA,EAAQpD,KAA8B,OAAhBoD,EAAQpD,IACzB,GAEFoD,EAAQpD,IAEV,KACN,CAACoD,IAEJ,OACE,kBAACO,EAAD,CAAMC,GAAI,sBAAwBR,EAAQvE,IACxC,kBAACgF,EAAD,KACGT,EAAQtE,KADX,IAC6C,KAA3BsE,EAAQlD,QAAQqD,OAAgB,IAAMH,EAAQlD,QAAU,IAAM,IAGhF,kBAAC4D,EAAD,KACE,2BAAIT,MAGN,kBAACU,EAAD,KACE,2BAAIN,MAEY,KAAjBC,IACC,kBAACM,EAAD,KACE,kBAACC,EAAD,CAAOjE,IAAK0D,MACZ,2BAAIN,EAAQxE,OAGd,kBAACsF,EAAD,KACE,2BAAId,EAAQxE,OAIhB,kBAACuF,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,MACChB,EAAQnD,MAEX,kBAACmE,EAAD,KACE,kBAAC,IAAD,MACChB,EAAQjD,WAEX,kBAACkE,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAMC,MACXpB,EAAQ9C,OAEX,kBAAC+D,EAAD,KACE,kBAAC,IAAD,MACCjB,EAAQnC,MAEX,kBAACoD,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAME,MACXrB,EAAQlE,YASnB,IAAMyE,EAAOe,YAAOC,IAAPD,CAAH,KAEC,qBAAGE,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAKpCjB,EAAKW,IAAOO,IAAV,KAWqB,qBAAGL,MAAkBM,KAAKC,aAIjDtB,EAAOa,IAAOO,IAAV,KAOY,qBAAGL,MAAkBC,KAAKE,mBAG1Cb,EAAOQ,IAAOO,IAAV,KAOC,qBAAGL,MAAkBC,KAAKO,eAK/BpB,EAAYU,IAAOO,IAAV,KAOJ,qBAAGL,MAAkBC,KAAKO,eAK/BjB,EAAcO,IAAOO,IAAV,KASXb,EAAOM,IAAOO,IAAV,KAsBG,qBAAGL,MAAkBM,KAAKC,aAKjCd,EAAWK,YAAON,EAAPM,CAAH,KAURJ,EAAOI,YAAOW,IAAPX,CAAH,KAKC,qBAAGE,MAAkBM,KAAKC,aAG/BrB,EAAOY,IAAOO,IAAV,KAQY,qBAAGL,MAAkBC,KAAKE,mBAO1Cd,EAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC2F,EAAD,CAAUL,MAAOA,IAEjB,kBAACM,EAAD,OAILD,EAAWjB,IAAOO,IAAV,KAMQ,qBAAGL,MAAkBM,KAAKC,aAK1CS,EAAQlB,IAAOO,IAAV,M,iHC9PUY,EAQnB,WACEhH,EACAD,EACAM,EACA4G,EACAC,EACAC,GACC,yBAdHnH,QAcE,OAbFD,UAaE,OAZFkH,SAYE,OAXFC,eAWE,OAVFC,aAUE,OATF9G,aASE,EACAC,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKD,QAAUA,GAAW,GAC1BC,KAAK2G,IAAMA,GAAO,GAClB3G,KAAK4G,UAAYA,GAAa,CAC5BE,OAAQ,EACRC,MAAO,GAET/G,KAAK6G,QAAUA,GAAW,IAIvB,SAASG,EAAW9G,GACzB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDkB,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACvDkH,OAAuB7G,IAAZF,EAAIyG,KAAuC,iBAAXzG,EAAIyG,IAC/CO,OACc9G,IAAlBF,EAAI0G,WAC2B,iBAAxB1G,EAAI0G,UAAUE,QACS,iBAAvB5G,EAAI0G,UAAUG,MACjBI,OAA+B/G,IAAhBF,EAAI2G,SAAyBrG,MAAMC,QAAQP,EAAI2G,SACpE,OAAO3G,GAAOC,GAAaQ,GAAgBsG,GAAYC,GAAkBC,I,+MChC/DC,E,QANCC,EAAuD,CAClE,CAAEC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,cAAeC,MAAO,gBAC/B,CAAED,MAAO,WAAYC,MAAO,aAQvB,SAASC,EACdF,GAEA,IAAIG,OAAMrH,EAIV,OAHAiH,EAAiBK,SAAQ,SAACC,GACpBA,EAAOL,QAAUA,EAAMM,aAAYH,EAAME,WAEnCvH,IAARqH,EACKA,EAEF,CAAEH,MAAO,GAAIC,MAAO,K,SAhBjBH,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,wBAAAA,M,SAmBSS,EAKnB,WACEpI,EACAqI,EACAC,EACApI,GACC,yBATHF,UASE,OARFqI,UAQE,OAPFnI,UAOE,OANFoI,gBAME,EACA/H,KAAKP,KAAOA,EACZO,KAAK8H,KAAOA,EACZ9H,KAAKL,KAAOA,GAAQyH,EAAYY,OAChChI,KAAK+H,WAAaA,GAIf,SAASE,EAAU/H,GACxB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDyI,OAAyB9H,IAAbF,EAAI4H,MAAyC,iBAAZ5H,EAAI4H,KACjDK,OACe/H,IAAnBF,EAAI6H,YACJvH,MAAMC,QAAQP,EAAI6H,aACU,iBAArB7H,EAAI6H,WAAW,GACxB,OAAO7H,GAAOC,GAAa+H,GAAaC,I,6vCCF3BC,IAhCG,SAAC,GAOJ,IANbC,EAMY,EANZA,QACAf,EAKY,EALZA,MACAC,EAIY,EAJZA,MACAnC,EAGY,EAHZA,KACAkD,EAEY,EAFZA,UACAC,EACY,EADZA,SAGMC,EAAe,SAACb,GACL,OAAXA,QAA8BvH,IAAXuH,GACrBY,EAASZ,EAAOL,QAIpB,OACE,kBAACmB,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAACoB,EAAD,CACEC,gBAAgB,eAChBtB,MAAOA,EACPe,QAASA,EACTE,SAAU,SAACZ,GAAD,OACRa,EAAab,QASvB,IAAMc,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAY1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAIT6C,EAAepD,YAAOsD,IAAPtD,CAAH,KAMI,qBAAGE,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAIzB,qBAAGF,MAAkBsD,QAAQpD,SAGlB,qBAAGF,MAAkBqD,MAAMlD,mBAK3B,qBAAGH,MAAkBqD,MAAMlD,mBAGzB,qBAAGH,MAAkBsD,QAAQnD,mBACxC,qBAAGH,MAAkBsD,QAAQpD,SAGlB,qBAAGF,MAAkBsD,QAAQnD,mBACxC,qBAAGH,MAAkBsD,QAAQpD,U,0HCvGvBqD,EAOnB,WACEC,EACAC,EACAC,EACAC,EACAC,GACC,yBAZHJ,WAYE,OAXFC,eAWE,OAVFC,cAUE,OATFC,WASE,OARFC,gBAQE,EACArJ,KAAKiJ,MAAQA,EACbjJ,KAAKkJ,UAAYA,EACjBlJ,KAAKmJ,SAAWA,EAChBnJ,KAAKoJ,MAAQA,EACbpJ,KAAKqJ,WAAaA,GAIf,SAASC,EAAapJ,GAC3B,IAAMqJ,OAA2BnJ,IAAdF,EAAI+I,OAA2C,iBAAb/I,EAAI+I,MACnDO,OACcpJ,IAAlBF,EAAIgJ,WAAmD,iBAAjBhJ,EAAIgJ,UACtCO,OACarJ,IAAjBF,EAAIiJ,UACJ3I,MAAMC,QAAQP,EAAIiJ,WAClBlB,YAAU/H,EAAIiJ,SAAS,IAEzB,OAAOjJ,GAAOqJ,GAAcC,GAAkBC,I,iHChC3BC,EAanB,WACEhK,EACAD,EACAM,EACA4J,EACA9I,EACA+I,EACAC,EACAC,EACAC,EACApK,EACAC,GACC,yBAxBHF,QAwBE,OAvBFD,UAuBE,OAtBFM,aAsBE,OArBF4J,iBAqBE,OApBF9I,SAoBE,OAnBF+I,UAmBE,OAlBFC,YAkBE,OAjBFC,YAiBE,OAhBFC,gBAgBE,OAfFpK,UAeE,OAdFC,cAcE,EACAI,KAAKP,KAAOA,GAAQ,GACpBO,KAAKD,QAAUA,GAAW,GAC1BC,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKa,IAAMA,GAAO,GAClBb,KAAK4J,KAAOA,GAAQ,GACpB5J,KAAK6J,OAASA,GAAU,GACxB7J,KAAK8J,OAASA,GAAU,GACxB9J,KAAK+J,WAAaA,GAAc,GAChC/J,KAAKL,KAAOA,GAAQ,GACpBK,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,IAIzB,SAASoK,EAAO9J,GACrB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDkB,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACpCkK,OACgB7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YACxCO,OAAyB9J,IAAbF,EAAI0J,MAAyC,iBAAZ1J,EAAI0J,KACjDO,OAA6B/J,IAAfF,EAAI2J,QAA6C,iBAAd3J,EAAI2J,OACrDO,OAA6BhK,IAAfF,EAAI4J,QAA6C,iBAAd5J,EAAI4J,OACrDO,OACejK,IAAnBF,EAAI6J,YAAqD,iBAAlB7J,EAAI6J,WACvC1J,OAAyBD,IAAbF,EAAIP,MAAyC,iBAAZO,EAAIP,KACjD4C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IACrD,OACEX,GACAC,GACAQ,GACAsJ,GACAC,GACAC,GACAC,GACAC,GACAhK,GACAkC,I,iHC/DiB+H,EAanB,WACE5K,EACAD,EACAM,EACA4J,EACA9I,EACA0J,EACAC,EACAC,EACAC,EACA/K,EACAC,GACC,yBAxBHF,QAwBE,OAvBFD,UAuBE,OAtBFM,aAsBE,OArBF4J,iBAqBE,OApBF9I,SAoBE,OAnBF0J,YAmBE,OAlBFC,gBAkBE,OAjBFC,eAiBE,OAhBFC,UAgBE,OAfF/K,UAeE,OAdFC,cAcE,EACAI,KAAKP,KAAOA,GAAQ,GACpBO,KAAKD,QAAUA,GAAW,GAC1BC,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKa,IAAMA,GAAO,GAClBb,KAAKuK,OAASA,GAAU,GACxBvK,KAAKwK,WAAaA,GAAc,EAChCxK,KAAKyK,UAAYA,GAAa,EAC9BzK,KAAK0K,KAAOA,GAAQ,GACpB1K,KAAKL,KAAOA,GAAQ,GACpBK,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,IAIzB,SAAS+K,EAAOzK,GACrB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDkB,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACpCkK,OACgB7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YACxCiB,OACexK,IAAnBF,EAAIsK,YAAqD,iBAAlBtK,EAAIsK,WACvCK,OACczK,IAAlBF,EAAIuK,WAAmD,iBAAjBvK,EAAIuK,UACtCK,OAA6B1K,IAAfF,EAAIqK,QAA6C,iBAAdrK,EAAIqK,OACrDQ,OAAyB3K,IAAbF,EAAIwK,MAAyC,iBAAZxK,EAAIwK,KACjDrK,OAAyBD,IAAbF,EAAIP,MAAyC,iBAAZO,EAAIP,KACjD4C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IACrD,OACEX,GACAC,GACAQ,GACAsJ,GACAW,GACAC,GACAC,GACAC,GACA1K,GACAkC,I,wdC7CWyI,IARI,SAAC,GAAyC,IAAvC5F,EAAsC,EAAtCA,KAAMkD,EAAgC,EAAhCA,UAAW2C,EAAqB,EAArBA,OACrC,OACE,kBAACC,EAAD,CAAMC,QAASF,GACb,kBAAC9F,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,MAOnC,IAAMnD,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAExB,qBAAGP,MAAkBsD,QAAQpD,SAIpCuF,EAAO3F,IAAOO,IAAV,KAEU,qBAAGL,MAAkBsD,QAAQjC,W,q4BCnC1C,IAAMsE,EAAa7F,IAAOO,IAAV,KAIX,qBAAGL,MAAkBsD,QAAQjC,UACxB,qBAAGrB,MAAkBsD,QAAQjC,UASjC,qBAAGrB,MAAkBsD,QAAQsC,cAI7BC,EAAc/F,YAAO6F,EAAP7F,CAAH,KAUXgG,EAAahG,IAAOO,IAAV,KAEX,qBAAGL,MAAkBsD,QAAQjC,UAE9B,qBAAGrB,MAAkBsD,QAAQpD,QAEpCyF,GACoB,SAACI,GACnB,MAAmB,SAAfA,EAAMC,KACD,qBAAGhG,MAAkBsD,QAAQnD,iBAE7B,qBAAGH,MAAkBC,KAAKE,mBAKrC0F,GACoB,SAACE,GACnB,MAAmB,SAAfA,EAAMC,KACD,qBAAGhG,MAAkBsD,QAAQnD,iBAE7B,qBAAGH,MAAkBC,KAAKE,qB,iHC9CpB8F,EAcnB,WACEhM,EACAD,EACAoB,EACA8I,EACAgC,EACAC,EACAjF,EACAkF,EACAC,EACAC,EACAhM,EACAH,GACC,yBA1BHF,QA0BE,OAzBFD,UAyBE,OAxBFoB,SAwBE,OAvBF8I,iBAuBE,OAtBFgC,aAsBE,OArBFC,UAqBE,OApBFjF,SAoBE,OAnBFkF,UAmBE,OAlBFC,WAkBE,OAjBFC,UAiBE,OAhBFhM,aAgBE,OAfFH,cAeE,EACAI,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKa,IAAMA,GAAO,GAClBb,KAAK2J,YAAcA,GAAe,GAClC3J,KAAK2L,QAAUA,GAAW,GAC1B3L,KAAK4L,KAAOA,GAAQ,GACpB5L,KAAK2G,IAAMA,GAAO,GAClB3G,KAAK6L,KAAOA,GAAQ,GACpB7L,KAAK8L,MAAQA,GAAS,GACtB9L,KAAK+L,KAAOA,GAAQ,GACpB/L,KAAKD,QAAUA,GAAW,GAC1BC,KAAKJ,SAAWA,GAAY,IAIzB,SAASoM,EAAW9L,GACzB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CoG,OAAuB7G,IAAZF,EAAIyG,KAAuC,iBAAXzG,EAAIyG,IAC/CsD,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/DsC,OAA+B7L,IAAhBF,EAAIyL,SAAyBnL,MAAMC,QAAQP,EAAIyL,SAC9DO,OAAyB9L,IAAbF,EAAI0L,MAAsBpL,MAAMC,QAAQP,EAAI0L,MACxDO,OAAyB/L,IAAbF,EAAI2L,MAAsBrL,MAAMC,QAAQP,EAAI2L,MACxDO,OAA2BhM,IAAdF,EAAI4L,OAAuBtL,MAAMC,QAAQP,EAAI4L,OAC1DnL,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAE7D,OACEG,GACAC,GACAoC,GACA0H,GACAgC,GACAC,GACAC,GACAC,GACAnF,GACAtG,I,iHCnEiB0L,EASnB,WACE3M,EACAD,EACAkK,EACA2C,EACAC,EACA5F,EACA5G,GACC,yBAhBHL,QAgBE,OAfFD,UAeE,OAdFkK,iBAcE,OAbF2C,eAaE,OAZFC,YAYE,OAXF5F,SAWE,OAVF5G,aAUE,EACAC,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKsM,UAAYA,GAAa,GAC9BtM,KAAKuM,OAASA,GAAU,GACxBvM,KAAK2G,IAAMA,GAAO,GAClB3G,KAAKD,QAAUA,GAAW,IAIvB,SAASyM,EAAQtM,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDwK,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/D8C,OAAkCrM,IAAlBF,EAAIoM,WAA2B9L,MAAMC,QAAQP,EAAIoM,WACjEI,OAA4BtM,IAAfF,EAAIqM,QAAwB/L,MAAMC,QAAQP,EAAIqM,QAC3D5L,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACvDkH,OAAuB7G,IAAZF,EAAIyG,KAAuC,iBAAXzG,EAAIyG,IACrD,OACEzG,GAAOC,GAAa8J,GAAoBwC,GAAiBC,GAAc/L,GAAgBsG,I,iHCpCtE0F,EAgBnB,WACElN,EACAmN,EACA7M,EACAkJ,EACA4D,EACAC,EACAC,EACAC,EACAC,EACAC,EACApF,EACApI,EACAE,EACAiB,GACC,yBA9BHnB,QA8BE,OA7BFD,UA6BE,OA5BFmN,aA4BE,OA3BF7M,aA2BE,OA1BFkJ,WA0BE,OAzBF4D,YAyBE,OAxBFC,UAwBE,OAvBFC,WAuBE,OAtBFC,gBAsBE,OArBFC,cAqBE,OApBFC,YAoBE,OAnBFpF,UAmBE,OAlBFlI,cAkBE,OAjBFiB,SAiBE,EACAb,KAAKP,KAAOA,GAAQ,GACpBO,KAAK4M,QAAUA,GAAW,GAC1B5M,KAAKD,QAAUA,GAAW,GAC1BC,KAAKiJ,MAAQA,GAAS,EACtBjJ,KAAK6M,OAASA,GAAU,GACxB7M,KAAK8M,KAAOA,GAAQ,GACpB9M,KAAK+M,MAAQA,GAAS,GACtB/M,KAAKgN,WAAaA,GAAc,GAChChN,KAAKiN,SAAWA,GAAY,GAC5BjN,KAAKkN,OAASA,GAAU,EACxBlN,KAAK8H,KAAOA,GAAQ,GACpB9H,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKa,IAAMA,GAAO,IAIf,SAASsM,EAAQjN,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD2N,OACYhN,IAAhBF,EAAI0M,SAA+C,iBAAf1M,EAAI0M,QACpCjM,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACpCwJ,OAA2BnJ,IAAdF,EAAI+I,OAA2C,iBAAb/I,EAAI+I,MACnDoE,OAA6BjN,IAAfF,EAAI2M,QAA6C,iBAAd3M,EAAI2M,OACrDS,OAAyBlN,IAAbF,EAAI4M,MAAyC,iBAAZ5M,EAAI4M,KACjDS,OAA2BnN,IAAdF,EAAI6M,OAA2C,iBAAb7M,EAAI6M,MACnDS,OACepN,IAAnBF,EAAI8M,YAAqD,iBAAlB9M,EAAI8M,WACvCS,OACarN,IAAjBF,EAAI+M,UAAiD,iBAAhB/M,EAAI+M,SACrCS,OAA6BtN,IAAfF,EAAIgN,QAA6C,iBAAdhN,EAAIgN,OACrDhF,OAAyB9H,IAAbF,EAAI4H,MAAyC,iBAAZ5H,EAAI4H,KACjDvF,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IACrD,OACEX,GACAC,GACAiN,GACAzM,GACA4I,GACA8D,GACAC,GACAC,GACAC,GACAC,GACAC,GACAxF,GACA3F,I,0HC9EiBoL,EAWnB,WACEjO,EACAD,EACAmO,EACAC,EACAC,EACAC,EACAnO,EACAG,EACAc,GACC,yBApBHnB,QAoBE,OAnBFD,UAmBE,OAlBFmO,iBAkBE,OAjBFC,cAiBE,OAhBFC,mBAgBE,OAfFC,eAeE,OAdFhO,aAcE,OAbFH,cAaE,OAZFiB,SAYE,EACAb,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAK4N,YAAcA,GAAe,GAClC5N,KAAK6N,SAAWA,GAAY,GAC5B7N,KAAK8N,cAAgBA,GAAiB,GACtC9N,KAAK+N,UAAYA,GAAa,GAC9B/N,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKD,QAAUA,GAAW,GAC1BC,KAAKa,IAAMA,GAAO,IAIf,SAASmN,EAAQ9N,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDwO,OACgB7N,IAApBF,EAAI0N,aACJpN,MAAMC,QAAQP,EAAI0N,cAClBtE,YAAapJ,EAAI0N,YAAY,IACzBM,OACa9N,IAAjBF,EAAI2N,UAAiD,iBAAhB3N,EAAI2N,SACrCM,OACkB/N,IAAtBF,EAAI4N,eAA2D,iBAArB5N,EAAI4N,cAC1CM,OACchO,IAAlBF,EAAI6N,WAAmD,iBAAjB7N,EAAI6N,UACtCpN,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAC1C,OACEG,GACAC,GACAQ,GACAsN,GACAC,GACAC,GACAC,I,+uECjBWC,IA5BC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,IACX/J,EAAaJ,uBAAY,WAC7B,YAAY/D,IAARkO,EACc,KAAZA,EAAIzN,KAA0B,OAAZyN,EAAIzN,IACjB,GAEFyN,EAAIzN,IAEN,KACN,CAACyN,IAEJ,OACE,kBAAC9J,EAAD,CAAMC,GAAI,kBAAoB6J,EAAI5O,IACd,KAAjB6E,IAAsB,kBAACO,EAAD,CAAOjE,IAAK0D,MAAyB,GAC5D,kBAACS,EAAD,KACE,kBAACD,EAAD,KACE,2BAAIuJ,EAAI7O,OAGV,kBAACyF,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAME,MACXgJ,EAAIvO,YASf,IAAMyE,EAAOe,YAAOC,IAAPD,CAAH,KAEC,qBAAGE,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAYpCd,EAAOQ,IAAOO,IAAV,KAWJd,EAAcO,IAAOO,IAAV,KASXyI,EAAUhJ,IAAOO,IAAV,KAiBA,qBAAGL,MAAkBM,KAAKC,aAKjCf,EAAOM,YAAOgJ,EAAPhJ,CAAH,KAOJL,EAAWK,YAAON,EAAPM,CAAH,KAKRJ,EAAOI,YAAOW,IAAPX,CAAH,KAKC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,EAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACf,MAAY,KAARA,EACK,kBAAC2N,EAAD,CAAc3N,IAAKA,IAEnB,kBAAC4F,EAAD,OAIL+H,EAAejJ,IAAOO,IAAV,KAIK,qBAAGL,MAAkBM,KAAKC,aAY3B,SAACwF,GAAD,OAAWA,EAAM3K,OAKjC4F,EAAQlB,IAAOO,IAAV,M,gjEChGI2I,IAlDE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KACZnK,EAAaJ,uBAAY,WAC7B,YAAa/D,IAATsO,EACe,KAAbA,EAAK7N,KAA2B,OAAb6N,EAAK7N,IACnB,GAEF6N,EAAK7N,IAEP,KACN,CAAC6N,IAEEC,EAAYxK,uBAAY,WAC5B,IAAI8E,EAAQ,EAIZ,OAHAyF,EAAK9B,QAAQlF,SAAQ,SAACkH,GACpB3F,GAAS2F,EAAO3F,SAEXA,IACN,CAACyF,IAEJ,OACE,kBAAClK,EAAD,CAAMC,GAAI,mBAAqBiK,EAAKhP,IAChB,KAAjB6E,IAAsB,kBAACO,EAAD,CAAOjE,IAAK0D,MAAyB,GAC5D,kBAACS,EAAD,KACE,kBAACD,EAAD,KACE,2BAAI2J,EAAKjP,OAEViP,EAAKG,UAAY,kBAAC9J,EAAD,KAAO2J,EAAKG,UAC9B,kBAACC,EAAD,KACE,kBAACP,EAAD,KAAUI,KACV,kBAACJ,EAAD,KAAUG,EAAKK,QACf,kBAACR,EAAD,KAAUG,EAAKM,KAAKA,MACpB,kBAACT,EAAD,KAAUG,EAAKM,KAAKC,UAErBP,EAAK9B,SACJ8B,EAAK9B,QAAQjG,KAAI,SAACuI,EAAoBC,GACpC,OACE,kBAACL,EAAD,CAAgBM,IAAKD,GACnB,kBAACZ,EAAD,KAAUW,EAASjG,OACnB,kBAACsF,EAAD,KAAUW,EAASN,QACnB,kBAACL,EAAD,KAAUW,EAASG,eAI3B,kBAACpK,EAAD,KAAOyJ,EAAKY,YACZ,kBAACrK,EAAD,KAAOyJ,EAAK1N,cAQpB,IAAMwD,EAAOe,YAAOC,IAAPD,CAAH,KAEC,qBAAGE,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAYpCd,EAAOQ,IAAOO,IAAV,KAUJd,EAAcO,IAAOO,IAAV,KAQXgJ,EAAiBvJ,YAAOP,EAAPO,CAAH,KAKS,qBAAGE,MAAkBM,KAAKH,mBAGjD2I,EAAUhJ,IAAOO,IAAV,KAiBA,qBAAGL,MAAkBM,KAAKC,aAKjCf,EAAOM,YAAOgJ,EAAPhJ,CAAH,KAWJT,EAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACf,MAAY,KAARA,EACK,kBAAC2N,EAAD,CAAc3N,IAAKA,IAEnB,kBAAC4F,EAAD,OAIL+H,EAAejJ,IAAOO,IAAV,KAIK,qBAAGL,MAAkBM,KAAKC,aAY3B,SAACwF,GAAD,OAAWA,EAAM3K,OAKjC4F,EAAQlB,IAAOO,IAAV,M,0HCrKUyJ,EAQnB,WACE7P,EACAD,EACAE,EACAwJ,EACAvJ,EACAG,GACC,yBAdHL,QAcE,OAbFD,UAaE,OAZFE,UAYE,OAXFwJ,cAWE,OAVFpJ,aAUE,OATFH,cASE,EACAI,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKL,KAAOA,GAAQ,GACpBK,KAAKmJ,SAAWA,GAAY,GAC5BnJ,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKD,QAAUA,GAAW,IAIvB,SAASyP,EAAWtP,GACzB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDY,OAAyBD,IAAbF,EAAIP,MAAyC,iBAAZO,EAAIP,KACjD8J,OACarJ,IAAjBF,EAAIiJ,UACJ3I,MAAMC,QAAQP,EAAIiJ,WAClBG,YAAapJ,EAAIiJ,SAAS,IACtBxI,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAC1C,OAAOG,GAAOC,GAAaE,GAAaM,GAAgB8I,I,iHCjCrCgG,EAanB,WACE/P,EACAD,EACAoB,EACA8I,EACAmC,EACAH,EACAE,EACA6D,EACA3D,EACAhM,EACAH,GACC,yBAxBHF,QAwBE,OAvBFD,UAuBE,OAtBFoB,SAsBE,OArBF8I,iBAqBE,OApBFmC,WAoBE,OAnBFH,aAmBE,OAlBFE,UAkBE,OAjBF6D,cAiBE,OAhBF3D,UAgBE,OAfFhM,aAeE,OAdFH,cAcE,EACAI,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKa,IAAMA,GAAO,GAClBb,KAAK2J,YAAcA,GAAe,GAClC3J,KAAK8L,MAAQA,GAAS,GACtB9L,KAAK2L,QAAUA,GAAW,GAC1B3L,KAAK6L,KAAOA,GAAQ,GACpB7L,KAAK0P,SAAWA,GAAY,GAC5B1P,KAAK+L,KAAOA,GAAQ,GACpB/L,KAAKD,QAAUA,GAAW,GAC1BC,KAAKJ,SAAWA,GAAY,IAIzB,SAAS+P,EAAQzP,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CoJ,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/DyC,OAA2BhM,IAAdF,EAAI4L,OAAuBtL,MAAMC,QAAQP,EAAI4L,OAC1DG,OAA+B7L,IAAhBF,EAAIyL,SAAyBnL,MAAMC,QAAQP,EAAIyL,SAC9DQ,OAAyB/L,IAAbF,EAAI2L,MAAsBrL,MAAMC,QAAQP,EAAI2L,MACxD+D,OAAiCxP,IAAjBF,EAAIwP,UAA0BlP,MAAMC,QAAQP,EAAIwP,UAChEG,OAAyBzP,IAAbF,EAAI6L,MAAsBvL,MAAMC,QAAQP,EAAI6L,MACxDpL,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAE7D,OACEG,GACAC,GACAoC,GACA0H,GACAmC,GACAH,GACAE,GACAyD,GACAC,GACAlP,I,iHC7DiBmP,EAUnB,WACEpQ,EACAD,EACAoB,EACA6N,EACA5O,EACA6J,EACA5J,EACAH,GACC,yBAlBHF,QAkBE,OAjBFD,UAiBE,OAhBFoB,SAgBE,OAfF6N,UAeE,OAdF5O,YAcE,OAbF6J,iBAaE,OAZF5J,aAYE,OAXFH,cAWE,EACAI,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKa,IAAMA,GAAO,GAClBb,KAAK0O,KAAOA,EACZ1O,KAAKF,OAASA,GAAU,GACxBE,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKD,QAAUA,GAAW,GAC1BC,KAAKJ,SAAWA,GAAY,IAIzB,SAASmQ,EAAM7P,GACpB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CN,OAA6BH,IAAfF,EAAIJ,QAA6C,iBAAdI,EAAIJ,OACrDmK,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/DhJ,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAE7D,OAAOG,GAAOC,GAAaoC,GAAY0H,GAAoB1J,GAAeI,I,iHCvCvDqP,EAUnB,WACEtQ,EACAD,EACAoB,EACA8I,EACAsG,EACAC,EACAnQ,EACAH,GACC,yBAlBHF,QAkBE,OAjBFD,UAiBE,OAhBFoB,SAgBE,OAfF8I,iBAeE,OAdFsG,aAcE,OAbFC,iBAaE,OAZFnQ,aAYE,OAXFH,cAWE,EACAI,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAKa,IAAMA,GAAO,GAClBb,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKiQ,QAAUA,GAAW,GAC1BjQ,KAAKkQ,YAAcA,GAAe,GAClClQ,KAAKD,QAAUA,GAAW,GAC1BC,KAAKJ,SAAWA,GAAY,IAIzB,SAASuQ,EAAQjQ,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CoJ,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/DyG,OAAuChQ,IAApBF,EAAIgQ,aAAuD,iBAAnBhQ,EAAIgQ,YAC/DG,OAA+BjQ,IAAhBF,EAAI+P,SAA+C,iBAAf/P,EAAI+P,QACvDtP,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAE7D,OACEG,GACAC,GACAoC,GACA0H,GACAmG,GACAC,GACA1P,I,iHC/CiB2P,EAOnB,WAAY5Q,EAAaD,EAAekK,EAAsB4G,EAAexQ,GAAmB,yBANhGL,QAM+F,OAL/FD,UAK+F,OAJ/FkK,iBAI+F,OAH/F4G,UAG+F,OAF/FxQ,aAE+F,EAC7FC,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAK2J,YAAcA,GAAe,GAClC3J,KAAKuQ,KAAOA,GAAQ,GACpBvQ,KAAKD,QAAUA,GAAW,IAIvB,SAASyQ,EAAQtQ,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDwK,OAAuC7J,IAApBF,EAAIyJ,aAAuD,iBAAnBzJ,EAAIyJ,YAC/D8G,OAAyBrQ,IAAbF,EAAIqQ,MAAyC,iBAAZrQ,EAAIqQ,KACjD5P,OAA+BP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QACvDkH,OAAuB7G,IAAZF,EAAIyG,KAAuC,iBAAXzG,EAAIyG,IACrD,OAAOzG,GAAOC,GAAa8J,GAAoBwG,GAAa9P,GAAgBsG,I,8mBCa/DyJ,IArBA,SAAC,GAOD,IANbC,EAMY,EANZA,QACAvL,EAKY,EALZA,KACAwL,EAIY,EAJZA,aACAC,EAGY,EAHZA,cACAC,EAEY,EAFZA,UACAC,EACY,EADZA,WAEA,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACG7L,EAAO,kBAACD,EAAD,CAAMC,KAAMA,IAAW,GADjC,IACsCuL,GAEtC,kBAACO,EAAD,KACE,kBAAC,IAAD,CAAYpJ,KAAMgJ,EAAW3F,QAAS4F,IACtC,kBAAC,IAAD,CAAYjJ,KAAM8I,EAAczF,QAAS0F,OAQjD,IAAMG,EAAgBzL,IAAOO,IAAV,KAOG,qBAAGL,MAAkBC,KAAKE,mBACrC,qBAAGH,MAAkBC,KAAKC,SAG/BsL,EAAU1L,IAAOO,IAAV,KAKPoL,EAAY3L,IAAOO,IAAV,KAITX,EAAOI,YAAOW,IAAPX,CAAH,M,whECZK4L,IAlCM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAChB7M,EAAaJ,uBAAY,WAC7B,YAAiB/D,IAAbgR,EACmB,KAAjBA,EAASzK,KAA+B,OAAjByK,EAASzK,IAC3B,GAEFyK,EAASzK,IAEX,KACN,CAACyK,IAEJ,OACE,kBAAC5M,EAAD,CAAMC,GAAI,uBAAyB2M,EAAS1R,IACxB,KAAjB6E,IACC,kBAACM,EAAD,KACE,kBAACC,EAAD,CAAOjE,IAAK0D,MACZ,2BAAI6M,EAAS3R,OAGf,kBAACsF,EAAD,KACE,2BAAIqM,EAAS3R,OAIjB,kBAACuF,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAME,MACX8L,EAASrR,YASpB,IAAMyE,EAAOe,YAAOC,IAAPD,CAAH,KAEC,qBAAGE,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAKpCd,EAAOQ,IAAOO,IAAV,KAOC,qBAAGL,MAAkBC,KAAKO,eAK/BpB,EAAYU,IAAOO,IAAV,KAOJ,qBAAGL,MAAkBC,KAAKO,eAK/BjB,EAAcO,IAAOO,IAAV,KASXb,EAAOM,IAAOO,IAAV,KAmBJZ,EAAWK,YAAON,EAAPM,CAAH,KAKRJ,EAAOI,YAAOW,IAAPX,CAAH,KAKC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,EAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC2F,EAAD,CAAUL,MAAOA,IAEjB,kBAACM,EAAD,OAILD,EAAWjB,IAAOO,IAAV,KAMQ,qBAAGL,MAAkBM,KAAKC,aAK1CS,EAAQlB,IAAOO,IAAV,M,+5CCzHIuL,IArBG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MACnB,OACE,kBAAC9M,EAAD,CAAMC,GAAI,oBAAsB6M,EAAM5R,IACpC,kBAACqF,EAAD,KACE,2BAAIuM,EAAM7R,OAGZ,kBAACuF,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAMmM,MACXD,EAAMf,MAET,kBAACrL,EAAD,KACE,kBAACC,EAAD,CAAMC,KAAME,MACXgM,EAAMvR,YASjB,IAAMyE,EAAOe,YAAOC,IAAPD,CAAH,KAEC,qBAAGE,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAKpCd,EAAOQ,IAAOO,IAAV,KAOC,qBAAGL,MAAkBC,KAAKO,eAK/BjB,EAAcO,IAAOO,IAAV,KASXb,EAAOM,IAAOO,IAAV,KAmBJZ,EAAWK,YAAON,EAAPM,CAAH,KAKRJ,EAAOI,YAAOW,IAAPX,CAAH,KAKC,qBAAGE,MAAkBM,KAAKC,c,iHC5F9B,SAASwL,EAAUtR,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KAEvD,OACES,GACAC,E,ICResR,EAWnB,WACE/R,EACAD,EACAG,EACA8R,GAMC,yBApBHhS,QAoBE,OAnBFD,UAmBE,OAlBFiS,sBAkBE,OAZF9R,cAYE,EACAI,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKP,KAAOA,GAAQ,GACpBO,KAAK0R,iBAAmBA,GAAoB,IAIzC,SAASC,EAAYzR,GAC1B,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDmS,OACqBxR,IAAzBF,EAAIwR,kBACJlR,MAAMC,QAAQP,EAAIwR,mBAClBF,EAAUtR,EAAIwR,iBAAiB,IAEjC,OAAOxR,GAAOC,GAAayR,I,kBCtC7B,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBnS,GAAK,K,ibCOzB,IAuBe4S,EAvBI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAuB,EACjDC,mBAAiBJ,EAAczK,MADkB,mBACpEP,EADoE,KAC7DqL,EAD6D,KAG3EC,qBAAU,WACRD,EAASL,EAAczK,QACtB,CAACyK,IAQJ,OACE,kBAAC7B,EAAD,KACE,kBAACoC,EAAA,EAAD,CAAaxL,MAAOC,EAAOA,MAAM,QAAQgB,SAAUqK,IACnD,kBAACG,EAAA,EAAD,CAAYjL,KAAM,SAAU1C,KAAM4N,KAAS7H,QAASsH,IACpD,kBAACM,EAAA,EAAD,CAAYjL,KAAM,SAAU1C,KAAM4N,KAAS7H,QAASuH,IACpD,kBAACK,EAAA,EAAD,CAAYjL,KAAM,OAAQ1C,KAAM6N,IAAQ9H,QAAS,kBAXjC,WAClB,IAAI+H,EAAU,eAAQX,GACtBW,EAAWpL,KAAOP,EAClBiL,EAAOU,GAQkDC,QAOvDzC,EAASnL,IAAOO,IAAV,KAKD,qBAAGL,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBM,KAAKH,mBAIhC,qBAAGH,MAAkBC,KAAKG,a,+bC2E3BuN,IA/GH,SAAC,GAA4C,IAA1ChC,EAAyC,EAAzCA,SAAUiC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAqB,EACbX,oBAAkB,GADL,mBAC/CY,EAD+C,KAC/BC,EAD+B,OAEnBb,qBAFmB,mBAE/CJ,EAF+C,KAEhCkB,EAFgC,KAIhDC,EAAUC,iBAAuB,MAJe,EAKhChB,mBAAc,MALkB,mBAK/ChM,EAL+C,KAK1CiN,EAL0C,OAMvBjB,qBANuB,mBAM/CkB,EAN+C,KAMpCC,EANoC,OAO1BnB,qBAP0B,mBAO/CoB,EAP+C,KAOvCC,EAPuC,KAUhDC,EAAM9P,uBAAY,SAAC+P,EAAWC,GAClC,OAAOA,EAAIF,EAAIE,EAAGD,EAAIC,GAAKD,IAC1B,IAUHrB,qBAAU,WACR,QACyBzS,IAAvBgR,EAASxK,gBACQxG,IAAjBgR,EAASzK,KACQ,KAAjByK,EAASzK,KACTyK,EAASxK,YAAc,CAAEE,OAAQ,EAAGC,MAAO,GAC3C,CACA,IAAMqN,EAAUH,EAAI7C,EAASxK,UAAUG,MAAOqK,EAASxK,UAAUE,QAC3DuN,EAAajD,EAASxK,UAAUG,MAAQqN,EACxCE,EAAclD,EAASxK,UAAUE,OAASsN,EAKhDJ,EAJoB,CAClB,EAAGM,EAAc,GAAMD,EAAa,GACpC,CAACC,EAAc,EAAGD,EAAa,QAIlC,CAACjD,EAASzK,IAAKyK,EAASxK,UAAWqN,IAEtCpB,qBAAU,WA1BW,IAAC0B,EA2BR,OAAR5N,GAAgBoN,GAClBpN,EAAI6N,UA3BY,CAChB,CAAgB,IAFED,EA4BSR,GA1BnB,GAAG,GAAyB,GAAfQ,EAAO,GAAG,IAC/B,CAAgB,GAAfA,EAAO,GAAG,GAAyB,GAAfA,EAAO,GAAG,QA2BhC,CAAC5N,EAAKoN,IAETlB,qBAAU,WACR,GAAIa,GAAWA,EAAQe,QAAS,CAC9B,IAAM3N,EAAS4M,EAAQe,QAAQC,aAC/BZ,EAAUhN,EAAS,SAEpB,IA0BH,OACE,kBAAC6N,EAAD,CAAYC,IAAKlB,GACdH,QAAoCnT,IAAlBmS,GACjB,kBAACsC,EAAD,CACEtC,cAAenB,EAASvK,QAAQ0L,GAChCC,OA7BO,SAACsC,GACd,GAAIzB,QAAuBjT,IAAXkT,QAA0ClT,IAAlBmS,EAA6B,CACnE,IAAIwC,EAAU,YAAO3D,EAASvK,SAC9BkO,EAAWxC,GAAiBuC,EAC5BxB,EAAO,2BACFlC,GADC,IAEJvK,QAASkO,OAwBPrC,SAnBS,WACf,GAAIW,QAAuBjT,IAAXkT,QAA0ClT,IAAlBmS,EAA6B,CACnE,IAAIwC,EAAU,YAAO3D,EAASvK,SAC9BkO,EAAWC,OAAOzC,EAAe,GACjCiB,GAAe,GACfC,OAAUrT,GACVkT,EAAO,2BACFlC,GADC,IAEJvK,QAASkO,OAYPtC,QAAS,kBAAMe,GAAe,MAGjCpC,EAASzK,KAAOkN,GAAaE,GAC5B,kBAACkB,EAAA,EAAD,CACE9O,MAAO,CAAEW,OAAQ+M,EAAW9M,MAAO,QACnCmO,OAlFc,CAAC,EAAG,GAmFlBC,KAAM,EACNC,iBAAiB,EACjBC,YAAazB,GAEb,kBAAC0B,EAAA,EAAD,CAAWC,IAAK,KAChB,kBAACC,EAAA,EAAD,CAAczB,OAAQA,EAAQwB,IAAKnE,EAASzK,MAC5C,kBAAC,EAAD,CACE8O,gBAAiBrE,EAASvK,QAC1BuK,SAAUA,EACViC,SAAUA,EACVC,OAAQA,EACRG,UAAWA,EACXD,eAAgBA,OAvG5B,IA0HMkC,EAAU,SAAC,GAOK,IANpBtE,EAMmB,EANnBA,SACAiC,EAKmB,EALnBA,SACAoC,EAImB,EAJnBA,gBACAnC,EAGmB,EAHnBA,OACAG,EAEmB,EAFnBA,UACAD,EACmB,EADnBA,eAEAmC,YAAa,CACXC,MADW,SACL7D,GACAsB,QAAuBjT,IAAXkT,GACdA,EAAO,2BACFlC,GADC,IAEJvK,QAAQ,GAAD,mBAAMuK,EAASvK,SAAf,CAAwB,CAAEgP,SAAU9D,EAAE+D,OAAQhO,KAAM,eAMnE,IAQI1C,EAAO,IAAID,OAAK,CAClB4Q,cAAeC,EAAQ,KACvBC,QAASD,EAAQ,KACjBE,UAAWF,EAAQ,KACnBG,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGnB,OACE,oCACGX,GACCA,EAAgB9O,KAAI,SAAC0P,EAA4ClH,GAC/D,OACE,kBAACmH,EAAA,EAAD,CAAQlH,IAAKD,EAAO0G,SAAUQ,EAAOR,SAAUzQ,KAAMA,GACnD,kBAACmR,EAAA,EAAD,CAAOC,SAAS,EAAMC,SAAU,IAAKC,OAAQ,kBAtBtC,SAACvH,GACdkE,QAAuBjT,IAAXkT,IACdqD,QAAQC,IAAIzH,GACZsE,EAAUtE,GACVqE,GAAe,IAkB4CqD,CAAW1H,KAC5D,kBAAC2H,EAAA,EAAD,CAAchP,KAAMuO,EAAOvO,cASrC6M,EAAapP,IAAOO,IAAV,KAaU,qBAAGL,MAAkBC,KAAKE,mBACrC,qBAAGH,MAAkBC,KAAKC,SAGf,qBAAGF,MAAkBC,KAAKE,oB,48BC5JrCmR,IAhCG,SAAC,GAOJ,IANbxP,EAMY,EANZA,MACAyP,EAKY,EALZA,OACAC,EAIY,EAJZA,QACA7R,EAGY,EAHZA,KACAkD,EAEY,EAFZA,UACAC,EACY,EADZA,SAEA,OACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE3D0P,GACC,kBAACC,EAAD,CACE3O,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAOC,QACnCzX,KAAK,OACLqX,OAAQA,EACRK,UAAQ,KAGVJ,GACA,kBAACC,EAAD,CACE3O,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAOC,QACnCJ,OAAQA,EACRrX,KAAK,WASf,IAAM8I,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAIToR,EAAQ3R,IAAOuD,MAAV,KAOW,qBAAGrD,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,U,uwCC3DvB2R,IAjBG,SAAC,GAA4C,IAA1CxP,EAAyC,EAAzCA,KAAMyP,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SACrC,OACE,kBAAChT,EAAD,KACE,kBAACQ,EAAD,KACE,kBAACD,EAAD,KACE,kDAEF,kBAAC0S,EAAD,KACE,kBAACC,EAAD,eACC5P,GAEH,kBAAC,IAAD,CAAYA,KAAMyP,EAAYpM,QAAS,kBAAMqM,KAAYpS,KAAMuS,SAQvE,IAAMnT,EAAOe,IAAOO,IAAV,KAEC,qBAAGL,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAUpCd,EAAOQ,IAAOO,IAAV,KAOC,qBAAGL,MAAkBC,KAAKO,eAK/BjB,EAAcO,IAAOO,IAAV,KASX4R,EAAYnS,IAAOqS,KAAV,KAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/BJ,EAAOlS,IAAOO,IAAV,KAQY,qBAAGL,MAAkBC,KAAKE,oB,+ECjF3BkS,EAQnB,WACEpY,EACAD,EACAsY,EACAC,EACAC,EACAC,GACC,yBAdHxY,QAcE,OAbFD,UAaE,OAZFsY,WAYE,OAXFC,UAWE,OAVFC,WAUE,OATFC,UASE,EACAlY,KAAKN,GAAKA,EACVM,KAAKP,KAAOA,GAAQ,GACpBO,KAAK+X,MAAQA,GAAS,GACtB/X,KAAKgY,KAAOA,GAAQ,IAAIG,KACxBnY,KAAKiY,MAAQA,GAAS,EACtBjY,KAAKkY,KAAOA,GAAQ,K,+ECrBHE,EAOnB,WACE1Y,EACAD,EACAG,EACAyY,EACAC,GACC,yBAZH5Y,QAYE,OAXFD,UAWE,OAVF4Y,YAUE,OATFC,UASE,OARF1Y,cAQE,EACAI,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKP,KAAOA,GAAQ,GACpBO,KAAKqY,OAASA,GAAU,GACxBrY,KAAKsY,KAAOA,GAAQ,K,gmBC4DTC,IAjEU,SAAC,GAAkC,IAAhCnH,EAA+B,EAA/BA,SAAUkC,EAAqB,EAArBA,OAwBpC,OAvBAT,qBAAU,WACR,QAAqBzS,IAAjBgR,EAASzK,KAAsC,KAAjByK,EAASzK,IAAY,CACrD,IAAI4O,EAAMS,EAAQ,KACdwC,EAAOxC,EAAQ,KACfyC,EAASzC,EAAQ,KAEjB3N,EAAUkN,EAAImD,MAAMtH,EAASzK,KACjC6R,EAAKG,IAAItQ,GAAS,SAAUuQ,GAC1B,IAAIC,EAAc,GAClBD,EACGE,GAAG,QAAQ,SAAUC,GACpBF,EAAOG,KAAKD,MAEbD,GAAG,OAAO,WACT,IAAIG,EAASC,EAAOC,OAAON,GACvB/X,EAAO2X,EAAOQ,GAClB3F,EAAO,2BAAKlC,GAAN,IAAgBxK,UAAW,CAAEE,OAAQhG,EAAKgG,OAAQC,MAAOjG,EAAKiG,mBAK3E,CAACqK,EAASzK,MAGX,kBAACyS,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CACE/R,MAAO8J,EAAS3R,KAChB8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKlC,GAAN,IAAgB3R,KAAMA,QAGlD,kBAAC,IAAD,CACE6H,MAAO8J,EAASzK,IAChBY,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKlC,GAAN,IAAgBzK,IAAK9F,QAEhD,kBAAC,IAAD,CACEyG,MAAO8J,EAASxK,UAAUG,MAC1BQ,MAAM,YACNgB,SAAU,SAACxB,GAAD,OACRuM,EAAO,2BAAKlC,GAAN,IAAgBxK,UAAU,2BAAMwK,EAASxK,WAAhB,IAA2BG,MAAOA,UAGrE,kBAAC,IAAD,CACEO,MAAO8J,EAASxK,UAAUE,OAC1BS,MAAM,aACNgB,SAAU,SAACzB,GAAD,OACRwM,EAAO,2BAAKlC,GAAN,IAAgBxK,UAAU,2BAAMwK,EAASxK,WAAhB,IAA2BE,OAAQA,UAGtE,kBAAC,IAAD,CACEQ,MAAO8J,EAASrR,QAChBwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKlC,GAAN,IAAgBrR,QAASA,SAG1D,kBAAC,IAAD,CAAKsT,UAAU,EAAMjC,SAAUA,EAAUkC,OAAQA,MAOvD,IAAM8F,EAAgB7T,IAAOO,IAAV,KAMbuT,EAAO9T,IAAOO,IAAV,KACC,qBAAGL,MAAkBC,KAAKC,W,23BCpFxB4T,EAAS,SAACC,EAAmBxB,GACxC,IAAMyB,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GAAWD,OAAOvB,EAAKtY,GAAIsY,MAErC8B,SAAQ,WACPL,EAAGM,YAIIC,EAAqB,SAChCR,EACAxB,EACAiC,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACND,OAAOvB,EAAKtY,GAAIsY,GAChB4B,MAAK,SAACM,GACLD,EAASC,SAGdJ,SAAQ,WACPL,EAAGM,YAeII,EAAU,SAACX,EAAmBY,EAAiBxa,GAC1D,IAAM6Z,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,KAFI,sBAEC,4BAAA1F,EAAA,oEACGkG,EAAM,GADT,SAEeX,EAAGI,MAAML,GAAWa,IAApB,2BAA6BD,GAA7B,IAAqCxa,SAAUA,KAF9D,cAEE0a,EAFF,yBAGGA,GAHH,4CAKLR,SAAQ,WACPL,EAAGM,YAIIQ,EAAkB,SAACf,EAAmBgB,EAAqB5a,GACtE,IAAM6Z,EAAK,IAAIC,IACfD,EAAGE,OACAC,KADH,sBACQ,8BAAA1F,EAAA,6DACEuG,EAAmBD,EAAuB7T,KAAI,SAACyT,GAEnD,cADOA,EAAM,GACN,2BAAKA,GAAZ,IAAoBxa,SAAUA,OAH5B,SAKe6Z,EAAGI,MAAML,GAAWkB,QAAQD,GAL3C,cAKEH,EALF,yBAMGA,GANH,4CAQLR,SAAQ,WACPL,EAAGM,YAIIY,EAAmB,SAC9BnB,EACAxB,EACAiC,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACNoB,IAAI5C,GACJ4B,MAAK,SAACM,GACLD,EAASC,SAGdJ,SAAQ,WACPL,EAAGM,YAIIc,EAAS,SAACrB,EAAmB9Z,GACxC,IAAM+Z,EAAK,IAAIC,SACJtZ,IAAPV,GACF+Z,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GAAWsB,OAAOpb,MAE5Boa,SAAQ,WACPL,EAAGM,YAKEgB,EAAY,SAACvB,EAAmBS,GAC3C,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACNwB,UACApB,MAAK,SAACqB,GACLhB,EAASgB,SAGdnB,SAAQ,WACPL,EAAGM,YAIImB,EAAc,SAAC1B,EAAmBS,GAC7C,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GAAW2B,OAAM,SAACA,GACzBlB,EAASkB,SAGZrB,SAAQ,WACPL,EAAGM,YAIIqB,EAAqB,SAAC5B,GACjC,IAAMC,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,MAAK,WACJ,OAAOH,EAAGI,MAAML,GAAW2B,WAE5BrB,SAAQ,WACPL,EAAGM,YAIIsB,EAAoB,SAC/B7B,EACA/Z,EACA6H,EACA2S,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACN8B,MAAM7b,GACN8b,iBAAiBjU,GACjB0T,UACApB,MAAK,SAACqB,GACLhB,EAASgB,EAAM,UAGpBnB,SAAQ,WACPL,EAAGM,YAIIyB,EAA2B,SAAChC,EAAmB/Z,EAAc6H,GACxE,IAAMmS,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,KAFI,sBAEC,4BAAA1F,EAAA,sEACgBuF,EAAGI,MAAML,GAAW8B,MAAM7b,GAAM8b,iBAAiBjU,GAAO0T,UADxE,cACEC,EADF,yBAEGA,EAAM,IAFT,4CAILnB,SAAQ,WACPL,EAAGM,YAII0B,EAAgB,SAACjC,EAAmBlS,GAC/C,IAAMmS,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,KAFI,sBAEC,sBAAA1F,EAAA,sEACSuF,EAAGI,MAAML,GAAWb,IAAIrR,GADjC,oFAGLwS,SAAQ,WACPL,EAAGM,YAII2B,EAAgC,SAC3ClC,EACA/Z,EACA6H,GAEA,IAAMmS,EAAK,IAAIC,IACf,MAAqB,kBAAVpS,EACFmS,EACJE,OACAC,KAFI,sBAEC,sBAAA1F,EAAA,sEACSuF,EAAGI,MAAML,GAAW8B,MAAM7b,GAAM8b,iBAAiBjU,GAAO6T,QADjE,oFAGLrB,SAAQ,WACPL,EAAGM,WAEmB,kBAAVzS,EACTmS,EACJE,OACAC,KAFI,sBAEC,sBAAA1F,EAAA,sEACSuF,EAAGI,MAAML,GAAW8B,MAAM7b,GAAMkc,OAAOrU,GAAO6T,QADvD,oFAGLrB,SAAQ,WACPL,EAAGM,WAGAN,EACJE,OACAC,KAFI,sBAEC,sBAAA1F,EAAA,sEACSuF,EACVI,MAAML,GACN8B,MAAM7b,GACN8b,iBAAiB,GAAKjU,GACtB6T,QALC,oFAOLrB,SAAQ,WACPL,EAAGM,YAKE6B,EAAmB,SAACpC,GAC/B,IAAMC,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,KAFI,sBAEC,sBAAA1F,EAAA,sEACSuF,EAAGI,MAAML,GAAWwB,UAD7B,oFAGLlB,SAAQ,WACPL,EAAGM,YAII8B,EAAe,SAACC,EAAUC,GACrC,IAAIC,EAAkB,GACtBD,EAAQrU,SAAQ,SAACuU,GACf,GAA4B,kBAAjBA,EAAO3U,MAChB,GAAIwU,EAAIG,EAAOC,qBAAsB1b,MAAO,CAC1C,IAAI2b,GAAS,EACbL,EAAIG,EAAOC,WAAWxU,SAAQ,SAAC0U,GAEzBA,EAAUC,cAAchY,SAAS4X,EAAO3U,MAAM+U,iBAChDF,GAAS,MAGTA,EACFH,EAAKhD,MAAK,GAEVgD,EAAKhD,MAAK,QAGZgD,EAAKhD,KAEH8C,EAAIG,EAAOC,WAAWG,cAAchY,SAAS4X,EAAO3U,MAAM+U,qBAGzD,GAA4B,kBAAjBJ,EAAO3U,MAEvB0U,EAAKhD,KAAK8C,EAAIG,EAAOC,aAAeD,EAAO3U,YACtC,GAA4B,mBAAjB2U,EAAO3U,MAEvB0U,EAAKhD,KAAK8C,EAAIG,EAAOC,aAAeD,EAAO3U,YACtC,GAAI2U,EAAO3U,iBAAiB9G,MAAO,CACxC,IAAI8b,GAAqB,EACzBL,EAAO3U,MAAMI,SAAQ,SAAC6U,GACM,kBAAfA,EAGPT,EAAIG,EAAOC,WAAWG,cAAchY,SAASkY,EAAWF,iBAExDC,GAAY,GACiB,kBAAfC,EAEZT,EAAIG,EAAOC,aAAeK,IAAYD,GAAY,GACvB,mBAAfC,GAEZT,EAAIG,EAAOC,aAAeK,IAAYD,GAAY,MAG1DN,EAAKhD,KAAKsD,OAId,IAAIpC,GAAS,EAIb,OAHA8B,EAAKtU,SAAQ,SAAC8U,GACPA,IAAKtC,GAAS,MAEdA,GAGIuC,EAAoB,SAC/BjD,EACAuC,EACA9B,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJ,IAAI8C,EAAsB,OACtBC,GAAmB,EAEvBZ,EAAQrU,SAAQ,SAACuU,GACK,IAAhBA,EAAOW,OACTF,EAAcT,EAAOC,UACD,IAAhBD,EAAOW,OAAYD,GAAU,OAIjCA,EACFlD,EAAGI,MAAML,GACNyC,QAAO,SAACH,GAAD,OAASD,EAAaC,EAAKC,MAClCY,UACAE,OAAOH,GACP9C,MAAK,SAAC5B,GACLiC,EAASjC,MAGbyB,EAAGI,MAAML,GACNyC,QAAO,SAACH,GAAD,OAASD,EAAaC,EAAKC,MAClCc,OAAOH,GACP9C,MAAK,SAAC5B,GACLiC,EAASjC,SAIhB8B,SAAQ,WACPL,EAAGM,YAII+C,EAA2B,SAACtD,EAAmBuC,GAC1D,IAAMtC,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,MAAK,WACJ,IAAI8C,EAAsB,OACtBC,GAAmB,EASvB,OAPAZ,EAAQrU,SAAQ,SAACuU,GACK,IAAhBA,EAAOW,OACTF,EAAcT,EAAOC,UACD,IAAhBD,EAAOW,OAAYD,GAAU,OAIjCA,EACKlD,EACJI,MAAML,GACNyC,QAAO,SAACH,GAAD,OAASD,EAAaC,EAAKC,MAClCY,UACAE,OAAOH,GAEHjD,EACJI,MAAML,GACNyC,QAAO,SAACH,GAAD,OAASD,EAAaC,EAAKC,MAClCc,OAAOH,MAGb5C,SAAQ,WACPL,EAAGM,YAIIgD,EAA2B,SACtCvD,EACAwD,EACA/C,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACNyD,QAAQD,GACRE,YAAW,SAAUjC,GACpBhB,EAASgB,SAGdnB,SAAQ,WACPL,EAAGM,YAIIoD,EAAkC,SAAC3D,EAAmBwD,GACjE,IAAMvD,EAAK,IAAIC,IACf,OAAOD,EACJE,OACAC,MAAK,WACJ,OAAOH,EAAGI,MAAML,GAAWyD,QAAQD,GAAWE,gBAE/CpD,SAAQ,WACPL,EAAGM,YAIIqD,EAAkB,SAC7B5D,EACAY,EACAH,GAEA,IAAMR,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GACNa,IAAID,GACJR,MAAK,SAACla,GACLua,EAASva,SAGdoa,SAAQ,WACPL,EAAGM,YAIIsD,EAAY,SAAC7D,GACxB,IAAMC,EAAK,IAAIC,IACfD,EAAGE,OACAC,MAAK,WACJH,EAAGI,MAAML,GAAW8D,WAErBxD,SAAQ,WACPL,EAAGM,YAIIwD,EAA0B,SAAC/D,EAAmBuC,EAAmBnc,GAC5E6c,EAAkBjD,EAAWuC,GAAS,SAACyB,GAErC,GAAIC,OAAOC,WAAaD,OAAOC,UAAUC,iBAAkB,CACzD,IAAIC,EAAO,IAAIzF,KAAK,CAAC0F,mBAAmBC,UAAUC,KAAKC,UAAUR,MAAS,CACxE7d,KAHc,oCAKhB+d,UAAUC,iBAAiBC,EAAMhe,OAC5B,CACL,IAAIsU,EAAI+J,SAASC,cAAc,KAC/BhK,EAAEiK,SAAWve,EACbsU,EAAEkK,KAAO,wCAA8BC,mBAAmBN,KAAKC,UAAUR,IACzEtJ,EAAEiD,OAAS,SACX8G,SAASK,KAAKC,YAAYrK,GAC1BA,EAAE0B,QACFqI,SAASK,KAAKE,YAAYtK,S,oyBCrajBuK,IAjBI,SAAC,GAA+D,IAA7DrZ,EAA4D,EAA5DA,KAAMsZ,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,SAAUrW,EAAiC,EAAjCA,UAAW6C,EAAsB,EAAtBA,QAC1D,OACE,qCACIwT,GACA,kBAACC,EAAD,CAAcC,KAAMH,EAAWvT,QAASA,GACtC,kBAAChG,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,KAGhCqW,GACC,kBAACG,EAAD,KACE,kBAAC3Z,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,OAavC,IAAMsW,EAAerZ,IAAOO,IAAV,KACP,qBAAGL,MAAkBsD,QAAQpD,SAClB,qBAAGF,MAAkBsD,QAAQnD,mBAKvC,qBAAGH,MAAkBsD,QAAQjC,UACxB,qBAAGrB,MAAkBsD,QAAQjC,UACnC,qBAAG+X,KAAmB,OAAS,WAkBpCC,EAAuBvZ,YAAOqZ,EAAPrZ,CAAH,KACf,qBAAGE,MAAkBsD,QAAQnD,mBAClB,qBAAGH,MAAkBsD,QAAQpD,SAI7CR,EAAOI,YAAOW,IAAPX,CAAH,M,gxBChDKwN,IARI,SAAC,GAA0D,IAAxDjL,EAAuD,EAAvDA,KAAM1C,EAAiD,EAAjDA,KAAMkD,EAA2C,EAA3CA,UAAWqW,EAAgC,EAAhCA,SAAUxT,EAAsB,EAAtBA,QACrD,OACE,kBAACyT,EAAD,CAAczT,QAASA,EAASwT,SAAUA,GACvCvZ,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4DR,IAOhE,IAAM8W,EAAerZ,IAAOwZ,OAAV,KACP,qBAAGtZ,MAAkBsD,QAAQpD,SAClB,qBAAGF,MAAkBsD,QAAQnD,mBAGvC,qBAAGH,MAAkBsD,QAAQjC,UACxB,qBAAGrB,MAAkBsD,QAAQjC,UAajC,qBAAGrB,MAAkBsD,QAAQsC,cAIlB,qBAAG5F,MAAkBsD,QAAQ4V,YAS/CxZ,EAAOI,YAAOW,IAAPX,CAAH,M,oMCzDWyZ,EAKnB,WAAYC,EAAgBC,EAAkBhH,GAAgB,yBAJ9D+G,WAI6D,OAH7DC,aAG6D,OAF7DhH,UAE6D,EAC3DlY,KAAKif,MAAQA,GAAS,GACtBjf,KAAKkf,QAAUA,GAAW,GAC1Blf,KAAKkY,KAAOA,GAAQ,I,2NCHTiH,sBAAK,YAAqB,IAAlBnH,EAAiB,EAAjBA,KACrB,OACE,kBAACoH,EAAD,KACE,kBAAC,IAAD,CACEzf,KAAK,SACLkW,SAAUwJ,IAASC,IACnB5f,GAAG,IACHyG,MAAO,CAAEmJ,WAAY,QACrBiQ,UAAW,SAACC,GAAD,OAAY7I,QAAQC,IAAI,mBAAoB4I,MAEzD,kBAAC,IAAD,CACE7f,KAAK,SACLkW,SAAUwJ,IAASI,KACnB/f,GAAG,IACHyG,MAAO,CAAEmJ,WAAY,QACrBiQ,UAAW,SAACC,GAAD,OAAY7I,QAAQC,IAAI,mBAAoB4I,MAEzD,6BACE,kBAAC1I,EAAA,EAAD,CAAchP,KAAMkQ,EAAKzQ,SAE3B,kBAAC,IAAD,CAAQ5H,KAAK,SAASkW,SAAUwJ,IAASK,MAAOhgB,GAAG,IAAIyG,MAAO,CAAEmJ,WAAY,UAC5E,kBAAC,IAAD,CAAQ3P,KAAK,SAASkW,SAAUwJ,IAASM,OAAQjgB,GAAG,IAAIyG,MAAO,CAAEmJ,WAAY,cAK7E8P,EAAa7Z,IAAOO,IAAV,KACM,qBAAGL,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,S,wPCnBtC,IAgCe2M,EAhCI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAAsB,EACvCE,mBAAiB,IADsB,mBAC1DpL,EAD0D,KACnDqL,EADmD,KAGjEC,qBAAU,WACJ+M,YAAOrN,IAAgBK,EAASL,EAAcyF,KAAKzQ,OACnDsY,YAAOtN,SAA0CnS,IAAxBmS,EAAchL,OAAqBqL,EAASL,EAAchL,SACtF,CAACgL,EAAeK,IAiBnB,OACE,kBAAC,EAAD,KACE,kBAACE,EAAA,EAAD,CAAaxL,MAAOC,EAAOA,MAAM,QAAQgB,SAAUqK,IACnD,kBAACG,EAAA,EAAD,CAAYjL,KAAM,SAAU1C,KAAM4N,KAAS7H,QAASsH,IACpD,kBAACM,EAAA,EAAD,CAAYjL,KAAM,OAAQ1C,KAAM6N,IAAQ9H,QAAS,kBAnBjC,WAClB,IAAI+H,EAAaX,EACbqN,YAAO1M,KACTA,EAAW8E,KAAX,2BAAuB9E,EAAW8E,MAAlC,IAAwCzQ,MAAOA,KAE7CsY,YAAO3M,UACgB9S,IAArB8S,EAAW3L,MACb2L,EAAU,2BAAQA,GAAR,IAAoB3L,MAAOA,IAErC2L,EAAW3L,MAAQA,GAGvBiL,EAAOU,GAOkDC,QAOvDzC,EAASnL,IAAOO,IAAV,KAKD,qBAAGL,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBM,KAAKH,mBAIhC,qBAAGH,MAAkBC,KAAKG,a,wYC/B1C,IAAMia,EAAY,CAChBC,YAAaC,GAmHAC,EAhHG,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,WAAY7M,EAAqB,EAArBA,OAAqB,EAClCX,mBAAwBuN,GADU,mBAC3DE,EAD2D,KACjDC,EADiD,OAExB1N,qBAFwB,mBAE3DJ,EAF2D,KAE5C+N,EAF4C,OAGzB3N,qBAHyB,mBAG3DY,EAH2D,KAG3CC,EAH2C,KAKlEX,qBAAU,WACR8D,QAAQC,IAAI,eACGxW,IAAXkT,GAAwB4M,IAAiBE,GAAU9M,EAAO8M,KAC7D,CAACA,EAAU9M,EAAQ4M,IAmEtB,OACE,kBAACK,EAAD,KACE,kBAAC,IAAD,CACEH,SAAUA,EACVI,eAbiB,SAAClP,EAAmBmP,GACzCJ,GAAY,SAACK,GAAD,OACVA,EAAI/Z,KAAI,SAACga,GAEP,OADIF,EAAK/gB,KAAOihB,EAAGjhB,KAAIihB,EAAG9K,SAAW4K,EAAK5K,UACnC8K,SAUPC,iBArDmB,SAACC,GAAD,OACvBR,GAAY,SAACK,GAAD,OAAmBI,YAAeD,EAAkBH,OAqD5DnB,UApDY,SAACC,GACjBA,EAAM,2BACDA,GADC,IAEJ7f,KAAM,aACN4H,MAAO,OACPwZ,aAAc,CAAEC,KAAM,UAAWC,YAAa,GAC9CC,WAAY,CAAEF,KAAM,WAEtBX,GAAY,SAACK,GAAD,OAAmBS,YAAQ3B,EAAQkB,OA6C3CU,OA3CS,SAACC,GACd1K,QAAQC,IAAI,eAAgByK,GAC5BA,EAAkBC,WA0CdxB,UAAWA,EACXyB,YAAY,EACZC,eAAgBC,IAAeC,MAC/BC,SAAU,CAAC,GAAI,IACfC,mBAAoBzB,EACpB0B,iBAAkB1B,EAClB2B,eAAgB3B,EAChB4B,eAAgB5B,EA/CC,SAAC7O,EAAmB0Q,GACrCnC,YAAOmC,IACT5B,EAAS1Y,SAAQ,SAACiZ,GACZA,EAAGjhB,KAAOsiB,EAAItiB,IAAMmgB,YAAOc,KAC7BqB,EAAIza,MAAQoZ,EAAGpZ,UAIrB+Y,EAAiB0B,GACjBxO,GAAe,SAsCmCpT,EAC9C6hB,cAAe,IAEf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYtc,MAAM,OAAOuc,IAAK,MAE/B/B,GACC,kBAACgC,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,kBAxFxB,WACjB,IAAIzL,EAAa,EACjB0gB,EAAS1Y,SAAQ,SAACsa,IACXA,EAAItiB,IAAMA,IAAIA,GAAMsiB,EAAItiB,GAAK,MAEpC,IAAM2iB,EAAoB,CACxB,CACE3iB,GAAIA,EAAGkI,WACPjI,KAAM,cACNqY,KAAM,CACJzQ,MAAO,YAETsO,SAAU,CAAEyM,EAAG,IAAwB,GAAlBlC,EAASmC,OAAaC,EAAG,EAAsB,GAAlBpC,EAASmC,UAG/DlC,GAAY,SAACK,GAAD,OAAmBA,EAAIvH,OAAOkJ,MAyEKI,OAG5ClP,GAAkBhB,GACjB,kBAAC,EAAD,CACEA,cAAeA,EACfC,OAlDO,SAACkQ,GACdrC,GAAY,SAACK,GAAD,OACVA,EAAI/Z,KAAI,SAACga,GACP,OAAIA,EAAGjhB,KAAOgjB,EAAOhjB,GACZgjB,EAEF/B,QAGXnN,GAAe,IA0CTf,QAAS,kBAAMe,GAAe,QASlC2O,EAAU5c,IAAOO,IAAV,KAOPya,EAAgBhb,IAAOO,IAAV,KACG,qBAAGL,MAAkBC,KAAKE,mB,ylBCrIhD,IAkRe+c,EAlRU,SAAC,GAAkC,IAAhC9T,EAA+B,EAA/BA,SAAUyE,EAAqB,EAArBA,OAAqB,EAC7BX,mBAAiB,WADY,mBAClDiQ,EADkD,KACvCC,EADuC,KAsFnDC,EAAe,SAACC,EAAeC,EAAkBC,GACrD,QAAiB7iB,IAAbyO,EAAwB,CAC1B,IAAIqU,EAAerU,EAAS/C,MAAMnF,KAAI,SAACwc,GACrC,OAAIA,IAASF,EACJ,2BAAKE,GAAZ,kBAAmBJ,EAAQC,IAEpBG,KAGX7P,EAAO,2BAAKzE,GAAN,IAAgB/C,MAAOoX,OAuB3BE,EAAc,SAACL,EAAeC,EAAkBK,GACpD,QAAiBjjB,IAAbyO,EAAwB,CAC1B,IAAIyU,EAAczU,EAASjD,KAAKjF,KAAI,SAACiF,GACnC,OAAIA,IAASyX,EACJ,2BAAKzX,GAAZ,kBAAmBmX,EAAQC,IAEpBpX,KAGX0H,EAAO,2BAAKzE,GAAN,IAAgBjD,KAAM0X,OAIhC,OACE,kBAAClK,EAAD,KACE,kBAACmK,EAAA,EAAD,CACEC,SAAU,CAAC,UAAW,UAAW,OAAQ,QAAS,MAAO,QAAS,OAClEjb,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAClCb,UAAWA,IAEE,YAAdA,GACC,kBAACvJ,EAAD,KACE,kBAACvG,EAAA,EAAD,CACExL,MAAOuH,EAASpP,KAChB8H,MAAM,gBACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKzE,GAAN,IAAgBpP,KAAMA,QAElD,kBAACqT,EAAA,EAAD,CACExL,MAAOuH,EAAShO,IAChB0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKzE,GAAN,IAAgBhO,IAAKA,QAEhD,kBAACiS,EAAA,EAAD,CACExL,MAAOuH,EAAS9O,QAChBwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKzE,GAAN,IAAgB9O,QAASA,QAExD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOuH,EAASlF,YAChBpC,MAAM,cACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKzE,GAAN,IAAgBlF,YAAaA,SAIrD,YAAdiZ,GACC,oCACG/T,EAASlD,QAAQhF,KAAI,SAACoI,EAAgBI,GACrC,OACE,kBAACyU,EAAD,CAAWxU,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,QACbxc,MAAOyH,EACPxH,MAAM,SACNgB,SAAU,SAACwb,GAAD,OAxHH,SAACA,EAAmBC,GACzC,QAAiB5jB,IAAbyO,EAAwB,CAC1B,IAAIoV,EAAiBpV,EAASlD,QAAQhF,KAAI,SAACoI,GACzC,OAAIA,IAAWiV,EACND,EAEAhV,KAGXuE,EAAO,2BAAKzE,GAAN,IAAgBlD,QAASsY,MA+GMC,CAAeH,EAAWhV,MAErD,kBAAC0P,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA7I7B,SAAC6Y,GACpB,QAAiB5jB,IAAbyO,EAAwB,CAC1B,IAAIoV,EAAiBpV,EAASlD,QAC3BsQ,QAAO,SAAClN,GAAD,OAAoBA,IAAWiV,KACtCrd,KAAI,SAACoI,GACJ,OAAOA,KAEXuE,EAAO,2BAAKzE,GAAN,IAAgBlD,QAASsY,MAsIqBG,CAAarV,UAI7D,kBAACgE,EAAA,EAAD,CAAYjL,KAAM,iBAAkB1C,KAAMgd,IAAQjX,QAAS,kBAvI9C,WACnB,QAAiB/K,IAAbyO,EAAwB,CAC1B,IAAIoV,EAAiBpV,EAASlD,QAAQhF,KAAI,SAACoI,GACzC,OAAOA,KAETkV,EAAejL,KAAK,IACpB1F,EAAO,2BAAKzE,GAAN,IAAgBlD,QAASsY,MAiIsCI,OAGtD,SAAdzB,GACC,oCACG/T,EAAShD,KAAKlF,KAAI,SAAC2H,EAAaa,GAC/B,OACE,kBAACyU,EAAD,CAAWxU,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,OACbxc,MAAOgH,EACP/G,MAAM,SACNgB,SAAU,SAACwb,GAAD,OA1KN,SAACO,EAAgBC,GACnC,QAAiBnkB,IAAbyO,EAAwB,CAC1B,IAAI2V,EAAc3V,EAAShD,KAAKlF,KAAI,SAAC2H,GACnC,OAAIA,IAAQiW,EACHD,EAEAhW,KAGXgF,EAAO,2BAAKzE,GAAN,IAAgBhD,KAAM2Y,MAiKSC,CAAYV,EAAWzV,MAElD,kBAACmQ,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA/LhC,SAACoZ,GACjB,QAAiBnkB,IAAbyO,EAAwB,CAC1B,IAAI2V,EAAc3V,EAAShD,KACxBoQ,QAAO,SAAC3N,GAAD,OAAiBA,IAAQiW,KAChC5d,KAAI,SAAC2H,GACJ,OAAOA,KAEXgF,EAAO,2BAAKzE,GAAN,IAAgBhD,KAAM2Y,MAwLwBE,CAAUpW,UAI1D,kBAACyE,EAAA,EAAD,CAAYjL,KAAM,cAAe1C,KAAMgd,IAAQjX,QAAS,kBAzL9C,WAChB,QAAiB/K,IAAbyO,EAAwB,CAC1B,IAAI2V,EAAc3V,EAAShD,KAAKlF,KAAI,SAAC2H,GACnC,OAAOA,KAETkW,EAAYxL,KAAK,IACjB1F,EAAO,2BAAKzE,GAAN,IAAgBhD,KAAM2Y,MAmLsCG,OAGnD,UAAd/B,GACC,oCACG/T,EAAS/C,MAAMnF,KAAI,SAACwc,EAAYhU,GAC/B,OACE,kBAACyU,EAAD,CAAWxU,IAAKD,GACd,kBAAC2D,EAAA,EAAD,CACExL,MAAO6b,EAAKlE,MACZ1X,MAAM,QACNgB,SAAU,SAACqc,GAAD,OAAa9B,EAAa,QAAS8B,EAASzB,MAExD,kBAAC1E,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAhJ/B,SAAC8X,GAClB,QAAiB7iB,IAAbyO,EAAwB,CAC1B,IAAIqU,EAAerU,EAAS/C,MACzBmQ,QAAO,SAACkH,GAAD,OAAgBA,IAASF,KAChCtc,KAAI,SAACwc,GACJ,OAAOA,KAEX7P,EAAO,2BAAKzE,GAAN,IAAgB/C,MAAOoX,MAyIuB2B,CAAW1B,MACrD,kBAACO,EAAA,EAAD,CACEpc,MAAO6b,EAAKjE,QACZ3X,MAAM,eACNgB,SAAU,SAACuc,GAAD,OAAgBhC,EAAa,UAAWgC,EAAY3B,MAEhE,kBAACrQ,EAAA,EAAD,CACExL,MAAO6b,EAAKjL,KACZ3Q,MAAM,OACNgB,SAAU,SAACwc,GAAD,OAAajC,EAAa,OAAQiC,EAAS5B,UAK7D,kBAACpQ,EAAA,EAAD,CAAYjL,KAAM,eAAgB1C,KAAMgd,IAAQjX,QAAS,kBApJ9C,WACjB,QAAiB/K,IAAbyO,EAAwB,CAC1B,IAAIqU,EAAerU,EAAS/C,MAAMnF,KAAI,SAACwc,GACrC,OAAOA,KAETD,EAAalK,KAAK,IAAIgG,GACtB1L,EAAO,2BAAKzE,GAAN,IAAgB/C,MAAOoX,MA8IsC8B,OAGpD,QAAdpC,GACC,oCACG/T,EAASjD,KAAKjF,KAAI,SAACiQ,EAAWzH,GAC7B,OACE,kBAACyU,EAAD,CAAWxU,IAAKD,GACd,kBAACuU,EAAA,EAAD,CACE5c,OAAQ,OACRQ,MAAOsP,EAAIsI,QACX3X,MAAM,YACNgB,SAAU,SAACuc,GAAD,OAAgB1B,EAAY,UAAW0B,EAAYlO,MAE/D,kBAAC9D,EAAA,EAAD,CACExL,MAAOsP,EAAIsB,KACX3Q,MAAM,OACNgB,SAAU,SAACwc,GAAD,OAAa3B,EAAY,OAAQ2B,EAASnO,MAEtD,kBAAC6H,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAjJhC,SAACkY,GACjB,QAAiBjjB,IAAbyO,EAAwB,CAC1B,IAAIyU,EAAczU,EAASjD,KACxBqQ,QAAO,SAACrF,GAAD,OAAeA,IAAQyM,KAC9B1c,KAAI,SAACiQ,GACJ,OAAOA,KAEXtD,EAAO,2BAAKzE,GAAN,IAAgBjD,KAAM0X,MA0IwB2B,CAAUrO,UAI1D,kBAAC7D,EAAA,EAAD,CAAYjL,KAAM,eAAgB1C,KAAMgd,IAAQjX,QAAS,kBA3I/C,WAChB,QAAiB/K,IAAbyO,EAAwB,CAC1B,IAAIyU,EAAczU,EAASjD,KAAKjF,KAAI,SAACiQ,GACnC,OAAOA,KAET0M,EAAYtK,KAAK,IAAIgG,GAAK,IAAIkG,MAAOtd,WAAY,GAAI,KACrD0L,EAAO,2BAAKzE,GAAN,IAAgBjD,KAAM0X,MAqIuC6B,OAGpD,UAAdvC,GACC,kBAACgB,EAAD,KACE,kBAAC,EAAD,CACEzD,YAAY,EACZD,aAAcrR,EAAS9C,KACvBuH,OAAQ,SAAC8R,GAAD,OAAW9R,EAAO,2BAAKzE,GAAN,IAAgB9C,KAAMqZ,SAItC,QAAdxC,GACC,kBAACgB,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,YAAa,YACbxc,MAAOuH,EAASlI,IAChBY,MAAM,MACNgB,SAAU,SAAC8c,GAAD,OAAY/R,EAAO,2BAAKzE,GAAN,IAAgBlI,IAAK0e,WAUvDjM,EAAgB7T,IAAOO,IAAV,KAQbuT,EAAO9T,IAAOO,IAAV,KACC,qBAAGL,MAAkBC,KAAKC,SAY/Bie,EAAYre,IAAOO,IAAV,K,kBCxTMwf,EAMnB,WAAYC,EAAsBC,EAAqB3Z,EAAclF,GAAiB,yBALtFkI,cAKqF,OAJrF2W,gBAIqF,OAHrF3Z,UAGqF,OAFrFlF,SAEqF,EACnF3G,KAAK6O,SAAW0W,GAAa,IAAI7Z,IACjC1L,KAAKwlB,WAAaA,GAAc,GAChCxlB,KAAK6L,KAAOA,GAAQ,GACpB7L,KAAK2G,IAAMA,GAAO,IAAID,KCRb+e,EAAa,uCAAG,WAAO5W,GAAP,uBAAAqF,EAAA,6DAC3ByC,QAAQ7J,KAAK,KAKb6J,QAAQ7J,KAAK,QACT4Y,EAAiC,GACjCC,EAA0B,GAE9B9W,EAASlD,QAAQjE,SAAQ,SAACqH,GACxB2W,EAAc1M,KAAKwC,YAAyB,QAAS,OAAQzM,OAE/DF,EAAShD,KAAKnE,SAAQ,SAAC4G,GACrBqX,EAAQ3M,KAAKwC,YAAyB,OAAQ,OAAQlN,OAd7B,SAgBRsX,QAAQpI,IAAIkI,GAhBJ,cAgB3BF,EAhB2B,iBAiBdI,QAAQpI,IAAImI,GAjBE,eAiB3B9Z,EAjB2B,iBAkBf2P,YAAyB,YAAa,OAAQ3M,EAASlI,KAlBxC,eAkB3BA,EAlB2B,OAmB3BgQ,QAAQkP,QAAQ,QAEhBL,EAAaA,EAAWvJ,QAAO,SAACvN,GAAD,YAAmBtO,IAATsO,KACzC7C,EAAOA,EAAKoQ,QAAO,SAAC3N,GAAD,YAAiBlO,IAARkO,KAE5BqI,QAAQkP,QAAQ,KAxBW,kBAyBpB,IAAIP,EAAczW,EAAU2W,EAAY3Z,EAAMlF,IAzB1B,4CAAH,sD,8CC4DXmf,GApDO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAqB,EAC9BrT,oBAAS,GADqB,mBAC/CgH,EAD+C,KACzCsM,EADyC,OAE5BtT,mBAAiB,IAFW,mBAE/CsM,EAF+C,KAExCiH,EAFwC,OAGxBvT,mBAAiB,IAHO,mBAG/CuM,EAH+C,KAGtCiH,EAHsC,OAI9BxT,mBAAiB,IAJa,mBAI/CuF,EAJ+C,KAIzCkO,EAJyC,KA+BtD,OACE,oCACE,kBAAC,KAAD,CAAKzM,KAAMA,GACRoM,GAAY,kBAACjT,EAAA,EAAD,CAAaxL,MAAO2X,EAAO1X,MAAM,QAAQgB,SAAU,SAAC0W,GAAD,OAAmBiH,EAASjH,MAC5F,kBAACnM,EAAA,EAAD,CACExL,MAAO4X,EACP3X,MAAM,UACNgB,SAAU,SAAC2W,GAAD,OAAqBiH,EAAWjH,MAE5C,kBAACpM,EAAA,EAAD,CAAaxL,MAAO4Q,EAAM3Q,MAAM,OAAOgB,SAAU,SAAC2P,GAAD,OAAkBkO,EAAQlO,MAC3E,kBAACuG,EAAA,EAAD,CAAYtT,QAAS,kBAnCZ,WACb,IAAIkb,EAAuB,GACb,KAAVpH,IACFoH,EAAU,uBAAOA,GAAP,CAAmB,IAAIC,KAAO,QAASrH,MAEnC,KAAZC,IACFmH,EAAU,uBAAOA,GAAP,CAAmB,IAAIC,KAAO,UAAWpH,MAExC,KAAThH,IACFmO,EAAU,uBAAOA,GAAP,CAAmB,IAAIC,KAAO,OAAQpO,MAElD+N,GAAQ,GACRD,EAAOK,GAuBwBE,IAAUnhB,KAAMohB,MAC3C,kBAAC/H,EAAA,EAAD,CAAYtT,QAAS,kBApBzBsb,KAASC,yBAAwB,WAC/BR,EAAS,IACTC,EAAW,IACXC,EAAQ,IACRH,GAAQ,WAEVD,EAAO,KAciC5gB,KAAMuhB,MAE1C,kBAAC,KAAD,CAAWxb,QAAS,kBAAM8a,GAAStM,KACjC,kBAAC,IAAD,CAAiBvU,KAAMohB,U,26FChCjC,IA2IeI,GA3IM,SAAC,GAAkC,IAAhC/X,EAA+B,EAA/BA,SAA+B,KAArByE,OACFX,oBAAkB,IADK,mBAC9CkU,EAD8C,KACrCC,EADqC,OAETnU,mBAAwB,IAAI2S,GAFnB,mBAE9CyB,EAF8C,KAE9BC,EAF8B,OAGzBrU,mBAAiB,WAHQ,mBAG9CiQ,EAH8C,KAGnCC,EAHmC,OAI7BlQ,mBAAmB,CAAC,YAJS,mBAI9CsU,EAJ8C,KAIxCC,EAJwC,OAKvBvU,mBAAmB,IALI,mBAK9CoJ,EAL8C,KAKrCoL,EALqC,KAOrDtU,qBAAU,WACR4S,EAAc5W,GAAU+K,MAAK,SAAC6L,GAC5B,IAAI2B,EAAU,CAAC,WACX3B,EAAcD,WAAWjD,OAAS,GAAG6E,EAAQpO,KAAK,WAClDyM,EAAc5Z,KAAK0W,OAAS,GAAG6E,EAAQpO,KAAK,QAChDkO,EAAQ,GAAD,OAAKE,EAAL,CAAc,QAAS,MAAO,QAAS,SAC9CJ,EAAkBvB,GAClBqB,GAAW,QAEZ,CAACjY,EAAUmY,IAEd,IAAMziB,EAAaJ,uBAAY,WAC7B,YAAiB/D,IAAbyO,EACmB,KAAjBA,EAAShO,KAA+B,OAAjBgO,EAAShO,IAC3B,GAEFgO,EAAShO,IAEX,KACN,CAACgO,IAMJ,OACE,oCACGgY,GAAW,kBAACQ,GAAA,EAAD,OACVR,GAAWE,GACX,kBAAC,GAAD,KACE,kBAACO,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB/iB,IACC,kBAACM,GAAD,KACE,kBAAC,GAAD,CAAOhE,IAAK0D,MACZ,2BAAIwiB,EAAelY,SAASpP,OAG9B,kBAACsF,GAAD,KACE,2BAAIgiB,EAAelY,SAASpP,SAKpC,kBAAC8jB,EAAA,EAAD,CAAQC,SAAUyD,EAAM1e,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAAMb,UAAWA,IAC5D,YAAdA,GACC,kBAAC,GAAD,KACE,kBAACnL,GAAD,KACE,kBAACC,GAAD,oBACA,kBAACZ,EAAA,EAAD,CAAchP,KAAMif,EAAelY,SAASlF,eAE9C,kBAAC3E,GAAD,KACE,kBAACC,GAAD,KACE,kBAACE,GAAD,CAAMC,KAAME,MACXyhB,EAAelY,SAAS9O,WAKlB,YAAd6iB,GAA2BmE,EAAevB,YACzC,kBAACxgB,GAAD,KACG+hB,EAAevB,WAAW7e,KAAI,SAACoI,EAAcI,GAC5C,OAAO,kBAACV,GAAA,EAAD,CAAUC,KAAMK,EAAQK,IAAKD,QAI3B,SAAdyT,GAAwBmE,EAAelb,MACtC,kBAAC7G,GAAD,KACG+hB,EAAelb,KAAKlF,KAAI,SAAC2H,EAAUa,GAClC,OAAO,kBAACd,GAAA,EAAD,CAASC,IAAKA,EAAKc,IAAKD,QAItB,UAAdyT,GACC,oCACE,kBAAC,GAAD,CAAemD,UAAU,EAAMC,OAAQmB,IACvC,kBAACI,GAAD,KACGR,EAAelY,SAAS/C,MACtBmQ,QAAO,SAACkH,GAAD,OAAgBtH,YAAasH,EAAMpH,MAC1CpV,KAAI,SAACwc,EAAYhU,GAChB,OACE,kBAACqY,GAAD,CAAapY,IAAKD,GAChB,kBAAClK,GAAD,KACE,kBAACyS,GAAD,KAAYyL,EAAKlE,OACjB,kBAACnI,EAAA,EAAD,CAAchP,KAAMqb,EAAKjE,WAE3B,kBAACja,GAAD,KACE,kBAACE,GAAD,CAAMC,KAAMqiB,OACXtE,EAAKjL,YAQP,QAAd0K,GACC,oCACE,kBAAC,GAAD,CAAemD,UAAU,EAAOC,OAAQmB,IACxC,kBAACO,GAAD,KACGX,EAAelY,SAASjD,KACtBqQ,QAAO,SAACrF,GAAD,OAAeiF,YAAajF,EAAKmF,MACxCa,MAAK,SAAC1I,EAASC,GAAV,OAAuB,IAAI+Q,KAAK/Q,EAAE8K,QAAU,IAAIiG,KAAKhR,EAAE+K,UAC5DtY,KAAI,SAACiQ,EAAWzH,GACf,OACE,kBAACnK,GAAD,CAAaoK,IAAKD,GAChB,kBAAClK,GAAD,KACE,kBAACyS,GAAD,MAtFJnH,EAsF2BqG,EAAIqI,MArF1C,IAAIiG,KAAK3U,GAAMoX,kBAqFA,KACA,kBAAC7Q,EAAA,EAAD,CAAchP,KAAM8O,EAAIsI,WAE1B,kBAACja,GAAD,KACE,kBAACE,GAAD,CAAMC,KAAMqiB,OACX7Q,EAAIsB,OA3FV,IAAC3H,OAmGG,UAAdqS,GACC,kBAAC5d,GAAD,KACE,kBAAC,EAAD,CAAWmb,YAAY,EAAOD,aAAc6G,EAAelY,SAAS9C,QAGzD,QAAd6W,GAAuB,kBAACxP,GAAA,EAAD,CAAKC,UAAU,EAAOjC,SAAU2V,EAAepgB,SAS3EyS,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/B+hB,GAAiBniB,IAAOO,IAAV,MAIdyhB,GAAqBhiB,YAAOmiB,GAAPniB,CAAH,MAOlB+hB,GAAS/hB,IAAOO,IAAV,MAMU,qBAAGL,MAAkBM,KAAKH,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1Cb,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX0hB,GAAcjiB,YAAOP,GAAPO,CAAH,MAMXmS,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B5S,GAAOM,IAAOO,IAAV,MAEC,qBAAGL,MAAkBC,KAAKC,SAOf,qBAAGF,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC2F,GAAD,CAAUL,MAAOA,IAEjB,kBAACM,GAAD,OAILD,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAK1CS,GAAQlB,IAAOO,IAAV,M,y+BCzSX,IAgDe8hB,GAhDU,SAAC,GAOX,IANbC,EAMY,EANZA,OACAtgB,EAKY,EALZA,MACAnC,EAIY,EAJZA,KACAkD,EAGY,EAHZA,UACAwf,EAEY,EAFZA,IACAvf,EACY,EADZA,SACY,EACcoK,mBAAmBkV,GADjC,mBACL5M,EADK,KACE8M,EADF,KAGNC,EAAoB,SAAC7Y,EAAe7H,GACxC,IAAIugB,EAAS5M,EACb4M,EAAO1Y,GAAS7H,EAChBygB,EAASF,GACTtf,EAASsf,IAGX,OACE,kBAACpf,GAAD,KACE,kBAACC,GAAD,KACGtD,EAAO,kBAAC,GAAD,CAAMA,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE3DsgB,EAAOlhB,KAAI,SAACW,EAAe6H,GAC1B,YAAY/O,IAAR0nB,EAEA,kBAAC5Q,GAAD,CACEvX,KAAK,SACLyP,IAAKD,EACL2Y,IAAKA,EAAI3Y,GACT7H,MAAOA,EACPiB,SAAU,SAACwJ,GAAD,OAAOiW,EAAkB7Y,GAAQ4C,EAAEoF,OAAO7P,UAKtD,kBAAC4P,GAAD,CACEvX,KAAK,SACLyP,IAAKD,EACL7H,MAAOA,EACPiB,SAAU,SAACwJ,GAAD,OAAOiW,EAAkB7Y,GAAQ4C,EAAEoF,OAAO7P,eAW5DmB,GAAQlD,IAAOgC,MAAV,MACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAgB1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,GAAYnD,IAAOO,IAAV,MAIToR,GAAQ3R,IAAOuD,MAAV,MAOW,qBAAGrD,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,S,g6BC1FtC,IAWesiB,GAXQ,SAAC,GAAyD,IAAvD3gB,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAOnC,EAAwC,EAAxCA,KAAMkD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SACvD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGnD,EAAO,kBAAC,GAAD,CAAMA,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAAC,GAAD,CAAOD,MAAOA,EAAOiB,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAO7P,YAOxDmB,GAAQlD,IAAOgC,MAAV,MACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,GAAYnD,IAAOO,IAAV,MAOToR,GAAQ3R,IAAO2iB,SAAV,MAMW,qBAAGziB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,S,iqDCjCtC,IAgeewiB,GAheQ,SAAC,GAAgC,IAA9BvZ,EAA6B,EAA7BA,OAAQ0E,EAAqB,EAArBA,OAAqB,EACjBX,mBAElC,IAHmD,mBAC9C5K,EAD8C,KAClCqgB,EADkC,KAKrDvV,qBAAU,WACRkI,YAAU,cAAc,SAAC/C,GACvB,IACItG,EADiBsG,EACiBrR,KAAI,SAAC0hB,GACzC,MAAO,CAAE/gB,MAAO+gB,EAAO5oB,KAAM8H,MAAO8gB,EAAO5oB,SAE7C2oB,EAAc1W,QAEf,IAEH,IAAM4W,EAAqB,SACzBC,EACAxF,EACAzb,GAEA,IAAI6B,EAAWyF,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACrC,OAAIA,IAAeD,EACV,2BACFC,GADL,kBAEGzF,EAAQzb,IAGJkhB,KAGXlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAazE,MAG7Bsf,EAAe,SACnBF,EACAG,EACA3F,EACAzb,GAEA,IAAI6B,EAAWyF,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACrC,GAAIA,IAAeD,QAAmCnoB,IAArBooB,EAAWpf,MAAqB,CAC/D,IAAIA,EAAQof,EAAWpf,MAAMzC,KAAI,SAACgiB,GAChC,OAAIA,IAASD,EACJ,2BACFC,GADL,kBAEG5F,EAAQzb,IAGJqhB,KAGX,OAAO,2BAAKH,GAAZ,IAAwBpf,MAAOA,IAE/B,OAAOof,KAGXlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAazE,MAY7Byf,EAAkB,SACtBC,EACAN,EACAxF,EACAzb,GAEA,IAAI6B,EAAWyF,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACrC,GAAIA,IAAeK,QAAyCzoB,IAAxBooB,EAAWrf,SAAwB,CACrE,IAAIA,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,OAAIA,IAAYP,EACP,2BACFO,GADL,kBAEG/F,EAAQzb,IAGJwhB,KAGX,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,IAElC,OAAOqf,KAGXlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAazE,MA2LnC,OACE,kBAAC,GAAD,KACE,kBAAC4f,GAAD,KACE,kBAACjW,EAAA,EAAD,CACExL,MAAOsH,EAAOnP,KACd8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAK1E,GAAN,IAAcnP,KAAMA,QAEhD,kBAACqT,EAAA,EAAD,CACExL,MAAOsH,EAAOf,SACdtG,MAAM,WACNgB,SAAU,SAACsF,GAAD,OAAcyF,EAAO,2BAAK1E,GAAN,IAAcf,SAAUA,QAExD,kBAACiF,EAAA,EAAD,CACExL,MAAOsH,EAAO/N,IACd0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAK1E,GAAN,IAAc/N,IAAKA,QAE9C,kBAACiS,EAAA,EAAD,CACExL,MAAOsH,EAAO7O,QACdwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAK1E,GAAN,IAAc7O,QAASA,QAEtD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOsH,EAAOd,cACdvG,MAAM,gBACNgB,SAAU,SAACuF,GAAD,OACRwF,EAAO,2BAAK1E,GAAN,IAAcd,cAAeA,QAGvC,kBAAC4V,EAAA,EAAD,CACEpc,MAAOsH,EAAOb,UACdxG,MAAM,YACNgB,SAAU,SAACwF,GAAD,OAAeuF,EAAO,2BAAK1E,GAAN,IAAcb,UAAWA,SAG3Da,EAAOhB,YAAYjH,KAAI,SAAC6hB,EAAwBrZ,GAC/C,OACE,kBAAC6Z,GAAD,CAAa5Z,IAAKD,GAChB,kBAAC8Z,GAAD,KACE,kBAACC,GAAD,CACE5hB,MAAOkhB,EAAWvf,MAClB1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OACRqf,EAAmBE,EAAY,QAASvf,MAG5C,kBAACigB,GAAD,CACE5hB,MAAOkhB,EAAWtf,UAClB3B,MAAM,cACNgB,SAAU,SAACW,GAAD,OACRof,EAAmBE,EAAY,YAAatf,MAGhD,kBAACuV,EAAA,EAAD,CACErZ,KAAM+e,KACNhZ,QAAS,kBArNE,SAAC0d,GACxB,IAAIjb,EAAcgB,EAAOhB,YACnBuB,EAAgBvB,EAAYub,QAAQN,IAC3B,IAAX1Z,IACFvB,EAAYoH,OAAO7F,EAAO,GAC1BmE,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,MAgNRwb,CAAiBZ,MAElC,kBAACa,GAAD,CACExB,OAAQW,EAAWnf,WAAamf,EAAWnf,WAAa,GACxD9B,MAAM,aACNgB,SAAU,SAACc,GAAD,OA3RE,SAACkf,EAAwBjhB,GACjD,IAAI6B,EAAWyF,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACrC,OAAIA,IAAeD,QAAwCnoB,IAA1BooB,EAAWnf,WACnC,2BAAKmf,GAAZ,IAAwBnf,WAAY/B,IAE7BkhB,KAGXlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAazE,KAoRnBmgB,CAAkBd,EAAYnf,MAGlC,kBAACoV,EAAA,EAAD,CACErZ,KAAMmkB,IACNpe,QAAS,kBA/KC,SAAC0d,GACvB,IAAIjb,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,YAA8BpoB,IAA1BooB,EAAWnf,YAA4Bmf,IAAeK,EACjD,2BACFL,GADL,IAEEnf,WAAY,aAAImf,EAAWnf,YAAYmgB,MACrC,EACAhB,EAAWnf,WAAWkZ,OAAS,KAI9BiG,KAETlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KAkKN6b,CAAgBjB,MAEjC,kBAAC/J,EAAA,EAAD,CACErZ,KAAMgd,IACNjX,QAAS,kBAnKC,SAAC0d,GACvB,IAAIjb,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,YAA8BpoB,IAA1BooB,EAAWnf,YAA4Bmf,IAAeK,EACjD,2BAAKL,GAAZ,IAAwBnf,WAAW,GAAD,oBAAMmf,EAAWnf,YAAjB,CAA6B,MAE1Dmf,KAETlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KA4JN8b,CAAgBlB,MAEhCA,EAAWpf,OACVof,EAAWpf,MAAMzC,KAAI,SAACgiB,EAAYxZ,GAChC,OACE,kBAACwa,GAAD,CAAeva,IAAKD,GAClB,kBAACya,GAAD,CACEtiB,MAAOqhB,EAAKlpB,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OACRgpB,EAAaD,EAAYG,EAAM,OAAQlpB,MAG3C,kBAACgf,EAAA,EAAD,CACErZ,KAAM+e,KACNhZ,QAAS,kBA3OZ,SAACud,GAClB,IAAI9a,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,IAAIpf,EAAQof,EAAWpf,MACvB,QAAchJ,IAAVgJ,EAAqB,CACvB,IAAM+F,EAAgB/F,EAAM+f,QAAQT,GAIpC,OAHe,IAAXvZ,GACF/F,EAAM4L,OAAO7F,EAAO,GAEf,2BAAKqZ,GAAZ,IAAwBpf,MAAOA,IAEjC,OAAOof,KAETlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KA+NEic,CAAWlB,MAE5B,kBAACmB,GAAD,CACExiB,MAAOqhB,EAAKrhB,MACZC,MAAM,aACNgB,SAAU,SAACjB,GAAD,OACRmhB,EAAaD,EAAYG,EAAM,QAASrhB,MAG5C,kBAACyiB,GAAA,EAAD,CACEziB,MAAOqhB,EAAKqB,WACZziB,MAAM,eACNgB,SAAU,SAACjB,GAAD,OACRmhB,EAAaD,EAAYG,EAAM,aAAcrhB,WAO3D,kBAAC2hB,GAAD,KACE,kBAAClW,EAAA,EAAD,CACEjL,KAAM,eACN1C,KAAMgd,IACNjX,QAAS,kBAjMJ,SAAC0d,GAClB,IAAIjb,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,QAAyBpoB,IAArBooB,EAAWpf,OAAuBof,IAAeK,EAAe,CAMlE,OAAO,2BAAKL,GAAZ,IAAwBpf,MAAM,GAAD,oBAAMof,EAAWpf,OAAjB,CALb,CACd3J,KAAM,GACN6H,MAAO,GACP0iB,YAAY,OAIhB,OAAOxB,KAETlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KAqLNqc,CAAWzB,OAG9B,kBAACS,GAAD,KACGT,EAAWrf,UACVqf,EAAWrf,SAASxC,KAAI,SAACmiB,EAAkB3Z,GACzC,OACE,kBAAC+a,GAAD,CAAkB9a,IAAKD,GACrB,kBAACgb,GAAD,CACE7iB,MAAOwhB,EAAQrpB,KACf8H,MAAM,UACNgB,SAAU,SAAC9I,GAAD,OACRmpB,EAAgBJ,EAAYM,EAAS,OAAQrpB,MAGjD,kBAAC2I,GAAA,EAAD,CACEC,QAAShB,KACTC,MAAOE,aAAkBshB,EAAQnpB,MACjC4H,MAAM,QACNgB,SAAU,SAAC5I,GAAD,OACRipB,EAAgBJ,EAAYM,EAAS,OAAQnpB,MAGjD,kBAAC8e,EAAA,EAAD,CACErZ,KAAM+e,KACNhZ,QAAS,kBA9QT,SAACod,GACrB,IAAI3a,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SACpBgG,EAAgBhG,EAASggB,QAAQZ,GAIvC,OAHe,IAAXpZ,GACFhG,EAAS6L,OAAO7F,EAAO,GAElB,2BAAKqZ,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KAqQEwc,CAActB,MAE/B,kBAACuB,GAAD,CACE/iB,MAAOwhB,EAAQhhB,KACfP,MAAM,eACNgB,SAAU,SAACT,GAAD,OACR8gB,EAAgBJ,EAAYM,EAAS,OAAQhhB,MAGhDghB,EAAQ/gB,YACP+gB,EAAQ/gB,WAAWpB,KACjB,SAAC2jB,EAAmBnb,GAClB,OACE,kBAAC+a,GAAD,CAAkB9a,IAAKD,GACrB,kBAAC/G,GAAA,EAAD,CACEC,QAASN,EACTT,MAAO,CAAEA,MAAOgjB,EAAW/iB,MAAO+iB,GAClC/iB,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OApVhB,SACxBopB,EACAN,EACAgC,EACAjjB,GAEA,IAAIkjB,EAAc5b,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,GAAIA,IAAeK,QAAyCzoB,IAAxBooB,EAAWrf,SAAwB,CACrE,IAAIA,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,GAAIA,IAAYP,EAAY,CAC1B,IAAIxgB,EAAa+gB,EAAQ/gB,WAAWpB,KAAI,SAAC0hB,GACvC,OAAIA,IAAWkC,EACNjjB,EAEA+gB,KAGX,OAAO,2BAAIS,GAAX,IAAoB/gB,WAAYA,IAEhC,OAAO+gB,KAGX,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,IAElC,OAAOqf,KAGXlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAa4c,KA0TDC,CACEjC,EACAM,EACAwB,EACA7qB,MAIN,kBAACgf,EAAA,EAAD,CACErZ,KAAM+e,KACNhZ,QAAS,kBAhSjB,SAACof,GACvB,IAAI3c,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,IAAI/gB,EAAa+gB,EAAQ/gB,WACzB,QAAmB3H,IAAf2H,EAA0B,CAC5B,IAAMoH,EAAgBpH,EAAWohB,QAAQoB,IAC1B,IAAXpb,GACFpH,EAAWiN,OAAO7F,EAAO,GAG7B,OAAO,2BAAK2Z,GAAZ,IAAqB/gB,WAAYA,OAEnC,OAAO,2BAAKygB,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KAkRY8c,CAAgBJ,UAM3C,kBAACvX,EAAA,EAAD,CACEjL,KAAM,gBACN1C,KAAMgd,IACNjX,QAAS,kBAlOP,SAAC0d,EAA2BN,GAClD,IAAI3a,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,IAAI/gB,EAAuB+gB,EAAQ/gB,WAInC,YAHmB3H,IAAf2H,IACFA,EAAa,IAEX+gB,IAAYP,GACdxgB,EAAWiR,KAAK,IACT,2BAAK8P,GAAZ,IAAqB/gB,WAAYA,KAE5B+gB,KAET,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KAmNE+c,CAAgBnC,EAAYM,WAMvD,kBAACG,GAAD,KACE,kBAAClW,EAAA,EAAD,CACEjL,KAAM,kBACN1C,KAAMgd,IACNjX,QAAS,kBA5PD,SAAC0d,GACrB,IAAIjb,EAAcgB,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SAC1B,YAAiB/I,IAAb+I,GAA0Bqf,IAAeK,GAC3C1f,EAAS6P,KAAK,CACZvZ,KAAM,GACNqI,KAAM,GACNnI,KAAMyH,KAAYY,OAClBD,WAAY,KAEP,2BAAKygB,GAAZ,IAAwBrf,SAAUA,KAE7Bqf,KAETlV,EAAO,2BAAK1E,GAAN,IAAchB,YAAaA,KA8ONgd,CAAcpC,WAMvC,kBAACQ,GAAD,KACE,kBAACjW,EAAA,EAAD,CACEjL,KAAM,gBACN1C,KAAMgd,IACNjX,QAAS,WApOXyD,EAAOhB,YAAY2U,OAAS,GAAK,EACnCjP,EAAO,2BACF1E,GADC,IAEJhB,YAAY,GAAD,oBACNgB,EAAOhB,aADD,CAET,CACE3E,MAAO2F,EAAOhB,YAAY2U,OAAS,EACnCrZ,UACE0F,EAAOhB,YAAYgB,EAAOhB,YAAY2U,OAAS,GAAGrZ,UACpDC,SAAU,GACVC,MAAOwF,EAAOhB,YAAYgB,EAAOhB,YAAY2U,OAAS,GAAGnZ,MACzDC,WACEuF,EAAOhB,YAAYgB,EAAOhB,YAAY2U,OAAS,GAAGlZ,iBAK1DiK,EAAO,2BACF1E,GADC,IAEJhB,YAAY,GAAD,oBACNgB,EAAOhB,aADD,CAET,CACE3E,MAAO2F,EAAOhB,YAAY2U,OAAS,EACnCrZ,UAAW,EACXC,SAAU,GACVC,MAAO,GACPC,WAAY,eAmNlB+P,GAAgB7T,IAAOO,IAAV,MASbijB,GAAYxjB,IAAOO,IAAV,MACJ,qBAAGL,MAAkBC,KAAKC,SAc/BqjB,GAAczjB,YAAOwjB,GAAPxjB,CAAH,MAEX0jB,GAAiB1jB,IAAOO,IAAV,MAkBdgkB,GAAgBvkB,YAAOuN,IAAPvN,CAAH,MACb2jB,GAAgB3jB,YAAOslB,KAAPtlB,CAAH,MACb8kB,GAAc9kB,YAAO0iB,GAAP1iB,CAAH,MACX8jB,GAAqB9jB,YAAOqiB,GAAPriB,CAAH,MAElB2kB,GAAmB3kB,IAAOO,IAAV,MAMO,qBAAGL,MAAkBqD,MAAMlD,mBAMlDukB,GAAc5kB,YAAOuN,IAAPvN,CAAH,MAEXokB,GAAgBpkB,YAAO2kB,GAAP3kB,CAAH,MACbqkB,GAAWrkB,YAAOukB,GAAPvkB,CAAH,M,s+GCljBd,IAqNeulB,GArNI,SAAC,GAAwB,IAAD,EAArBlc,EAAqB,EAArBA,OAAqB,EACjB+D,oBAAkB,GADD,mBAClCoY,EADkC,KAC5BC,EAD4B,OAELrY,mBAAqB,IAFhB,mBAElCsY,EAFkC,KAEtBC,EAFsB,OAGCvY,oBAAkB,GAHnB,mBAGlCwY,EAHkC,KAGnBC,EAHmB,KAIrCC,EAAUC,cAEdzY,qBAAU,WACR4J,YACE,aACA0O,EACI,CACE,CAAEjP,UAAW,OAAQ5U,MAAOsH,EAAOnP,KAAMmd,KAAM,GAC/C,CAAEV,UAAW,UAAW5U,MAAOsH,EAAO7O,QAAS6c,KAAM,IAEvD,CAAC,CAAEV,UAAW,OAAQ5U,MAAOsH,EAAOnP,KAAMmd,KAAM,KACpD,SAAC2O,GACCL,EAAcK,QAGjB,CAAC3c,EAAQuc,IAEZ,IAWM5mB,EAAaJ,uBAAY,WAC7B,YAAe/D,IAAXwO,EACiB,KAAfA,EAAO/N,KAA6B,OAAf+N,EAAO/N,IACvB,GAEF+N,EAAO/N,IAET,KACN,CAAC+N,IAWJ,OACE,oCACE,kBAAC,GAAD,KACoB,KAAjBrK,IACC,kBAACinB,GAAD,KACE,kBAAC,GAAD,CAAO3qB,IAAK0D,OAGd,GAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIqK,EAAOnP,OAEb,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCmP,EAAOf,UAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMzI,KAAME,MACXsJ,EAAO7O,SAEV,kBAAC,GAAD,KACE,kBAAC,GAAD,uBACA,kBAAC+W,EAAA,EAAD,CAAchP,KAAM8G,EAAOd,iBAE7B,kBAAC,GAAD,KACE,kBAAC,GAAD,mBACA,kBAACgJ,EAAA,EAAD,CAAchP,KAAM8G,EAAOb,aAE7B,kBAAC,GAAD,KACE,kBAACgc,GAAA,EAAD,CAAYziB,MAAO6jB,EAAe5jB,MAAM,cAAcgB,SAAU6iB,IAChE,kBAAC,GAAD,oBACuB,IAAtBH,EAAW1I,QACV0I,EAAWtkB,KAAI,SAAC8kB,EAAoBtc,GAClC,IAAMuc,EAAe,wBAA0BD,EAAS/rB,GACxD,OACE,kBAACisB,GAAD,CAAevc,IAAKD,EAAOhE,QAAS,kBAAMkgB,EAAQrS,KAAK0S,KACpDD,EAAShsB,SAIlB,kBAACmsB,GAAD,CAAczgB,QAAS,kBApDT,WACxB,IAAI0gB,EAAc,IAAItc,YACfsc,EAAYnsB,GACnBmsB,EAAYlsB,KAAOiP,EAAOnP,KAC1B2d,YAAgB,aAAcyO,GAAa,SAACnsB,GAC1C2rB,EAAQrS,KAAR,8BAAoCtZ,OA+CCosB,KAC3B,kBAAC,IAAD,CAAiB1mB,KAAMuS,SAI7B,kBAAC,GAAD,MACIoT,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAU8G,EAAOnP,MACrB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMpJ,EAAQnD,KAAM,WAGf,IAA9BmD,EAAOhB,YAAY2U,QAClB3T,EAAOhB,YAAY,GAAGvE,YACtBuF,EAAOhB,YAAY,GAAGvE,WAAWkZ,OAAS,GACxC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,+BACE,kBAAC0J,GAAD,KACE,kBAACC,GAAD,CAAiBC,QAASvd,EAAOhB,YAAY,GAAGvE,WAAWkZ,OAAS,GAApE,gBAKJ,+BACE,kBAAC0J,GAAD,KACE,kBAACG,GAAD,cACA,kBAACA,GAAD,YACCxd,EAAOhB,YAAY,GAAGvE,WAAWkZ,QAAU,GAAK,kBAAC6J,GAAD,YAChDxd,EAAOhB,YAAY,GAAGvE,WAAWkZ,QAAU,GAAK,kBAAC6J,GAAD,YAChDxd,EAAOhB,YAAY,GAAGvE,WAAWkZ,QAAU,GAC1C,oCA7GE,SAACA,GAGvB,IAFA,IAAIpH,EAAQoH,EAAS,EACjB8J,EAAS,GACJC,EAAI,EAAGA,EAAInR,EAAOmR,IACzBD,EAAOrT,KAAKsT,EAAI,GAElB,OAAOD,EAAO1lB,KAAI,SAACsC,EAAekG,GAChC,OAAO,kBAACid,GAAD,CAAWhd,IAAKD,GAAQlG,EAAxB,SAsGcsjB,CAAgB3d,EAAOhB,YAAY,GAAGvE,WAAWkZ,UAGvD3T,EAAOhB,YAAYjH,KAAI,SAAC6hB,EAAYrZ,GACnC,OACE,kBAAC8c,GAAD,CAAY7c,IAAKD,GACdqZ,EAAWnf,YACV,oCACE,kBAAC+iB,GAAD,KAAY5D,EAAWvf,OACtBuf,EAAWnf,WAAW1C,KAAI,SAAC6lB,EAAWrd,GACrC,OACE,kBAACid,GAAD,CAAWhd,IAAKD,GACC,IAAdqd,EAAkB,IAAMA,eAcrD,kBAAC,GAAD,KACE,kBAAC,GAAD,KACiC,IAA9B5d,EAAOhB,YAAY2U,QAClB,kBAAC,GAAD,KACE,+BACE,kBAAC0J,GAAD,KACE,kBAACC,GAAD,cACA,kBAACA,GAAD,oBACA,kBAACA,GAAD,iBACCtd,EAAOhB,YAAY,GAAGxE,OACrBwF,EAAOhB,YAAY,GAAGxE,MAAMmZ,OAAS,IADtC,UAEC3T,EAAOhB,YAAY,GAAGxE,aAFvB,aAEC,EAA6BzC,KAAI,SAACgiB,EAAMxZ,GACtC,OAAO,kBAAC+c,GAAD,CAAiB9c,IAAKD,GAAQwZ,EAAKlpB,YAIlD,+BACGmP,EAAOhB,YAAYjH,KAAI,SAAC6hB,EAAYrZ,GAAmB,IAAD,EACrD,OACE,kBAAC8c,GAAD,CAAY7c,IAAKD,GACf,kBAACsd,GAAD,KAAcjE,EAAWvf,OACzB,kBAACwjB,GAAD,KAAcjE,EAAWtf,WACzB,kBAACujB,GAAD,KACGjE,EAAWrf,SAASxC,KAAI,SAACmiB,GACxB,OAAOA,EAAQrpB,KAAO,SAL5B,UAQG+oB,EAAWpf,aARd,aAQG,EAAkBzC,KAAI,SAACgiB,EAAMxZ,GAC5B,OAAO,kBAACsd,GAAD,CAAard,IAAKD,GAAQwZ,EAAKrhB,mBAW1D,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGsH,EAAOhB,YAAYjH,KAAI,SAAC6hB,GACvB,OAAOA,EAAWrf,SAASxC,KAAI,SAACmiB,EAAS3Z,GACvC,OACE,kBAAC,GAAD,CAAMC,IAAKD,GACT,kBAAC,GAAD,KAAY2Z,EAAQrpB,KAApB,KACA,kBAACqX,EAAA,EAAD,CAAchP,KAAMghB,EAAQhhB,kBAaxCsR,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAgB/B6lB,GAAYjmB,YAAO8T,GAAP9T,CAAH,MAKTR,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MASXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBM,KAAKC,aAIjC0R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/BoR,GAAiB1jB,IAAOsU,MAAV,MAKE,qBAAGpU,MAAkBC,KAAKE,mBAG1CqmB,GAAa1mB,IAAOmnB,GAAV,MAEVR,GAAkB3mB,IAAOonB,GAAV,MACC,qBAAGlnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAIhC8mB,GAAclnB,IAAOqnB,GAAV,MACK,qBAAGnnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAMhCymB,GAAY7mB,YAAOknB,GAAPlnB,CAAH,MAETkS,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C+lB,GAAgBpmB,IAAOqS,KAAV,MAEG,qBAAGnS,MAAkBC,KAAKmS,uBAGrC,qBAAGpS,MAAkBC,KAAKE,mBAO/BT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACf,MAAY,KAARA,EACK,kBAAC,GAAD,CAAUgsB,IAAKhsB,IAEf,kBAAC,GAAD,OAIL2F,GAAWjB,IAAOunB,IAAV,MAIRrmB,GAAQlB,IAAOO,IAAV,MAEL8lB,GAAermB,IAAOwZ,OAAV,MACI,qBAAGtZ,MAAkBC,KAAKmS,uBAErC,qBAAGpS,MAAkBC,KAAKE,mB,wYCzXrC,IA8BemnB,GA9BO,SAAC,GAA+B,IAA7Bzb,EAA4B,EAA5BA,MAAOgC,EAAqB,EAArBA,OAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOgK,EAAM7R,KACb8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKhC,GAAN,IAAa7R,KAAMA,QAE/C,kBAACqT,EAAA,EAAD,CACExL,MAAOgK,EAAMf,KACbhJ,MAAM,OACNgB,SAAU,SAACgI,GAAD,OAAU+C,EAAO,2BAAKhC,GAAN,IAAaf,KAAMA,QAE/C,kBAACuC,EAAA,EAAD,CACExL,MAAOgK,EAAMvR,QACbwH,MAAM,UACNgB,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKhC,GAAN,IAAavR,QAASA,QAErD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOgK,EAAM3H,YACbpC,MAAM,cACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKhC,GAAN,IAAa3H,YAAaA,WAS/DyP,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,0oDCtCrC,IAuCeqnB,GAvCG,SAAC,GAAuB,IAArB1b,EAAoB,EAApBA,MAAoB,EACfqB,oBAAkB,GADH,mBAChCoY,EADgC,KAC1BC,EAD0B,KAGvC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAI1Z,EAAM7R,OAGZ,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM2F,KAAMmM,MACXD,EAAMf,MAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMnL,KAAME,MACXgM,EAAMvR,UAGX,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACA,kBAAC+W,EAAA,EAAD,CAAchP,KAAMwJ,EAAM3H,eAE5B,kBAAC,GAAD,MACIohB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUwJ,EAAM7R,MACpB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM1G,EAAO7F,KAAM,aAS7C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX4R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B5S,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,a,wYC3GrC,IA8DeinB,GA9DM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAM5Z,EAAqB,EAArBA,OAC5B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAO4lB,EAAKztB,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAK4Z,GAAN,IAAYztB,KAAMA,QAE9C,kBAACqT,EAAA,EAAD,CACExL,MAAO4lB,EAAKtjB,KACZrC,MAAM,OACNnC,KAAM+nB,IACN5kB,SAAU,SAACqB,GAAD,OAAU0J,EAAO,2BAAK4Z,GAAN,IAAYtjB,KAAMA,QAE9C,kBAACkJ,EAAA,EAAD,CACExL,MAAO4lB,EAAKpjB,OACZvC,MAAM,SACNnC,KAAMgoB,KACN7kB,SAAU,SAACuB,GAAD,OAAYwJ,EAAO,2BAAK4Z,GAAN,IAAYpjB,OAAQA,QAElD,kBAACgJ,EAAA,EAAD,CACExL,MAAO4lB,EAAKvtB,KACZ4H,MAAM,OACNgB,SAAU,SAAC5I,GAAD,OAAU2T,EAAO,2BAAK4Z,GAAN,IAAYvtB,KAAMA,QAE9C,kBAACmT,EAAA,EAAD,CACExL,MAAO4lB,EAAKrjB,OACZtC,MAAM,SACNnC,KAAMioB,IACN9kB,SAAU,SAACsB,GAAD,OAAYyJ,EAAO,2BAAK4Z,GAAN,IAAYrjB,OAAQA,QAElD,kBAACiJ,EAAA,EAAD,CACExL,MAAO4lB,EAAKnjB,WACZxC,MAAM,aACNgB,SAAU,SAACwB,GAAD,OAAgBuJ,EAAO,2BAAK4Z,GAAN,IAAYnjB,WAAYA,QAE1D,kBAAC+I,EAAA,EAAD,CACExL,MAAO4lB,EAAKrsB,IACZ0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAK4Z,GAAN,IAAYrsB,IAAKA,QAE5C,kBAACiS,EAAA,EAAD,CACExL,MAAO4lB,EAAKntB,QACZwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAK4Z,GAAN,IAAYntB,QAASA,QAEpD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAO4lB,EAAKvjB,YACZpC,MAAM,OACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OACR2J,EAAO,2BAAK4Z,GAAN,IAAYvjB,YAAaA,WAUrCyP,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,wlECxErC,IAmEe2nB,GAnEE,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,KAAmB,EACbva,oBAAkB,GADL,mBAC9BoY,EAD8B,KACxBC,EADwB,KAG/BzmB,EAAaJ,uBAAY,WAC7B,YAAa/D,IAAT8sB,EACe,KAAbA,EAAKrsB,KAA2B,OAAbqsB,EAAKrsB,IACnB,GAEFqsB,EAAKrsB,IAEP,KACN,CAACqsB,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB3oB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI2oB,EAAKztB,OAGX,kBAAC,GAAD,KACE,2BAAIytB,EAAKztB,OAIb,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM2F,KAAM+nB,MACXD,EAAKtjB,MAER,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMxE,KAAMgoB,OACXF,EAAKpjB,QAER,kBAAC,GAAD,KAAOojB,EAAKvtB,MACZ,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMyF,KAAME,MACX4nB,EAAKntB,SAEPmtB,EAAKrjB,QACJ,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMzE,KAAMioB,MACXH,EAAKrjB,QAGTqjB,EAAKnjB,YAAc,kBAAC,GAAD,KAAOmjB,EAAKnjB,YAChC,kBAAC,GAAD,KACE,kBAAC+M,EAAA,EAAD,CAAchP,KAAMolB,EAAKvjB,gBAG7B,kBAAC,GAAD,MACIohB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUolB,EAAKztB,MACnB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMkV,EAAMzhB,KAAM,aAS5C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,+lBClLX,IAoQeynB,GApQO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOla,EAAqB,EAArBA,OAAqB,EACvBX,mBAAiB,WADM,mBAC5CiQ,EAD4C,KACjCC,EADiC,KAsH7CC,EAAe,SAACC,EAAeC,EAAkBC,GACrD,QAAc7iB,IAAVotB,EAAqB,CACvB,IAAItK,EAAesK,EAAM1hB,MAAMnF,KAAI,SAACwc,GAClC,OAAIA,IAASF,EACJ,2BAAKE,GAAZ,kBAAmBJ,EAAQC,IAEpBG,KAGX7P,EAAO,2BAAKka,GAAN,IAAa1hB,MAAOoX,OAI9B,OACE,kBAAC,GAAD,KACE,kBAACK,EAAA,EAAD,CACEC,SAAU,CAAC,UAAW,QAAS,UAAW,OAAQ,WAAY,iBAC9Djb,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAClCb,UAAWA,IAEE,YAAdA,GACC,kBAAC,GAAD,KACE,kBAAC9P,EAAA,EAAD,CACExL,MAAOkmB,EAAM/tB,KACb8H,MAAM,aACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKka,GAAN,IAAa/tB,KAAMA,QAE/C,kBAACqT,EAAA,EAAD,CACExL,MAAOkmB,EAAM3sB,IACb0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKka,GAAN,IAAa3sB,IAAKA,QAE7C,kBAACiS,EAAA,EAAD,CACExL,MAAOkmB,EAAMztB,QACbwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKka,GAAN,IAAaztB,QAASA,QAErD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOkmB,EAAM7jB,YACbpC,MAAM,cACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKka,GAAN,IAAa7jB,YAAaA,SAIlD,UAAdiZ,GACC,yCACmBxiB,IAAhBotB,EAAM1hB,OACL0hB,EAAM1hB,MAAMnF,KAAI,SAACwc,EAAYhU,GAC3B,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC2D,EAAA,EAAD,CACExL,MAAO6b,EAAKlE,MACZ1X,MAAM,QACNgB,SAAU,SAACqc,GAAD,OAAa9B,EAAa,QAAS8B,EAASzB,MAExD,kBAAC1E,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA7EjC,SAAC8X,GAClB,QAAc7iB,IAAVotB,EAAqB,CACvB,IAAItK,EAAesK,EAAM1hB,MACtBmQ,QAAO,SAACkH,GAAD,OAAgBA,IAASF,KAChCtc,KAAI,SAACwc,GACJ,OAAOA,KAEX7P,EAAO,2BAAKka,GAAN,IAAa1hB,MAAOoX,MAsE4B2B,CAAW1B,MACrD,kBAACO,EAAA,EAAD,CACEpc,MAAO6b,EAAKjE,QACZ3X,MAAM,eACNgB,SAAU,SAACuc,GAAD,OAAgBhC,EAAa,UAAWgC,EAAY3B,MAEhE,kBAACrQ,EAAA,EAAD,CACExL,MAAO6b,EAAKjL,KACZ3Q,MAAM,OACNgB,SAAU,SAACwc,GAAD,OAAajC,EAAa,OAAQiC,EAAS5B,UAK/D,kBAACpQ,EAAA,EAAD,CAAYjL,KAAM,eAAgB1C,KAAMgd,IAAQjX,QAAS,kBAjF9C,WACjB,QAAc/K,IAAVotB,EAAqB,CACvB,IAAItK,EAAesK,EAAM1hB,MAAMnF,KAAI,SAACwc,GAClC,OAAOA,KAETD,EAAalK,KAAK,IAAIgG,GACtB1L,EAAO,2BAAKka,GAAN,IAAa1hB,MAAOoX,MA2EyC8B,OAGpD,YAAdpC,GACC,oCACG4K,EAAM7hB,QAAQhF,KAAI,SAACoI,EAAgBI,GAClC,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,QACbxc,MAAOyH,EACPxH,MAAM,SACNgB,SAAU,SAACwb,GAAD,OApHH,SAACA,EAAmBC,GACzC,QAAc5jB,IAAVotB,EAAqB,CACvB,IAAIvJ,EAAiBuJ,EAAM7hB,QAAQhF,KAAI,SAACoI,GACtC,OAAIA,IAAWiV,EACND,EAEAhV,KAGXuE,EAAO,2BAAKka,GAAN,IAAa7hB,QAASsY,MA2GSC,CAAeH,EAAWhV,MAErD,kBAAC0P,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAzI7B,SAAC6Y,GACpB,QAAc5jB,IAAVotB,EAAqB,CACvB,IAAIvJ,EAAiBuJ,EAAM7hB,QACxBsQ,QAAO,SAAClN,GAAD,OAAoBA,IAAWiV,KACtCrd,KAAI,SAACoI,GACJ,OAAOA,KAEXuE,EAAO,2BAAKka,GAAN,IAAa7hB,QAASsY,MAkIwBG,CAAarV,UAI7D,kBAACgE,EAAA,EAAD,CAAYjL,KAAM,iBAAkB1C,KAAMgd,IAAQjX,QAAS,kBAnI9C,WACnB,QAAc/K,IAAVotB,EAAqB,CACvB,IAAIvJ,EAAiBuJ,EAAM7hB,QAAQhF,KAAI,SAACoI,GACtC,OAAOA,KAETkV,EAAejL,KAAK,IACpB1F,EAAO,2BAAKka,GAAN,IAAa7hB,QAASsY,MA6HyCI,OAGtD,SAAdzB,GACC,oCACG4K,EAAM3hB,KAAKlF,KAAI,SAAC2H,EAAaa,GAC5B,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,OACbxc,MAAOgH,EACP/G,MAAM,MACNgB,SAAU,SAACwb,GAAD,OAtMN,SAACO,EAAgBC,GACnC,QAAcnkB,IAAVotB,EAAqB,CACvB,IAAIhJ,EAAcgJ,EAAM3hB,KAAKlF,KAAI,SAAC2H,GAChC,OAAIA,IAAQiW,EACHD,EAEAhW,KAGXgF,EAAO,2BAAKka,GAAN,IAAa3hB,KAAM2Y,MA6LYC,CAAYV,EAAWzV,MAElD,kBAACmQ,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA3NhC,SAACoZ,GACjB,QAAcnkB,IAAVotB,EAAqB,CACvB,IAAIhJ,EAAcgJ,EAAM3hB,KACrBoQ,QAAO,SAAC3N,GAAD,OAAiBA,IAAQiW,KAChC5d,KAAI,SAAC2H,GACJ,OAAOA,KAEXgF,EAAO,2BAAKka,GAAN,IAAa3hB,KAAM2Y,MAoN2BE,CAAUpW,UAI1D,kBAACyE,EAAA,EAAD,CAAYjL,KAAM,cAAe1C,KAAMgd,IAAQjX,QAAS,kBArN9C,WAChB,QAAc/K,IAAVotB,EAAqB,CACvB,IAAIhJ,EAAcgJ,EAAM3hB,KAAKlF,KAAI,SAAC2H,GAChC,OAAOA,KAETkW,EAAYxL,KAAK,IACjB1F,EAAO,2BAAKka,GAAN,IAAa3hB,KAAM2Y,MA+MyCG,OAGnD,aAAd/B,GACC,oCACG4K,EAAM9d,SAAS/I,KAAI,SAAC1C,EAAiBkL,GACpC,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,WACbxc,MAAOrD,EACPsD,MAAM,UACNgB,SAAU,SAACklB,GAAD,OAxLF,SAACA,EAAoBC,GAC3C,QAActtB,IAAVotB,EAAqB,CACvB,IAAIG,EAAkBH,EAAM9d,SAAS/I,KAAI,SAAC1C,GACxC,OAAIA,IAAYypB,EACPD,EAEAxpB,KAGXqP,EAAO,2BAAKka,GAAN,IAAa9d,SAAUie,MA+KSC,CAAgBH,EAAYxpB,MAExD,kBAACwa,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA7M5B,SAACuiB,GACrB,QAActtB,IAAVotB,EAAqB,CACvB,IAAIG,EAAkBH,EAAM9d,SACzBuM,QAAO,SAAChY,GAAD,OAAqBA,IAAYypB,KACxC/mB,KAAI,SAAC1C,GACJ,OAAOA,KAEXqP,EAAO,2BAAKka,GAAN,IAAa9d,SAAUie,MAsMuBE,CAAc5pB,UAI9D,kBAAC8O,EAAA,EAAD,CAAYjL,KAAM,kBAAmB1C,KAAMgd,IAAQjX,QAAS,kBAvM9C,WACpB,QAAc/K,IAAVotB,EAAqB,CACvB,IAAIG,EAAkBH,EAAM9d,SAAS/I,KAAI,SAAC1C,GACxC,OAAOA,KAET0pB,EAAgB3U,KAAK,IACrB1F,EAAO,2BAAKka,GAAN,IAAa9d,SAAUie,MAiMyCG,OAGvD,kBAAdlL,GACC,kBAAC,GAAD,KACE,kBAAC,EAAD,CACEzC,YAAY,EACZD,aAAcsN,EAAMzhB,KACpBuH,OAAQ,SAAC8R,GAAD,OAAW9R,EAAO,2BAAKka,GAAN,IAAazhB,KAAMqZ,WAUlDhM,GAAgB7T,IAAOO,IAAV,MAQbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAY/Bie,GAAYre,IAAOO,IAAV,M,UC1SMioB,GAMnB,WAAYxI,EAAmBC,EAAqB3Z,EAAc6D,GAAuB,yBALzF8d,WAKwF,OAJxFhI,gBAIwF,OAHxF3Z,UAGwF,OAFxF6D,cAEwF,EACtF1P,KAAKwtB,MAAQjI,GAAa,IAAI9V,KAC9BzP,KAAKwlB,WAAaA,GAAc,GAChCxlB,KAAK6L,KAAOA,GAAQ,GACpB7L,KAAK0P,SAAWA,GAAY,ICRnBse,GAAU,uCAAG,WAAOR,GAAP,yBAAAtZ,EAAA,6DACxByC,QAAQ7J,KAAK,KAKb6J,QAAQ7J,KAAK,QACT4Y,EAAiC,GACjCC,EAA0B,GAC1BsI,EAAkC,GAEtCT,EAAM7hB,QAAQjE,SAAQ,SAACqH,GACrB2W,EAAc1M,KAAKwC,YAAyB,QAAS,OAAQzM,OAE/Dye,EAAM3hB,KAAKnE,SAAQ,SAAC4G,GAClBqX,EAAQ3M,KAAKwC,YAAyB,OAAQ,OAAQlN,OAExDkf,EAAM9d,SAAShI,SAAQ,SAACzD,GACtBgqB,EAAYjV,KAAKwC,YAAyB,WAAY,OAAQvX,OAlBxC,UAoBL2hB,QAAQpI,IAAIkI,GApBP,eAoBxBF,EApBwB,iBAqBXI,QAAQpI,IAAImI,GArBD,eAqBxB9Z,EArBwB,iBAsBP+Z,QAAQpI,IAAIyQ,GAtBL,eAsBxBve,EAtBwB,OAuBxBiH,QAAQkP,QAAQ,QAEhBL,EAAaA,EAAWvJ,QAAO,SAACvN,GAAD,YAAmBtO,IAATsO,KACzC7C,EAAOA,EAAKoQ,QAAO,SAAC3N,GAAD,YAAiBlO,IAARkO,KAC5BoB,EAAWA,EAASuM,QAAO,SAAChY,GAAD,YAAyB7D,IAAZ6D,KAExC0S,QAAQkP,QAAQ,KA7BQ,kBA8BjB,IAAIkI,GAAWP,EAAOhI,EAAY3Z,EAAM6D,IA9BvB,4CAAH,sD,84FCsBvB,IAuHewe,GAvHG,SAAC,GAA+B,IAA7BV,EAA4B,EAA5BA,MAA4B,KAArBla,OACIX,oBAAkB,IADD,mBACxCkU,EADwC,KAC/BC,EAD+B,OAETnU,mBAAqB,IAAIob,IAFhB,mBAExCI,EAFwC,KAE3BC,EAF2B,OAGnBzb,mBAAiB,WAHE,mBAGxCiQ,EAHwC,KAG7BC,EAH6B,OAIvBlQ,mBAAmB,CAAC,YAJG,mBAIxCsU,EAJwC,KAIlCC,EAJkC,OAKjBvU,mBAAmB,IALF,mBAKxCoJ,EALwC,KAK/BoL,EAL+B,KAO/CtU,qBAAU,WACRmb,GAAWR,GAAO5T,MAAK,SAACoU,GACtB,IAAI5G,EAAU,CAAC,WACX4G,EAAWR,MAAM1hB,MAAMyW,OAAS,GAAG6E,EAAQpO,KAAK,SAChDgV,EAAWxI,WAAWjD,OAAS,GAAG6E,EAAQpO,KAAK,WAC/CgV,EAAWniB,KAAK0W,OAAS,GAAG6E,EAAQpO,KAAK,QACzCgV,EAAWte,SAAS6S,OAAS,GAAG6E,EAAQpO,KAAK,YACjDkO,EAAQ,GAAD,OAAKE,EAAL,CAAc,mBACrBgH,EAAeJ,GACflH,GAAW,QAEZ,CAAC0G,EAAOY,IAEX,IAAM7pB,EAAaJ,uBAAY,WAC7B,YAAc/D,IAAVotB,EACgB,KAAdA,EAAM3sB,KAA4B,OAAd2sB,EAAM3sB,IACrB,GAEF2sB,EAAM3sB,IAER,KACN,CAAC2sB,IAEJ,OACE,oCACG3G,GAAW,kBAACQ,GAAA,EAAD,OACVR,GAAWsH,GACX,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB5pB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI4pB,EAAYX,MAAM/tB,OAGxB,kBAAC,GAAD,KACE,2BAAI0uB,EAAYX,MAAM/tB,SAK9B,kBAAC8jB,EAAA,EAAD,CAAQC,SAAUyD,EAAM1e,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAAMb,UAAWA,IAC5D,YAAdA,GACC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACA,kBAAC9L,EAAA,EAAD,CAAchP,KAAMqmB,EAAYX,MAAM7jB,eAExC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMvE,KAAME,MACX6oB,EAAYX,MAAMztB,WAKZ,UAAd6iB,GACC,oCACE,kBAAC,GAAD,CAAemD,UAAU,EAAMC,OAAQmB,IACvC,kBAAC,GAAD,KACGgH,EAAYX,MAAM1hB,MAChBmQ,QAAO,SAACkH,GAAD,OAAgBtH,YAAasH,EAAMpH,MAC1CpV,KAAI,SAACwc,EAAYhU,GAChB,OACE,kBAAC,GAAD,CAAaC,IAAKD,GAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAYgU,EAAKlE,OACjB,kBAACnI,EAAA,EAAD,CAAchP,KAAMqb,EAAKjE,WAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM9Z,KAAMqiB,OACXtE,EAAKjL,YAQP,YAAd0K,GACC,kBAAC,GAAD,KACGuL,EAAY3I,WAAW7e,KAAI,SAACoI,EAAcI,GACzC,OAAO,kBAACV,GAAA,EAAD,CAAUC,KAAMK,EAAQK,IAAKD,QAI3B,SAAdyT,GACC,kBAAC,GAAD,KACGuL,EAAYtiB,KAAKlF,KAAI,SAAC2H,EAAUa,GAC/B,OAAO,kBAACd,GAAA,EAAD,CAASC,IAAKA,EAAKc,IAAKD,QAItB,aAAdyT,GACC,kBAAC,GAAD,KACGuL,EAAYze,SAAS/I,KAAI,SAAC1C,EAAkBkL,GAC3C,OAAO,kBAACnL,GAAA,EAAD,CAAaC,QAASA,EAASmL,IAAKD,QAIlC,kBAAdyT,GACC,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAWzC,YAAY,EAAOD,aAAciO,EAAYX,MAAMzhB,WAWtEqN,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/B+hB,GAAiBniB,IAAOO,IAAV,MAIdyhB,GAAqBhiB,YAAOmiB,GAAPniB,CAAH,MAOlB+hB,GAAS/hB,IAAOO,IAAV,MAMU,qBAAGL,MAAkBM,KAAKH,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1Cb,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX0hB,GAAcjiB,YAAOP,GAAPO,CAAH,MAMXmS,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B5S,GAAOM,IAAOO,IAAV,MAEC,qBAAGL,MAAkBC,KAAKC,SAOf,qBAAGF,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAK1CS,GAAQlB,IAAOO,IAAV,M,wYCjRX,IA4DeuoB,GA5DM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMhb,EAAqB,EAArBA,OAC5B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOgnB,EAAK7uB,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKgb,GAAN,IAAY7uB,KAAMA,QAE9C,kBAACokB,EAAA,EAAD,CACEC,YAAa,QACbxc,MAAOgnB,EAAK5jB,KACZnD,MAAM,YACNgB,SAAU,SAACmC,GAAD,OAAU4I,EAAO,2BAAKgb,GAAN,IAAY5jB,KAAMA,QAE9C,kBAACqf,GAAA,EAAD,CACEziB,QAASgnB,EAAK7jB,UACdlD,MAAM,YACNgB,SAAU,SAACkC,GAAD,OAAe6I,EAAO,2BAAKgb,GAAN,IAAY7jB,UAAWA,EAAY,EAAI,QAExE,kBAACqI,EAAA,EAAD,CACExL,MAAOgnB,EAAK3uB,KACZ4H,MAAM,OACNgB,SAAU,SAAC5I,GAAD,OAAU2T,EAAO,2BAAKgb,GAAN,IAAY3uB,KAAMA,QAE9C,kBAACkrB,GAAA,EAAD,CACEvjB,MAAOgnB,EAAK9jB,WACZjD,MAAM,cACNgB,SAAU,SAACiC,GAAD,OAAgB8I,EAAO,2BAAKgb,GAAN,IAAY9jB,WAAYA,QAE1D,kBAACsI,EAAA,EAAD,CACExL,MAAOgnB,EAAK/jB,OACZhD,MAAM,SACNgB,SAAU,SAACgC,GAAD,OAAY+I,EAAO,2BAAKgb,GAAN,IAAY/jB,OAAQA,QAElD,kBAACuI,EAAA,EAAD,CACExL,MAAOgnB,EAAKztB,IACZ0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKgb,GAAN,IAAYztB,IAAKA,QAE5C,kBAACiS,EAAA,EAAD,CACExL,MAAOgnB,EAAKvuB,QACZwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKgb,GAAN,IAAYvuB,QAASA,QAEpD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOgnB,EAAK3kB,YACZpC,MAAM,OACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OACR2J,EAAO,2BAAKgb,GAAN,IAAY3kB,YAAaA,WAUrCyP,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,gjFC1ErC,IAsFe4oB,GAtFE,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,KAAmB,EACb3b,oBAAkB,GADL,mBAC9BoY,EAD8B,KACxBC,EADwB,OAELrY,qBAFK,mBAE9B6b,EAF8B,KAEpBC,EAFoB,KAIrC5b,qBAAU,WACR4J,YACE,QACA,CAAC,CAAEP,UAAW,OAAQ5U,MAAOgnB,EAAK5jB,KAAMkS,KAAM,KAC9C,SAAC2O,GACCkD,EAAYlD,EAAQ,SAGvB,CAAC+C,IAEJ,IAAMI,EAAevqB,uBAAY,WAC/B,YAAa/D,IAATkuB,GACIA,EAAK7jB,UACF,yBAAKkkB,UAAU,QAAf,KAGJ,KACN,CAACL,IAEE/pB,EAAaJ,uBAAY,WAC7B,YAAa/D,IAATkuB,EACe,KAAbA,EAAKztB,KAA2B,OAAbytB,EAAKztB,IACnB,GAEFytB,EAAKztB,IAEP,KACN,CAACytB,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACM,GAAD,CAAQrkB,OAAQ+jB,EAAK/jB,QAAS+jB,EAAK/jB,QAEnC,kBAAC5F,GAAD,KACE,2BAAI+pB,MAGY,KAAjBnqB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI+pB,EAAK7uB,OAGX,kBAAC,GAAD,KACE,2BAAI6uB,EAAK7uB,OAIb,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAO6uB,EAAK3uB,MACZ,kBAAC,GAAD,SAAQ2uB,EAAK9jB,YACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMpF,KAAME,MACXgpB,EAAKvuB,SAEPuuB,EAAK5jB,MAAQ8jB,GACZ,oCACE,kBAAC,GAAD,KAAOF,EAAK5jB,MACZ,kBAAC,GAAD,KAAO8jB,EAAS3kB,QAChB,kBAAC,GAAD,KAAO2kB,EAASzkB,aAGpB,kBAAC,GAAD,KACE,kBAAC+M,EAAA,EAAD,CAAchP,KAAMwmB,EAAK3kB,gBAG7B,kBAAC,GAAD,MACIohB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUwmB,EAAK7uB,MACnB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMsW,EAAM7iB,KAAM,aAS5C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAY/BipB,GAASrpB,IAAOO,IAAV,MAMU,qBAAGL,MAAkBC,KAAKE,mBACrC,SAAC4F,GAAW,IAAD,EACZjB,EAAM,UAAGiB,EAAMjB,cAAT,aAAG,EAAc8R,cAAcjY,OAC3C,MAAe,aAAXmG,EACK,UACa,cAAXA,EACF,UACa,cAAXA,EACF,UACa,SAAXA,EACF,UACa,aAAXA,EACF,UAEA,aAKPxF,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CjB,GAAOY,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,m0BCxOX,IAoFe+oB,GApFM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMxb,EAAqB,EAArBA,OAmC5B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOwnB,EAAKrvB,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKwb,GAAN,IAAYrvB,KAAMA,QAE9C,kBAACsX,GAAA,EAAD,CACExP,MAAM,GACN0P,SAAS,EACT7R,KAAM2pB,IACN/X,OAAO,OACPzO,SAAU,SAACymB,GAAD,OA/CS,SAACC,GAC1B,GAAiB,OAAbA,EAAmB,CACrB,IAAM7X,EAAQ5W,MAAM0uB,KAAKD,GACJ,IAAjB7X,EAAMmL,QAAcjP,EAAO,2BAAKwb,GAAN,IAAY9W,KAAMZ,EAAM,OA4C9B+X,CAAmBH,MAEzC,kBAAClc,EAAA,EAAD,CACExL,MAAOwnB,EAAK/W,MACZxQ,MAAM,QACNnC,KAAMkU,IACN/Q,SAAU,SAACwP,GAAD,OAAWzE,EAAO,2BAAKwb,GAAN,IAAY/W,MAAOA,QAEhD,kBAAC8S,GAAA,EAAD,CACEvjB,MAAOwnB,EAAK7W,MACZ1Q,MAAM,QACNnC,KAAME,IACNiD,SAAU,SAAC0P,GAAD,OAAW3E,EAAO,2BAAKwb,GAAN,IAAY7W,MAAOA,SAGlD,kBAACmX,GAAD,KACGN,EAAK5W,KAAKvR,KAAI,SAAC0oB,EAAalgB,GAC3B,OACE,kBAACmgB,GAAD,CAAYlgB,IAAKD,GACf,kBAAC2D,EAAA,EAAD,CACExL,MAAO+nB,EACP9nB,MAAM,MACNgB,SAAU,SAAC9I,GAAD,OA9DJ,SAAC8vB,EAAgBjoB,GACnC,IAAI4Q,EAAO4W,EAAK5W,KAAKvR,KAAI,SAAC0oB,GACxB,OAAIA,IAAQE,EACHjoB,EAEA+nB,KAGX/b,EAAO,2BAAKwb,GAAN,IAAY5W,KAAMA,KAsDQsX,CAAYH,EAAK5vB,MAEvC,kBAACgf,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA9C9B,SAACokB,GACjB,IAAIrX,EAAO4W,EAAK5W,KACV/I,EAAgB+I,EAAKiR,QAAQoG,IACpB,IAAXpgB,IACF+I,EAAKlD,OAAO7F,EAAO,GACnBmE,EAAO,2BAAKwb,GAAN,IAAY5W,KAAMA,MAyC0BuX,CAAUJ,UAI1D,kBAACC,GAAD,KACE,kBAAC7Q,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,WAzDzCmI,EAAO,2BACFwb,GADC,IAEJ5W,KAAK,GAAD,oBAAM4W,EAAK5W,MAAX,CAAiB,eAgErBkB,GAAgB7T,IAAOO,IAAV,MASb4pB,GAAWnqB,IAAOO,IAAV,MACH,qBAAGL,MAAkBC,KAAKC,SAc/BypB,GAAU7pB,YAAOmqB,GAAPnqB,CAAH,MAEP+pB,GAAa/pB,IAAOO,IAAV,M,2/DCpHhB6pB,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kBAMA,IAuHeJ,GAvHE,SAAC,GAAsB,IAApBZ,EAAmB,EAAnBA,KAAmB,EACbnc,mBAAiB,IADJ,mBAC9BjI,EAD8B,KACxBqlB,EADwB,OAELpd,mBAAiB,GAFZ,mBAE9Bqd,EAF8B,KAEpBC,EAFoB,OAGDtd,mBAAiB,GAHhB,mBAG9Bud,EAH8B,KAGlBC,EAHkB,KAKrCtd,qBAAU,WACR,IAAMud,EAAS,IAAIC,WACnBD,EAAOE,cAAcxB,EAAK9W,MAC1BoY,EAAOG,UAAY,WACjB,IAAIC,EAAaJ,EAAOlW,OACL,OAAfsW,GAAqBT,EAAQS,EAAW5oB,gBAIhD,IA6BM6oB,EAAa,SAACC,GAClBP,GAAc,SAACQ,GAAD,OAAoBA,EAAiBD,MAmBrD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACE,GAAD,KACE,6BACE,kBAAC7d,EAAA,EAAD,CACE5H,QAlBK,WACfslB,EAAW,IAkBD3oB,KAAM,OACN6W,SAAUuR,GAAcF,EACxB5qB,KAAMyrB,MAER,kBAAC9d,EAAA,EAAD,CACE5H,QA5BS,WACnBslB,GAAY,IA4BF3oB,KAAM,WACN6W,SAAUuR,GAAc,EACxB9qB,KAAM0rB,MAXV,QAaQZ,IAAeF,EAAW,EAAI,MAbtC,OAaiDA,GAAY,MAE7D,kBAAC,KAAD,CACEhB,KAAMtkB,EACNqmB,cA9CoB,SAAC,GAAwC,IAAtCf,EAAqC,EAArCA,SAC/BC,EAAYD,GACZG,EAAc,IA6CNa,YA9BU,SAAC,GAId,IAHOC,EAGR,EAHJf,WAIAC,GAAec,IA0BPpK,QAASqK,MAET,kBAAC,KAAD,CAAMhB,WAAYA,EAAYrJ,QAASqK,UAI7C,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIpC,EAAKrvB,OAEX,kBAACsT,EAAA,EAAD,CACE5H,QAAS,kBAnFD,WACd,GAAIuS,UAAUyT,WAAWvpB,WAAWuhB,QAAQ,QAAU,EACpD1L,OAAOC,UAAU0T,WAAWtC,EAAK9W,KAAM8W,EAAKrvB,KAAO,YAC9C,CACL,IAAM8V,EAAM8b,IAAIC,gBAAgBxC,EAAK9W,MACrCyF,OAAO9D,KAAKpE,EAAK,WA8EEgc,IACfzpB,KAAM,WACN1C,KAAMosB,MAER,kBAACze,EAAA,EAAD,CACE5H,QAAS,kBA/EI,SAACvL,GACpB,GAAI6d,OAAOC,WAAaD,OAAOC,UAAUC,iBACvCD,UAAUC,iBAAiBmR,EAAK9W,KAAMpY,OACjC,CACL,IAAI6xB,EAAShU,OAAO4T,IAAIC,gBAAgBxC,EAAK9W,MACzC9D,EAAI+J,SAASC,cAAc,KAC/BhK,EAAEiK,SAAWve,EACbsU,EAAEkK,KAAOqT,EACTvd,EAAEiD,OAAS,SACX8G,SAASK,KAAKC,YAAYrK,GAC1BA,EAAE0B,QACFqI,SAASK,KAAKE,YAAYtK,IAoEPwd,CAAa5C,EAAKrvB,KAAO,SACxCqI,KAAM,eACN1C,KAAMusB,MAER,kBAAC,GAAD,KACG7C,EAAK5W,MACJ4W,EAAK5W,KAAKvR,KAAI,SAAC0oB,EAAalgB,GAAd,OACZ,kBAACyiB,GAAD,CAAKxiB,IAAKD,GACR,kBAAC,IAAD,CAAiB/J,KAAMysB,OADzB,IACoCxC,UAW5CjW,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAe/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CgsB,GAAMrsB,IAAOqS,KAAV,MAEa,qBAAGnS,MAAkBC,KAAKmS,uBAErC,qBAAGpS,MAAkBC,KAAKE,mBAM/B0pB,GAAa/pB,IAAOO,IAAV,MAWV8qB,GAAkBrrB,IAAOO,IAAV,M,q8CC3LrB,IA6CegsB,GA7CM,SAAC,GAA0B,IAAxB1gB,EAAuB,EAAvBA,SAAuB,EACrBuB,oBAAkB,GADG,mBACtCoY,EADsC,KAChCC,EADgC,KAGvCzmB,EAAaJ,uBAAY,WAC7B,YAAiB/D,IAAbgR,EACmB,KAAjBA,EAASzK,KAA+B,OAAjByK,EAASzK,IAC3B,GAEFyK,EAASzK,IAEX,KACN,CAACyK,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB7M,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI6M,EAAS3R,OAGf,kBAAC,GAAD,KACE,2BAAI2R,EAAS3R,QAKnB,kBAAC2T,GAAA,EAAD,CAAKC,UAAU,EAAOjC,SAAUA,IAChC,kBAAC,GAAD,KACE,kBAAC,GAAD,MACI2Z,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUsJ,EAAS3R,MACvB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM5G,EAAU3F,KAAM,aAShD2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAcXhB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,+iBC7HX,IA4KeisB,GA5KS,SAAC,GAAiC,IAA/B9tB,EAA8B,EAA9BA,QAASqP,EAAqB,EAArBA,OAClC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOrD,EAAQxE,KACf8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKrP,GAAN,IAAexE,KAAMA,QAEjD,kBAACqT,EAAA,EAAD,CACExL,MAAOrD,EAAQtE,KACf4H,MAAM,OACNgB,SAAU,SAAC5I,GAAD,OAAU2T,EAAO,2BAAKrP,GAAN,IAAetE,KAAMA,QAEjD,kBAACmT,EAAA,EAAD,CACExL,MAAOrD,EAAQlD,QACfwG,MAAM,UACNgB,SAAU,SAACxH,GAAD,OAAauS,EAAO,2BAAKrP,GAAN,IAAelD,QAASA,QAEvD,kBAAC+R,EAAA,EAAD,CACExL,MAAOrD,EAAQjD,UACfuG,MAAM,YACNgB,SAAU,SAACvH,GAAD,OAAesS,EAAO,2BAAKrP,GAAN,IAAejD,UAAWA,QAE3D,kBAAC8R,EAAA,EAAD,CACExL,MAAOrD,EAAQnD,KACfyG,MAAM,OACNgB,SAAU,SAACzH,GAAD,OAAUwS,EAAO,2BAAKrP,GAAN,IAAenD,KAAMA,QAEjD,kBAAC+pB,GAAA,EAAD,CACEvjB,MAAOrD,EAAQ7C,GACfmG,MAAM,KACNgB,SAAU,SAACnH,GAAD,OAAQkS,EAAO,2BAAKrP,GAAN,IAAe7C,GAAIA,QAE7C,kBAAC4wB,GAAD,KACE,kBAACnH,GAAA,EAAD,CACEvjB,MAAOrD,EAAQ/C,GACfqG,MAAM,KACNgB,SAAU,SAACrH,GAAD,OAAQoS,EAAO,2BAAKrP,GAAN,IAAe/C,GAAIA,QAE7C,kBAAC2pB,GAAA,EAAD,CACEvjB,MAAOrD,EAAQhD,GACfsG,MAAM,KACNgB,SAAU,SAACtH,GAAD,OAAQqS,EAAO,2BAAKrP,GAAN,IAAehD,GAAIA,SAG/C,kBAAC+wB,GAAD,KACE,kBAACnH,GAAA,EAAD,CACEvjB,MAAOrD,EAAQ5C,IACfkG,MAAM,WACNgB,SAAU,SAAClH,GAAD,OAASiS,EAAO,2BAAKrP,GAAN,IAAe5C,IAAKA,QAE/C,kBAACwpB,GAAA,EAAD,CACEvjB,MAAOrD,EAAQ3C,IACfiG,MAAM,YACNgB,SAAU,SAACjH,GAAD,OAASgS,EAAO,2BAAKrP,GAAN,IAAe3C,IAAKA,SAGjD,kBAAC0wB,GAAD,KACE,kBAACnH,GAAA,EAAD,CACEvjB,MAAOrD,EAAQ1C,IACfgG,MAAM,eACNgB,SAAU,SAAChH,GAAD,OAAS+R,EAAO,2BAAKrP,GAAN,IAAe1C,IAAKA,QAE/C,kBAACspB,GAAA,EAAD,CACEvjB,MAAOrD,EAAQzC,IACf+F,MAAM,eACNgB,SAAU,SAAC/G,GAAD,OAAS8R,EAAO,2BAAKrP,GAAN,IAAezC,IAAKA,SAGjD,kBAACwwB,GAAD,KACE,kBAACnH,GAAA,EAAD,CACEvjB,MAAOrD,EAAQxC,IACf8F,MAAM,SACNgB,SAAU,SAAC9G,GAAD,OAAS6R,EAAO,2BAAKrP,GAAN,IAAexC,IAAKA,QAE/C,kBAACopB,GAAA,EAAD,CACEvjB,MAAOrD,EAAQvC,IACf6F,MAAM,WACNgB,SAAU,SAAC7G,GAAD,OAAS4R,EAAO,2BAAKrP,GAAN,IAAevC,IAAKA,SAGjD,kBAACoR,EAAA,EAAD,CACExL,MAAOrD,EAAQ9C,MACfoG,MAAM,QACNgB,SAAU,SAACpH,GAAD,OAAWmS,EAAO,2BAAKrP,GAAN,IAAe9C,MAAOA,QAEnD,kBAAC2R,EAAA,EAAD,CACExL,MAAOrD,EAAQpC,OACf0F,MAAM,SACNgB,SAAU,SAAC1G,GAAD,OAAYyR,EAAO,2BAAKrP,GAAN,IAAepC,OAAQA,QAErD,kBAACiR,EAAA,EAAD,CACExL,MAAOrD,EAAQnC,KACfyF,MAAM,OACNgB,SAAU,SAACzG,GAAD,OAAUwR,EAAO,2BAAKrP,GAAN,IAAenC,KAAMA,QAEjD,kBAACgR,EAAA,EAAD,CACExL,MAAOrD,EAAQtC,aACf4F,MAAM,gBACNgB,SAAU,SAAC5G,GAAD,OACR2R,EAAO,2BAAKrP,GAAN,IAAetC,aAAcA,QAGvC,kBAACmR,EAAA,EAAD,CACExL,MAAOrD,EAAQrC,OACf2F,MAAM,SACNgB,SAAU,SAAC3G,GAAD,OAAY0R,EAAO,2BAAKrP,GAAN,IAAerC,OAAQA,QAErD,kBAACkR,EAAA,EAAD,CACExL,MAAOrD,EAAQlC,kBACfwF,MAAM,kBACNgB,SAAU,SAACxG,GAAD,OACRuR,EAAO,2BAAKrP,GAAN,IAAelC,kBAAmBA,QAG5C,kBAAC+Q,EAAA,EAAD,CACExL,MAAOrD,EAAQjC,cACfuF,MAAM,cACNgB,SAAU,SAACvG,GAAD,OACRsR,EAAO,2BAAKrP,GAAN,IAAejC,cAAeA,QAGxC,kBAAC8Q,EAAA,EAAD,CACExL,MAAOrD,EAAQhC,cACfsF,MAAM,aACNgB,SAAU,SAACtG,GAAD,OACRqR,EAAO,2BAAKrP,GAAN,IAAehC,cAAeA,QAGxC,kBAAC6Q,EAAA,EAAD,CACExL,MAAOrD,EAAQ/B,cACfqF,MAAM,uBACNgB,SAAU,SAACrG,GAAD,OACRoR,EAAO,2BAAKrP,GAAN,IAAe/B,cAAeA,QAGxC,kBAAC4Q,EAAA,EAAD,CACExL,MAAOrD,EAAQlE,QACfwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKrP,GAAN,IAAelE,QAASA,QAEvD,kBAAC+S,EAAA,EAAD,CACExL,MAAOrD,EAAQpD,IACf0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKrP,GAAN,IAAepD,IAAKA,QAE/C,kBAAC6iB,EAAA,EAAD,CACEpc,MAAOrD,EAAQ7B,KACfmF,MAAM,WACNnC,KAAMue,IACNpb,SAAU,SAACnG,GAAD,OAAUkR,EAAO,2BAAKrP,GAAN,IAAe7B,KAAMA,QAEjD,kBAACshB,EAAA,EAAD,CACEpc,MAAOrD,EAAQ9B,MACfoF,MAAM,oBACNnC,KAAMue,IACNpb,SAAU,SAACpG,GAAD,OAAWmR,EAAO,2BAAKrP,GAAN,IAAe9B,MAAOA,QAEnD,kBAACuhB,EAAA,EAAD,CACEpc,MAAOrD,EAAQ5B,MACfkF,MAAM,sBACNnC,KAAMue,IACNpb,SAAU,SAAClG,GAAD,OAAWiR,EAAO,2BAAKrP,GAAN,IAAe5B,MAAOA,WASrD+W,GAAgB7T,IAAOO,IAAV,MAMbksB,GAAazsB,IAAOO,IAAV,MAOVuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,qjGCtLrC,IA4LessB,GA5LK,SAAC,GAAyB,IAAvBhuB,EAAsB,EAAtBA,QAAsB,EACnB0O,oBAAkB,GADC,mBACpCoY,EADoC,KAC9BC,EAD8B,KAGrC9mB,EAAcC,uBAAY,WAC9B,YAAgB/D,IAAZ6D,GAC2B,KAAzBA,EAAQ5B,MAAM+B,SAAiBH,EAAQ9B,MAAMkC,SAAS,aAIrD,GAHI,MAIV,CAACJ,IAEEM,EAAaJ,uBAAY,WAC7B,YAAgB/D,IAAZ6D,EACkB,KAAhBA,EAAQpD,KAA8B,OAAhBoD,EAAQpD,IACzB,GAEFoD,EAAQpD,IAEV,KACN,CAACoD,IAEEK,EAAWH,uBAAY,WAC3B,YAAgB/D,IAAZ6D,EACiB,OAAfA,EAAQ7C,GACH,SACiB,MAAf6C,EAAQ7C,GACV,OACiB,KAAf6C,EAAQ7C,GACV,OAEA6C,EAAQ7C,GAGZ,KACN,CAAC6C,IAEJ,OACE,kBAAC,GAAD,KACoB,KAAjBM,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,OAGd,GAEF,kBAAC,GAAD,KACE,kBAACG,GAAD,KACGT,EAAQtE,KAAM,IACa,KAA3BsE,EAAQlD,QAAQqD,OAAgB,IAAMH,EAAQlD,QAAU,IAAM,IAGjE,kBAAC,GAAD,KACE,2BAAImD,MAGN,kBAACU,GAAD,KACE,2BAAIN,MAEN,kBAAC,GAAD,KACE,2BAAIL,EAAQxE,OAGd,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACCwE,EAAQ5C,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,aACC4C,EAAQ3C,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,aACC2C,EAAQ1C,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,aACC0C,EAAQzC,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,aACCyC,EAAQxC,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,aACCwC,EAAQvC,KAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM0D,KAAM8sB,MACXjuB,EAAQhD,IAEX,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCgD,EAAQ/C,IAEX,kBAAC,GAAD,KACE,kBAAC,KAAD,MACC+C,EAAQnD,MAEX,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCmD,EAAQjD,WAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMoE,KAAMC,MACXpB,EAAQ9C,OAEX,kBAAC,GAAD,KACE,kBAAC,KAAD,MACC8C,EAAQpC,QAEX,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCoC,EAAQnC,MAEVmC,EAAQtC,cAAgB,kBAAC,GAAD,KAAOsC,EAAQtC,cACvCsC,EAAQrC,QACP,kBAAC,GAAD,KACE,kBAAC,GAAD,gBACCqC,EAAQrC,QAGZqC,EAAQlC,mBACP,kBAAC,GAAD,KAAOkC,EAAQlC,mBAEhBkC,EAAQjC,eACP,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACCiC,EAAQjC,eAGZiC,EAAQhC,eACP,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACCgC,EAAQhC,eAGZgC,EAAQ/B,eACP,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACC+B,EAAQ/B,eAGb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMkD,KAAME,MACXrB,EAAQlE,UAGb,kBAAC,GAAD,MACEgrB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAU7D,EAAQxE,MACtB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM/T,EAASwH,KAAM,WAG5CxH,EAAQ7B,MACP,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,mBACA,kBAAC0U,EAAA,EAAD,CAAchP,KAAM7D,EAAQ7B,SAIjC6B,EAAQ9B,OACP,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,2BACA,kBAAC2U,EAAA,EAAD,CAAchP,KAAM7D,EAAQ9B,UAIjC8B,EAAQ5B,OACP,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,6BACA,kBAACyU,EAAA,EAAD,CAAchP,KAAM7D,EAAQ5B,YAUlC+W,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAa/B6lB,GAAYjmB,YAAO8T,GAAP9T,CAAH,MAKTR,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CjB,GAAOY,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1ChB,GAAKW,IAAOO,IAAV,MAWc,qBAAGL,MAAkBC,KAAKE,mBAG1ClB,GAAOa,IAAOO,IAAV,MAOY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBM,KAAKC,aAIjCyR,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C8R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B1S,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACf,MAAY,KAARA,EACK,kBAAC,GAAD,CAAUgsB,IAAKhsB,IAEf,kBAAC,GAAD,OAIL2F,GAAWjB,IAAOunB,IAAV,MAMRrmB,GAAQlB,IAAOO,IAAV,M,wYC1VX,IAsCeqsB,GAtCK,SAAC,GAA6B,IAA3B7jB,EAA0B,EAA1BA,IAAKgF,EAAqB,EAArBA,OAC1B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOgH,EAAI7O,KACX8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKhF,GAAN,IAAW7O,KAAMA,QAE7C,kBAACqT,EAAA,EAAD,CACExL,MAAOgH,EAAIzN,IACX0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKhF,GAAN,IAAWzN,IAAKA,QAE3C,kBAACiS,EAAA,EAAD,CACExL,MAAOgH,EAAIvO,QACXwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKhF,GAAN,IAAWvO,QAASA,QAEnD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOgH,EAAI3E,YACXpC,MAAM,OACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKhF,GAAN,IAAW3E,YAAaA,QAE3D,kBAAC+Z,EAAA,EAAD,CACEpc,MAAOgH,EAAIxO,OACXyH,MAAM,SACNnC,KAAMue,IACNpb,SAAU,SAACzI,GAAD,OAAYwT,EAAO,2BAAKhF,GAAN,IAAWxO,OAAQA,WASnDsZ,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,+zDChDrC,IAmDeysB,GAnDC,SAAC,GAAqB,IAAnB9jB,EAAkB,EAAlBA,IAAkB,EACXqE,oBAAkB,GADP,mBAC5BoY,EAD4B,KACtBC,EADsB,KAG7BzmB,EAAaJ,uBAAY,WAC7B,YAAY/D,IAARkO,EACc,KAAZA,EAAIzN,KAA0B,OAAZyN,EAAIzN,IACjB,GAEFyN,EAAIzN,IAEN,KACN,CAACyN,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB/J,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI+J,EAAI7O,OAGV,kBAAC,GAAD,KACE,2BAAI6O,EAAI7O,OAIZ,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACqX,EAAA,EAAD,CAAchP,KAAMwG,EAAI3E,eAE1B,kBAAC,GAAD,KACE,kBAAC,GAAD,iBACA,kBAACmN,EAAA,EAAD,CAAchP,KAAMwG,EAAIxO,WAG5B,kBAAC,GAAD,MACIirB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUwG,EAAI7O,MAClB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM1J,EAAK7C,KAAM,aAS3C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX2R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C8R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAS/B/S,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,wYCpJX,IA+CeusB,GA/CO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOhf,EAAqB,EAArBA,OAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOgrB,EAAM7yB,KACb8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKgf,GAAN,IAAa7yB,KAAMA,QAG/C,kBAACqT,EAAA,EAAD,CACExL,MAAOgrB,EAAMzxB,IACb0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKgf,GAAN,IAAazxB,IAAKA,QAE7C,kBAACiS,EAAA,EAAD,CACExL,MAAOgrB,EAAMvyB,QACbwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKgf,GAAN,IAAavyB,QAASA,QAErD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOgrB,EAAM3oB,YACbpC,MAAM,OACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKgf,GAAN,IAAa3oB,YAAaA,QAE7D,kBAAC+Z,EAAA,EAAD,CACEpc,MAAOgrB,EAAMriB,QACb1I,MAAM,UACNT,OAAQ,OACR1B,KAAMue,IACNpb,SAAU,SAAC0H,GAAD,OAAaqD,EAAO,2BAAKgf,GAAN,IAAariB,QAASA,QAErD,kBAACyT,EAAA,EAAD,CACEpc,MAAOgrB,EAAMpiB,YACb3I,MAAM,WACNT,OAAQ,OACR1B,KAAMue,IACNpb,SAAU,SAACgqB,GAAD,OAAcjf,EAAO,2BAAKgf,GAAN,IAAapiB,YAAaqiB,WAS5DnZ,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,04DCzDrC,IAqDe6sB,GArDG,SAAC,GAAuB,IAArBF,EAAoB,EAApBA,MAAoB,EACf3f,oBAAkB,GADH,mBAChCoY,EADgC,KAC1BC,EAD0B,KAGjCzmB,EAAaJ,uBAAY,WAC7B,YAAc/D,IAAVkyB,EACgB,KAAdA,EAAMzxB,KAA4B,OAAdyxB,EAAMzxB,IACrB,GAEFyxB,EAAMzxB,IAER,KACN,CAACyxB,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjB/tB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAI+tB,EAAM7yB,OAGZ,kBAAC,GAAD,KACE,2BAAI6yB,EAAM7yB,OAId,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACqX,EAAA,EAAD,CAAchP,KAAMwqB,EAAM3oB,eAE5B,kBAAC,GAAD,KACE,kBAACmN,EAAA,EAAD,CAAchP,KAAMwqB,EAAMriB,WAE5B,kBAAC,GAAD,KACE,kBAAC6G,EAAA,EAAD,CAAchP,KAAMwqB,EAAMpiB,gBAG9B,kBAAC,GAAD,MACI6a,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUwqB,EAAM7yB,MACpB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMsa,EAAO7mB,KAAM,aAS7C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX2R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CX,GAAOM,IAAOO,IAAV,MAEC,qBAAGL,MAAkBC,KAAKC,SAOf,qBAAGF,MAAkBC,KAAKE,mBAO1Cd,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,s0CCnJX,IAuHe2sB,GAvHM,SAAC,GAA8B,IAA5BzjB,EAA2B,EAA3BA,KAAMsE,EAAqB,EAArBA,OACtBof,EAAgB,SACpBC,EACA5P,EACAzb,GAEA,IAAIxH,EAASkP,EAAKlP,OAAO6G,KAAI,SAACisB,GAC5B,OAAIA,IAAUD,EACL,2BACFC,GADL,kBAEG7P,EAAQzb,IAGJsrB,KAGXtf,EAAO,2BAAKtE,GAAN,IAAYlP,OAAQA,MAmB5B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACgT,EAAA,EAAD,CACExL,MAAO0H,EAAKvP,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKtE,GAAN,IAAYvP,KAAMA,QAE9C,kBAACqT,EAAA,EAAD,CACExL,MAAO0H,EAAKnP,cACZ0H,MAAM,iBACNgB,SAAU,SAAC1I,GAAD,OACRyT,EAAO,2BAAKtE,GAAN,IAAYnP,cAAeA,QAGrC,kBAAC,GAAD,CACEyH,MAAO0H,EAAK6jB,IACZtrB,MAAM,MACNgB,SAAU,SAACsqB,GAAD,OAASvf,EAAO,2BAAKtE,GAAN,IAAY6jB,IAAKA,QAE5C,kBAAC,GAAD,CACEvrB,MAAO0H,EAAKhO,UACZuG,MAAM,YACNgB,SAAU,SAACvH,GAAD,OAAesS,EAAO,2BAAKtE,GAAN,IAAYhO,UAAWA,QAExD,kBAAC,GAAD,CACEsG,MAAO0H,EAAKlO,KACZyG,MAAM,OACNgB,SAAU,SAACzH,GAAD,OAAUwS,EAAO,2BAAKtE,GAAN,IAAYlO,KAAMA,QAE9C,kBAAC,GAAD,CACEwG,MAAO0H,EAAK7N,MACZoG,MAAM,QACNgB,SAAU,SAACpH,GAAD,OAAWmS,EAAO,2BAAKtE,GAAN,IAAY7N,MAAOA,QAEhD,kBAAC,GAAD,CACEmG,MAAO0H,EAAKlN,KACZyF,MAAM,WACNgB,SAAU,SAACzG,GAAD,OAAUwR,EAAO,2BAAKtE,GAAN,IAAYlN,KAAMA,QAE9C,kBAACgR,EAAA,EAAD,CACExL,MAAO0H,EAAKnO,IACZ0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKtE,GAAN,IAAYnO,IAAKA,QAE5C,kBAACiS,EAAA,EAAD,CACExL,MAAO0H,EAAKjP,QACZwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKtE,GAAN,IAAYjP,QAASA,SAGtD,kBAAC+yB,GAAD,KACG9jB,EAAKlP,OAAO6G,KAAI,SAACisB,EAAczjB,GAC9B,OACE,kBAAC4jB,GAAD,CAAc3jB,IAAKD,GACjB,kBAAC6jB,GAAD,CACE1rB,MAAOsrB,EAAMnzB,KACb8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAUizB,EAAcE,EAAO,OAAQnzB,MAEnD,kBAACwzB,GAAD,CACE3rB,MAAOsrB,EAAM3pB,MACb1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OAAWypB,EAAcE,EAAO,QAAS3pB,MAErD,kBAACwV,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA5E5B,SAACwnB,GACnB,IAAI7yB,EAASkP,EAAKlP,OACZqP,EAAgBrP,EAAOqpB,QAAQwJ,IACtB,IAAXxjB,IACFrP,EAAOkV,OAAO7F,EAAO,GACrBmE,EAAO,2BAAKtE,GAAN,IAAYlP,OAAQA,MAuEwBozB,CAAYN,MACtD,kBAACO,GAAD,CACE7rB,MAAOsrB,EAAM9qB,KACbP,MAAM,OACNgB,SAAU,SAACT,GAAD,OAAU4qB,EAAcE,EAAO,OAAQ9qB,UAKzD,kBAACirB,GAAD,KACE,kBAACtU,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,WA5FzCmI,EAAO,2BACFtE,GADC,IAEJlP,OAAO,GAAD,oBAAMkP,EAAKlP,QAAX,CAAmB,CAAEL,KAAM,YAAawJ,MAAO,EAAGnB,KAAM,gBAmG9DsR,GAAgB7T,IAAOO,IAAV,MASbstB,GAAW7tB,IAAOO,IAAV,MACH,qBAAGL,MAAkBC,KAAKC,SAc/BmtB,GAAYvtB,YAAO6tB,GAAP7tB,CAAH,MAETwtB,GAAextB,IAAOO,IAAV,MAWZktB,GAAYztB,YAAOuN,IAAPvN,CAAH,MACO,qBAAGE,MAAkBC,KAAKE,mBAM1CqtB,GAAa1tB,YAAOslB,KAAPtlB,CAAH,MACM,qBAAGE,MAAkBC,KAAKE,mBAM1CutB,GAAY5tB,YAAO0iB,GAAP1iB,CAAH,MACO,qBAAGE,MAAkBC,KAAKE,mB,24GChLhD,IAwHewtB,GAxHE,SAAC,GAAsB,IAApBpkB,EAAmB,EAAnBA,KAAmB,EACb2D,oBAAkB,GADL,mBAC9BoY,EAD8B,KACxBC,EADwB,OAELrY,mBAAoB,IAFf,mBAE9B0gB,EAF8B,KAEpBC,EAFoB,KAGjCjI,EAAUC,cAEdzY,qBAAU,WACR4J,YACE,WACA,CAAC,CAAEP,UAAW,OAAQ5U,MAAO0H,EAAKvP,KAAMmd,KAAM,KAC9C,SAAC2O,GACC+H,EAAY/H,QAGf,CAACvc,IAEJ,IAAMzK,EAAaJ,uBAAY,WAC7B,YAAa/D,IAAT4O,EACe,KAAbA,EAAKnO,KAA2B,OAAbmO,EAAKnO,IACnB,GAEFmO,EAAKnO,IAEP,KACN,CAACmO,IAWJ,OACE,kBAAC,GAAD,KACoB,KAAjBzK,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,OAGd,GAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIyK,EAAKvP,OAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCuP,EAAKnP,eAER,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAACiX,EAAA,EAAD,CAAchP,KAAMkH,EAAK6jB,OAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,mBACA,kBAAC/b,EAAA,EAAD,CAAchP,KAAMkH,EAAKhO,aAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,kBAAC8V,EAAA,EAAD,CAAchP,KAAMkH,EAAKlO,QAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,eACA,kBAACgW,EAAA,EAAD,CAAchP,KAAMkH,EAAK7N,SAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,kBACA,kBAAC2V,EAAA,EAAD,CAAchP,KAAMkH,EAAKlN,QAE3B,kBAAC,GAAD,KACE,kBAAC,GAAD,kBACqB,IAApBuxB,EAAS9Q,QACR8Q,EAAS1sB,KAAI,SAACsI,EAAkBE,GAC9B,IAAMuc,EAAe,sBAAwBzc,EAAQvP,GACrD,OACE,kBAAC6zB,GAAD,CAAankB,IAAKD,EAAOhE,QAAS,kBAAMkgB,EAAQrS,KAAK0S,KAClDzc,EAAQxP,SAIjB,kBAAC,GAAD,CAAc0L,QAAS,kBA1DR,WACvB,IAAIqoB,EAAa,IAAIh0B,YACdg0B,EAAW9zB,GAClB8zB,EAAW7zB,KAAOqP,EAAKvP,KACvB2d,YAAgB,WAAYoW,GAAY,SAAC9zB,GACvC2rB,EAAQrS,KAAR,6BAAmCtZ,OAqDA+zB,KAC3B,kBAAC,IAAD,CAAiBruB,KAAMuS,QAG3B,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMvS,KAAME,MACX0J,EAAKjP,UAGV,kBAAC,GAAD,MACIgrB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUkH,EAAKvP,MACnB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMhJ,EAAMvD,KAAM,WAG5C,kBAAC,GAAD,KACGuD,EAAKlP,OAAO6G,KAAI,SAACisB,EAAczjB,GAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAYyjB,EAAMnzB,MAClB,kBAAC,GAAD,KAAamzB,EAAM3pB,OACnB,kBAAC,GAAD,KACE,kBAAC6N,EAAA,EAAD,CAAchP,KAAM8qB,EAAM9qB,eAYpCsR,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAe/B6lB,GAAYjmB,YAAO8T,GAAP9T,CAAH,MAKTR,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBM,KAAKC,aAIjC0R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/Bkb,GAAextB,YAAOP,GAAPO,CAAH,MACZytB,GAAYztB,IAAOO,IAAV,MACO,qBAAGL,MAAkBC,KAAKE,mBAM1CqtB,GAAa1tB,YAAOytB,GAAPztB,CAAH,MAGV4tB,GAAY5tB,YAAOytB,GAAPztB,CAAH,MAITkS,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CJ,GAAOD,IAAOqS,KAAV,MAEY,qBAAGnS,MAAkBC,KAAKmS,uBAGrC,qBAAGpS,MAAkBC,KAAKE,mBAM/B2tB,GAAchuB,YAAOC,GAAPD,CAAH,MAOXJ,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACf,MAAY,KAARA,EACK,kBAAC,GAAD,CAAUgsB,IAAKhsB,IAEf,kBAAC,GAAD,OAIL2F,GAAWjB,IAAOunB,IAAV,MAIRrmB,GAAQlB,IAAOO,IAAV,MAEL8lB,GAAermB,IAAOwZ,OAAV,MACI,qBAAGtZ,MAAkBC,KAAKmS,uBAErC,qBAAGpS,MAAkBC,KAAKE,mB,0iCCxRrC,IAoEe8tB,GApEa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAargB,EAAqB,EAArBA,OACpCsgB,EAAc,SAAC7Q,EAAezb,EAAe6H,GACjD,IAAImJ,EAAOqb,EAAYrb,KACvBA,EAAKnJ,GAAL,2BAAmBmJ,EAAKnJ,IAAxB,kBAAiC4T,EAAQzb,IACzCgM,EAAO,2BAAKqgB,GAAN,IAAmBrb,KAAMA,MAkBjC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACxF,EAAA,EAAD,CACExL,MAAOqsB,EAAYl0B,KACnB8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKqgB,GAAN,IAAmBl0B,KAAMA,QAErD,kBAACqT,EAAA,EAAD,CACExL,MAAOqsB,EAAYtb,OACnB9Q,MAAM,SACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKqgB,GAAN,IAAmBtb,OAAQ5Y,MACrDo0B,YAAa,4BAGjB,kBAAC,GAAD,KACGF,EAAYrb,KAAK3R,KAChB,SAACmtB,EAAuC3kB,GACtC,OACE,kBAAC4kB,GAAD,CAAY3kB,IAAKD,GACf,kBAAC6kB,GAAD,KAAW7kB,GACX,kBAAC2D,EAAA,EAAD,CACExL,MAAOwsB,EAAIxsB,MACXC,MAAO,cAAgB4H,EACvB5G,SAAU,SAACT,GAAD,OAAU8rB,EAAY,QAAS9rB,EAAMqH,IAC/C0kB,YAAW,UAAK1kB,EAAQ,EAAb,aAEb,kBAAC2D,EAAA,EAAD,CACExL,MAAOwsB,EAAIG,MACX1sB,MAAO,OAAS4H,EAChB5G,SAAU,SAACT,GAAD,OAAU8rB,EAAY,QAAS9rB,EAAMqH,IAC/C0kB,YAAW,eAAU1kB,EAAV,yBAAgCA,EAAhC,UAEb,kBAACsP,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAzChC,SAACgE,GACjB,IAAImJ,EAAOqb,EAAYrb,MACR,IAAXnJ,IACFmJ,EAAKtD,OAAO7F,EAAO,GACnBmE,EAAO,2BAAKqgB,GAAN,IAAmBrb,KAAMA,MAqCqB4b,CAAU/kB,UAK5D,kBAAC4kB,GAAD,KACE,kBAACtV,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,WArDzCmI,EAAO,2BACFqgB,GADC,IAEJrb,KAAK,GAAD,oBAAMqb,EAAYrb,MAAlB,CAAwB,CAAEhR,MAAO,GAAI2sB,MAAO,gBA4DhD7a,GAAgB7T,IAAOO,IAAV,MASbquB,GAAkB5uB,IAAOO,IAAV,MACV,qBAAGL,MAAkBC,KAAKC,SAc/BouB,GAAaxuB,IAAOO,IAAV,MAYVkuB,GAAWzuB,IAAOO,IAAV,MACH,qBAAGL,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mB,2hDC5GhD,IA+FeuuB,GA/FS,SAAC,GAA6B,IAA3BR,EAA0B,EAA1BA,YAA0B,EAC3BhhB,oBAAkB,GADS,mBAC5CyhB,EAD4C,KACtCC,EADsC,KAoBnD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIV,EAAYl0B,OAElB,kBAAC,GAAD,KACE,kBAACsT,EAAA,EAAD,CACEjL,KAAM,OACN1C,KAAMkvB,IACNnpB,QAAS,kBA1BK,WACpB,IACI2c,EAAM,GACJyM,EAAgBZ,EAAYrb,KAAKqb,EAAYrb,KAAKiK,OAAS,GAAGjb,MACpE,GAAIitB,EAAclwB,SAAS,KAEzByjB,GADYyM,EAAcnwB,OAAOowB,MAAM,KAC1B,QACR,GAAID,EAAclwB,SAAS,UAAM,CAEtCyjB,GADYyM,EAAcnwB,OAAOowB,MAAM,UAC1B,QAEb1M,GAAOyM,EAET,IAAMH,EAAOK,KAAKC,MAZN,EAYkBD,KAAKE,UAAY7M,EAZnC,IAaZuM,EAAQD,GAYaQ,MAEhBR,GAAQ,GACP,kBAAC,GAAD,KACGA,EADH,IACS,kBAAC,GAAD,CAAMhvB,KAAMyrB,MAClB8C,EAAYrb,KAAK3R,KAAI,SAACmtB,GACrB,GAAIA,EAAIxsB,MAAMjD,SAAS,KAAM,CAC3B,IAAI0I,EAAQ+mB,EAAIxsB,MAAMlD,OAAOowB,MAAM,KAC7BK,GAAe9nB,EAAM,GACrB+a,GAAe/a,EAAM,GAC3B,GAAI8nB,GAAOT,GAAQA,GAAQtM,EACzB,OAAO,kBAAChR,EAAA,EAAD,CAAchP,KAAMgsB,EAAIG,aAC5B,GAAIH,EAAIxsB,MAAMjD,SAAS,UAAM,CAClC,IAAI0I,EAAQ+mB,EAAIxsB,MAAMlD,OAAOowB,MAAM,UAC7BK,GAAe9nB,EAAM,GACrB+a,GAAe/a,EAAM,GAC3B,GAAI8nB,GAAOT,GAAQA,GAAQtM,EACzB,OAAO,kBAAChR,EAAA,EAAD,CAAchP,KAAMgsB,EAAIG,YAC5B,CAEL,IADqBH,EAAIxsB,QACL8sB,EAClB,OAAO,kBAACtd,EAAA,EAAD,CAAchP,KAAMgsB,EAAIG,QAEnC,OAAO,0CAKf,kBAAC,GAAD,KACE,+BACE,+BACE,4BACE,kBAACa,GAAD,eACCnB,EAAYtb,QACXsb,EAAYtb,OACTmc,MAAM,KACN7tB,KAAI,SAACouB,EAAc5lB,GAClB,OAAO,kBAAC2lB,GAAD,CAAe1lB,IAAKD,GAAQ4lB,OAG1CpB,EAAYrb,MACXqb,EAAYrb,KAAK3R,KACf,SAACmtB,EAAuC3kB,GACtC,OACE,wBAAIC,IAAKD,GACP,kBAAC6lB,GAAD,CAAW5lB,IAAKD,GAAQ2kB,EAAIxsB,OAC3BwsB,EAAIG,MACFO,MAAM,KACN7tB,KAAI,SAACouB,EAAc5lB,GAClB,OACE,kBAAC6lB,GAAD,CAAW5lB,IAAKD,GACd,kBAAC2H,EAAA,EAAD,CAAchP,KAAMitB,iBAiB5C3b,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAe/BZ,GAAOQ,IAAOO,IAAV,MAMC,qBAAGL,MAAkBC,KAAKC,SAGf,qBAAGF,MAAkBC,KAAKE,mBAG1CkvB,GAAgBvvB,IAAOonB,GAAV,MACG,qBAAGlnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAKhCqvB,GAAYzvB,IAAOqnB,GAAV,MACO,qBAAGnnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAMhCV,GAAOM,IAAOO,IAAV,MACY,qBAAGL,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAO1B,qBAAGF,MAAkBsD,QAAQjC,UACxB,qBAAGrB,MAAkBsD,QAAQjC,UAGxC3B,GAAOI,YAAOW,IAAPX,CAAH,MAKC,qBAAGE,MAAkBM,KAAKC,a,0oCCrKrC,IAuGeivB,GAvGW,SAAC,GAAmC,IAAjC3K,EAAgC,EAAhCA,UAAWhX,EAAqB,EAArBA,OAChCmX,EAAoB,SACxBF,EACAxH,EACAzb,GAEA,IAAIS,EAAauiB,EAAU5Y,iBAAiB/K,KAC1C,SAAC2jB,GAMC,OAAIA,IAAcC,EACT,2BACFD,GADL,kBAEGvH,EAAQzb,IAGJgjB,KAIbhX,EAAO,2BAAKgX,GAAN,IAAiB5Y,iBAAkB3J,MAarC2iB,EAAkB,SAACH,GAMvB,IAAIxiB,EAAauiB,EAAU5Y,iBACrBvC,EAAgBpH,EAAWohB,QAAQoB,IAC1B,IAAXpb,IACFpH,EAAWiN,OAAO7F,EAAO,GACzBmE,EAAO,2BAAKgX,GAAN,IAAiB5Y,iBAAkB3J,OAI7C,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC+K,EAAA,EAAD,CACExL,MAAOgjB,EAAU7qB,KACjB8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKgX,GAAN,IAAiB7qB,KAAMA,QAElD6qB,EAAU5Y,iBAAiB/K,KAC1B,SACE2jB,EAMAnb,GAEA,OACE,kBAAC+lB,GAAD,CAAkB9lB,IAAKD,GACrB,kBAACgmB,GAAD,CACE7tB,MAAOgjB,EAAU8K,WACjB7tB,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAUgrB,EAAkBH,EAAW,aAAc7qB,MAEjE,kBAAC41B,GAAD,CACE/tB,MAAOgjB,EAAUrhB,MACjB1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OAAWwhB,EAAkBH,EAAW,QAASrhB,MAE7D,kBAACwV,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAAMuf,EAAgBJ,MAC1D,kBAACgL,GAAD,CACEhuB,MAAOgjB,EAAUiL,kBACjBhuB,MAAM,cACNgB,SAAU,SAACT,GAAD,OAAU2iB,EAAkBH,EAAW,oBAAqBxiB,MAExE,kBAACwtB,GAAD,CACEhuB,MAAOgjB,EAAUkL,WACjBjuB,MAAM,OACNgB,SAAU,SAACT,GAAD,OAAU2iB,EAAkBH,EAAW,aAAcxiB,UAMzE,kBAACotB,GAAD,KACE,kBAACzW,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,WArEzCmI,EAAO,2BACFgX,GADC,IAEJ5Y,iBAAiB,GAAD,oBACX4Y,EAAU5Y,kBADC,CAEd,CAAE0jB,WAAY,GAAIG,kBAAmB,GAAIC,WAAY,GAAIvsB,MAAO,eA0ElEmQ,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAY/BuvB,GAAmB3vB,IAAOO,IAAV,MAWhBqvB,GAAgB5vB,YAAOuN,IAAPvN,CAAH,MACG,qBAAGE,MAAkBC,KAAKE,mBAM1CyvB,GAAiB9vB,YAAOslB,KAAPtlB,CAAH,MACE,qBAAGE,MAAkBC,KAAKE,mBAM1C0vB,GAAgB/vB,YAAO0iB,GAAP1iB,CAAH,MACG,qBAAGE,MAAkBC,KAAKE,mB,s8CCxJhD,IA2De6vB,GA3DO,SAAC,GAA2B,IAAzBnL,EAAwB,EAAxBA,UAAwB,EACvB3X,oBAAkB,GADK,mBACxCoY,EADwC,KAClCC,EADkC,KAG/C,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIV,EAAU7qB,OAEhB,kBAAC,GAAD,MACIsrB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUwiB,EAAU7qB,MACxB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAMsS,EAAW7e,KAAM,WAGhD6e,EAAU5Y,iBAAiB/K,KAC1B,SACEisB,EAMAzjB,GAEA,OACE,kBAAC,GAAD,CAAMC,IAAKD,GACT,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,cACCyjB,EAAMwC,YAET,kBAAC,GAAD,KACE,kBAAC,GAAD,eACCxC,EAAM3pB,OAEoB,KAA5B2pB,EAAM2C,mBACL,kBAAC,GAAD,KACE,kBAAC,GAAD,sBACC3C,EAAM2C,mBAGX,kBAAC,GAAD,KACE,kBAACze,EAAA,EAAD,CAAchP,KAAM8qB,EAAM4C,qBAatCpc,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C8R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/BJ,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mB,8iBChHhD,IAkFe8vB,GAlFO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOriB,EAAqB,EAArBA,OAC9B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACR,EAAA,EAAD,CACExL,MAAOquB,EAAMl2B,KACb8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKqiB,GAAN,IAAal2B,KAAMA,QAE/C,kBAACqT,EAAA,EAAD,CACExL,MAAOquB,EAAM9oB,OACbtF,MAAM,SACNgB,SAAU,SAACsE,GAAD,OAAYyG,EAAO,2BAAKqiB,GAAN,IAAa9oB,OAAQA,QAEnD,kBAAC,GAAD,KACE,kBAACge,GAAA,EAAD,CACEvjB,MAAOquB,EAAM1sB,MACb1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OAAWqK,EAAO,2BAAKqiB,GAAN,IAAa1sB,MAAOA,QAEjD,kBAAC8gB,GAAA,EAAD,CACEziB,QAASquB,EAAMzoB,OACf3F,MAAM,SACNgB,SAAU,SAAC2E,GAAD,OAAYoG,EAAO,2BAAKqiB,GAAN,IAAazoB,OAAQA,EAAS,EAAI,SAGlE,kBAAC4F,EAAA,EAAD,CACExL,MAAOquB,EAAM7oB,KACbvF,MAAM,OACNnC,KAAMwwB,IACNrtB,SAAU,SAACuE,GAAD,OAAUwG,EAAO,2BAAKqiB,GAAN,IAAa7oB,KAAMA,QAE/C,kBAACgG,EAAA,EAAD,CACExL,MAAOquB,EAAM5oB,MACbxF,MAAM,QACNnC,KAAMywB,IACNvtB,UAAW,CAAEwtB,OAAQ,IACrBvtB,SAAU,SAACwE,GAAD,OAAWuG,EAAO,2BAAKqiB,GAAN,IAAa5oB,MAAOA,QAEjD,kBAAC+F,EAAA,EAAD,CACExL,MAAOquB,EAAM1oB,SACb1F,MAAM,WACNnC,KAAM2wB,IACNxtB,SAAU,SAAC0E,GAAD,OAAcqG,EAAO,2BAAKqiB,GAAN,IAAa1oB,SAAUA,QAEvD,kBAAC6F,EAAA,EAAD,CACExL,MAAOquB,EAAM3oB,WACbzF,MAAM,QACNnC,KAAM4wB,IACNztB,SAAU,SAACyE,GAAD,OACRsG,EAAO,2BAAKqiB,GAAN,IAAa3oB,WAAYA,QAGnC,kBAAC8F,EAAA,EAAD,CACExL,MAAOquB,EAAM/oB,QACbrF,MAAM,UACNnC,KAAM6wB,KACN1tB,SAAU,SAACqE,GAAD,OAAa0G,EAAO,2BAAKqiB,GAAN,IAAa/oB,QAASA,QAErD,kBAACkG,EAAA,EAAD,CACExL,MAAOquB,EAAM51B,QACbwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKqiB,GAAN,IAAa51B,QAASA,QAErD,kBAAC+S,EAAA,EAAD,CACExL,MAAOquB,EAAM90B,IACb0G,MAAM,UACNnC,KAAMkU,IACN/Q,SAAU,SAAC1H,GAAD,OAASyS,EAAO,2BAAKqiB,GAAN,IAAa90B,IAAKA,QAE7C,kBAAC6iB,EAAA,EAAD,CACEpc,MAAOquB,EAAM7tB,KACbP,MAAM,OACNnC,KAAMue,IACNpb,SAAU,SAACT,GAAD,OAAUwL,EAAO,2BAAKqiB,GAAN,IAAa7tB,KAAMA,WASjDsR,GAAgB7T,IAAOO,IAAV,MAMbksB,GAAazsB,IAAOO,IAAV,MAOVuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,S,y2FCrGrC,IAiHeuwB,GAjHG,SAAC,GAAuB,IAArBP,EAAoB,EAApBA,MAAoB,EACfhjB,oBAAkB,GADH,mBAChCoY,EADgC,KAC1BC,EAD0B,KAGjCmL,EAAchyB,uBAAY,WAC9B,YAAc/D,IAAVu1B,EACkB,IAAhBA,EAAM1sB,MACD,IAEF0sB,EAAM1sB,MAER,KACN,CAAC0sB,IAEES,EAAYjyB,uBAAY,WAC5B,YAAc/D,IAAVu1B,GACmB,IAAjBA,EAAMzoB,OACD,yBAAKyhB,UAAU,QAAf,KAGJ,KACN,CAACgH,IAEEU,EAAmBlyB,uBAAY,WACnC,QAAc/D,IAAVu1B,GACWA,EAAM1oB,SAASoP,cACjBhY,SAAS,iBAClB,OAAO,yBAAKsqB,UAAU,QAAf,KAGX,MAAO,KACN,CAACgH,IAEEpxB,EAAaJ,uBAAY,WAC7B,YAAc/D,IAAVu1B,EACgB,KAAdA,EAAM90B,KAA4B,OAAd80B,EAAM90B,IACrB,GAEF80B,EAAM90B,IAER,KACN,CAAC80B,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACW,GAAD,CAAQzpB,OAAQ8oB,EAAM9oB,QAAS8oB,EAAM9oB,QAErC,kBAAC,GAAD,KACE,2BAAIwpB,MAEN,kBAAC,GAAD,KACE,2BAAID,MAGN,kBAACG,GAAD,KACE,2BAAIJ,MAGY,KAAjB5xB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAIoxB,EAAMl2B,OAGZ,kBAAC,GAAD,KACE,2BAAIk2B,EAAMl2B,OAId,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM2F,KAAMwwB,MACXD,EAAM7oB,MAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM1H,KAAM2wB,MACXJ,EAAM1oB,UAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM7H,KAAMywB,IAAYvtB,UAAW,CAAEwtB,OAAQ,MAC5CH,EAAM5oB,OAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM3H,KAAM4wB,MACXL,EAAM3oB,YAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAM5H,KAAM6wB,OACXN,EAAM/oB,SAET,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMxH,KAAME,MACXqwB,EAAM51B,UAGX,kBAAC,GAAD,KACE,kBAAC+W,EAAA,EAAD,CAAchP,KAAM6tB,EAAM7tB,QAE5B,kBAAC,GAAD,MACMijB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAU6tB,EAAMl2B,MACpB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM2d,EAAOlqB,KAAM,aAS/C2N,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAY/B2wB,GAAS/wB,IAAOO,IAAV,MAMU,qBAAGL,MAAkBC,KAAKE,mBACrC,SAAC4F,GACR,MAAqB,eAAjBA,EAAMqB,OACD,UACmB,gBAAjBrB,EAAMqB,OACR,UACmB,cAAjBrB,EAAMqB,OACR,UACmB,eAAjBrB,EAAMqB,OACR,UACmB,gBAAjBrB,EAAMqB,OACR,UACmB,kBAAjBrB,EAAMqB,OACR,UACmB,eAAjBrB,EAAMqB,OACR,UACmB,aAAjBrB,EAAMqB,OACR,UAEA,WAKP0pB,GAAQhxB,IAAOO,IAAV,MAWW,qBAAGL,MAAkBC,KAAKE,mBAG1Cb,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAG/BrB,GAAOY,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAO1Cd,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAI1CS,GAAQlB,IAAOO,IAAV,M,oqDCtRX,IA4Ye0wB,GA5YW,SAAC,GAAmC,IAAjCnnB,EAAgC,EAAhCA,UAAWiE,EAAqB,EAArBA,OAAqB,EACvBX,mBAA6C,IADtB,mBACpD5K,EADoD,KACxCqgB,EADwC,KAG3DvV,qBAAU,WACRkI,YAAU,cAAc,SAAC/C,GACvB,IACItG,EADiBsG,EACiBrR,KAAI,SAAC0hB,GACzC,MAAO,CAAE/gB,MAAO+gB,EAAO5oB,KAAM8H,MAAO8gB,EAAO5oB,SAE7C2oB,EAAc1W,QAEf,IAEH,IAkBM+W,EAAe,SAACF,EAAwBG,EAAe3F,EAAezb,GAC1E,IAAI6B,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,GAAIA,IAAeD,QAAmCnoB,IAArBooB,EAAWpf,MAAqB,CAC/D,IAAIA,EAAQof,EAAWpf,MAAMzC,KAAI,SAACgiB,GAChC,OAAIA,IAASD,EACJ,2BACFC,GADL,kBAEG5F,EAAQzb,IAGJqhB,KAGX,OAAO,2BAAKH,GAAZ,IAAwBpf,MAAOA,IAE/B,OAAOof,KAGXlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,MAY7Byf,EAAkB,SACtBC,EACAN,EACAxF,EACAzb,GAEA,IAAI6B,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,GAAIA,IAAeK,QAAyCzoB,IAAxBooB,EAAWrf,SAAwB,CACrE,IAAIA,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,OAAIA,IAAYP,EACP,2BACFO,GADL,kBAEG/F,EAAQzb,IAGJwhB,KAGX,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,IAElC,OAAOqf,KAGXlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,MAsLnC,OACE,kBAAC,GAAD,KACE,kBAACstB,GAAD,KACE,kBAAC3jB,EAAA,EAAD,CACExL,MAAO+H,EAAU5P,KACjB8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKjE,GAAN,IAAiB5P,KAAMA,QAEnD,kBAACqT,EAAA,EAAD,CACExL,MAAO+H,EAAU1P,KACjB4H,MAAM,QACNgB,SAAU,SAAC5I,GAAD,OAAU2T,EAAO,2BAAKjE,GAAN,IAAiB1P,KAAMA,QAEnD,kBAACmT,EAAA,EAAD,CACExL,MAAO+H,EAAUtP,QACjBwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKjE,GAAN,IAAiBtP,QAASA,SAG1DsP,EAAUlG,SAASxC,KAAI,SAAC6hB,EAAwBrZ,GAC/C,OACE,kBAAC,GAAD,CAAaC,IAAKD,GAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7H,MAAOkhB,EAAWvf,MAClB1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OAxRG,SACzBsf,EACAxF,EACAzb,GAEA,IAAI6B,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,OAAIA,IAAeD,EACV,2BACFC,GADL,kBAEGzF,EAAQzb,IAGJkhB,KAGXlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAyQAmf,CAAmBE,EAAY,QAASvf,MAE/D,kBAACwV,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAnLvB,SAAC0d,GACxB,IAAI1f,EAAWkG,EAAUlG,SACnBgG,EAAgBhG,EAASggB,QAAQN,IACxB,IAAX1Z,IACFhG,EAAS6L,OAAO7F,EAAO,GACvBmE,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,MA8KiBigB,CAAiBZ,MAC3D,kBAAC,GAAD,CACEX,OAAQW,EAAWnf,WAAamf,EAAWnf,WAAa,GACxD9B,MAAM,aACNgB,SAAU,SAACc,GAAD,OAxPE,SAACkf,EAAwBjhB,GACjD,IAAI6B,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,OAAIA,IAAeD,QAAwCnoB,IAA1BooB,EAAWnf,WACnC,2BAAKmf,GAAZ,IAAwBnf,WAAY/B,IAE7BkhB,KAGXlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAgPemgB,CAAkBd,EAAYnf,MAEpE,kBAACoV,EAAA,EAAD,CAAYrZ,KAAMmkB,IAASpe,QAAS,kBAxIxB,SAAC0d,GACvB,IAAI1f,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,YAA8BpoB,IAA1BooB,EAAWnf,YAA4Bmf,IAAeK,EACjD,2BACFL,GADL,IAEEnf,WAAY,aAAImf,EAAWnf,YAAYmgB,MAAM,EAAGhB,EAAWnf,WAAWkZ,OAAS,KAG5EiG,KAETlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KA8HmBsgB,CAAgBjB,MAC1D,kBAAC/J,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,kBA5HvB,SAAC0d,GACvB,IAAI1f,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,YAA8BpoB,IAA1BooB,EAAWnf,YAA4Bmf,IAAeK,EACjD,2BAAKL,GAAZ,IAAwBnf,WAAW,GAAD,oBAAMmf,EAAWnf,YAAjB,CAA6B,MAE1Dmf,KAETlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAqHkBugB,CAAgBlB,MACxDA,EAAWpf,OACVof,EAAWpf,MAAMzC,KAAI,SAACgiB,EAAYxZ,GAChC,OACE,kBAAC,GAAD,CAAeC,IAAKD,GAClB,kBAAC,GAAD,CACE7H,MAAOqhB,EAAKlpB,KACZ8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAUgpB,EAAaD,EAAYG,EAAM,OAAQlpB,MAE7D,kBAACgf,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA5LrC,SAACud,GAClB,IAAIvf,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,IAAIpf,EAAQof,EAAWpf,MACvB,QAAchJ,IAAVgJ,EAAqB,CACvB,IAAM+F,EAAgB/F,EAAM+f,QAAQT,GAIpC,OAHe,IAAXvZ,GACF/F,EAAM4L,OAAO7F,EAAO,GAEf,2BAAKqZ,GAAZ,IAAwBpf,MAAOA,IAEjC,OAAOof,KAETlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAgL2B0gB,CAAWlB,MACrD,kBAAC,GAAD,CACErhB,MAAOqhB,EAAKrhB,MACZC,MAAM,aACNgB,SAAU,SAACjB,GAAD,OAAWmhB,EAAaD,EAAYG,EAAM,QAASrhB,WAMzE,kBAAC,GAAD,KACE,kBAACyL,EAAA,EAAD,CACEjL,KAAM,eACN1C,KAAMgd,IACNjX,QAAS,kBA3IJ,SAAC0d,GAClB,IAAI1f,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,QAAyBpoB,IAArBooB,EAAWpf,OAAuBof,IAAeK,EAAe,CAMlE,OAAO,2BAAKL,GAAZ,IAAwBpf,MAAM,GAAD,oBAAMof,EAAWpf,OAAjB,CALb,CACd3J,KAAM,GACN6H,MAAO,GACP0iB,YAAY,OAIhB,OAAOxB,KAETlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KA+HN8gB,CAAWzB,OAG9B,kBAAC,GAAD,KACGA,EAAWrf,UACVqf,EAAWrf,SAASxC,KAAI,SAACmiB,EAAkB3Z,GACzC,OACE,kBAAC,GAAD,CAAkBC,IAAKD,GACrB,kBAAC,GAAD,CACE7H,MAAOwhB,EAAQrpB,KACf8H,MAAM,UACNgB,SAAU,SAAC9I,GAAD,OAAUmpB,EAAgBJ,EAAYM,EAAS,OAAQrpB,MAEnE,kBAAC2I,GAAA,EAAD,CACEC,QAAShB,KACTC,MAAOE,aAAkBshB,EAAQnpB,MACjC4H,MAAM,QACNgB,SAAU,SAAC5I,GAAD,OAAUipB,EAAgBJ,EAAYM,EAAS,OAAQnpB,MAEnE,kBAAC8e,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBA/MlC,SAACod,GACrB,IAAIpf,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,IAAIrf,EAAWqf,EAAWrf,SACpBgG,EAAgBhG,EAASggB,QAAQZ,GAIvC,OAHe,IAAXpZ,GACFhG,EAAS6L,OAAO7F,EAAO,GAElB,2BAAKqZ,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAsM2BihB,CAActB,MACxD,kBAAC,GAAD,CACExhB,MAAOwhB,EAAQhhB,KACfP,MAAM,eACNgB,SAAU,SAACT,GAAD,OAAU8gB,EAAgBJ,EAAYM,EAAS,OAAQhhB,MAElEghB,EAAQ/gB,YACP+gB,EAAQ/gB,WAAWpB,KAAI,SAAC2jB,EAAmBnb,GACzC,OACE,kBAAC,GAAD,CAAkBC,IAAKD,GACrB,kBAAC/G,GAAA,EAAD,CACEC,QAASN,EACTT,MAAO,CAAEA,MAAOgjB,EAAW/iB,MAAO+iB,GAClC/iB,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAjRd,SACxBopB,EACAN,EACAgC,EACAjjB,GAEA,IAAIkjB,EAAcnb,EAAUlG,SAASxC,KAAI,SAAC6hB,GACxC,GAAIA,IAAeK,QAAyCzoB,IAAxBooB,EAAWrf,SAAwB,CACrE,IAAIA,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,GAAIA,IAAYP,EAAY,CAC1B,IAAIxgB,EAAa+gB,EAAQ/gB,WAAWpB,KAAI,SAAC0hB,GACvC,OAAIA,IAAWkC,EACNjjB,EAEA+gB,KAGX,OAAO,2BAAKS,GAAZ,IAAqB/gB,WAAYA,IAEjC,OAAO+gB,KAGX,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,IAElC,OAAOqf,KAGXlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUqhB,KAuPHC,CAAkBjC,EAAYM,EAASwB,EAAW7qB,MAGtD,kBAACgf,EAAA,EAAD,CACErZ,KAAM+e,KACNhZ,QAAS,kBAxNf,SAACof,GACvB,IAAI3c,EAAcyB,EAAUlG,SAASxC,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,IAAI/gB,EAAa+gB,EAAQ/gB,WACzB,QAAmB3H,IAAf2H,EAA0B,CAC5B,IAAMoH,EAAgBpH,EAAWohB,QAAQoB,IAC1B,IAAXpb,GACFpH,EAAWiN,OAAO7F,EAAO,GAG7B,OAAO,2BAAK2Z,GAAZ,IAAqB/gB,WAAYA,OAEnC,OAAO,2BAAKygB,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUyE,KA0MU8c,CAAgBJ,UAKzC,kBAACvX,EAAA,EAAD,CACEjL,KAAM,gBACN1C,KAAMgd,IACNjX,QAAS,kBA5JP,SAAC0d,EAA2BN,GAClD,IAAI3a,EAAcyB,EAAUlG,SAASxC,KAAI,SAAC6hB,GACxC,IAAIrf,EAAWqf,EAAWrf,SAASxC,KAAI,SAACmiB,GACtC,IAAI/gB,EAAuB+gB,EAAQ/gB,WAInC,YAHmB3H,IAAf2H,IACFA,EAAa,IAEX+gB,IAAYP,GACdxgB,EAAWiR,KAAK,IACT,2BAAK8P,GAAZ,IAAqB/gB,WAAYA,KAE5B+gB,KAET,OAAO,2BAAKN,GAAZ,IAAwBrf,SAAUA,OAEpCmK,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUyE,KA6IE+c,CAAgBnC,EAAYM,WAMvD,kBAAC,GAAD,KACE,kBAAC/V,EAAA,EAAD,CACEjL,KAAM,kBACN1C,KAAMgd,IACNjX,QAAS,kBAtLD,SAAC0d,GACrB,IAAI1f,EAAWkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACrC,IAAIrf,EAAWqf,EAAWrf,SAC1B,YAAiB/I,IAAb+I,GAA0Bqf,IAAeK,GAC3C1f,EAAS6P,KAAK,CACZvZ,KAAM,GACNqI,KAAM,GACNC,WAAY,GACZpI,KAAMyH,KAAYY,SAEb,2BAAKwgB,GAAZ,IAAwBrf,SAAUA,KAE7Bqf,KAETlV,EAAO,2BAAKjE,GAAN,IAAiBlG,SAAUA,KAwKNyhB,CAAcpC,WAMvC,kBAAC,GAAD,KACE,kBAACzV,EAAA,EAAD,CAAYjL,KAAM,gBAAiB1C,KAAMgd,IAAQjX,QAAS,WA3J1DkE,EAAUlG,SAASoZ,OAAS,GAAK,EACnCjP,EAAO,2BACFjE,GADC,IAEJlG,SAAS,GAAD,oBACHkG,EAAUlG,UADP,CAEN,CACEF,MAAOoG,EAAUlG,SAASoZ,OAAS,EACnCrZ,UAAW,EACXC,SAAU,GACVC,MAAOiG,EAAUlG,SAASkG,EAAUlG,SAASoZ,OAAS,GAAGnZ,MACzDC,WAAYgG,EAAUlG,SAASkG,EAAUlG,SAASoZ,OAAS,GAAGlZ,iBAKpEiK,EAAO,2BACFjE,GADC,IAEJlG,SAAS,GAAD,oBACHkG,EAAUlG,UADP,CAEN,CACEF,MAAOoG,EAAUlG,SAASoZ,OAAS,EACnCrZ,UAAW,EACXC,SAAU,GACVC,MAAO,GACPC,WAAY,eA2IlB+P,GAAgB7T,IAAOO,IAAV,MASb2wB,GAAelxB,IAAOO,IAAV,MACP,qBAAGL,MAAkBC,KAAKC,SAa/BqjB,GAAczjB,YAAOkxB,GAAPlxB,CAAH,MAEX0jB,GAAiB1jB,IAAOO,IAAV,MAkBdgkB,GAAgBvkB,YAAOuN,IAAPvN,CAAH,MACb2jB,GAAgB3jB,YAAOslB,KAAPtlB,CAAH,MACb8kB,GAAc9kB,YAAO0iB,GAAP1iB,CAAH,MACX8jB,GAAqB9jB,YAAOqiB,GAAPriB,CAAH,MAElB2kB,GAAmB3kB,IAAOO,IAAV,MAMO,qBAAGL,MAAkBqD,MAAMlD,mBAMlDukB,GAAc5kB,YAAOuN,IAAPvN,CAAH,MAEXokB,GAAgBpkB,YAAO2kB,GAAP3kB,CAAH,MACbqkB,GAAWrkB,YAAOukB,GAAPvkB,CAAH,M,2kFC1dd,IAyJemxB,GAzJO,SAAC,GAA2B,IAAD,EAAxBrnB,EAAwB,EAAxBA,UAAwB,EACvBsD,oBAAkB,GADK,mBACxCoY,EADwC,KAClCC,EADkC,KAG/CnY,qBAAU,WACR8D,QAAQC,IAAIvH,KACX,CAACA,IAaJ,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAIA,EAAU5P,OAEhB,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,eACC4P,EAAU1P,MAEb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMyF,KAAME,MACX+J,EAAUtP,gBAIOK,IAAvBiP,EAAUlG,UACqB,IAA9BkG,EAAUlG,SAASoZ,QACnBlT,EAAUlG,SAAS,GAAGE,YACtBgG,EAAUlG,SAAS,GAAGE,WAAWkZ,OAAS,GACxC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,+BACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAiB4J,QAAS9c,EAAUlG,SAAS,GAAGE,WAAWkZ,OAAS,GAApE,gBAKJ,+BACE,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,kBAAC,GAAD,YACClT,EAAUlG,SAAS,GAAGE,WAAWkZ,QAAU,GAAK,kBAAC,GAAD,YAChDlT,EAAUlG,SAAS,GAAGE,WAAWkZ,QAAU,GAAK,kBAAC,GAAD,YAChDlT,EAAUlG,SAAS,GAAGE,WAAWkZ,QAAU,GAC1C,oCAlDE,SAACA,GAGvB,IAFA,IAAIpH,EAAQoH,EAAS,EACjB8J,EAAS,GACJC,EAAI,EAAGA,EAAInR,EAAOmR,IACzBD,EAAOrT,KAAKsT,EAAI,GAElB,OAAOD,EAAO1lB,KAAI,SAACsC,EAAekG,GAChC,OAAO,kBAAC,GAAD,CAAWC,IAAKD,GAAQlG,EAAxB,SA2CcsjB,CAAgBld,EAAUlG,SAAS,GAAGE,WAAWkZ,UAGvDlT,EAAUlG,SAASxC,KAAI,SAAC6hB,EAAYrZ,GACnC,OACE,kBAAC,GAAD,CAAYC,IAAKD,GACdqZ,EAAWnf,YACV,oCACE,kBAAC,GAAD,KAAYmf,EAAWvf,OACtBuf,EAAWnf,WAAW1C,KAAI,SAAC6lB,EAAWrd,GACrC,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACC,IAAdqd,EAAkB,IAAMA,eAcrD,kBAAC,GAAD,KACE,kBAAC,GAAD,UAC0BpsB,IAAvBiP,EAAUlG,UAAwD,IAA9BkG,EAAUlG,SAASoZ,QACtD,kBAAC,GAAD,KACE,+BACE,kBAAC,GAAD,KACE,kBAAC,GAAD,cACA,kBAAC,GAAD,iBACClT,EAAUlG,SAAS,GAAGC,OACrBiG,EAAUlG,SAAS,GAAGC,MAAMmZ,OAAS,IADtC,UAEClT,EAAUlG,SAAS,GAAGC,aAFvB,aAEC,EAA6BzC,KAAI,SAACgiB,EAAMxZ,GACtC,OAAO,kBAAC,GAAD,CAAiBC,IAAKD,GAAQwZ,EAAKlpB,YAIlD,+BACG4P,EAAUlG,SAASxC,KAAI,SAAC6hB,EAAYrZ,GAAmB,IAAD,EACrD,OACE,kBAAC,GAAD,CAAYC,IAAKD,GACf,kBAAC,GAAD,KAAcqZ,EAAWvf,OACzB,kBAAC,GAAD,KACGuf,EAAWrf,SAASxC,KAAI,SAACmiB,GACxB,OAAOA,EAAQrpB,KAAO,SAJ5B,UAOG+oB,EAAWpf,aAPd,aAOG,EAAkBzC,KAAI,SAACgiB,EAAMxZ,GAC5B,OAAO,kBAAC,GAAD,CAAaC,IAAKD,GAAQwZ,EAAKrhB,mBAW1D,kBAAC,GAAD,KACE,kBAAC,GAAD,UAC0BlH,IAAvBiP,EAAUlG,UACTkG,EAAUlG,SAASxC,KAAI,SAAC6hB,GACtB,OAAOA,EAAWrf,SAASxC,KAAI,SAACmiB,EAAS3Z,GACvC,OACE,kBAAC,GAAD,CAAMC,IAAKD,GACT,kBAAC,GAAD,KAAY2Z,EAAQrpB,KAApB,KACA,kBAACqX,EAAA,EAAD,CAAchP,KAAMghB,EAAQhhB,gBAO1C,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACIijB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUuH,EAAU5P,MACxB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM3I,EAAW5D,KAAM,cAUnD2N,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAe/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBM,KAAKC,aAIjC0R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B1S,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAG/ByR,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CqjB,GAAiB1jB,IAAOsU,MAAV,MAKE,qBAAGpU,MAAkBC,KAAKE,mBAG1CqmB,GAAa1mB,IAAOmnB,GAAV,MAEVR,GAAkB3mB,IAAOonB,GAAV,MACC,qBAAGlnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAIhC8mB,GAAclnB,IAAOqnB,GAAV,MACK,qBAAGnnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAMhCymB,GAAY7mB,YAAOknB,GAAPlnB,CAAH,M,s0CCzQf,IA+FeoxB,GA/FS,SAAC,GAAiC,IAA/B1nB,EAA8B,EAA9BA,QAASqE,EAAqB,EAArBA,OAC5Bof,EAAgB,SACpBC,EACA5P,EACAzb,GAEA,IAAIxH,EAASmP,EAAQnP,OAAO6G,KAAI,SAACisB,GAC/B,OAAIA,IAAUD,EACL,2BACFC,GADL,kBAEG7P,EAAQzb,IAGJsrB,KAGXtf,EAAO,2BAAKrE,GAAN,IAAenP,OAAQA,MAmB/B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACgT,EAAA,EAAD,CACExL,MAAO2H,EAAQxP,KACf8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKrE,GAAN,IAAexP,KAAMA,QAEjD,kBAACqT,EAAA,EAAD,CACExL,MAAO2H,EAAQpP,cACf0H,MAAM,iBACNgB,SAAU,SAAC1I,GAAD,OACRyT,EAAO,2BAAKrE,GAAN,IAAepP,cAAeA,QAGxC,kBAACiT,EAAA,EAAD,CACExL,MAAO2H,EAAQtP,KACf4H,MAAM,OACNgB,SAAU,SAAC5I,GAAD,OACR2T,EAAO,2BAAKrE,GAAN,IAAetP,KAAMA,QAG/B,kBAACmT,EAAA,EAAD,CACExL,MAAO2H,EAAQlP,QACfwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKrE,GAAN,IAAelP,QAASA,SAGzD,kBAAC,GAAD,KACGkP,EAAQnP,OAAO6G,KAAI,SAACisB,EAAczjB,GACjC,OACE,kBAAC,GAAD,CAAcC,IAAKD,GACjB,kBAAC,GAAD,CACE7H,MAAOsrB,EAAMnzB,KACb8H,MAAM,OACNgB,SAAU,SAAC9I,GAAD,OAAUizB,EAAcE,EAAO,OAAQnzB,MAEnD,kBAAC,GAAD,CACE6H,MAAOsrB,EAAM3pB,MACb1B,MAAM,QACNgB,SAAU,SAACU,GAAD,OAAWypB,EAAcE,EAAO,QAAS3pB,MAErD,kBAACwV,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBApD5B,SAACwnB,GACnB,IAAI7yB,EAASmP,EAAQnP,OACfqP,EAAgBrP,EAAOqpB,QAAQwJ,IACtB,IAAXxjB,IACFrP,EAAOkV,OAAO7F,EAAO,GACrBmE,EAAO,2BAAKrE,GAAN,IAAenP,OAAQA,MA+CqBozB,CAAYN,MACtD,kBAAC,GAAD,CACEtrB,MAAOsrB,EAAM9qB,KACbP,MAAM,OACNgB,SAAU,SAACT,GAAD,OAAU4qB,EAAcE,EAAO,OAAQ9qB,UAKzD,kBAAC,GAAD,KACE,kBAAC2W,EAAA,EAAD,CAAYrZ,KAAMgd,IAAQjX,QAAS,WApEzCmI,EAAO,2BACFrE,GADC,IAEJnP,OAAO,GAAD,oBAAMmP,EAAQnP,QAAd,CAAsB,CAAEL,KAAM,YAAawJ,MAAO,EAAGnB,KAAM,gBA2EjEsR,GAAgB7T,IAAOO,IAAV,MASb8wB,GAAcrxB,IAAOO,IAAV,MACN,qBAAGL,MAAkBC,KAAKC,SAc/BmtB,GAAYvtB,YAAOqxB,GAAPrxB,CAAH,MAETwtB,GAAextB,IAAOO,IAAV,MAWZktB,GAAYztB,YAAOuN,IAAPvN,CAAH,MACO,qBAAGE,MAAkBC,KAAKE,mBAM1CqtB,GAAa1tB,YAAOslB,KAAPtlB,CAAH,MACM,qBAAGE,MAAkBC,KAAKE,mBAM1CutB,GAAY5tB,YAAO0iB,GAAP1iB,CAAH,MACO,qBAAGE,MAAkBC,KAAKE,mB,0oEC1JhD,IAuDegxB,GAvDK,SAAC,GAAyB,IAAvB3nB,EAAsB,EAAtBA,QAAsB,EACnB0D,oBAAkB,GADC,mBACpCoY,EADoC,KAC9BC,EAD8B,KAG3C,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,2BAAI/b,EAAQxP,OAEd,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,MACCwP,EAAQpP,eAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,cACCoP,EAAQtP,MAEX,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMyF,KAAME,MACX2J,EAAQlP,WAIf,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGkP,EAAQnP,OAAO6G,KAAI,SAACisB,EAAczjB,GACjC,OACE,kBAAC,GAAD,CAAcC,IAAKD,GACjB,kBAAC,GAAD,KAAYyjB,EAAMnzB,MAClB,kBAAC,GAAD,KAAamzB,EAAM3pB,OACnB,kBAAC,GAAD,KACE,kBAAC6N,EAAA,EAAD,CAAchP,KAAM8qB,EAAM9qB,cAOtC,kBAAC,GAAD,KACE,kBAAC,GAAD,MACIijB,GACA,kBAAChY,EAAA,EAAD,CACEjL,KAAI,eAAUmH,EAAQxP,MACtB2F,KAAM2mB,IACN5gB,QAAS,kBAAM6f,GAAQ,QAGxBD,GAAQ,kBAACiB,GAAA,EAAD,CAAWhU,KAAM/I,EAASxD,KAAM,aAS/C2N,GAAgB7T,IAAOO,IAAV,MASbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAe/BZ,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUXb,GAAOM,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBM,KAAKC,aAIjC0R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/Bkb,GAAextB,YAAOP,GAAPO,CAAH,MACZytB,GAAYztB,IAAOO,IAAV,MACO,qBAAGL,MAAkBC,KAAKE,mBAM1CqtB,GAAa1tB,YAAOytB,GAAPztB,CAAH,MAGV4tB,GAAY5tB,YAAOytB,GAAPztB,CAAH,MAITJ,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,a,+lBCtJrC,IAiJe6wB,GAjJO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOxjB,EAAqB,EAArBA,OAAqB,EACvBX,mBAAiB,WADM,mBAC5CiQ,EAD4C,KACjCC,EADiC,KAmEnD,OACE,kBAAC,GAAD,KACE,kBAACU,EAAA,EAAD,CACEC,SAAU,CAAC,UAAW,YAAa,SAAU,aAC7Cjb,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAClCb,UAAWA,IAEE,YAAdA,GACC,kBAAC,GAAD,KACE,kBAAC9P,EAAA,EAAD,CACExL,MAAOwvB,EAAMr3B,KACb8H,MAAM,aACNgB,SAAU,SAAC9I,GAAD,OAAU6T,EAAO,2BAAKwjB,GAAN,IAAar3B,KAAMA,QAE/C,kBAACqT,EAAA,EAAD,CACExL,MAAOwvB,EAAM/2B,QACbwH,MAAM,UACNnC,KAAME,IACNiD,SAAU,SAACxI,GAAD,OAAauT,EAAO,2BAAKwjB,GAAN,IAAa/2B,QAASA,QAErD,kBAAC2jB,EAAA,EAAD,CACEpc,MAAOwvB,EAAMntB,YACbpC,MAAM,cACNnC,KAAMue,IACNpb,SAAU,SAACoB,GAAD,OAAiB2J,EAAO,2BAAKwjB,GAAN,IAAantB,YAAaA,SAIlD,cAAdiZ,GACC,oCACGkU,EAAMxqB,UAAU3F,KAAI,SAACyK,EAAkBjC,GACtC,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,YACbxc,MAAO8J,EACP7J,MAAM,WACNgB,SAAU,SAACwuB,GAAD,OAlFD,SAACA,EAAqBC,GAC7C,QAAc52B,IAAV02B,EAAqB,CACvB,IAAIG,EAAmBH,EAAMxqB,UAAU3F,KAAI,SAACyK,GAC1C,OAAIA,IAAa4lB,EACRD,EAEA3lB,KAGXkC,EAAO,2BAAKwjB,GAAN,IAAaxqB,UAAW2qB,MAyESC,CAAiBH,EAAa3lB,MAE3D,kBAACqN,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAvG3B,SAAC6rB,GACtB,QAAc52B,IAAV02B,EAAqB,CACvB,IAAIG,EAAmBH,EAAMxqB,UAC1B2P,QAAO,SAAC7K,GAAD,OAAsBA,IAAa4lB,KAC1CrwB,KAAI,SAACyK,GACJ,OAAOA,KAEXkC,EAAO,2BAAKwjB,GAAN,IAAaxqB,UAAW2qB,MAgGsBE,CAAe/lB,UAI/D,kBAAC2B,EAAA,EAAD,CAAYjL,KAAM,mBAAoB1C,KAAMgd,IAAQjX,QAAS,kBAjG9C,WACrB,QAAc/K,IAAV02B,EAAqB,CACvB,IAAIG,EAAmBH,EAAMxqB,UAAU3F,KAAI,SAACyK,GAC1C,OAAOA,KAET6lB,EAAiBje,KAAK,IACtB1F,EAAO,2BAAKwjB,GAAN,IAAaxqB,UAAW2qB,MA2FyCG,OAGxD,WAAdxU,GACC,oCACGkU,EAAMvqB,OAAO5F,KAAI,SAAC2K,EAAenC,GAChC,OACE,kBAAC,GAAD,CAAWC,IAAKD,GACd,kBAAC0U,EAAA,EAAD,CACEC,YAAa,SACbxc,MAAOgK,EACP/J,MAAM,QACNgB,SAAU,SAAC8uB,GAAD,OApEJ,SAACA,EAAkBC,GACvC,QAAcl3B,IAAV02B,EAAqB,CACvB,IAAIS,EAAgBT,EAAMvqB,OAAO5F,KAAI,SAAC2K,GACpC,OAAIA,IAAUgmB,EACLD,EAEA/lB,KAGXgC,EAAO,2BAAKwjB,GAAN,IAAavqB,OAAQgrB,MA2DSC,CAAcH,EAAU/lB,MAElD,kBAACmN,EAAA,EAAD,CAAYrZ,KAAM+e,KAAShZ,QAAS,kBAzF9B,SAACmsB,GACnB,QAAcl3B,IAAV02B,EAAqB,CACvB,IAAIS,EAAgBT,EAAMvqB,OACvB0P,QAAO,SAAC3K,GAAD,OAAmBA,IAAUgmB,KACpC3wB,KAAI,SAAC2K,GACJ,OAAOA,KAEXgC,EAAO,2BAAKwjB,GAAN,IAAavqB,OAAQgrB,MAkFyBE,CAAYnmB,UAI5D,kBAACyB,EAAA,EAAD,CAAYjL,KAAM,gBAAiB1C,KAAMgd,IAAQjX,QAAS,kBAnF9C,WAClB,QAAc/K,IAAV02B,EAAqB,CACvB,IAAIS,EAAgBT,EAAMvqB,OAAO5F,KAAI,SAAC2K,GACpC,OAAOA,KAETimB,EAAcve,KAAK,IACnB1F,EAAO,2BAAKwjB,GAAN,IAAavqB,OAAQgrB,MA6EyCG,OAGrD,cAAd9U,GACC,kBAAC,GAAD,KACE,kBAACiB,EAAA,EAAD,CACEC,YAAa,YACbxc,MAAOwvB,EAAMnwB,IACbY,MAAM,MACNgB,SAAU,SAAC8c,GAAD,OAAY/R,EAAO,2BAAKwjB,GAAN,IAAanwB,IAAK0e,WAUpDjM,GAAgB7T,IAAOO,IAAV,MAQbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAY/Bie,GAAYre,IAAOO,IAAV,M,UCrLM6xB,GAMnB,WAAYb,EAAexqB,EAAwBC,EAAkB5F,GAAiB,yBALtFmwB,WAKqF,OAJrFxqB,eAIqF,OAHrFC,YAGqF,OAFrF5F,SAEqF,EACnF3G,KAAK82B,MAAQA,GAAS,IAAIzqB,KAC1BrM,KAAKsM,UAAYA,GAAa,GAC9BtM,KAAKuM,OAASA,GAAU,GACxBvM,KAAK2G,IAAMA,GAAO,IAAID,KCRbkxB,GAAU,uCAAG,WAAOd,GAAP,uBAAA5iB,EAAA,6DACxByC,QAAQ7J,KAAK,KAKb6J,QAAQ7J,KAAK,QACT+qB,EAA8B,GAC9BC,EAAoC,GAExChB,EAAMvqB,OAAO7E,SAAQ,SAAC4J,GACpBumB,EAAU7e,KAAKwC,YAAyB,SAAU,OAAQlK,OAE5DwlB,EAAMxqB,UAAU5E,SAAQ,SAAC0J,GACvB0mB,EAAa9e,KAAKwC,YAAyB,YAAa,OAAQpK,OAd1C,SAgBTwU,QAAQpI,IAAIqa,GAhBH,cAgBxBtrB,EAhBwB,iBAiBNqZ,QAAQpI,IAAIsa,GAjBN,eAiBxBxrB,EAjBwB,iBAkBZkP,YAAyB,YAAa,OAAQsb,EAAMnwB,KAlBxC,eAkBxBA,EAlBwB,OAmBxBgQ,QAAQkP,QAAQ,QAEhBlP,QAAQkP,QAAQ,KArBQ,kBAsBjB,IAAI8R,GAAWb,EAAOxqB,EAAWC,EAAQ5F,IAtBxB,4CAAH,sD,ohFCiBvB,IAmFeoxB,GAnFG,SAAC,GAA+B,IAA7BjB,EAA4B,EAA5BA,MAA4B,KAArBxjB,OACIX,oBAAkB,IADD,mBACxCkU,EADwC,KAC/BC,EAD+B,OAETnU,mBAAqB,IAAIglB,IAFhB,mBAExCK,EAFwC,KAE3BC,EAF2B,OAGnBtlB,mBAAiB,WAHE,mBAGxCiQ,EAHwC,KAG7BC,EAH6B,KAK/ChQ,qBAAU,WACR+kB,GAAWd,GAAOld,MAAK,SAACge,GACtBK,EAAeL,GACf9Q,GAAW,QAEZ,CAACgQ,EAAOmB,IAEX,IAAM1zB,EAAaJ,uBAAY,WAC7B,YAAoB/D,IAAhB43B,EAC0B,KAAxBA,EAAYrxB,IAAIA,KAAsC,OAAxBqxB,EAAYrxB,IAAIA,IACzC,GAEFqxB,EAAYrxB,IAAIA,IAElB,KACN,CAACqxB,IAEJ,OACE,oCACGnR,GAAW,kBAACQ,GAAA,EAAD,OACVR,GAAWmR,GACX,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACoB,KAAjBzzB,IACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAO1D,IAAK0D,MACZ,2BAAIyzB,EAAYlB,MAAMr3B,OAGxB,kBAAC,GAAD,KACE,2BAAIu4B,EAAYlB,MAAMr3B,SAK9B,kBAAC8jB,EAAA,EAAD,CACEC,SAAU,CAAC,UAAW,YAAa,SAAU,aAC7Cjb,SAAU,SAACkb,GAAD,OAAiBZ,EAAOY,IAClCb,UAAWA,IAEE,YAAdA,GACC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,oBACA,kBAAC9L,EAAA,EAAD,CAAchP,KAAMkwB,EAAYlB,MAAMntB,eAExC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMvE,KAAME,MACX0yB,EAAYlB,MAAM/2B,WAKZ,cAAd6iB,GACC,kBAAC,GAAD,KACGoV,EAAY1rB,UAAU3F,KAAI,SAACyK,EAAoBjC,GAC9C,OAAO,kBAACgC,GAAA,EAAD,CAAcC,SAAUA,EAAUhC,IAAKD,QAIrC,WAAdyT,GACC,kBAAC,GAAD,KACGoV,EAAYzrB,OACVqQ,MAAK,SAAC1I,EAAGC,GAAJ,OAAUD,EAAE3D,KAAK2nB,cAAc/jB,EAAE5D,SACtC5J,KAAI,SAAC2K,EAAcnC,GAClB,OAAO,kBAACkC,GAAA,EAAD,CAAWC,MAAOA,EAAOlC,IAAKD,QAI9B,cAAdyT,GAA6B,kBAACxP,GAAA,EAAD,CAAKC,UAAU,EAAOjC,SAAU4mB,EAAYrxB,SAS9EyS,GAAgB7T,IAAOO,IAAV,MAMbuT,GAAO9T,IAAOO,IAAV,MACC,qBAAGL,MAAkBC,KAAKC,SAQ/B2hB,GAAS/hB,IAAOO,IAAV,MAMU,qBAAGL,MAAkBM,KAAKH,mBAG1Cf,GAAYU,IAAOO,IAAV,MASO,qBAAGL,MAAkBC,KAAKE,mBAG1Cb,GAAOQ,IAAOO,IAAV,MASY,qBAAGL,MAAkBC,KAAKE,mBAG1CZ,GAAcO,IAAOO,IAAV,MAUX4R,GAAYnS,IAAOqS,KAAV,MAEJ,qBAAGnS,MAAkBC,KAAKmS,uBAK/B5S,GAAOM,IAAOO,IAAV,MAEC,qBAAGL,MAAkBC,KAAKC,SAOf,qBAAGF,MAAkBC,KAAKE,mBAG1C6R,GAAOlS,IAAOO,IAAV,MAQY,qBAAGL,MAAkBC,KAAKE,mBAG1CT,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,aAO/BlB,GAAQ,SAAC,GAA0B,IAAxBjE,EAAuB,EAAvBA,IACTsF,EAAQ,CACZC,gBAAgB,OAAD,OAASvF,EAAT,KACfwF,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAGpB,MAAY,KAAR1F,EACK,kBAAC,GAAD,CAAUsF,MAAOA,IAEjB,kBAAC,GAAD,OAILK,GAAWjB,IAAOO,IAAV,MAMQ,qBAAGL,MAAkBM,KAAKC,aAK1CS,GAAQlB,IAAOO,IAAV,M,2pBC3KX,IA2IeqyB,GA3IM,SAAC,GAAgD,IAAD,IAA7C/d,EAA6C,EAA7CA,OAAQZ,EAAqC,EAArCA,UAAW4e,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAmB,EACvC1lB,mBAAkBylB,GADqB,mBAC5DE,EAD4D,KAClDC,EADkD,OAGnC5lB,mBAAkByH,GAHiB,mBAG5Doe,EAH4D,KAGjDC,EAHiD,OAKvB9lB,oBAAkB,GALK,mBAK5D+lB,EAL4D,KAK1CC,EAL0C,OAMrChmB,oBAAkB,GANmB,mBAM5DimB,EAN4D,KAMjDC,EANiD,OAOrClmB,mBAAiB,IAPoB,mBAO5DhC,EAP4D,KAOnDmoB,EAPmD,OAQvBnmB,oBAAkB,GARK,mBAQ5DomB,EAR4D,KAQ5CC,EAR4C,KAS/D3N,EAAUC,cAOdzY,qBAAU,WACJ2lB,IAAcpe,GAChB4e,GAAkB,KAEnB,CAACR,EAAWpe,IAEf,IAAM6e,EAAe,SAACT,EAAoBU,GACxClf,YAAmBR,EAAWgf,GAAW,SAACte,GACpCA,EAAS,GACX8e,GAAkB,GAClBF,EAAWI,GACXL,GAAS,KAETC,EAAW,yBACXD,GAAS,IAEXM,YAAW,WACTN,GAAS,KACR,SAYDO,EAAoB,SAAChf,EAAiB8e,GAC1CT,EAAWre,GACX6e,EAAa7e,EAAQ8e,IAGjBG,EAAQ,CACZzS,aAAcA,GACdjE,iBAAkBA,EAClBmI,WAAYA,GACZ3C,eAAgBA,GAChB6E,UAAWA,GACXD,cAAeA,GACfO,SAAUA,GACVL,aAAcA,GACdiB,UAAWA,GACXX,cAAeA,GACfgB,SAAUA,GACVF,aAAcA,GACdqB,SAAUA,GACVb,aAAcA,GACdiD,aAAcA,GACdvZ,iBAAkBA,KAClB0Z,YAAaA,GACbF,gBAAiBA,GACjBK,QAASA,GACTD,YAAaA,GACbK,UAAWA,GACXH,cAAeA,GACfe,SAAUA,GACVX,aAAcA,GACd0B,gBAAiBA,GACjBT,oBAAqBA,GACrB+B,cAAeA,GACfR,kBAAmBA,GACnBiB,UAAWA,GACXR,cAAeA,GACfgB,cAAeA,GACfF,kBAAmBA,GACnBI,YAAaA,GACbD,gBAAiBA,GACjBoB,UAAWA,GACXlB,cAAeA,IAGjB,OACE,oCACG6B,GACC,kBAAChoB,EAAA,EAAD,CACEC,QAAO,iBAAYyJ,EAAO3a,KAAnB,KACP2F,KAAMk0B,IACN1oB,aAAc,SACdC,cAAe,WACbgK,YAAOrB,EAAWY,EAAO1a,IACzB2rB,EAAQkO,UAEVzoB,UAAW,OACXC,WAAY,WACV4nB,GAAgB,MAItB,kBAACa,GAAD,KACE,kBAACxuB,EAAA,EAAD,CAAY5F,KAAM0rB,IAAa7lB,OAAQ,kBAAMogB,EAAQkO,YACrD,kBAAC,IAAD,CAAY9tB,KAAM6sB,EAAS1wB,YACzB,kBAAC,IAAD,CAAYuD,QAAS,kBAAMotB,GAAQ,KAAnC,QACA,kBAAC,IAAD,CAAaptB,QAAS,kBAAMotB,GAAQ,KAApC,SAEDD,GAAYS,GAAkB,kBAAC,GAAD,CAAM3zB,KAAMk0B,MAC1ChB,GACC,oCACE,kBAAC7Z,EAAA,EAAD,CACEtT,QAAS,kBAAM8tB,EAAaT,EAAW,sBACvCpzB,KAAM6N,MAER,kBAACwL,EAAA,EAAD,CAAYtT,QAAS,kBAlFP,SAAC2Q,GACvB,IAAI2d,EAAM,eAAQ3d,UACX2d,EAAO/5B,GACd0d,YAAgB5D,EAAWigB,GAAQ,SAAC/5B,GAClC05B,EAAkB,2BAAKhf,GAAN,IAAc3a,KAAM2a,EAAO3a,KAAO,aAAc,0BA8EhCi6B,CAAgBlB,IAAYpzB,KAAMu0B,MAC7D,kBAAClb,EAAA,EAAD,CAAYtT,QAAS,kBA9GTyuB,EA8G4BpB,EAAU94B,GA7G1Dmb,YAAOrB,EAAWogB,QAClBvO,EAAQkO,SAFW,IAACK,GA8G2Cx0B,KAAM+e,OAC5DxT,GAAWioB,GAAa,kBAAC3nB,GAAD,KAAUN,KAIxC2nB,EACGuB,IAAM3b,cAAcmb,EAAMhB,EAAO,aAAjC,mBACGA,EAAKyB,oBAAsBtB,GAD9B,wBAEU,SAAClxB,GAAD,OAAgBmxB,EAAWnxB,MAFrC,IAIAuyB,IAAM3b,cAAcmb,EAAMhB,EAAO,SAAjC,mBACGA,EAAKyB,oBAAsBtB,GAD9B,wBAEU,SAAClxB,GAAD,OAAgB8xB,EAAkB9xB,EAAO,wBAFnD,MAUJkyB,GAASj0B,IAAOO,IAAV,MACD,qBAAGL,MAAkBC,KAAKC,SAc/BsL,GAAU1L,IAAOO,IAAV,MASPX,GAAOI,YAAOW,IAAPX,CAAH,MAMC,qBAAGE,MAAkBM,KAAKC,a,iIChGtB+zB,UAzGE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACd3O,EAAUC,cAD8C,EAExB3Y,mBAAiB,IAFO,mBAErDyiB,EAFqD,KAEzC6E,EAFyC,OAGhCtnB,qBAHgC,mBAGrDyH,EAHqD,KAG7C8f,EAH6C,OAI9BvnB,oBAAkB,GAJY,mBAIrDkU,EAJqD,KAI5CC,EAJ4C,OAKlCnU,oBAAkB,GALgB,mBAKrDwnB,EALqD,KAK9CC,EAL8C,KAO5DvnB,qBAAU,iBACOzS,IAAXga,GAAwB+f,KAC1BrT,GAAW,GACXsT,GAAS,GACTH,EAAc,IACdC,OAAU95B,MAGX,CAAC45B,IAEJ,IAAMK,EAAal2B,sBAAW,uCAC5B,WAAO1E,GAAP,eAAAyU,EAAA,yDACMomB,OAAiCl6B,OACXA,IAAtB45B,EAAMxa,OAAO/f,KAFnB,gCAGsB+b,YAAyB/b,EAAO,IAAK,OAAQu6B,EAAMxa,OAAO/f,MAHhF,OAGI66B,EAHJ,sBAI0Bl6B,IAApB45B,EAAMxa,OAAO9f,GAJnB,gCAKsB+b,YAAchc,EAAO,KAAMu6B,EAAMxa,OAAO9f,IAL9D,OAKI46B,EALJ,cAMExT,GAAW,QACO1mB,IAAdk6B,GACFL,EAAcx6B,GACd26B,GAAS,KAETH,EAAcx6B,GACdy6B,EAAUI,IAZd,4CAD4B,sDAgB5B,CAACN,IAGHnnB,qBAAU,WACR,QAAczS,IAAV45B,QAAkC55B,IAAXga,EAAsB,CAC/C,IAAImgB,EAAmBP,EAAMQ,KAC1BhG,MAAM,KACNvY,QAAO,SAAC+d,GAAD,OAAmBA,EAAM31B,SAAS,cAAY,GACrDo2B,WAAW,UAAW,SACRr6B,IAAbm6B,GACFF,EAAWE,MAGd,CAACP,EAAOK,EAAYjgB,IAEvB,IA6BoB/Y,EA7BdmZ,EAAW,CACf3L,SAAU,IAAInD,IAAS,EAAGsuB,EAAMxa,OAAO/f,MACvCmP,OAAQ,IAAIjB,KAAM,EAAGqsB,EAAMxa,OAAO/f,MAClC6R,MAAO,IAAIhB,KAAM,EAAG0pB,EAAMxa,OAAO/f,MACjCytB,KAAM,IAAIxjB,KAAK,EAAGswB,EAAMxa,OAAO/f,MAC/B+tB,MAAO,IAAI/d,KAAM,EAAGuqB,EAAMxa,OAAO/f,MACjC6uB,KAAM,IAAIhkB,KAAK,EAAG0vB,EAAMxa,OAAO/f,MAC/BqvB,KAAM,IAAIhX,KAAK,EAAGkiB,EAAMxa,OAAO/f,MAC/B2R,SAAU,IAAI1K,IAAS,EAAGszB,EAAMxa,OAAO/f,MACvCwE,QAAS,IAAIrD,KAAQ,EAAGo5B,EAAMxa,OAAO/f,MACrC6O,IAAK,IAAIwB,KAAI,EAAGkqB,EAAMxa,OAAO/f,MAC7B6yB,MAAO,IAAItiB,KAAM,EAAGgqB,EAAMxa,OAAO/f,MACjCuP,KAAM,IAAI0rB,KAAKV,EAAMxa,OAAO/f,MAC5Bk0B,YAAa,IAAIvb,KAAY,EAAG4hB,EAAMxa,OAAO/f,MAC7C6qB,UAAW,IAAI7Y,KAAU,EAAGuoB,EAAMxa,OAAO/f,MACzCk2B,MAAO,IAAIhpB,KAAMqtB,EAAMxa,OAAO/f,MAC9B4P,UAAW,IAAIE,KAAS,EAAGyqB,EAAMxa,OAAO/f,MACxCwP,QAAS,IAAIzP,KAAQw6B,EAAMxa,OAAO/f,MAClCq3B,MAAO,IAAIzqB,KAAM,EAAG2tB,EAAMxa,OAAO/f,OAenC,OACE,oCACGonB,GAAW,kBAACQ,GAAA,EAAD,OACVR,GAAWsT,GACX,kBAAC7iB,GAAA,EAAD,CACExP,KAAM,wDACNyP,WAAY,MACZC,SAAU,kBAnBM,WACtB,IAAI8iB,EAAqB9f,EAAS4a,UAC3BkF,EAAU56B,GACjB0d,YAAgBgY,EAAa,IAAKkF,GAAW,SAAC56B,GAC5C2rB,EAAQrS,KAAR,WAAiBoc,EAAjB,sBAAyC11B,OAerBi7B,MAGlBR,GAAUtT,QAAsBzmB,IAAXga,EAQrB,qCAPA,kBAAC,GAAD,CACEA,OAAQA,EACRZ,UAAW4b,EAAa,IACxBgD,MAAuB,KAAhBhe,EAAO3a,KACd44B,MAnBYh3B,EAmBK+zB,EAlBhB/zB,EAAIu5B,OAAO,GAAGC,cAAgBx5B,EAAImoB,MAAM,S,u9BClFpC1W,IAdK,SAAC,GAAD,IAAGxL,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOssB,EAAjB,EAAiBA,YAAazuB,EAA9B,EAA8BA,KAAMkD,EAApC,EAAoCA,UAAWC,EAA/C,EAA+CA,SAA/C,OAClB,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAAC2P,EAAD,CACEvX,KAAK,OACL2H,MAAOA,EACPiB,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAO7P,QACnCusB,YAAaA,MAOnB,IAAMprB,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAIToR,EAAQ3R,IAAOuD,MAAV,KAMW,qBAAGrD,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,U,wIC6BvBm1B,EAnEG,SAAC,GAA4B,IAA1Bn7B,EAAyB,EAAzBA,KAAMF,EAAmB,EAAnBA,KAAmB,EACdkT,oBAAkB,GADJ,mBACrCkU,EADqC,KAC5BC,EAD4B,OAEVnU,oBAAkB,GAFR,mBAErCooB,EAFqC,KAEvBb,EAFuB,KAI5CrnB,qBAAU,WACR,IAAImoB,EAAUr7B,EAAO,IACR,UAATA,GAA6B,aAATA,IAAqBq7B,EAAUr7B,EAAO,MAC9D+b,YAA8Bsf,EAAS,OAAQv7B,GAAMma,MAAK,SAACuB,GACzD+e,EAAU/e,EAAQ,GAClB2L,GAAW,QAEZ,CAACnnB,EAAMF,IA+CV,OACE,oCACGonB,GAAW,kBAAC,IAAD,OACVA,IAAYkU,GAAgB,kBAAC,IAAD,OAC5BlU,GAAWkU,GAAgB,oCAjDd,SAACp7B,GAClB,OAAQA,GACN,IAAK,QACH,OAAO,kBAAC,IAAD,CAAiByF,KAAM61B,MAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACL,IAAK,UACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACL,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,CAAiB71B,KAAM81B,MAChC,IAAK,UACH,OAAO,kBAAC,IAAD,CAAiB91B,KAAM+1B,MAChC,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,CAAiB/1B,KAAMg2B,MAChC,IAAK,MACH,OAAO,kBAAC,IAAD,MACT,IAAK,cACH,OAAO,kBAAC,IAAD,CAAiBh2B,KAAMi2B,OAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,QACE,MAAO,IAQuBC,CAAW37B,M,ysBC6BlCmX,IAjHM,SAAC,GAAsB,IAApBhP,EAAmB,EAAnBA,KAAmB,EACD6K,qBADC,mBAClC4oB,EADkC,KACpBC,EADoB,KAErCnQ,EAAUC,cAERmQ,EAAM,SAACp6B,EAAaq6B,EAAkBC,GAC1C,OAAOt6B,EAAIu6B,OAAO,EAAGF,GAAYr6B,EAAIu6B,OAAOD,EAAS,IAGjDE,EAAa13B,uBACjB,SAAC2D,GACC,QAAa1H,IAAT0H,EAAoB,CACtB,GAAIA,EAAKzD,SAAS,OAASyD,EAAKzD,SAAS,MAAO,CAC9C,IAAMy3B,EAAQh0B,EAAK0sB,MAAM,MACrBuH,EAAwB,GAoB5B,OAnBAD,EAAMp0B,SAAQ,SAACs0B,EAAc7sB,GAC3B,GAAI6sB,EAAK33B,SAAS,MAAO,CACvB,IAAM43B,EAAqBD,EAAKxH,MAAM,MAChC0H,EAAsBD,EAAS,GAAGzH,MAAM,KAC1C2H,EAAaD,EAAU,GACR,UAAfC,GAAyC,aAAfA,IAA2BA,GAAc,KACvE,IAAMzQ,EAAe,IAAMyQ,EAAa,gBAAkBD,EAAU,GACpEH,EAAe/iB,KACb,kBAACojB,EAAD,CAAUhtB,IAAKD,GACb,kBAAC3J,EAAD,CAAM2F,QAAS,kBAAMkgB,EAAQrS,KAAK0S,KAChC,kBAAC,EAAD,CAAW/rB,KAAMu8B,EAAU,GAAIz8B,KAAMy8B,EAAU,KADjD,IACyDA,EAAU,IAEnE,kBAACE,EAAD,KAAWH,EAAS,UAIX,KAATD,GAAaD,EAAe/iB,KAAK,kBAACojB,EAAD,CAAUhtB,IAAKD,GAAQ6sB,OAGzD,oCAAGD,GAEV,OAAO,kBAACK,EAAD,KAAWt0B,MAIxB,CAACujB,IAGGgR,EAAcl4B,uBAClB,SAACm4B,GACC,GAAIA,EAASj4B,SAAS,aAAc,CAClC,IAAMwV,EAAkB/R,EAAK0sB,MAAM,aAC7B+H,EAAsB1iB,EAAM,GAAG2a,MAAM,MACvCgI,GAAS,EACb,OACE,oCACGX,EAAWhiB,EAAM,IAClB,+BACE,+BACG0iB,EAAU51B,KAAI,SAACmtB,EAAa3kB,GAC3B,GAAI2kB,EAAIzvB,SAAS,KAAM,CACrB,GAAIm4B,EAAQ,CACVA,GAAS,EACT,IAAMvI,EAAQH,EAAIU,MAAM,KACxB,OACE,wBAAIplB,IAAKD,GACN8kB,EAAMttB,KAAI,SAACouB,EAAc5lB,GACxB,OAAO,kBAAC2lB,EAAD,CAAe1lB,IAAKD,GAAQ4lB,OAKzC,IAAMd,EAAQH,EAAIU,MAAM,KACxB,OACE,wBAAIplB,IAAKD,GACN8kB,EAAMttB,KAAI,SAACouB,EAAc5lB,GACxB,OAAO,kBAAC6lB,EAAD,CAAW5lB,IAAKD,GAAQ0sB,EAAW9G,QAMlD,OAAO,0CAKd8G,EAAWhiB,EAAM,KAItB,OAAOgiB,EAAWS,KAGtB,CAACx0B,EAAM+zB,IAGHY,EAAat4B,uBACjB,SAACm4B,GACC,KAAOA,EAASj4B,SAAS,OAAO,CAC9B,IAAMq3B,EAAWY,EAASnT,QAAQ,MAC5BwS,EAASW,EAASnT,QAAQ,MAAQ,EACxCmT,EAAWb,EAAIa,EAAUZ,EAAUC,GAErC,OAAOU,EAAYC,KAErB,CAACD,IAUH,OAPAxpB,qBAAU,WACR,QAAazS,IAAT0H,EAAoB,CACtB,IAAIyzB,EAAekB,EAAW30B,GAC9B0zB,EAAgBD,MAEjB,CAACzzB,EAAMujB,EAASoR,IAEZ,oCAAGlB,IA9GZ,IAmHM/1B,EAAOD,IAAOqS,KAAV,KAEY,qBAAGnS,MAAkBC,KAAKmS,uBAGrC,qBAAGpS,MAAkBC,KAAKE,mBAO/Bw2B,EAAW72B,IAAOqS,KAAV,KAIRkd,EAAgBvvB,IAAOonB,GAAV,KACG,qBAAGlnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAKhCqvB,EAAYzvB,IAAOqnB,GAAV,KACO,qBAAGnnB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,U,iSChEvBqmB,IArEG,SAAC,GAA4B,IAA1BhU,EAAyB,EAAzBA,KAAMvM,EAAmB,EAAnBA,KAAmB,EACpBkH,mBAAiB,IADG,mBACrClT,EADqC,KAC/Bi9B,EAD+B,OAEpB/pB,qBAFoB,mBAErCgqB,EAFqC,KAE/BC,EAF+B,OAGlBjqB,qBAHkB,mBAGrCwnB,EAHqC,KAG9BC,EAH8B,KAyD5C,OApDAvnB,qBAAU,WACR,QAAazS,IAATu8B,EAAoB,CACtB,IAAME,ECpBoB,WAI9B,IAHA,IAJwBhI,EAAa/M,EAIjCgV,EAAW,GACTtX,EACJ,iEACO8G,EAAI,EAAGA,EAAI,GAAIA,IACtBwQ,GAAYtX,GARUqP,EAQkB,EARL/M,EAQQtC,EAAWjD,OAAS,EAP1DkS,KAAKsI,MAAMtI,KAAKE,UAAY7M,EAAM+M,EAAM,IAAMA,IASrD,OAAOiI,EDacE,GACXC,EAAU,IAAIC,IAAKL,EAAU,CACjCM,KAAM,wBACNC,QAAQ,IAEVzmB,QAAQC,IAAIqmB,GACZA,EAAQnkB,GAAG,cAAc,SAAUukB,GACjCA,EAAKvkB,GAAG,SAAS,SAAUwkB,GACzBlD,EAASkD,MAEXD,EAAKvkB,GAAG,QAAQ,WACdukB,EAAKtS,KAAK/S,SAGd4kB,EAAQK,MAET,CAACjlB,EAAM2kB,IAEV9pB,qBAAU,gBACKzS,IAATu8B,IACEA,EAAKY,eAAiBZ,EAAKa,WAC7Bb,EAAKc,YAEM,QAAThyB,GAAkC,kBAATuM,EAC3B4D,YAAiB5D,GAAM4B,MAAK,SAAC2R,GAC3B5U,QAAQC,IAAI2U,GACZmR,EAAQ1kB,GACR2kB,EAAK7jB,GAAG,cAAc,SAAUukB,GAC9BA,EAAKvkB,GAAG,SAAS,SAAUwkB,GACzBlD,EAASkD,MAEXD,EAAKvkB,GAAG,QAAQ,WACdukB,EAAKtS,KAAKQ,YAIE,SAAT9f,GAAmC,kBAATuM,IACnC0kB,EAAQ1kB,EAAKvY,MACbk9B,EAAK7jB,GAAG,cAAc,SAAUukB,GAC9BA,EAAKvkB,GAAG,SAAS,SAAUwkB,GACzBlD,EAASkD,MAEXD,EAAKvkB,GAAG,QAAQ,WACdukB,EAAKtS,KAAK/S,aAKjB,CAACA,EAAMvM,EAAMkxB,IAGd,yCACYv8B,IAATu8B,GAAkC,OAAZA,EAAKj9B,IAC1B,oCACE,kBAACoT,EAAA,EAAD,CAAaxL,MAAOq1B,EAAKj9B,GAAI6H,MAAK,eAAU9H,EAAV,QAAsB8I,SAAU,gBAGrE4xB,GAAS,kBAACh1B,EAAD,CAAMC,KAAMs4B,QAhE5B,IAuEMv4B,EAAOI,YAAOW,IAAPX,CAAH,KAKC,qBAAGE,MAAkBM,KAAKC,c,m8BEhDtB6kB,IA3BK,SAAC,GAAoE,IAAlEvjB,EAAiE,EAAjEA,MAAOwgB,EAA0D,EAA1DA,IAAK6V,EAAqD,EAArDA,KAAMp2B,EAA+C,EAA/CA,MAAOnC,EAAwC,EAAxCA,KAAMkD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SAC/D,OACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE3DugB,GACC,kBAAC5Q,EAAD,CACEvX,KAAK,SACLmoB,IAAKA,EACL6V,KAAMA,GAAc,EACpBr2B,MAAOA,EACPiB,SAAU,SAACwJ,GAAD,OAAOxJ,GAAUwJ,EAAEoF,OAAO7P,WAGtCwgB,GACA,kBAAC5Q,EAAD,CACEvX,KAAK,SACLg+B,KAAMA,GAAc,EACpBr2B,MAAOA,EACPiB,SAAU,SAACwJ,GAAD,OAAOxJ,GAAUwJ,EAAEoF,OAAO7P,YAS9C,IAAMmB,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAIToR,EAAQ3R,IAAOuD,MAAV,KAOW,qBAAGrD,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,U,u3BC7DvB4d,IAdA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUZ,EAAkC,EAAlCA,UAAWra,EAAuB,EAAvBA,SACrC,OACE,kBAACq1B,EAAD,KACGpa,EAAS7c,KAAI,SAACk3B,EAAO1uB,GACpB,OACE,kBAAC2uB,EAAD,CAAK1uB,IAAKD,EAAOhE,QAAS,SAAC4G,GAAD,OAAOxJ,EAASs1B,IAAQE,SAAUF,IAAUjb,GACnEib,QAUb,IAAMD,EAAMr4B,IAAOO,IAAV,KACE,qBAAGL,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAqB1Ck4B,EAAMv4B,IAAOO,IAAV,KAQa,qBAAGL,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAOd,qBAAGF,MAAkBsD,QAAQnD,mBACxC,qBAAGH,MAAkBsD,QAAQpD,SAGtC,SAAC6F,GACD,GAAIA,EAAMuyB,SACR,MAAM,qBAAN,OAA4BvyB,EAAM/F,MAAMsD,QAAQnD,gBAAhD,4BACS4F,EAAM/F,MAAMsD,QAAQpD,MAD7B,S,8ECtEe2gB,EAInB,WACE0X,EACA12B,EACAsV,GACC,yBAPHV,eAOE,OANF5U,WAME,OALFsV,UAKE,EACA5c,KAAKkc,UAAY8hB,EACjBh+B,KAAKsH,MAAQA,EACbtH,KAAK4c,KAAOA,GAAQ,I,k/BCgBT8G,IAXG,SAAC,GAAiE,IAA/Dpc,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,MAAOT,EAAgD,EAAhDA,OAAQ1B,EAAwC,EAAxCA,KAAMkD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SAC1D,OACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAAC2P,EAAD,CAAOpQ,OAAQA,EAAQQ,MAAOA,EAAOiB,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAO7P,YAO9E,IAAMmB,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAWToR,EAAQ3R,IAAO2iB,SAAV,KAKC,gBAAGphB,EAAH,EAAGA,OAAH,YAA4B1G,IAAX0G,EAAuBA,EAAS,UAC7C,gBAAGA,EAAH,EAAGA,OAAH,YAA4B1G,IAAX0G,EAAuBA,EAAS,UAC3C,qBAAGrB,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,U,+gDCevBke,IArES,SAAC,GAQV,IAPbC,EAOY,EAPZA,YACA/H,EAMY,EANZA,QACAzU,EAKY,EALZA,MACAC,EAIY,EAJZA,MACAnC,EAGY,EAHZA,KACAkD,EAEY,EAFZA,UACAC,EACY,EADZA,SACY,EACWoK,mBAA4BmR,GAA5Cma,EADK,sBAEkBtrB,mBAAoB,IAFtC,mBAELtK,EAFK,KAEI61B,EAFJ,OAGkCvrB,mBAAoB,IAHtD,mBAGLwrB,EAHK,KAGYC,EAHZ,KAKNC,EAAel6B,sBAAW,uCAC9B,WAAO85B,GAAP,eAAA/pB,EAAA,6DACMoqB,EAAiC,GACrCL,EAAav2B,SAAQ,SAACmS,GACpBykB,EAAStlB,KAAK8D,YAAyBjD,OAAmBzZ,IAAZ2b,EAAwBA,EAAU,QAHpF,SAKwB6J,QAAQpI,IAAI8gB,GALpC,cAMU52B,SAAQ,SAAC62B,GACfL,GAAW,SAACM,GAAD,OAAOA,EAAErlB,OAAOolB,SAP/B,2CAD8B,sDAW9B,CAACxiB,IAGHlJ,qBAAU,WACoB,kBAAjBorB,GACTxhB,YAAkBwhB,OAA0B79B,IAAZ2b,EAAwBA,EAAU,IAAI,SAAC/D,GACrEkmB,EAAWlmB,MAGXimB,aAAwBz9B,OAASy9B,EAAa1b,OAAS,GACzD8b,EAAaJ,KAEd,CAACA,EAAcI,EAActiB,IAEhC,IAAM0iB,EAAWt6B,uBACf,SAACu6B,GACCn2B,EAASm2B,GACT,IAAIC,EAAat2B,EAAQ4T,QAAO,SAACtU,GAC/B,OAAOA,EAAOlI,KAAK4E,SAASq6B,MAE9BN,EAAmBO,KAErB,CAACt2B,EAASE,IAGZ,OACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAAC2P,EAAD,CAAOvX,KAAK,OAAO2H,MAAOA,EAAOiB,SAAU,SAACwJ,GAAD,OAAO0sB,EAAS1sB,EAAEoF,OAAO7P,UACpE,kBAACs3B,EAAD,KACGT,EAAgB5b,OAAS,GACxB4b,EAAgBx3B,KAAI,SAACc,EAAK0H,GACxB,OACE,kBAAC0vB,EAAD,CAAQzvB,IAAKD,EAAOhE,QAAS,SAAC4G,GAAD,OAAO0sB,EAASh3B,EAAIhI,QAC9CgI,EAAIhI,YAWrB,IAAMgJ,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAiB1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAIT84B,EAAUr5B,IAAOO,IAAV,KAgBP+4B,EAASt5B,IAAOO,IAAV,KAGD,qBAAGL,MAAkBqD,MAAMnD,SAChB,qBAAGF,MAAkBqD,MAAMlD,mBAK3CsR,EAAQ3R,IAAOuD,MAAV,KAMW,qBAAGrD,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,QAIxBi5B,I,gHC7JOE,EAInB,WAAYr/B,EAAcqI,EAAcmB,GAAgB,yBAHxDxJ,UAGuD,OAFvDqI,UAEuD,OADvDmB,WACuD,EACrDjJ,KAAKP,KAAOA,EACZO,KAAK8H,KAAOA,EACZ9H,KAAKiJ,MAAQA,GAIV,SAASvI,EAAQR,GACtB,QAAYE,IAARF,EAAmB,CACrB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDyI,OAAyB9H,IAAbF,EAAI4H,MAAyC,iBAAZ5H,EAAI4H,KACjDyB,OAA2BnJ,IAAdF,EAAI+I,OAA2C,iBAAb/I,EAAI+I,MACzD,OAAO/I,GAAOC,GAAa+H,GAAaqB,EAExC,OAAO,I,2nDCWIwgB,IAhBI,SAAC,GAAyD,IAAvDziB,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAOnC,EAAwC,EAAxCA,KAAMkD,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SACnD,OACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACGtD,EAAO,kBAACD,EAAD,CAAMC,KAAMA,EAAMkD,UAAWA,IAAgB,GADvD,IAC4Df,GAE5D,kBAAC2P,EAAD,CACEvX,KAAK,WACLo/B,eAAgBz3B,EAChBiB,SAAU,SAACwJ,GAAD,OAAOxJ,EAASwJ,EAAEoF,OAAO6nB,YAErC,kBAACC,EAAD,QAON,IAAMx2B,EAAQlD,IAAOgC,MAAV,KACA,qBAAG9B,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAiB1CT,EAAOI,YAAOW,IAAPX,CAAH,KAMC,qBAAGE,MAAkBM,KAAKC,aAG/B0C,EAAYnD,IAAOO,IAAV,KAITm5B,EAAY15B,IAAOO,IAAV,KAQO,qBAAGL,MAAkBqD,MAAMlD,mBACtC,qBAAGH,MAAkBqD,MAAMnD,SAsBhCuR,EAAQ3R,IAAOuD,MAAV,IASKm2B,GACQ,qBAAGx5B,MAAkBM,KAAKC,aACrC,qBAAGP,MAAkBsD,QAAQpD,QAG1Bs5B,I,wGCxFHvlB,EAAb,kDAsBE,aAAe,IAAD,8BACZ,cAAM,cAtBRwlB,YAqBc,IApBdX,WAoBc,IAnBdY,WAmBc,IAlBdzvB,cAkBc,IAjBd0vB,WAiBc,IAhBd/L,cAgBc,IAfdzmB,aAec,IAddqe,gBAcc,IAbdoU,WAac,IAZdC,gBAYc,IAXdC,WAWc,IAVdx3B,gBAUc,IATdy3B,kBASc,IARdC,eAQc,IAPdC,YAOc,IANd7zB,UAMc,IALd8zB,YAKc,IAJdrzB,eAIc,IAHdC,YAGc,IAFdqzB,YAEc,EAEZ,EAAK9P,QAAQ,GAAG+P,OAAO,CACrBX,OACE,sGAEJ,EAAKpP,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MAAO,mEAET,EAAKzO,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MAAO,iEACPY,MAAO,kFAET,EAAKrP,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MAAO,iEACPY,MAAO,gFACPzvB,SACE,qOAEJ,EAAKogB,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MAAO,iEACPY,MAAO,gFACPzvB,SACE,mOACF2vB,MACE,+9BAEJ,EAAKvP,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MAAO,iEACPY,MAAO,gFACPzvB,SACE,mOACF2vB,MACE,69BACFS,aAAc,oCACdC,eAAgB,4BAChBC,YACE,8FAEJ,EAAKlQ,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iSAEJ,EAAKvP,QAAQ,GAAG+P,OAAO,CACrBC,aAAc,KACdC,eAAgB,KAChBC,YAAa,KAEbd,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,+RACFC,WAAY,kCAEd,EAAKxP,QAAQ,GAAG+P,OAAO,CACrBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,+RACFC,WAAY,gCACZC,MAAO,yCAET,EAAKzP,QAAQ,IAAI+P,OAAO,CACtBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,+RACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,2CAEd,EAAK+nB,QAAQ,IAAI+P,OAAO,CACtBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,2CAEd,EAAK+nB,QAAQ,IAAI+P,OAAO,CACtBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,uCAEhB,EAAK1P,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,uCAEhB,EAAK1P,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,yFAEJ,EAAK3P,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,uFACFC,OACE,2FACF7zB,KAAM,gEACN8zB,OAAQ,4EACRrzB,UAAW,iEACXC,OAAQ,uEAEV,EAAKujB,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,4FACFC,OACE,2FACF7zB,KAAM,gEACN8zB,OAAQ,4EACRrzB,UAAW,iEACXC,OAAQ,uEAEV,EAAKujB,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACR7zB,KAAM,gEACN8zB,OAAQ,iEACRrzB,UACE,qFACFC,OAAQ,4DAEV,EAAKujB,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACR7zB,KAAM,gEACN8zB,OAAQ,qEACRrzB,UAAW,yDACXC,OAAQ,mDACRqzB,OAAQ,mFAEV,EAAK9P,QAAQ,IAAI+P,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QAAS,qFACTqe,WAAY,gDACZoU,MACE,iTACFC,WACE,qFACFC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACR7zB,KAAM,gEACN8zB,OAAQ,qEACRrzB,UAAW,yDACXC,OAAQ,mDACRqzB,OAAQ,mFAEV,EAAK9P,QAAQ,IACV+P,OAAO,CACNX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFzvB,SACE,mOACF0vB,MACE,+FACF/L,SAAU,6DACVzmB,QACE,qFACFqe,WAAY,gDACZoU,MACE,2TACFC,WACE,qFACFC,MAAO,uCACPx3B,WAAY,yCACZy3B,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACR7zB,KAAM,gEACN8zB,OAAQ,qEACRrzB,UAAW,yDACXC,OAAQ,mDACRqzB,OACE,0FAEHK,SAAQ,SAACC,GACR,OAAOA,EAAMb,MAAMc,eAAeC,QAAO,SAAC1xB,QAClBtO,IAAlBsO,EAAKG,WAAwBH,EAAI,2BAAQA,GAAR,IAAcG,SAAU,YAInE,EAAKqwB,OAAS,EAAKrlB,MAAM,UACzB,EAAK0kB,MAAQ,EAAK1kB,MAAM,SACxB,EAAKslB,MAAQ,EAAKtlB,MAAM,SACxB,EAAKnK,SAAW,EAAKmK,MAAM,YAC3B,EAAKulB,MAAQ,EAAKvlB,MAAM,SACxB,EAAKwZ,SAAW,EAAKxZ,MAAM,YAC3B,EAAKjN,QAAU,EAAKiN,MAAM,WAC1B,EAAKoR,WAAa,EAAKpR,MAAM,cAC7B,EAAKwlB,MAAQ,EAAKxlB,MAAM,SACxB,EAAKylB,WAAa,EAAKzlB,MAAM,cAC7B,EAAK0lB,MAAQ,EAAK1lB,MAAM,SACxB,EAAK9R,WAAa,EAAK8R,MAAM,cAC7B,EAAK2lB,aAAe,EAAK3lB,MAAM,gBAC/B,EAAK4lB,UAAY,EAAK5lB,MAAM,aAC5B,EAAK6lB,OAAS,EAAK7lB,MAAM,UACzB,EAAKhO,KAAO,EAAKgO,MAAM,QACvB,EAAK8lB,OAAS,EAAK9lB,MAAM,UACzB,EAAKvN,UAAY,EAAKuN,MAAM,aAC5B,EAAKtN,OAAS,EAAKsN,MAAM,UACzB,EAAK+lB,OAAS,EAAK/lB,MAAM,UAhab,EAtBhB,U,OAAmCwmB,I,wHCnBd3F,EAcnB,WACEj7B,EACAC,EACAE,EACAiB,EACAhB,EACAgzB,EACA7xB,EACAF,EACAK,EACAW,EACAhC,EACAC,GACC,yBA1BHL,QA0BE,OAzBFD,UAyBE,OAxBFI,mBAwBE,OAvBFgzB,SAuBE,OAtBF7xB,eAsBE,OArBFF,UAqBE,OApBFK,WAoBE,OAnBFW,UAmBE,OAlBFhC,YAkBE,OAjBFC,aAiBE,OAhBFH,cAgBE,OAfFiB,SAeE,EACAb,KAAKP,KAAOA,GAAQ,GACpBO,KAAKN,GAAKA,EACVM,KAAKJ,SAAWA,GAAY,GAC5BI,KAAKa,IAAMA,GAAO,GAClBb,KAAKH,cAAgBA,GAAiB,GACtCG,KAAK6yB,IAAMA,GAAO,GAClB7yB,KAAKgB,UAAYA,GAAa,GAC9BhB,KAAKc,KAAOA,GAAQ,GACpBd,KAAKmB,MAAQA,GAAS,GACtBnB,KAAK8B,KAAOA,GAAQ,GACpB9B,KAAKF,OAASA,GAAU,GACxBE,KAAKD,QAAUA,GAAW,IAIvB,SAASugC,EAAOpgC,GACrB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjD8C,OAAuBnC,IAAZF,EAAIW,KAAuC,iBAAXX,EAAIW,IAC/CP,OACkBF,IAAtBF,EAAIL,eAA2D,iBAArBK,EAAIL,cAC1C0gC,OAAuBngC,IAAZF,EAAI2yB,KAAuC,iBAAX3yB,EAAI2yB,IAC/CnwB,OACctC,IAAlBF,EAAIc,WAAmD,iBAAjBd,EAAIc,UACtCwB,OAAyBpC,IAAbF,EAAIY,MAAyC,iBAAZZ,EAAIY,KACjD+B,OAA2BzC,IAAdF,EAAIiB,OAA2C,iBAAbjB,EAAIiB,MACnDqC,OAAyBpD,IAAbF,EAAI4B,MAAyC,iBAAZ5B,EAAI4B,KACjDvB,OACWH,IAAfF,EAAIJ,QACJU,MAAMC,QAAQP,EAAIJ,SAClBY,YAAQR,EAAIJ,OAAO,IACfa,OACYP,IAAhBF,EAAIH,SAA+C,iBAAfG,EAAIH,QAC1C,OACEG,GACAC,GACAoC,GACAjC,GACAigC,GACA79B,GACAF,GACAK,GACAW,GACAjD,GACAI","file":"static/js/12.3d2dd987.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const dimensionCheck =\n    arg.dimension !== undefined &&\n    typeof arg.dimension.height == \"number\" &&\n    typeof arg.dimension.width == \"number\";\n  const markersCheck = arg.markers !== undefined && Array.isArray(arg.markers);\n  return arg && nameCheck && sourcesCheck && mapCheck && dimensionCheck && markersCheck;\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logsCheck = arg.logs !== undefined && Array.isArray(arg.logs);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class World implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  locations: string[];\n  events: string[];\n  map: string;\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    description?: string,\n    locations?: string[],\n    events?: string[],\n    map?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isWorld(arg: any): arg is World {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const eventCheck = arg.events !== undefined && Array.isArray(arg.events);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return (\n    arg && nameCheck && descriptionCheck && locationCheck && eventCheck && sourcesCheck && mapCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  notes: Note[];\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    notes?: Note[],\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.notes = notes || [];\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    notesCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  char: Char | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    char?: Char | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.char = char;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return arg && nameCheck && picCheck && descriptionCheck && traitsCheck && sourcesCheck;\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\n//quests:\"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\nexport default class Quest implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  rewards: string;\n  followQuest: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    rewards?: string,\n    followQuest?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.rewards = rewards || \"\";\n    this.followQuest = followQuest || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isQuest(arg: any): arg is Quest {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const followQuestCheck = arg.followQuest !== undefined && typeof arg.followQuest == \"string\";\n  const rewardsCheck = arg.rewards !== undefined && typeof arg.rewards == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    followQuestCheck &&\n    rewardsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findQuestFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Event implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  date: string;\n  sources: string;\n\n  constructor(id?: number, name?: string, description?: string, date?: string, sources?: string) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.date = date || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isEvent(arg: any): arg is Event {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const dateCheck = arg.date !== undefined && typeof arg.date == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return arg && nameCheck && descriptionCheck && dateCheck && sourcesCheck && mapCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Location from \"../../../data/world/Location\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationTile = ({ location }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <Tile to={\"/location-detail/id/\" + location.id}>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{location.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{location.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {location.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default LocationTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Event from \"../../../data/world/Event\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventTile = ({ event }: $Props) => {\n  return (\n    <Tile to={\"/event-detail/id/\" + event.id}>\n      <Name>\n        <b>{event.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faCalendarAlt} />\n          {event.date}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {event.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default EventTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityPrerequsite: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 237;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Location from \"../../../../data/world/Location\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport Map from \"../../../general_elements/map/Map\";\n\nimport { faLink, faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\ninterface $Props {\n  location: Location;\n  onEdit: (value: Location) => void;\n}\n\nconst LocationEditView = ({ location, onEdit }: $Props) => {\n  useEffect(() => {\n    if (location.map !== undefined && location.map !== \"\") {\n      let url = require(\"url\");\n      let http = require(\"http\");\n      let sizeOf = require(\"image-size\");\n\n      let options = url.parse(location.map);\n      http.get(options, function (response: any) {\n        let chunks: any = [];\n        response\n          .on(\"data\", function (chunk: any) {\n            chunks.push(chunk);\n          })\n          .on(\"end\", function () {\n            let buffer = Buffer.concat(chunks);\n            let size = sizeOf(buffer);\n            onEdit({ ...location, dimension: { height: size.height, width: size.width } });\n          });\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.map]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={location.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...location, name: name })}\n        />\n\n        <StringField\n          value={location.map}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...location, map: pic })}\n        />\n        <NumberField\n          value={location.dimension.width}\n          label=\"Map width\"\n          onChange={(width) =>\n            onEdit({ ...location, dimension: { ...location.dimension, width: width } })\n          }\n        />\n        <NumberField\n          value={location.dimension.height}\n          label=\"Map height\"\n          onChange={(height) =>\n            onEdit({ ...location, dimension: { ...location.dimension, height: height } })\n          }\n        />\n        <StringField\n          value={location.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...location, sources: sources })}\n        />\n      </View>\n      <Map editable={true} location={location} onEdit={onEdit} />\n    </CenterWrapper>\n  );\n};\n\nexport default LocationEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      let newTabs = [\"General\"];\n      if (buildCampaign.characters.length > 0) newTabs.push(\"Players\");\n      if (buildCampaign.npcs.length > 0) newTabs.push(\"Npcs\");\n      setTabs([...newTabs, \"Notes\", \"Log\", \"Graph\", \"Map\"]);\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && loadedCampaign.characters && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && loadedCampaign.npcs && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClasseEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClasseView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [hardSubselect, setHardSubselect] = useState<boolean>(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      hardSubselect\n        ? [\n            { fieldName: \"type\", value: classe.name, sort: 0 },\n            { fieldName: \"sources\", value: classe.sources, sort: 0 },\n          ]\n        : [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe, hardSubselect]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <CheckField value={hardSubselect} label=\"Hard Select\" onChange={setHardSubselect} />\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclasse-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink key={index} onClick={() => history.push(link)}>\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={classe.featureSets[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(classe.featureSets[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Event from \"../../../../data/world/Event\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n  onEdit: (value: Event) => void;\n}\n\nconst EventEditView = ({ event, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={event.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...event, name: name })}\n        />\n        <StringField\n          value={event.date}\n          label=\"Date\"\n          onChange={(date) => onEdit({ ...event, date: date })}\n        />\n        <StringField\n          value={event.sources}\n          label=\"Sources\"\n          onChange={(sources) => onEdit({ ...event, sources: sources })}\n        />\n        <TextField\n          value={event.description}\n          label=\"Description\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...event, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Event from \"../../../../data/world/Event\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventView = ({ event }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{event.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCalendarAlt} />\n            {event.date}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {event.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <PropTitle>Description</PropTitle>\n          <FormatedText text={event.description} />\n        </Text>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${event.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={event} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport Note from \"../../../../data/campaign/Note\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Notes\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {group.notes !== undefined &&\n            group.notes.map((note: Note, index: number) => {\n              return (\n                <Container key={index}>\n                  <StringField\n                    value={note.title}\n                    label=\"Title\"\n                    onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                  <TextField\n                    value={note.content}\n                    label=\"Feature Text\"\n                    onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                  />\n                  <StringField\n                    value={note.tags}\n                    label=\"Tags\"\n                    onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                  />\n                </Container>\n              );\n            })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monsters/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\nimport Note from \"../../../../data/campaign/Note\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport NoteSearchBar from \"../../campaigns/NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.group.notes.length > 0) newTabs.push(\"Notes\");\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedGroup.group.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../data/Item\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../data/Item\";\nimport Gear from \"../../../../data/Gear\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${item.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Location from \"../../../../data/world/Location\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport Map from \"../../../general_elements/map/Map\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\nimport \"leaflet/dist/leaflet.css\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationView = ({ location }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{location.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{location.name}</b>\n          </Name>\n        )}\n      </View>\n\n      <Map editable={false} location={location} />\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${location.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={location} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default LocationView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Npc from \"../../../../data/campaign/Npc\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n  onEdit: (value: Npc) => void;\n}\n\nconst NpcEditView = ({ npc, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={npc.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...npc, name: name })}\n        />\n        <StringField\n          value={npc.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...npc, pic: pic })}\n        />\n        <StringField\n          value={npc.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...npc, sources: sources })}\n        />\n        <TextField\n          value={npc.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...npc, description: description })}\n        />\n        <TextField\n          value={npc.traits}\n          label=\"Traits\"\n          icon={faBookOpen}\n          onChange={(traits) => onEdit({ ...npc, traits: traits })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcView = ({ npc }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={npc.description} />\n          </Text>\n          <Text>\n            <PropTitle>Traits: </PropTitle>\n            <FormatedText text={npc.traits} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${npc.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={npc} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Quest from \"../../../../data/campaign/Quest\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n  onEdit: (value: Quest) => void;\n}\n\nconst QuestEditView = ({ quest, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={quest.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...quest, name: name })}\n        />\n\n        <StringField\n          value={quest.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...quest, pic: pic })}\n        />\n        <StringField\n          value={quest.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...quest, sources: sources })}\n        />\n        <TextField\n          value={quest.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...quest, description: description })}\n        />\n        <TextField\n          value={quest.rewards}\n          label=\"Rewards\"\n          height={\"50px\"}\n          icon={faBookOpen}\n          onChange={(rewards) => onEdit({ ...quest, rewards: rewards })}\n        />\n        <TextField\n          value={quest.followQuest}\n          label=\"Followup\"\n          height={\"30px\"}\n          icon={faBookOpen}\n          onChange={(newQuest) => onEdit({ ...quest, followQuest: newQuest })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestView = ({ quest }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={quest.description} />\n          </Text>\n          <Text>\n            <FormatedText text={quest.rewards} />\n          </Text>\n          <Prop>\n            <FormatedText text={quest.followQuest} />\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${quest.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={quest} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      <View>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          );\n        })}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityPrerequsite: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityPrerequsite: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityPrerequsite: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) => onSelectionChange(selection, \"entityName\", name)}\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) => onSelectionChange(selection, \"level\", level)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeSelection(selection)} />\n                <SelectionText\n                  value={selection.entityPrerequsite}\n                  label=\"Prerequsite\"\n                  onChange={(text) => onSelectionChange(selection, \"entityPrerequsite\", text)}\n                />\n                <SelectionText\n                  value={selection.entityText}\n                  label=\"Text\"\n                  onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n                />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityPrerequsite: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                {trait.entityPrerequsite !== \"\" && (\n                  <Prop>\n                    <PropTitle>Prerequisite:</PropTitle>\n                    {trait.entityPrerequsite}\n                  </Prop>\n                )}\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../data/Spell\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport { faLink, faPlus, faTrash, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclasse: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclasseEditView = ({ subclasse, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const onBoniChange = (oldFeature: FeatureSet, oldBoni: Boni, field: string, value: string) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclasse, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclasse.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(0, featureSet.spellslots.length - 1),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclasse.features.length - 1 >= 0) {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclasse.features[subclasse.features.length - 1].bonis,\n            spellslots: subclasse.features[subclasse.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclasse.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclasse, name: name })}\n        />\n        <StringField\n          value={subclasse.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclasse, type: type })}\n        />\n        <StringField\n          value={subclasse.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclasse, sources: sources })}\n        />\n      </SubclassView>\n      {subclasse.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) => onFeatureSetChange(featureSet, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeFeatureSet(featureSet)} />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) => onSpellslotChange(featureSet, spellslots)}\n              />\n              <IconButton icon={faMinus} onClick={() => removeSpellslot(featureSet)} />\n              <IconButton icon={faPlus} onClick={() => addNewSpellslot(featureSet)} />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) => onBoniChange(featureSet, boni, \"name\", name)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeBoni(boni)} />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) => onBoniChange(featureSet, boni, \"value\", value)}\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) => onFeatureChange(featureSet, feature, \"name\", name)}\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) => onFeatureChange(featureSet, feature, \"type\", type)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeFeature(feature)} />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) => onFeatureChange(featureSet, feature, \"text\", text)}\n                      />\n                      {feature.selections &&\n                        feature.selections.map((selection: string, index: number) => {\n                          return (\n                            <FeatureContainer key={index}>\n                              <EnumField\n                                options={selections}\n                                value={{ value: selection, label: selection }}\n                                label=\"Name\"\n                                onChange={(name) =>\n                                  onSelectionChange(featureSet, feature, selection, name)\n                                }\n                              />\n                              <IconButton\n                                icon={faTrash}\n                                onClick={() => removeSelection(selection)}\n                              />\n                            </FeatureContainer>\n                          );\n                        })}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton text={\"Add new Level\"} icon={faPlus} onClick={() => addNewFeatureSet()} />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclasse: Subclass;\n}\n\nconst SubclasseView = ({ subclasse }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    console.log(subclasse);\n  }, [subclasse]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclasse.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclasse.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclasse.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclasse.features !== undefined &&\n          subclasse.features.length !== 0 &&\n          subclasse.features[0].spellslots &&\n          subclasse.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={subclasse.features[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclasse.features[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(subclasse.features[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {subclasse.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclasse.features !== undefined && subclasse.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclasse.features[0].bonis &&\n                      subclasse.features[0].bonis.length > 0 &&\n                      subclasse.features[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclasse.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclasse.features !== undefined &&\n            subclasse.features.map((featureSet) => {\n              return featureSet.features.map((feature, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{feature.name}:</PropTitle>\n                    <FormatedText text={feature.text} />\n                  </Text>\n                );\n              });\n            })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclasse.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclasse} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport World from \"../../../../data/world/World\";\n\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldEditView = ({ world, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeLocation = (oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations\n        .filter((location: string) => location !== oldLocation)\n        .map((location: string) => {\n          return location;\n        });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const addNewLocation = () => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        return location;\n      });\n      newLocationlList.push(\"\");\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const onChangeLocation = (newLocation: string, oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        if (location === oldLocation) {\n          return newLocation;\n        } else {\n          return location;\n        }\n      });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n\n  const removeEvent = (oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events\n        .filter((event: string) => event !== oldEvent)\n        .map((event: string) => {\n          return event;\n        });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const addNewEvent = () => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        return event;\n      });\n      newEventlList.push(\"\");\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const onChangeEvent = (newEvent: string, oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        if (event === oldEvent) {\n          return newEvent;\n        } else {\n          return event;\n        }\n      });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={world.name}\n            label=\"World Name\"\n            onChange={(name) => onEdit({ ...world, name: name })}\n          />\n          <StringField\n            value={world.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...world, sources: sources })}\n          />\n          <TextField\n            value={world.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...world, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Locations\" && (\n        <>\n          {world.locations.map((location: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"locations\"}\n                  value={location}\n                  label=\"Location\"\n                  onChange={(newLocation) => onChangeLocation(newLocation, location)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLocation(location)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Location\"} icon={faPlus} onClick={() => addNewLocation()} />\n        </>\n      )}\n      {activeTab === \"Events\" && (\n        <>\n          {world.events.map((event: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"events\"}\n                  value={event}\n                  label=\"Event\"\n                  onChange={(newEvent) => onChangeEvent(newEvent, event)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEvent(event)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Event\"} icon={faPlus} onClick={() => addNewEvent()} />\n        </>\n      )}\n      {activeTab === \"World Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={world.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...world, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default WorldEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Location from \"./Location\";\nimport Event from \"./Event\";\nimport World from \"./World\";\n\nexport default class BuildWorld {\n  world: World;\n  locations: Location[];\n  events: Event[];\n  map: Location;\n\n  constructor(world?: World, locations?: Location[], events?: Event[], map?: Location) {\n    this.world = world || new World();\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildWorld from \"../data/world/BuildWorld\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildWorld = async (world: World): Promise<BuildWorld> => {\n  console.time(\"t\");\n  let events: Event[];\n  let locations: Location[];\n  let map: Location;\n\n  console.time(\"load\");\n  let eventList: Promise<Event>[] = [];\n  let locationList: Promise<Location>[] = [];\n\n  world.events.forEach((event: string) => {\n    eventList.push(recivePromiseByAttribute(\"events\", \"name\", event));\n  });\n  world.locations.forEach((location: string) => {\n    locationList.push(recivePromiseByAttribute(\"locations\", \"name\", location));\n  });\n  events = await Promise.all(eventList);\n  locations = await Promise.all(locationList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", world.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildWorld(world, locations, events, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport World from \"../../../../data/world/World\";\nimport Location from \"../../../../data/world/Location\";\nimport Event from \"../../../../data/world/Event\";\nimport BuildWorld from \"../../../../data/world/BuildWorld\";\nimport { buildWorld } from \"../../../../services/WorldService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport LocationTile from \"../../locations/LocationTile\";\nimport EventTile from \"../../events/EventTile\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldView = ({ world, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedWorld, setLoadedWorld] = useState<BuildWorld>(new BuildWorld());\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  useEffect(() => {\n    buildWorld(world).then((buildWorld) => {\n      setLoadedWorld(buildWorld);\n      setLoading(false);\n    });\n  }, [world, setLoadedWorld]);\n\n  const getPicture = useCallback(() => {\n    if (loadedWorld !== undefined) {\n      if (loadedWorld.map.map === \"\" || loadedWorld.map.map === null) {\n        return \"\";\n      }\n      return loadedWorld.map.map;\n    }\n    return \"\";\n  }, [loadedWorld]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedWorld && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedWorld.world.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedWorld.world.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedWorld.world.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedWorld.world.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Locations\" && (\n            <PropWrapper>\n              {loadedWorld.locations.map((location: Location, index: number) => {\n                return <LocationTile location={location} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Events\" && (\n            <PropWrapper>\n              {loadedWorld.events\n                .sort((a, b) => a.date.localeCompare(b.date))\n                .map((event: Event, index: number) => {\n                  return <EventTile event={event} key={index} />;\n                })}\n            </PropWrapper>\n          )}\n          {activeTab === \"World Map\" && <Map editable={false} location={loadedWorld.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WorldView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport CampaignEditView from \"../../entities/campaigns/details/CampaignEditView\";\nimport CampaignView from \"../../entities/campaigns/details/CampaignView\";\nimport ClasseEditView from \"../../entities/classes/details/ClasseEditView\";\nimport ClasseView from \"../../entities/classes/details/ClasseView\";\nimport EventEditView from \"../../entities/events/details/EventEditView\";\nimport EventView from \"../../entities/events/details/EventView\";\nimport GearEditView from \"../../entities/gear/details/GearEditView\";\nimport GearView from \"../../entities/gear/details/GearView\";\nimport GroupEditView from \"../../entities/groups/details/GroupEditView\";\nimport GroupView from \"../../entities/groups/details/GroupView\";\nimport ItemEditView from \"../../entities/items/details/ItemEditView\";\nimport ItemView from \"../../entities/items/details/ItemView\";\nimport BookEditView from \"../../entities/library/details/BookEditView\";\nimport BookView from \"../../entities/library/details/BookView\";\nimport LocationEditView from \"../../entities/locations/details/LocationEditView\";\nimport LocationView from \"../../entities/locations/details/LocationView\";\nimport MonsterEditView from \"../../entities/monsters/details/MonsterEditView\";\nimport MonsterView from \"../../entities/monsters/details/MonsterView\";\nimport NpcEditView from \"../../entities/npcs/details/NpcEditView\";\nimport NpcView from \"../../entities/npcs/details/NpcView\";\nimport QuestEditView from \"../../entities/quests/details/QuestEditView\";\nimport QuestView from \"../../entities/quests/details/QuestView\";\nimport RaceEditView from \"../../entities/races/details/RaceEditView\";\nimport RaceView from \"../../entities/races/details/RaceView\";\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport SelectionEditView from \"../../entities/selections/details/SelectionEditView\";\nimport SelectionView from \"../../entities/selections/details/SelectionView\";\nimport SpellEditView from \"../../entities/spells/details/SpellEditView\";\nimport SpellView from \"../../entities/spells/details/SpellView\";\nimport SubclasseEditView from \"../../entities/subclasses/details/SubclasseEditView\";\nimport SubclasseView from \"../../entities/subclasses/details/SubclasseView\";\nimport SubraceEditView from \"../../entities/subraces/details/SubraceEditView\";\nimport SubraceView from \"../../entities/subraces/details/SubraceView\";\nimport WorldEditView from \"../../entities/worlds/details/WorldEditView\";\nimport WorldView from \"../../entities/worlds/details/WorldView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  const views = {\n    CampaignView: CampaignView,\n    CampaignEditView: CampaignEditView,\n    ClasseView: ClasseView,\n    ClasseEditView: ClasseEditView,\n    EventView: EventView,\n    EventEditView: EventEditView,\n    GearView: GearView,\n    GearEditView: GearEditView,\n    GroupView: GroupView,\n    GroupEditView: GroupEditView,\n    ItemView: ItemView,\n    ItemEditView: ItemEditView,\n    BookView: BookView,\n    BookEditView: BookEditView,\n    LocationView: LocationView,\n    LocationEditView: LocationEditView,\n    MonsterView: MonsterView,\n    MonsterEditView: MonsterEditView,\n    NpcView: NpcView,\n    NpcEditView: NpcEditView,\n    QuestView: QuestView,\n    QuestEditView: QuestEditView,\n    RaceView: RaceView,\n    RaceEditView: RaceEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n    SelectionView: SelectionView,\n    SelectionEditView: SelectionEditView,\n    SpellView: SpellView,\n    SpellEditView: SpellEditView,\n    SubclasseView: SubclasseView,\n    SubclasseEditView: SubclasseEditView,\n    SubraceView: SubraceView,\n    SubraceEditView: SubraceEditView,\n    WorldView: WorldView,\n    WorldEditView: WorldEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\nimport Book from \"../../../data/Book\";\nimport Group from \"../../../data/campaign/Group\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport Gear from \"../../../data/Gear\";\nimport Item from \"../../../data/Item\";\nimport Monster from \"../../../data/Monster\";\nimport Race from \"../../../data/races/Race\";\nimport Subrace from \"../../../data/races/Subrace\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport Spell from \"../../../data/Spell\";\nimport World from \"../../../data/world/World\";\nimport Class from \"../../../data/classes/Class\";\nimport Subclass from \"../../../data/classes/Subclass\";\nimport Event from \"../../../data/world/Event\";\nimport Selection from \"../../../data/Selection\";\nimport Location from \"../../../data/world/Location\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setEntityName(name);\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  const entities = {\n    campaign: new Campaign(0, match.params.name),\n    classe: new Class(0, match.params.name),\n    event: new Event(0, match.params.name),\n    gear: new Gear(0, match.params.name),\n    group: new Group(0, match.params.name),\n    item: new Item(0, match.params.name),\n    book: new Book(0, match.params.name),\n    location: new Location(0, match.params.name),\n    monster: new Monster(0, match.params.name),\n    npc: new Npc(0, match.params.name),\n    quest: new Quest(0, match.params.name),\n    race: new Race(match.params.name),\n    randomTable: new RandomTable(0, match.params.name),\n    selection: new Selection(0, match.params.name),\n    spell: new Spell(match.params.name),\n    subclasse: new Subclass(0, match.params.name),\n    subrace: new Subrace(match.params.name),\n    world: new World(0, match.params.name),\n  };\n\n  const createNewEntity = () => {\n    let newEntity: IEntity = entities[entityName];\n    delete newEntity.id;\n    createNewWithId(entityName + \"s\", newEntity, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n              const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(19).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters:\n        \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(20)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups:\n          \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n      .upgrade((trans: any) => {\n        return trans.chars.toCollection().modify((char: Char) => {\n          if (char.campaign === undefined) char = { ...char, campaign: \"\" };\n        });\n      });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n"],"sourceRoot":""}