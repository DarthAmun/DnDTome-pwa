{"version":3,"sources":["components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Services/OptionService.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Loading.tsx","components/Options/Options.tsx","components/Entities/Spells/SpellTile.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/TextButton.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassTile.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","buttons","color","backgroundColor","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","id","result","finally","close","remove","delete","reciveAll","toArray","array","reciveByAttribute","name","where","equalsIgnoreCase","reciveAllPromise","a","recivePromiseByAttribute","reciveAllFiltered","filters","filter","obj","test","forEach","push","fieldName","toLowerCase","includes","Array","arrayTest","filterPart","val","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","saveNew","entity","filename","put","prom","createNewWithId","reciveCount","count","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","isArray","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","scanImportFileTest","json","file","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","errors","item","gear","spell","monster","class","subclass","JSON","stringify","failedObject","Errors","exportAllFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","tableList","results","list","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faMeteor","faDragon","faIdCard","faCog","primaryHover","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","map","child","index","Tab","key","e","FileField","transform","Field","LabelText","Icon","Input","files","FontAwesomeIcon","IconButton","disabled","SimpleButton","DisabledSimpleButton","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","reload","isReload","loading","isLoading","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","triggerImportFiles","fileList","from","i","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","max","setTimeout","triggerDeleteAll","clear","deleteAll","Message","OptionSection","SelectionTitle","faFileImport","SectionRow","SectionText","faFileExport","tab","General","ExternalLink","rel","faPatreon","faDiscord","OptionTab","faTrashAlt","SpellTile","formatTime","useCallback","split","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","trim","getPicture","Tile","fallback","School","Flag","Level","ImageName","PropWrapper","Prop","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","WideProp","faUser","faLink","Link","props","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","isMulti","classNamePrefix","Select","StringField","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setName","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","newSpell","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","slice","filterArray","SpellContainer","dataLength","next","s","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","state","action","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","equals","first","FormatedText","formatedText","setFormatedText","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","span","th","td","SpellView","CenterWrapper","View","Text","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","SpellDetail","editMode","setMode","spellObj","editSpell","unsavedChanges","setUnsavedChanges","TopBar","faArrowLeft","goBack","EditToggle","mode","ToggleLeft","ToggleRight","faExclamationTriangle","updateSpell","faSave","spellId","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCoins","faWeightHanging","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","gearId","NameToGear","IdToGear","GearTile","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterTile","isLegendary","Type","CR","faRunning","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","newMonster","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","PropTitle","faShieldAlt","src","img","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","monsterId","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","trait","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","field","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","raceId","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","subraceId","NameToSubrace","IdToSubrace","RaceTile","ImgContainer","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","hasAttunment","Rarity","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","itemId","NameToItem","IdToItem","ItemTile","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","newItem","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","TextButton","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","classeId","NameToClass","IdToClass","ClassTile","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","subclassId","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","char","deathSaves","setDeathSaves","prof","setProf","calcLevel","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","classSet","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","sort","f1","f2","b","baseitem","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","charId","NameToChar","IdToChar","CharTile","PropRowWrapper","RowProp","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","render","getElementById","URL","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c1034ea.chunk.js","sourcesContent":["interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    }\n  }\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size\n    }\n  }\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n  }\n}\n\n//Saves = strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf\n//Skills =  acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf,\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).toArray();\n      return array;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .filter((obj) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          callback(data);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: string;\n  speed: string;\n  cr: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: string,\n    speed?: string,\n    cr?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || \"\";\n    this.speed = speed || \"\";\n    this.cr = cr || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"string\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"string\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor();\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor();\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor();\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor();\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves  || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\nimport IEntity from \"../Data/IEntity\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst scanImportFileTest = async (\n  json: any,\n  file: File,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (Array.isArray(json)) {\n    let failCount = 0;\n    let failedObj: string[] = [];\n    let promList: Promise<any>[] = [];\n\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, file.name));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, file.name));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, file.name));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, file.name));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, file.name));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, file.name));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, file.name));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, file.name));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, file.name));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n  \n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMeteor, faCog, faDragon, faIdCard } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      {/* <Link\n        to=\"/encounter\"\n        className={location.pathname === \"/encounter\" ? \"menuItemActiv\" : \"\"}\n      >\n        <img\n          alt=\"\"\n          src={encounterIcon}\n          style={{\n            width: \"20px\",\n            marginTop: \"10px\",\n            marginRight: \"5px\",\n            float: \"left\",\n          }}\n        />\n      </Link> */}\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input onChange={(e) => onChange(e.target.files)} type=\"file\"></Input>\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nconst Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\nimport {\n  importFiles,\n  exportAllFromTable,\n  exportAll,\n} from \"../../Services/OptionService\";\nimport { deleteAll, reciveCount } from \"../../Services/DatabaseService\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileImport,\n  faTrashAlt,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport { LoadingSpinner } from \"../Loading\";\n\nconst Options = () => {\n  const { theme, setTheme } = useTheme();\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \" of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"DnDTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <General>\n          <OptionSection>\n            <SelectionTitle>Want to support me?</SelectionTitle>\n            <ExternalLink\n              href=\"https://www.patreon.com/bePatron?u=25310394\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"patreon\"\n            >\n              <FontAwesomeIcon icon={faPatreon} /> Become a patron\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>\n              Found some bugs? Or have some feedback?\n            </SelectionTitle>\n            <ExternalLink\n              href=\"https://discord.gg/2KB3tzG\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"discord\"\n            >\n              <FontAwesomeIcon icon={faDiscord} /> Join the discord\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Theme</SelectionTitle>\n            <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n          </OptionSection>\n        </General>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Spells?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"spells\", \"DnDTome_spells.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {spellAmount} Spells?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"spells\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Gear?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {gearAmount} Gear?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"gears\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Items?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"items\", \"DnDTome_items.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {itemAmount} Items?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"items\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Monsters?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {monsterAmount} Monsters?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"monsters\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Races\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Races?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"races\", \"DnDTome_races.json\")\n                }\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subraces?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {raceAmount} Races?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"races\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subraceAmount} Subraces?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subraces\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Classes\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Classes?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n                }\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subclasses?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {classAmount} Classes?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"classes\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subclassAmount} Subclasses?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subclasses\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Chars\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Chars?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"chars\", \"DnDTome_chars.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {charAmount} Chars?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"chars\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[]\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      ></Input>\n    </Field>\n  );\n};\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringField\n        value={time}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(time) => setTime(time)}\n      />\n      <StringField\n        value={range}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(range) => setRange(range)}\n      />\n      <StringField\n        value={duration}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(duration) => setDuration(duration)}\n      />\n      <StringField\n        value={components}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(components) => setComponents(components)}\n      />\n      <StringField\n        value={classes}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(classes) => setClasses(classes)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <StringField\n        value={text}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(text) => setText(text)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <SpellContainer\n        dataLength={spells.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {spells!.map((spell: Spell, index: number) => {\n          return <SpellTile key={index} spell={spell}></SpellTile>;\n        })}\n      </SpellContainer>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n      console.time(\"filtered get all\");\n        table\n          .filter((obj: T) => {\n            let test: boolean[] = [];\n            filters.forEach((filter) => {\n              if (typeof filter.value === \"string\") {\n                test.push(\n                  // @ts-ignore\n                  obj[filter.fieldName]\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                );\n              } else if (typeof filter.value === \"number\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (typeof filter.value === \"boolean\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (filter.value instanceof Array) {\n                let arrayTest: boolean = false;\n                filter.value.forEach(\n                  (filterPart: string | boolean | number) => {\n                    if (typeof filterPart === \"string\") {\n                      if (\n                        // @ts-ignore\n                        obj[filter.fieldName]\n                          .toLowerCase()\n                          .includes(filterPart.toLowerCase())\n                      )\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"number\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"boolean\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    }\n                  }\n                );\n                test.push(arrayTest);\n              }\n            });\n\n            let result = true;\n            test.forEach((val) => {\n              if (!val) result = false;\n            });\n            return result;\n          })\n          .sortBy(\"name\")\n          .then((data) => {\n            console.timeEnd(\"filtered get all\");\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellDetail = ({ spell }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = (spellId: number | undefined) => {\n    remove(\"spells\", spellId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj,spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSpell(spellObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearDetail = ({ gear }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = (gearId: number | undefined) => {\n    remove(\"gears\", gearId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteGear(gearObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={cost}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(cost) => setCost(cost)}\n      />\n      <StringField\n        value={weight}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(weight) => setWeight(weight)}\n      />\n      <StringField\n        value={damage}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(damage) => setDamage(damage)}\n      />\n      <StringField\n        value={properties}\n        label=\"Properties\"\n        onChange={(properties) => setProperties(properties)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <GearContainer\n        dataLength={gears.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {gears!.map((gear: Gear, index: number) => {\n          return <GearTile key={index} gear={gear}></GearTile>;\n        })}\n      </GearContainer>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n\n  svg {\n  margin-right: 5px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(\"\");\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField value={cr} label=\"Cr\" onChange={(cr: string) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringField\n        value={alignment}\n        label=\"Alignment\"\n        onChange={(alignment: string) => setAlignment(alignment)}\n      />\n      <StringField\n        value={speed}\n        label=\"Speed\"\n        onChange={(speed: string) => setSpeed(speed)}\n      />\n      <StringField\n        value={skills}\n        label=\"Skills\"\n        onChange={(skills: string) => setSkills(skills)}\n      />\n      <StringField\n        value={senses}\n        label=\"Senses\"\n        onChange={(senses: string) => setSenses(senses)}\n      />\n      <StringField\n        value={lang}\n        label=\"Languages\"\n        onChange={(lang: string) => setLang(lang)}\n      />\n      <StringField\n        value={dmgVulnerabilitie}\n        label=\"Vulnerabilities\"\n        onChange={(dmgVulnerabilitie: string) => setDmgVulnerabilitie(dmgVulnerabilitie)}\n      />\n      <StringField\n        value={dmgResistance}\n        label=\"Resistances\"\n        onChange={(dmgResistance: string) => setDmgResistance(dmgResistance)}\n      />\n      <StringField\n        value={dmgImmunities}\n        label=\"Immunities\"\n        onChange={(dmgImmunities: string) => setDmgImmunities(dmgImmunities)}\n      />\n      <StringField\n        value={conImmunities}\n        label=\"Condition Immunities\"\n        onChange={(conImmunities: string) => setConImmunities(conImmunities)}\n      />\n      <StringField\n        value={ablt}\n        label=\"Abilities\"\n        onChange={(ablt: string) => setAblt(ablt)}\n      />\n      <StringField\n        value={sAblt}\n        label=\"Spezial Abilities\"\n        onChange={(sAblt: string) => setSAblt(sAblt)}\n      />\n      <StringField\n        value={lAblt}\n        label=\"Legendary Abilities\"\n        onChange={(lAblt: string) => setLAblt(lAblt)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources: string) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  \n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <MonsterContainer\n        dataLength={monsters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {monsters!.map((monster: Monster, index: number) => {\n          return <MonsterTile key={index} monster={monster}></MonsterTile>;\n        })}\n      </MonsterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        {monster.ablt && (\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.sAblt && (\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.lAblt && (\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <StringField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterDetail = ({ monster }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = (monsterId: number | undefined) => {\n    remove(\"monsters\", monsterId);\n    history.goBack();\n  };\n  \n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj,monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteMonster(monsterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View>\n            <TraitWrapper key={index}>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceDetail = ({ race }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = (raceId: number | undefined) => {\n    remove(\"races\", raceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj,race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteRace(raceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceDetail = ({ subrace }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = (subraceId: number | undefined) => {\n    remove(\"subraces\", subraceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj,subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubrace(subraceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={abilityScores}\n        label=\"Ability Scores\"\n        onChange={(abilityScores: string) => setAbilityScores(abilityScores)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <RaceContainer\n        dataLength={races.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {races!.map((race: Race, index: number) => {\n          return <RaceTile key={index} race={race}></RaceTile>;\n        })}\n      </RaceContainer>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemDetail = ({ item }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = (itemId: number | undefined) => {\n    remove(\"items\", itemId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj,item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n  \n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteItem(itemObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faLink, faSearch, faRedoAlt, faBook, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ItemContainer\n        dataLength={items.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {items!.map((item: Item, index: number) => {\n          return <ItemTile key={index} item={item}></ItemTile>;\n        })}\n      </ItemContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassDetail = ({ classe }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = (classeId: number | undefined) => {\n    remove(\"classes\", classeId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteClass(classObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses]  = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    \n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ClassContainer\n      dataLength={classes.length}\n      next={fetchMoreData}\n      hasMore={scrollParam.hasMore}\n      loader={<LoadingSpinner />}>\n        {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n      </ClassContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassDetail = ({ subclass }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = (subclassId: number | undefined) => {\n    remove(\"subclasses\", subclassId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj,subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubclass(subclassObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (newItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  },\n  i: number) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharDetail = ({ char }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = (charId: number | undefined) => {\n    remove(\"chars\", charId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar(charObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <CharContainer\n        dataLength={chars.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {chars!.map((char: Char, index: number) => {\n          return <CharTile key={index} char={char}></CharTile>;\n        })}\n      </CharContainer>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (newItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  },\n  i: number) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={CharOverview}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}