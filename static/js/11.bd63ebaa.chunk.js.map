{"version":3,"sources":["data/world/Location.tsx","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","data/world/World.tsx","components/entities/events/EventTile.tsx","components/entities/location/LocationTile.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/entities/worlds/details/WorldEditView.tsx","data/world/BuildWorld.tsx","services/WorldService.tsx","components/entities/worlds/details/WorldView.tsx","components/entities/worlds/details/WorldDetail.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/form_elements/TextField.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx"],"names":["Location","id","name","sources","map","dimension","markers","this","height","width","isLocation","arg","nameCheck","undefined","sourcesCheck","mapCheck","EditDialog","activeElement","onSave","onClose","onDelete","useState","text","label","setLabel","useEffect","Dialog","StringField","value","onChange","TextButton","icon","faTimes","onClick","faSave","newElement","onSaveClick","styled","div","theme","tile","color","main","backgroundColor","boxShadow","Map","location","editable","onEdit","showEditDialog","setEditDialaog","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","useCallback","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","style","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","e","position","latlng","Icon","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","index","Marker","key","Popup","autoPan","minWidth","onOpen","console","log","editMarker","FormatedText","World","description","locations","events","isWorld","descriptionCheck","locationCheck","Array","isArray","eventCheck","EventTile","event","Tile","to","fallback","Name","PropWrapper","WideProp","faCalendarAlt","date","faLink","Link","headerColor","Prop","FontAwesomeIcon","highlight","LocationTile","getPicture","ImageName","Image","pic","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","IconButton","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","button","hoverColor","placeholder","Field","LabelText","Input","type","target","input","WorldEditView","world","activeTab","setTab","CenterWrapper","TabBar","children","tab","View","TextField","faBookOpen","Container","AutoStringField","optionTable","newLocation","oldLocation","newLocationlList","onChangeLocation","faTrash","filter","removeLocation","faPlus","push","addNewLocation","newEvent","oldEvent","newEventlList","onChangeEvent","removeEvent","addNewEvent","newMap","BuildWorld","buildWorld","time","eventList","locationList","forEach","recivePromiseByAttribute","Promise","all","timeEnd","WorldView","loading","setLoading","loadedWorld","setLoadedWorld","then","Loading","Header","Text","PropTitle","sort","localeCompare","span","backgroundColorLink","WorldDetail","isNew","editMode","setMode","worldObj","editWorld","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateWorld","tableName","updateWithCallback","result","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","toString","faExclamationTriangle","worldId","remove","Message","editAndSaveWorld","LinkCheck","entitiyFound","setEntity","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","includes","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","textPart","table","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","useItem","effect","setEffect","reducer","state","data","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equals","first","Back","ToggleLeft","ToggleRight","EditToggle","props","textarea","Bar","child","Tab","isActive","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllPromise","items","o","concat","reciveAll","length","onSearch","searchTerm","newOptions","option","Options","opt","Option"],"mappings":"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","file":"static/js/11.bd63ebaa.chunk.js","sourcesContent":["import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return arg && nameCheck && sourcesCheck && mapCheck;\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class World implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  locations: string[];\n  events: string[];\n  map: string;\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    description?: string,\n    locations?: string[],\n    events?: string[],\n    map?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isWorld(arg: any): arg is World {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const eventCheck = arg.events !== undefined && Array.isArray(arg.events);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return (\n    arg && nameCheck && descriptionCheck && locationCheck && eventCheck && sourcesCheck && mapCheck\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Event from \"../../../data/world/Event\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventTile = ({ event }: $Props) => {\n  return (\n    <Tile to={\"/event-detail/id/\" + event.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{event.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <WideProp>\n            <Icon icon={faCalendarAlt} />\n            {event.date}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {event.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EventTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Location from \"../../../data/world/Location\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationTile = ({ location }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <Tile to={\"/location-detail/id/\" + location.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{location.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{location.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <WideProp>\n            <Icon icon={faLink} />\n            {location.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default LocationTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport World from \"../../../../data/world/World\";\n\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldEditView = ({ world, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeLocation = (oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations\n        .filter((location: string) => location !== oldLocation)\n        .map((location: string) => {\n          return location;\n        });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const addNewLocation = () => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        return location;\n      });\n      newLocationlList.push(\"\");\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const onChangeLocation = (newLocation: string, oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        if (location === oldLocation) {\n          return newLocation;\n        } else {\n          return location;\n        }\n      });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n\n  const removeEvent = (oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events\n        .filter((event: string) => event !== oldEvent)\n        .map((event: string) => {\n          return event;\n        });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const addNewEvent = () => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        return event;\n      });\n      newEventlList.push(\"\");\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const onChangeEvent = (newEvent: string, oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        if (event === oldEvent) {\n          return newEvent;\n        } else {\n          return event;\n        }\n      });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={world.name}\n            label=\"World Name\"\n            onChange={(name) => onEdit({ ...world, name: name })}\n          />\n          <StringField\n            value={world.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...world, sources: sources })}\n          />\n          <TextField\n            value={world.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...world, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Locations\" && (\n        <>\n          {world.locations.map((location: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"locations\"}\n                  value={location}\n                  label=\"Location\"\n                  onChange={(newLocation) => onChangeLocation(newLocation, location)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLocation(location)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Location\"} icon={faPlus} onClick={() => addNewLocation()} />\n        </>\n      )}\n      {activeTab === \"Events\" && (\n        <>\n          {world.events.map((event: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"events\"}\n                  value={event}\n                  label=\"Event\"\n                  onChange={(newEvent) => onChangeEvent(newEvent, event)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEvent(event)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Event\"} icon={faPlus} onClick={() => addNewEvent()} />\n        </>\n      )}\n      {activeTab === \"World Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={world.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...world, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default WorldEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Location from \"./Location\";\nimport Event from \"./Event\";\nimport World from \"./World\";\n\nexport default class BuildWorld {\n  world: World;\n  locations: Location[];\n  events: Event[];\n  map: Location;\n\n  constructor(world?: World, locations?: Location[], events?: Event[], map?: Location) {\n    this.world = world || new World();\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildWorld from \"../data/world/BuildWorld\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildWorld = async (world: World): Promise<BuildWorld> => {\n  console.time(\"t\");\n  let events: Event[];\n  let locations: Location[];\n  let map: Location;\n\n  console.time(\"load\");\n  let eventList: Promise<Event>[] = [];\n  let locationList: Promise<Location>[] = [];\n\n  world.events.forEach((event: string) => {\n    eventList.push(recivePromiseByAttribute(\"events\", \"name\", event));\n  });\n  world.locations.forEach((location: string) => {\n    locationList.push(recivePromiseByAttribute(\"locations\", \"name\", location));\n  });\n  events = await Promise.all(eventList);\n  locations = await Promise.all(locationList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", world.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildWorld(world, locations, events, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport World from \"../../../../data/world/World\";\nimport Location from \"../../../../data/world/Location\";\nimport Event from \"../../../../data/world/Event\";\nimport BuildWorld from \"../../../../data/world/BuildWorld\";\nimport { buildWorld } from \"../../../../services/WorldService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport LocationTile from \"../../location/LocationTile\";\nimport EventTile from \"../../events/EventTile\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldView = ({ world, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedWorld, setLoadedWorld] = useState<BuildWorld>(new BuildWorld());\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  useEffect(() => {\n    buildWorld(world).then((buildWorld) => {\n      setLoadedWorld(buildWorld);\n      setLoading(false);\n    });\n  }, [world, setLoadedWorld]);\n\n  const getPicture = useCallback(() => {\n    if (loadedWorld !== undefined) {\n      if (loadedWorld.map.map === \"\" || loadedWorld.map.map === null) {\n        return \"\";\n      }\n      return loadedWorld.map.map;\n    }\n    return \"\";\n  }, [loadedWorld]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedWorld && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedWorld.world.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedWorld.world.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedWorld.world.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedWorld.world.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Locations\" && (\n            <PropWrapper>\n              {loadedWorld.locations.map((location: Location, index: number) => {\n                return <LocationTile location={location} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Events\" && (\n            <PropWrapper>\n              {loadedWorld.events\n                .sort((a, b) => a.date.localeCompare(b.date))\n                .map((event: Event, index: number) => {\n                  return <EventTile event={event} key={index} />;\n                })}\n            </PropWrapper>\n          )}\n          {activeTab === \"World Map\" && <Map editable={false} location={loadedWorld.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WorldView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport World from \"../../../../data/world/World\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport WorldEditView from \"./WorldEditView\";\nimport WorldView from \"./WorldView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  world: World;\n  isNew: boolean;\n}\n\nconst WorldDetail = ({ world, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [worldObj, editWorld] = useState<World>(world);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteWorld = (worldId: number | undefined) => {\n    remove(\"worlds\", worldId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (worldObj !== world) {\n      setUnsavedChanges(true);\n    }\n  }, [worldObj, world]);\n\n  const updateWorld = (tableName: string, worldObj: World) => {\n    console.log(worldObj);\n    updateWithCallback(tableName, worldObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveWorld = (world: World) => {\n    editWorld(world);\n    updateWorld(\"worlds\", world);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateWorld(\"worlds\", worldObj)} icon={faSave} />\n            <IconButton onClick={() => deleteWorld(worldObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <WorldEditView world={worldObj} onEdit={(value) => editWorld(value)} />\n      ) : (\n        <WorldView world={worldObj} onEdit={(value) => editAndSaveWorld(value)} />\n      )}\n    </>\n  );\n};\n\nexport default WorldDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}