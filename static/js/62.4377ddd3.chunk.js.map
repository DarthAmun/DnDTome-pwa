{"version":3,"sources":["data/races/Subrace.tsx","components/entities/races/details/RaceView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceDetail.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/entities/races/details/link_wrapper/IdToRace.tsx","data/races/Trait.tsx"],"names":["Subrace","name","id","type","filename","abilityScores","traits","sources","this","isSubrace","arg","nameCheck","undefined","typeCheck","abilityScoresCheck","traitsCheck","Array","isArray","isTrait","sourcesCheck","findSubraceFormattError","RaceView","race","useState","send","setSend","subraces","setSubraces","history","useHistory","useEffect","reciveAllFiltered","fieldName","value","sort","results","getPicture","useCallback","pic","CenterWrapper","ImageView","View","Name","PropWrapper","Prop","Text","PropTitle","FormatedText","text","age","alignment","size","speed","lang","length","map","subrace","index","link","SubraceLink","key","onClick","push","CreateButton","newSubrace","createNewWithId","createNewSubrace","icon","faPlusCircle","Icon","faLink","TextButton","faPaperPlane","P2PSender","data","mode","trait","TraitWrapper","TraitName","TraitLevel","level","TraitText","styled","div","theme","tile","color","backgroundColor","main","highlight","span","backgroundColorLink","Link","FontAwesomeIcon","Image","ImageElm","src","Empty","img","button","RaceEditView","onEdit","onTraitChange","oldTrait","field","StringField","label","onChange","ShortTextField","faImage","TraitView","IconButton","faTrash","indexOf","splice","removeTrait","faPlus","NumberField","RaceDetail","isNew","editMode","setMode","raceObj","editRace","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","toString","title","tableName","updateWithCallback","result","setTimeout","updateRace","faSave","Message","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","IdToRace","match","db","MyAppDatabase","useItem","races","params","loading","error","Trait","textCheck","levelCheck"],"mappings":"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","file":"static/js/62.4377ddd3.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View key={index}>\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Race from \"../../../../data/races/Race\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  race: Race;\n  isNew: boolean;\n}\n\nconst RaceDetail = ({ race, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj, race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${race.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"races\", race.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateRace(\"races\", raceObj)} icon={faSave} />\n            <IconButton onClick={() => deleteRace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n"],"sourceRoot":""}