{"version":3,"sources":["components/p2p/P2PSender.tsx","components/general_elements/TabBar.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","services/PeerIdService.tsx","components/form_elements/FileField.tsx","components/general_elements/Dialog.tsx","../node_modules/peerjs/dist sync","../../src/index.tsx","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/SpellsOptions.tsx","components/options/GearsOptions.tsx","components/options/ItemsOptions.tsx","components/options/MonstersOptions.tsx","components/options/RacesOptions.tsx","components/options/ClassesOptions.tsx","components/options/CharsOptions.tsx","components/options/EncountersOptions.tsx","components/options/SelectionsOptions.tsx","data/classes/Boni.tsx","components/form_elements/ImportField.tsx","services/5eToolService.tsx","components/options/OtherImportOptions.tsx","components/options/LocationsOptions.tsx","components/options/CampaignsOptions.tsx","components/options/NpcsOptions.tsx","components/options/QuestsOptions.tsx","components/options/EventsOptions.tsx","components/options/WorldsOptions.tsx","components/options/GroupsOptions.tsx","components/options/DiscordOptions.tsx","components/options/RandomTablesOptions.tsx","components/options/FeatsOptions.tsx","components/options/BackgrounsOptions.tsx","components/options/Options.tsx"],"names":["P2PSender","data","mode","useState","name","setName","peer","setPeer","error","setError","useEffect","undefined","brokerId","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","send","disconnected","destroyed","reconnect","reciveAllPromise","then","results","id","value","label","onChange","Icon","icon","faExclamationCircle","styled","FontAwesomeIcon","theme","main","highlight","TabBar","children","activeTab","Bar","map","child","index","Tab","onClick","e","isActive","div","tile","color","backgroundColor","input","buttons","props","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","abilityImprovs","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","min","max","password","characters","i","length","Math","floor","random","FileField","accept","isMulti","transform","Field","LabelText","Input","target","files","type","multiple","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","DamageDialog","damageText","damageClick","healText","healClick","dmg","setDmg","style","float","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","ProgressBar","alignmentOption","bgColor","completed","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","transitionDuration","transitionTimingFunction","className","containerStyles","fillerStyles","Number","transition","display","alignItems","justifyContent","labelStyles","fontWeight","fontSize","outsideStyles","React.createElement","propTypes","PropTypes.oneOfType","PropTypes.string","PropTypes.number","isRequired","PropTypes.oneOf","PropTypes.bool","defaultProps","scanImportFileTest","json","fileName","callback","a","promList","forEach","obj","isClass","push","saveNew","isSubclass","isRace","isSubrace","isMonster","isSpell","isGear","isItem","isEncounter","isSelection","isCampaign","isQuest","isNpc","isWorld","isLocation","isEvent","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","body","appendChild","click","removeChild","exportAll","gears","races","subraces","subclasses","chars","encounters","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","feats","backgrounds","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","state","setState","connect","Loading","StringField","TextButton","faCheck","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","boxShadow","button","SpellsOptions","amount","triggerDeleteAll","triggerDeleteByAttr","setSend","source","setSource","sourceList","setSourceList","reciveAttributeSelection","result","sources","toString","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","MultipleSelectField","options","faPaperPlane","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","setRaces","raceList","setRaceList","setSubraces","subraceList","setSubraceList","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","setClasses","classList","setClassList","setSubclasses","subclassList","setSubclassList","CharsOptions","EncountersOptions","SelectionsOptions","isReload","triggerRegroupAll","newSelections","selection","sels","filter","ns","selectionOptions","deleteAll","resaveFromList","faUserCog","Boni","isCurrency","ImportModus","replaceTag","clearText","replace","split","trim","startsWith","scaleTextSplit","substring","replaceTags","newText","replaceAll","includes","start","indexOf","end","makeItems","rarity","entries","recursiveTextAdder","description","damage","dmg1","dmgType","properties","range","property","prop","weight","Gear","parseGear","magicBonus","bonusSpellAttack","parseInt","bonusWeapon","bonusAc","attunment","reqAttune","base","baseItem","toLowerCase","Item","parseItem","makeSubrace","subname","subtype","subabilityScores","ability","scores","Object","key","abilityScores","subtraits","entry","convertText","Trait","Subrace","makeClass","hitdice","hd","faces","proficiencies","startingProficiencies","armor","weapons","wpn","choose","from","skill","equipment","startingEquipment","default","eqp","featureSets","classTableGroups","col","title","rows","row","rowIndex","FeatureSet","spellslots","colLabels","colIndex","clearLabel","bonis","toRoll","number","classFeatures","feature","featureRaw","featureParts","classFeature","objFeature","additional","toLocaleLowerCase","Feature","features","addAdditionalClassFeatures","isAbilityImprov","Class","makeSubclass","subclassFeatures","subclassFeature","subclassShortName","featureSet","feat","addAdditionalSubclassFeatures","Subclass","seperator","concat","item","s","makeSelection","prequisite","prerequisite","key2","value2","val","key3","value3","entityName","entityPrerequsite","entityText","ImportField","modus","setFiles","Files","NORMAL","ETOOLS","faFileImport","file","fileList","changeFile","FileTile","filesDone","setFilesDone","fails","setFails","maxCount","setMax","listOfNewEntities","setListOfNewEntites","convertTypes","useCallback","types","newTypes","make5eToolsEntity","listOfNew","newList","newMonster","_copy","tags","cr","align","size","save","sense","langs","languages","lang","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conImmunities","conditionImmune","traits","trait","tra","spellcasting","spellcast","headerEntries","spellSlotInfo","slots","spell","will","daily","spellTime","action","lactions","legendary","Monster","average","makeMonster","newEntitiy","newSpell","fromClassList","school","time","unit","condition","distance","components","v","m","duration","concentration","entriesHigherLevel","textPart","Spell","meta","ritual","makeSpell","newItem","newRace","age","Race","makeRace","newSubrace","newClass","subclass","newSubclass","newFeat","makeFeat","newBackground","slice","makeBackground","make5eToolsSelections","featureType","selc","importImage","base64","entityTable","reciveAllFilteredPromise","Filter","entities","update","f","IMAGE","fileReader","FileReader","onloadend","event","readAsDataURL","content","parse","l","list","scanImportFile","readAsText","newTableName","bulkList","saveNewFromList","FileWrapper","round","fail","Fails","OtherImportOptions","LocationsOptions","CampaignsOptions","NpcsOptions","QuestsOptions","EventsOptions","WorldsOptions","GroupsOptions","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","RandomTablesOptions","FeatsOptions","BackgroundsOptions","Options","setTab","showResetDialog","setResetDialog","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","campaignAmount","setCampaignAmount","questAmount","setQuestAmount","locationAmount","setLocationAmount","worldAmount","setWorldAmount","eventAmount","setEventAmount","npcAmount","setNpcAmount","groupAmount","setGroupAmount","selectionAmount","setSelectionAmount","randomTableAmount","setRandomTableAmount","featAmount","setFeatAmount","backgroundAmount","setBackgroundAmount","setData","reciveCount","attrs","deleteAllByAttrs","returnTile","ClassTile","RaceTile","MonsterTile","monster","SpellTile","GearTile","gear","ItemTile","EncounterTile","encounter","CampaignTile","QuestTile","quest","LocationTile","location","NpcTile","npc","WorldTile","world","isGroup","GroupTile","group","EventTile","isRandomTable","RandomTableTile","randomTable","CharTile","char","faExclamationTriangle","deleteDatabase","tab","OptionSectionLarge"],"mappings":"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","file":"static/js/14.673b4950.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  abilityImprovs: { origin: string; level: number; s1: string; s2: string; feat: string }[];\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    abilityImprovs?: { origin: string; level: number; s1: string; s2: string; feat: string }[],\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.abilityImprovs = abilityImprovs || [];\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    (picCheck || picBase64Check) &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 257;","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor,\n  completed,\n  baseBgColor,\n  height,\n  width,\n  margin,\n  padding,\n  borderRadius,\n  labelAlignment,\n  labelColor,\n  labelSize,\n  isLabelVisible,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    backgroundColor: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: Number(completed) > 100 ? `100%` : `${Number(completed)}%`,\n    backgroundColor: bgColor,\n    transition: `width ${transitionDuration || \"1s\"} ${\n      transitionTimingFunction || \"ease-in-out\"\n    }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  return (\n    <div style={outsideStyles} className={className}>\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          {labelAlignment !== \"outside\" && (\n            <span style={labelStyles}>\n              {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\n            </span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span style={labelStyles}>\n          {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\n        </span>\n      )}\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  bgColor: PropTypes.string,\n  baseBgColor: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  borderRadius: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\n  labelColor: PropTypes.string,\n  labelSize: PropTypes.string,\n  isLabelVisible: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nProgressBar.defaultProps = {\n  bgColor: \"#6a1b9a\",\n  height: \"20px\",\n  width: \"100%\",\n  borderRadius: \"50px\",\n  labelAlignment: \"right\",\n  baseBgColor: \"#e0e0de\",\n  labelColor: \"#fff\",\n  labelSize: \"15px\",\n  isLabelVisible: true,\n};\n\nexport default ProgressBar;\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Char, { isChar } from \"../data/chars/Char\";\nimport Class, { isClass } from \"../data/classes/Class\";\nimport Subclass, { isSubclass } from \"../data/classes/Subclass\";\nimport Encounter, { isEncounter } from \"../data/encounter/Encounter\";\nimport Gear, { isGear } from \"../data/Gear\";\nimport Item, { isItem } from \"../data/Item\";\nimport Monster, { isMonster } from \"../data/Monster\";\nimport Race, { isRace } from \"../data/races/Race\";\nimport Subrace, { isSubrace } from \"../data/races/Subrace\";\nimport Selection, { isSelection } from \"../data/Selection\";\nimport Spell, { isSpell } from \"../data/Spell\";\nimport Campaign, { isCampaign } from \"../data/campaign/Campaign\";\nimport Quest, { isQuest } from \"../data/campaign/Quest\";\nimport Npc, { isNpc } from \"../data/campaign/Npc\";\nimport Location, { isLocation } from \"../data/world/Location\";\nimport Event, { isEvent } from \"../data/world/Event\";\nimport World, { isWorld } from \"../data/world/World\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isClass(obj)) {\n      promList.push(saveNew(\"classes\", obj as Class, fileName));\n    } else if (isSubclass(obj)) {\n      promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n    } else if (isRace(obj)) {\n      promList.push(saveNew(\"races\", obj as Race, fileName));\n    } else if (isSubrace(obj)) {\n      promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n    } else if (isMonster(obj)) {\n      promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n    } else if (isSpell(obj)) {\n      promList.push(saveNew(\"spells\", obj as Spell, fileName));\n    } else if (isGear(obj)) {\n      promList.push(saveNew(\"gears\", obj as Gear, fileName));\n    } else if (isItem(obj)) {\n      promList.push(saveNew(\"items\", obj as Item, fileName));\n    } else if (isEncounter(obj)) {\n      promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n    } else if (isSelection(obj)) {\n      promList.push(saveNew(\"selections\", obj as Selection, fileName));\n    } else if (isCampaign(obj)) {\n      promList.push(saveNew(\"campaigns\", obj as Campaign, fileName));\n    } else if (isQuest(obj)) {\n      promList.push(saveNew(\"quests\", obj as Quest, fileName));\n    } else if (isNpc(obj)) {\n      promList.push(saveNew(\"npcs\", obj as Npc, fileName));\n    } else if (isWorld(obj)) {\n      promList.push(saveNew(\"worlds\", obj as World, fileName));\n    } else if (isLocation(obj)) {\n      promList.push(saveNew(\"locations\", obj as Location, fileName));\n    } else if (isEvent(obj)) {\n      promList.push(saveNew(\"events\", obj as Event, fileName));\n    } else if (isChar(obj)) {\n      promList.push(saveNew(\"chars\", obj as Char, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n  let items = await reciveAllPromise(\"items\");\n  let gears = await reciveAllPromise(\"gears\");\n  let monsters = await reciveAllPromise(\"monsters\");\n  let races = await reciveAllPromise(\"races\");\n  let subraces = await reciveAllPromise(\"subraces\");\n  let classes = await reciveAllPromise(\"classes\");\n  let subclasses = await reciveAllPromise(\"subclasses\");\n  let chars = await reciveAllPromise(\"chars\");\n  let encounters = await reciveAllPromise(\"encounters\");\n  let selections = await reciveAllPromise(\"selections\");\n  let randomTables = await reciveAllPromise(\"randomTables\");\n  let campaigns = await reciveAllPromise(\"campaigns\");\n  let quests = await reciveAllPromise(\"quests\");\n  let npcs = await reciveAllPromise(\"npcs\");\n  let worlds = await reciveAllPromise(\"worlds\");\n  let locations = await reciveAllPromise(\"locations\");\n  let events = await reciveAllPromise(\"events\");\n  let groups = await reciveAllPromise(\"groups\");\n  let feats = await reciveAllPromise(\"feats\");\n  let backgrounds = await reciveAllPromise(\"backgrounds\");\n\n  let all: any = {\n    spells: spells,\n    items: items,\n    gears: gears,\n    monsters: monsters,\n    races: races,\n    subraces: subraces,\n    classes: classes,\n    subclasses: subclasses,\n    chars: chars,\n    encounters: encounters,\n    selections: selections,\n    randomTables: randomTables,\n    campaigns: campaigns,\n    quests: quests,\n    npcs: npcs,\n    worlds: worlds,\n    locations: locations,\n    events: events,\n    groups: groups,\n    feats: feats,\n    backgrounds: backgrounds,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { faCheck, faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thorbenkuck.de\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField value={peerId} label={\"ID to recive from\"} onChange={(id) => setId(id)} />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton text={\"Accept\"} icon={faCheck} onClick={() => acceptData()} />\n          <TextButton text={\"Decline\"} icon={faCheck} onClick={() => declineData()} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"spells\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Spells by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"spells\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all spells`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"gears\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Gear by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"gears\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all gears`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"items\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Items by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"items\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all items`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Monsters by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"monsters\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  const [races, setRaces] = useState<string[]>([]);\n  const [raceList, setRaceList] = useState<{ value: string; label: string }[]>([]);\n  const [subraces, setSubraces] = useState<string[]>([]);\n  const [subraceList, setSubraceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"races\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setRaceList(sources);\n    });\n    reciveAttributeSelection(\"subraces\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSubraceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"races\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Races by</SectionText>\n          <MultipleSelectField\n            options={raceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setRaces(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"races\", races)} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"subraces\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Subraces by</SectionText>\n          <MultipleSelectField\n            options={subraceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSubraces(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"subraces\", subraces)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  \n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  const [classes, setClasses] = useState<string[]>([]);\n  const [classList, setClassList] = useState<{ value: string; label: string }[]>([]);\n  const [subclasses, setSubclasses] = useState<string[]>([]);\n  const [subclassList, setSubclassList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"classes\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setClassList(sources);\n    });\n    reciveAttributeSelection(\"subclasses\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSubclassList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"classes\", \"DnDTome_classes.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"classes\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Classes by</SectionText>\n          <MultipleSelectField\n            options={classList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setClasses(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"classes\", classes)} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"subclasses\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Subclasses by</SectionText>\n          <MultipleSelectField\n            options={subclassList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSubclasses(sources)}\n          />\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteByAttr(\"subclasses\", subclasses)}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n  faUserCog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport Selection from \"../../data/Selection\";\nimport { deleteAll, reciveAllPromise, resaveFromList } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  amount: number;\n  isReload: (val: boolean) => void;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SelectionsOptions = ({ amount, isReload, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const triggerRegroupAll = async () => {\n    let newSelections: Selection[] = [];\n    let selections: Selection[] = await reciveAllPromise(\"selections\");\n    selections.forEach((selection) => {\n      let sels = newSelections.filter((ns) => ns.name === selection.name);\n      if (sels.length > 0) {\n        sels[0].selectionOptions = [...sels[0].selectionOptions, ...selection.selectionOptions];\n      } else {\n        newSelections.push(selection);\n      }\n    });\n    deleteAll(\"selections\");\n    resaveFromList(\"selections\", newSelections);\n    isReload(true);\n  };\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Selections?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"selections\", \"DnDTome_selections.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Selections?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"selections\")} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Regroup</SelectionTitle>\n        <SectionRow>\n          <SectionText>Regroup all {amount} Selections?</SectionText>\n          <IconButton icon={faUserCog} onClick={() => triggerRegroupAll()} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all selections`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"selections\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SelectionsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Boni implements IEntity {\n  name: string;\n  value: string;\n  isCurrency: boolean;\n  constructor(name: string, value: string, isCurrency: boolean) {\n    this.name = name;\n    this.value = value;\n    this.isCurrency = isCurrency;\n  }\n}\n\nexport function isBoni(arg: any): arg is Boni {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const valueCheck = arg.value !== undefined && typeof arg.value == \"string\";\n  const isCurrencyCheck = arg.isCurrency !== undefined && typeof arg.isCurrency == \"boolean\";\n  return arg && nameCheck && valueCheck && isCurrencyCheck;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport Selection from \"../../data/Selection\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { isGear } from \"../../data/Gear\";\nimport { isItem } from \"../../data/Item\";\nimport { reciveAllFilteredPromise, saveNewFromList, update } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport {\n  makeBackground,\n  makeClass,\n  makeFeat,\n  makeItems,\n  makeMonster,\n  makeRace,\n  makeSelection,\n  makeSpell,\n  makeSubclass,\n  makeSubrace,\n} from \"../../services/5eToolService\";\nimport Filter from \"../../data/Filter\";\n\nexport enum ImportModus {\n  NORMAL,\n  ETOOLS,\n  IMAGE,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\n            modus === ImportModus.NORMAL || modus === ImportModus.ETOOLS ? \".json\" : \"image/*\"\n          }\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>{files && files.length > 0 && <FileTile modus={modus} files={files} />}</Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  files: File[];\n  modus: ImportModus;\n}\n\nconst FileTile = ({ files, modus }: $FileProps) => {\n  const [filesDone, setFilesDone] = useState<number>(0);\n  const [fails, setFails] = useState<any[]>([]);\n  const [maxCount, setMax] = useState<number>(0);\n  const [listOfNewEntities, setListOfNewEntites] = useState<\n    { tableName: string; newEntitiy: IEntity }[]\n  >([]);\n\n  const convertTypes = useCallback((types: string[]): string[] => {\n    let newTypes: string[] = [];\n    if (types !== undefined && Array.isArray(types))\n      newTypes = types.map((type: string) => {\n        if (typeof type == \"string\")\n          switch (type.split(\":\")[0]) {\n            case \"OR\":\n              return \"Onomancy Resonant\";\n            case \"EI\":\n              return \"Invocations\";\n            case \"AF\":\n              return \"Alchemical Formular\";\n            case \"MV\":\n              return \"Maneuver\";\n            case \"FS\":\n              return \"Fighting Styles\";\n            case \"AI\":\n              return \"Artificer Infusion\";\n            case \"AS\":\n              return \"Arcane Shot\";\n            case \"ED\":\n              return \"Elemental Disciplin\";\n            case \"MM\":\n              return \"Metamagic\";\n            case \"RN\":\n              return \"Rune\";\n            case \"PB\":\n              return \"Pact Boon\";\n            default:\n              return \"Unknown\";\n          }\n        return \"Unknown\";\n      });\n    return newTypes;\n  }, []);\n\n  const make5eToolsEntity = useCallback(\n    (\n      key: string,\n      obj: any,\n      fileName: string,\n      json: any,\n      listOfNew: { tableName: string; newEntitiy: IEntity }[]\n    ) => {\n      let newList = [...listOfNew];\n      if (key === \"monster\") {\n        const newMonster = makeMonster(obj);\n        if (newMonster.name !== \"\") newList.push({ tableName: \"monsters\", newEntitiy: newMonster });\n      } else if (key === \"spell\") {\n        const newSpell = makeSpell(obj, fileName);\n        if (newSpell.name !== \"\") newList.push({ tableName: \"spells\", newEntitiy: newSpell });\n      } else if (key === \"item\" || key === \"baseitem\") {\n        const newItem = makeItems(obj, fileName);\n        if (newItem.name !== \"\")\n          if (isGear(newItem)) {\n            newList.push({ tableName: \"gears\", newEntitiy: newItem });\n          } else if (isItem(newItem)) {\n            newList.push({ tableName: \"items\", newEntitiy: newItem });\n          }\n      } else if (key === \"race\") {\n        const newRace = makeRace(obj, fileName);\n        if (newRace.name !== \"\") {\n          newList.push({ tableName: \"races\", newEntitiy: newRace });\n          if (obj._copy === undefined && obj.source !== \"DMG\") {\n            if (obj.subraces !== undefined) {\n              obj.subraces.forEach(async (subrace: any) => {\n                const newSubrace = makeSubrace(subrace, newRace, fileName);\n                newList.push({ tableName: \"subraces\", newEntitiy: newSubrace });\n              });\n            }\n          }\n        }\n      } else if (key === \"class\") {\n        const newClass = makeClass(obj, json, fileName);\n        if (newClass.name !== \"\") {\n          newList.push({ tableName: \"classes\", newEntitiy: newClass });\n          if (obj.subclasses !== undefined) {\n            obj.subclasses.forEach(async (subclass: any) => {\n              const newSubclass = makeSubclass(subclass, json, newClass.name, fileName);\n              newList.push({ tableName: \"subclasses\", newEntitiy: newSubclass });\n            });\n          }\n        }\n      } else if (key === \"subclass\") {\n        if (obj.className !== undefined) {\n          const newSubclass = makeSubclass(obj, json, obj.className, fileName);\n          if (newSubclass.name !== \"\")\n            newList.push({ tableName: \"subclasses\", newEntitiy: newSubclass });\n        }\n      } else if (key === \"feat\") {\n        const newFeat = makeFeat(obj, json, fileName);\n        if (newFeat.name !== \"\") newList.push({ tableName: \"feats\", newEntitiy: newFeat });\n      } else if (key === \"background\") {\n        const newBackground = makeBackground(obj, json, fileName);\n        if (newBackground.name !== \"\")\n          newList.push({ tableName: \"backgrounds\", newEntitiy: newBackground });\n      }\n      return newList;\n    },\n    []\n  );\n\n  const make5eToolsSelections = useCallback(\n    (value: any[], fileName: string, listOfNew: { tableName: string; newEntitiy: IEntity }[]) => {\n      let newList = [...listOfNew];\n      let selections: Selection[] = [];\n\n      value.forEach((obj: any) => {\n        convertTypes(obj.featureType).forEach((type: string) => {\n          if (type === \"Unknown\") type = fileName;\n          if (selections.filter((selc) => selc.name === type).length <= 0) {\n            selections.push({\n              name: type,\n              filename: fileName,\n              selectionOptions: [makeSelection(obj)],\n            });\n          } else {\n            selections = selections.map((selc) => {\n              if (selc.name === type) {\n                return {\n                  ...selc,\n                  selectionOptions: [...selc.selectionOptions, makeSelection(obj)],\n                };\n              }\n              return selc;\n            });\n          }\n        });\n      });\n\n      selections.forEach((selc: Selection) => {\n        newList.push({ tableName: \"selections\", newEntitiy: selc });\n      });\n      return newList;\n    },\n    [convertTypes]\n  );\n\n  const scanImportFile = (json: any, filename: string) => {\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        setMax((m) => m + value.length);\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: IEntity) => {\n            setListOfNewEntites((l) => [...l, { tableName: key, newEntitiy: obj }]);\n          });\n        } else if (modus === ImportModus.ETOOLS) {\n          if (key === \"optionalfeature\") {\n            setListOfNewEntites((l) => {\n              let list = make5eToolsSelections(value, filename, l);\n              if (list.length - l.length === 0)\n                setFails((f) =>\n                  f.concat(\n                    value.map((val) => {\n                      return { obj: val, filename: filename };\n                    })\n                  )\n                );\n              return list;\n            });\n          } else {\n            // eslint-disable-next-line\n            value.forEach((obj: any) => {\n              setListOfNewEntites((l) => {\n                let list = make5eToolsEntity(key, obj, filename, json, l);\n                if (list.length - l.length === 0)\n                  setFails((f) => f.concat({ obj: obj, filename: filename }));\n                return list;\n              });\n            });\n          }\n        }\n      }\n    }\n    setFilesDone((f) => f + 1);\n  };\n\n  const importImage = async (base64: string, fileName: string) => {\n    let entityTable: string = fileName.split(\"_\")[0];\n    let entityName: string = fileName.split(\"_\")[1].split(\".\")[0];\n    console.log(entityTable, entityName);\n\n    let entities = await reciveAllFilteredPromise(entityTable, [new Filter(\"name\", entityName)]);\n\n    let newList: IEntity[] = [];\n    if (entities !== undefined) entities.forEach((entity: IEntity) => newList.push(entity));\n    console.log(\"... found \" + newList.length + \" entities that match \" + entityName + \" ...\");\n\n    newList.forEach((entity: any) => {\n      if (\n        (entity.picBase64 === \"\" && entity.pic === \"\") ||\n        entity.name.toLowerCase() === entityName.toLowerCase()\n      ) {\n        console.log(\"... updated \" + entity.name + \" ...\");\n        update(entityTable, { ...entity, picBase64: base64 });\n      } else {\n        console.log(\"... not updated \" + entity.name + \" since already having a picture...\");\n      }\n    });\n    setFilesDone((f) => f + 1);\n  };\n\n  useEffect(() => {\n    setFilesDone(0);\n    setMax(0);\n    setFails([]);\n    setListOfNewEntites([]);\n\n    console.log(\"-+ Start Filereader +-\");\n\n    if (modus === ImportModus.IMAGE) {\n      setMax((m) => m + files.length);\n      files.forEach((file) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = function (event: any) {\n          console.log(\"Image (\" + file.name + \") import started...\");\n          importImage(event.target.result, file.name);\n        };\n        fileReader.readAsDataURL(file);\n      });\n    } else {\n      files.forEach((file) => {\n        let fileReader = new FileReader();\n        fileReader.onloadend = function () {\n          const content = fileReader.result;\n          if (content !== null) {\n            let json = JSON.parse(content.toString());\n            console.log(\"Json loaded from \" + file.name);\n            scanImportFile(json, file.name);\n            console.log(\"---------\");\n          }\n        };\n        fileReader.readAsText(file);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n\n  const save = useCallback(async () => {\n    let listOfNew = [...listOfNewEntities];\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n    }\n  }, [listOfNewEntities]);\n\n  useEffect(() => {\n    if (filesDone === files.length) {\n      save();\n    }\n  }, [filesDone, files.length, save]);\n\n  return (\n    <FileWrapper>\n      Files done: {filesDone}/{files.length} | Found entities:{maxCount} (Failed entities:{\" \"}\n      {fails.length})\n      <ProgressBar\n        completed={Math.round((filesDone / files.length) * 100)}\n        isLabelVisible={false}\n        bgColor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n      {fails &&\n        fails.length > 0 &&\n        filesDone === files.length &&\n        fails.map((fail) => {\n          console.log(fail);\n          return (\n            <Fails>\n              {fail.filename} - {fail.obj.name} ... failed.\n            </Fails>\n          );\n        })}\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  padding: 10px;\n`;\n\nconst Fails = styled.div`\n  width: clac(100% - 20px);\n  border-bottom: solid 1px rgba(0, 0, 0, 0.1);\n`;\n","import Background from \"../data/Background\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport Feature from \"../data/classes/Feature\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Feat from \"../data/Feat\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\n\nconst replaceTag = (text: string) => {\n  let clearText = text.replace(\"{@\", \"\").replace(\"}\", \"\").split(\"|\")[0].trim();\n\n  switch (true) {\n    case clearText.startsWith(\"scaledamage\"):\n      let scaleTextSplit = text.replace(\"{@\", \"\").replace(\"}\", \"\").split(\"|\");\n      let scaleText = scaleTextSplit[scaleTextSplit.length - 1].trim();\n      return scaleText;\n    case clearText.startsWith(\"damage\"):\n      return \"[[dice.\" + clearText.substring(6, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"dice\"):\n      return \"[[dice.+\" + clearText.substring(4, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"hit\"):\n      return \"[[dice.+\" + clearText.substring(3, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"recharge\"):\n      return \"(Recharge \" + clearText.substring(8, clearText.length).trim() + \" [[dice.d6]])\";\n    case clearText.startsWith(\"item\"):\n      return \"[[gear.\" + clearText.substring(4, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"spell\"):\n      return \"[[spell.\" + clearText.substring(6, clearText.length).trim() + \"]]\";\n    case clearText.startsWith(\"filter\"):\n      return \"\" + clearText.substring(6, clearText.length).trim();\n    case clearText.startsWith(\"bold\"):\n      return \"\" + clearText.substring(4, clearText.length).trim();\n    default:\n      return clearText;\n  }\n};\n\nconst replaceTags = (text: string): string => {\n  if (text) {\n    text = text\n      .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n      .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n      .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n      .replaceAll(\"{@atk rw\", \"Ranged Weapon Attack: \")\n      .replaceAll(\"{@dc\", \"DC\")\n      .replaceAll(\"[\", \"\")\n      .replaceAll(\"]\", \"\")\n      .replaceAll(\"{@h}\", \"Hit: \");\n\n    let newText: string = text;\n    while (newText.includes(\"{@\")) {\n      if (newText.includes(\"{@\") && !newText.includes(\"}\")) {\n        newText = newText.replace(\"{@\", \"\");\n        break;\n      }\n      if (!newText.includes(\"{@\") && newText.includes(\"}\")) {\n        newText = newText.replace(\"}\", \"\");\n        break;\n      }\n\n      let start = newText.indexOf(\"{@\");\n      let end = newText.indexOf(\"}\");\n      if (start > end) {\n        newText = newText.replace(\"}\", \"\");\n      } else {\n        newText =\n          newText.substring(0, start) +\n          replaceTag(newText.substring(start, end + 1)) +\n          newText.substring(end + 1, newText.length);\n      }\n    }\n\n    newText = newText\n      .replaceAll(\"}\", \"\")\n      .replaceAll(\"{\", \"\")\n      .replaceAll(\" + \", \"+\")\n      .replaceAll(\"+ \", \"+\")\n      .replaceAll(\" +\", \"+\");\n    return newText.trim();\n  }\n  return \"\";\n};\n\nconst parseGear = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text).text;\n  const description = replaceTags(text);\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    switch (obj.type) {\n      case \"A\":\n        type = \"ammunition\";\n        break;\n      case \"AIR\":\n        type = \"air vehicle\";\n        break;\n      case \"AT\":\n        type = \"tools\";\n        break;\n      case \"EXP\":\n        type = \"explosive\";\n        break;\n      case \"FD\":\n        type = \"food\";\n        break;\n      case \"GS\":\n        type = \"game set\";\n        break;\n      case \"HA\":\n        type = \"heavy armor\";\n        break;\n      case \"INS\":\n        type = \"instrument\";\n        break;\n      case \"LA\":\n        type = \"light armor\";\n        break;\n      case \"M\":\n        type = \"martial weapon\";\n        break;\n      case \"MA\":\n        type = \"medium armor\";\n        break;\n      case \"MNT\":\n        type = \"mount\";\n        break;\n      case \"R\":\n        type = \"martial ranged weapon\";\n        break;\n      case \"S\":\n        type = \"simple weapon\";\n        break;\n      case \"SCF\":\n        type = \"spellcasting focus\";\n        break;\n      case \"SHP\":\n        type = \"ship\";\n        break;\n      case \"TG\":\n        type = \"trade good\";\n        break;\n      case \"VEH\":\n        type = \"vehicle\";\n        break;\n      default:\n        type = \"gear\";\n    }\n  }\n\n  let damage = \"\";\n  if (obj.dmg1 !== undefined) {\n    damage += obj.dmg1;\n    if (obj.dmgType !== undefined) {\n      switch (obj.dmgType) {\n        case \"S\":\n          damage += \" slashing damage\";\n          break;\n        case \"P\":\n          damage += \" piercing damage\";\n          break;\n        case \"B\":\n          damage += \" bludgeoning damage\";\n          break;\n        case \"R\":\n          damage += \" radiant damage\";\n      }\n    }\n  }\n\n  let properties = \"\";\n  if (obj.range !== undefined) {\n    properties += \"ranged (\" + obj.range + \"), \";\n  }\n  if (obj.property !== undefined) {\n    obj.property.forEach((prop: string) => {\n      switch (prop) {\n        case \"L\":\n          properties += \"light, \";\n          break;\n        case \"AF\":\n          properties += \"radiant damage, \";\n          break;\n        case \"RLD\":\n          properties += \"loading, \";\n          break;\n        case \"2H\":\n          properties += \"two-handed, \";\n          break;\n        case \"F\":\n          properties += \"finesse, \";\n          break;\n        case \"H\":\n          properties += \"heavy, \";\n          break;\n        case \"R\":\n          properties += \"reach, \";\n          break;\n        case \"T\":\n          properties += \"thrown, \";\n          break;\n        case \"V\":\n          properties += \"versatile, \";\n      }\n    });\n  }\n  properties = properties.trim();\n\n  let weight = obj.weight;\n  if (typeof weight == \"number\") {\n    weight = weight + \"lbs\";\n  }\n\n  let value = obj.value;\n  if (typeof value == \"number\") {\n    if (value / 100 > 1) {\n      value = value / 100 + \"gp\";\n    } else if (value / 10 > 1) {\n      value = value / 10 + \"sp\";\n    } else {\n      value = value + \"cp\";\n    }\n  }\n\n  let newGear = new Gear(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    \"\",\n    value,\n    damage,\n    weight,\n    properties,\n    type,\n    fileName\n  );\n  return newGear;\n};\n\nconst parseItem = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text).text;\n  const description = replaceTags(text);\n\n  let magicBonus = 0;\n  if (obj.bonusSpellAttack !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusSpellAttack.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusWeapon !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusWeapon.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusAc !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusAc.replaceAll(\"+\", \"\"));\n  }\n\n  let attunment = 0;\n  if (obj.reqAttune !== undefined) {\n    attunment = obj.reqAttune ? 1 : 0;\n  }\n\n  let base = \"\";\n  if (obj.baseItem !== undefined) {\n    let baseParts: string[] = obj.baseItem.split(\"|\");\n    base = baseParts[0];\n  }\n  base = base.toLowerCase().trim();\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    switch (obj.type) {\n      case \"A\":\n        type = \"ammunition\";\n        break;\n      case \"AIR\":\n        type = \"air vehicle\";\n        break;\n      case \"AT\":\n        type = \"tools\";\n        break;\n      case \"EXP\":\n        type = \"explosive\";\n        break;\n      case \"FD\":\n        type = \"food\";\n        break;\n      case \"GS\":\n        type = \"game set\";\n        break;\n      case \"HA\":\n        type = \"heavy armor\";\n        break;\n      case \"INS\":\n        type = \"instrument\";\n        break;\n      case \"LA\":\n        type = \"light armor\";\n        break;\n      case \"M\":\n        type = \"martial weapon\";\n        break;\n      case \"MA\":\n        type = \"medium armor\";\n        break;\n      case \"MNT\":\n        type = \"mount\";\n        break;\n      case \"R\":\n        type = \"martial ranged weapon\";\n        break;\n      case \"S\":\n        type = \"simple weapon\";\n        break;\n      case \"SCF\":\n        type = \"spellcasting focus\";\n        break;\n      case \"SHP\":\n        type = \"ship\";\n        break;\n      case \"TG\":\n        type = \"trade good\";\n        break;\n      case \"VEH\":\n        type = \"vehicle\";\n        break;\n      default:\n        type = \"gear\";\n    }\n  }\n\n  let rarity: string = \"\";\n  if (obj.rarity !== undefined) {\n    rarity = obj.rarity;\n  }\n  rarity = rarity.toLowerCase().trim();\n\n  let newItem = new Item(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    \"\",\n    rarity,\n    magicBonus,\n    attunment,\n    base,\n    type,\n    fileName\n  );\n  return newItem;\n};\n\nexport const makeItems = (obj: any, fileName: string): Item | Gear => {\n  if (obj !== undefined && obj.rarity !== undefined) {\n    if (obj.rarity === \"none\" || obj.rarity === \"unknown\") {\n      return parseGear(obj, fileName);\n    } else {\n      return parseItem(obj, fileName);\n    }\n  }\n  return new Item();\n};\n\nexport const makeRace = (obj: any, fileName: string): Race => {\n  if (obj._copy === undefined) {\n    const name = obj.name;\n    const sources = obj.source;\n\n    let speed = \"\";\n    if (obj.speed !== undefined) {\n      if (typeof obj.speed == \"number\") {\n        speed += \"walk \" + obj.speed + \"ft.\";\n      } else if (typeof obj.speed == \"number\") {\n        speed = obj.speed;\n      } else {\n        for (const [key, value] of Object.entries(obj.speed)) {\n          if (typeof value === \"number\") {\n            speed += key + \" \" + value + \"ft, \";\n          } else if (typeof value === \"boolean\") {\n          } else {\n            speed += key + \" \";\n            for (const value2 of Object.entries(value as Object)) {\n              if (typeof value2[1] === \"number\") {\n                speed += value2[1] + \"ft, \";\n              } else if (typeof value2[1] === \"string\") {\n                speed += value2[1];\n              }\n            }\n            speed += \", \";\n          }\n        }\n      }\n      speed = speed.trim();\n    }\n\n    let abilityScores = \"\";\n    if (obj.ability !== undefined)\n      obj.ability.forEach((scores: any) => {\n        for (const [key, value] of Object.entries(scores as Object)) {\n          if (typeof value == \"number\") {\n            if (value >= 0) abilityScores += key + \" +\" + value + \", \";\n            abilityScores += key + \" \" + value + \", \";\n          }\n        }\n      });\n    abilityScores = abilityScores.trim();\n\n    let age = \"\";\n    let alignment = \"\";\n    let size = \"\";\n    let lang = \"\";\n    let traits: Trait[] = [];\n    if (obj.entries !== undefined) {\n      obj.entries.forEach((entry: any) => {\n        if (entry.name === \"Age\") {\n          age += entry.entries[0];\n        } else if (entry.name === \"Alignment\") {\n          alignment += entry.entries[0];\n        } else if (entry.name === \"Size\") {\n          size += entry.entries[0];\n        } else if (entry.name === \"Languages\") {\n          lang += entry.entries[0];\n        } else if (Array.isArray(entry.entries)) {\n          if (typeof entry.entries[0] == \"string\") {\n            let convertText = replaceTags(entry.entries[0]);\n            traits.push(new Trait(entry.name, convertText, 1));\n          } else {\n            traits.push(new Trait(entry.name, \"\", 1));\n          }\n        }\n      });\n    }\n\n    return new Race(\n      name,\n      0,\n      fileName,\n      \"\",\n      \"\",\n      abilityScores,\n      age,\n      alignment,\n      size,\n      speed,\n      lang,\n      traits,\n      sources\n    );\n  }\n  return new Race();\n};\n\nexport const makeSubrace = (obj: any, race: Race, fileName: string): Subrace => {\n  const subname = obj.name;\n  const subtype = race.name + \"|\" + race.sources;\n\n  let subabilityScores = \"\";\n  if (obj.ability !== undefined)\n    obj.ability.forEach((scores: any) => {\n      for (const [key, value] of Object.entries(scores as Object)) {\n        if (typeof value == \"number\") {\n          if (value >= 0) race.abilityScores += key + \" +\" + value + \", \";\n          subabilityScores += key + \" \" + value + \", \";\n        }\n      }\n    });\n  subabilityScores = subabilityScores.trim();\n\n  let subtraits: Trait[] = [];\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((entry: any) => {\n      if (Array.isArray(entry.entries)) {\n        let convertText = \"\";\n        if (typeof entry.entries[0] == \"string\") {\n          convertText = replaceTags(entry.entries[0]);\n        }\n        subtraits.push(new Trait(entry.name, convertText, 1));\n      }\n    });\n  }\n\n  return new Subrace(subname, 0, subtype, fileName, subabilityScores, subtraits, race.sources);\n};\n\nexport const makeSpell = (obj: any, fileName: string): Spell => {\n  let classes = \"\";\n  if (obj.classes !== undefined && obj.classes.fromClassList !== undefined) {\n    obj.classes.fromClassList.forEach((classe: { name: string; source: string }) => {\n      classes += classe.name + \", \";\n    });\n  }\n\n  let school = \"\";\n  if (obj.school === \"V\") school = \"Evocation\";\n  else if (obj.school === \"D\") school = \"Divination\";\n  else if (obj.school === \"N\") school = \"Necromancy\";\n  else if (obj.school === \"T\") school = \"Transmutation\";\n  else if (obj.school === \"I\") school = \"Illusion\";\n  else if (obj.school === \"C\") school = \"Conjuration\";\n  else if (obj.school === \"A\") school = \"Abjuration\";\n  else if (obj.school === \"E\") school = \"Enchantment\";\n  else if (obj.school === \"P\") school = \"Psion\";\n  else if (obj.school === \"CR\") school = \"Chronomancy\";\n  else school = obj.school !== undefined && obj.school !== null ? obj.school.toString() : \"\";\n  school = school.trim();\n\n  let time = \"\";\n  if (obj.time !== undefined) {\n    time =\n      obj.time[0].number +\n      \" \" +\n      obj.time[0].unit +\n      \" \" +\n      (obj.time[0].condition ? obj.time[0].condition : \"\");\n  }\n  time = time.toLowerCase().trim();\n\n  let range = \"\";\n  if (obj.range !== undefined) {\n    if (obj.range.type === \"point\") {\n      range =\n        (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n        \" \" +\n        obj.range.distance.type;\n    } else if (obj.range.type === \"special\") {\n      range = obj.range.type;\n    } else {\n      range =\n        (obj.range.distance.amount ? obj.range.distance.amount : \"\") +\n        \" \" +\n        obj.range.distance.type +\n        \" \" +\n        obj.range.type;\n    }\n  }\n  range = range.trim();\n\n  let components = \"\";\n  if (obj.components !== undefined) {\n    components = (obj.components.v ? \"V, \" : \"\") + (obj.components.s ? \"S, \" : \"\");\n    if (obj.components.m !== undefined) {\n      if (obj.components.m.text !== undefined) {\n        components = \"M (\" + obj.components.m.text + \")\";\n      } else {\n        components = \"M (\" + obj.components.m + \")\";\n      }\n    }\n  }\n  components = components.trim();\n\n  let duration = \"\";\n  if (obj.duration !== undefined) {\n    let concentration = obj.duration[0].concentration;\n    duration =\n      (concentration ? \"Concentration, \" : \"\") +\n      obj.duration[0].type +\n      \" \" +\n      (obj.duration[0].duration !== undefined\n        ? obj.duration[0].duration.type + \" \" + obj.duration[0].duration.amount\n        : \"\");\n  }\n  duration = duration.trim();\n\n  let text = \"\";\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text).text;\n  if (obj.entriesHigherLevel !== undefined && obj.entriesHigherLevel.entries !== undefined) {\n    obj.entriesHigherLevel.forEach((entry: any) => {\n      text += \"At Higher Levels: \";\n      if (Array.isArray(entry.entries)) {\n        entry.entries.forEach((textPart: string | any) => {\n          text += textPart + \"\\n\";\n        });\n      } else {\n        text += entry.entries + \"\\n\";\n      }\n    });\n  }\n  text = replaceTags(text);\n\n  return new Spell(\n    obj.name,\n    classes,\n    obj.source,\n    obj.level,\n    school,\n    time,\n    range,\n    components,\n    duration,\n    obj.meta && obj.meta.ritual ? 1 : 0,\n    text,\n    0,\n    fileName,\n    \"\"\n  );\n};\n\nexport const makeMonster = (obj: any): Monster => {\n  if (obj._copy === undefined) {\n    let type = \"\";\n    let subtype = \"\";\n    if (typeof obj.type === \"string\") {\n      type = obj.type;\n    } else {\n      type = obj.type.type;\n      if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n    }\n\n    let cr = 0;\n    if (obj.cr !== undefined) {\n      if (typeof obj.cr === \"string\") {\n        if (obj.cr === \"1/8\") {\n          cr = 0.125;\n        } else if (obj.cr === \"1/4\") {\n          cr = 0.25;\n        } else if (obj.cr === \"1/2\") {\n          cr = 0.5;\n        } else {\n          cr = +obj.cr;\n        }\n      } else {\n        if (obj.cr.cr === \"1/8\") {\n          cr = 0.125;\n        } else if (obj.cr.cr === \"1/4\") {\n          cr = 0.25;\n        } else if (obj.cr.cr === \"1/2\") {\n          cr = 0.5;\n        } else {\n          cr = +obj.cr.cr;\n        }\n      }\n    }\n\n    let alignment = \"\";\n    if (obj.alignment !== undefined) {\n      obj.alignment?.forEach((align: string) => {\n        if (align === \"L\") alignment += \"lawfull \";\n        if (align === \"N\") alignment += \"neutral \";\n        if (align === \"C\") alignment += \"chaotic \";\n        if (align === \"G\") alignment += \"good \";\n        if (align === \"E\") alignment += \"evil \";\n      });\n    }\n    alignment = alignment.trim();\n\n    let size = \"\";\n    if (obj.size !== undefined) {\n      if (obj.size === \"L\") size += \"large \";\n      else if (obj.size === \"H\") size += \"huge \";\n      else if (obj.size === \"T\") size += \"tiny \";\n      else if (obj.size === \"M\") size += \"medium \";\n      else if (obj.size === \"S\") size += \"small \";\n      else if (obj.size === \"G\") size += \"gargantuan \";\n    }\n    size = size.trim();\n\n    let ac = 0;\n    if (typeof obj.ac[0] === \"number\") {\n      ac = obj.ac[0];\n    } else {\n      ac = obj.ac[0].ac;\n    }\n\n    let speed = \"\";\n    for (const [key, value] of Object.entries(obj.speed)) {\n      if (typeof value === \"number\") {\n        speed += key + \" \" + value + \"ft, \";\n      } else if (typeof value === \"boolean\") {\n      } else {\n        speed += key + \" \";\n        for (const value2 of Object.entries(value as Object)) {\n          if (typeof value2[1] === \"number\") {\n            speed += value2[1] + \"ft, \";\n          } else if (typeof value2[1] === \"string\") {\n            speed += value2[1];\n          }\n        }\n        speed += \", \";\n      }\n    }\n    speed.trim();\n\n    let saves = \"\";\n    if (obj.save !== undefined)\n      for (const [key, value] of Object.entries(obj.save)) {\n        saves += key + \" \" + value + \", \";\n      }\n    saves.trim();\n\n    let skills = \"\";\n    if (obj.skill !== undefined)\n      for (const [key, value] of Object.entries(obj.skill)) {\n        skills += key + \" \" + value + \", \";\n      }\n    skills.trim();\n\n    let senses = \"\";\n    if (obj.senses !== undefined) {\n      if (Array.isArray(obj.senses)) {\n        obj.senses.forEach((sense: string) => {\n          senses += sense + \", \";\n        });\n      } else {\n        senses = obj.senses;\n      }\n    }\n    senses.trim();\n\n    let langs = \"\";\n    if (obj.languages !== undefined) {\n      if (Array.isArray(obj.languages)) {\n        obj.languages.forEach((lang: string) => {\n          langs += lang + \", \";\n        });\n      } else {\n        langs = obj.languages;\n      }\n    }\n    langs.trim();\n\n    let vulnerabilities = \"\";\n    obj.vulnerable &&\n      obj.vulnerable.forEach((vul: string) => {\n        vulnerabilities += vul + \", \";\n      });\n    vulnerabilities.trim();\n\n    let resistencies = \"\";\n    obj.resist &&\n      obj.resist.forEach((res: string) => {\n        resistencies += res + \", \";\n      });\n    resistencies.trim();\n\n    let immunities = \"\";\n    obj.immune &&\n      obj.immune.forEach((imu: string) => {\n        immunities += imu + \", \";\n      });\n    immunities.trim();\n\n    let conImmunities = \"\";\n    obj.conditionImmune &&\n      obj.conditionImmune.forEach((imu: string) => {\n        conImmunities += imu + \", \";\n      });\n    conImmunities.trim();\n\n    let traits = \"\";\n    obj.trait &&\n      obj.trait.forEach((tra: { name: string; entries: string[] }) => {\n        traits += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            traits += entry + \" \\n\";\n          });\n          traits += \"\\n\";\n        }\n      });\n    obj.spellcasting &&\n      obj.spellcasting.forEach((spellcast: any) => {\n        traits += spellcast.name + \" \\n\";\n        traits += spellcast.headerEntries + \" \\n\";\n        if (spellcast.spells !== undefined) {\n          for (const [key, value] of Object.entries(spellcast.spells)) {\n            const spellSlotInfo: any = value;\n            traits += key + \" level \";\n            if (spellSlotInfo.slots !== undefined) traits += `(${spellSlotInfo.slots} Slots)`;\n            traits += \": \";\n            if (\n              spellSlotInfo !== undefined &&\n              spellSlotInfo.spells !== undefined &&\n              Array.isArray(spellSlotInfo.spells)\n            ) {\n              // eslint-disable-next-line\n              spellSlotInfo.spells.forEach((spell: any) => {\n                if (typeof spell == \"string\") {\n                  traits += spell + \", \";\n                }\n              });\n            }\n            traits += \"\\n\";\n          }\n          traits += \"\\n\";\n        }\n        if (spellcast.will !== undefined) {\n          traits += \"At will: \";\n          // eslint-disable-next-line\n          spellcast.will.forEach((spell: any) => {\n            if (typeof spell == \"string\") {\n              traits += spell + \", \";\n            }\n          });\n          traits += \"\\n\";\n        }\n        if (spellcast.daily !== undefined) {\n          for (const [key, value] of Object.entries(spellcast.daily)) {\n            const spellTime: any = value;\n            switch (key) {\n              case \"1e\":\n                traits += \"1/day each: \";\n                break;\n              case \"2e\":\n                traits += \"2/day each: \";\n                break;\n              case \"3e\":\n                traits += \"3/day each: \";\n                break;\n              case \"1\":\n                traits += \"1/day: \";\n                break;\n              case \"2\":\n                traits += \"2/day: \";\n                break;\n              case \"3\":\n                traits += \"3/day: \";\n                break;\n            }\n            if (spellTime !== undefined && Array.isArray(value)) {\n              // eslint-disable-next-line\n              value.forEach((spell: any) => {\n                if (typeof spell == \"string\") {\n                  traits += spell + \", \";\n                }\n              });\n            }\n            traits += \"\\n\";\n          }\n          traits += \"\\n\";\n        }\n      });\n    traits = replaceTags(traits);\n\n    let actions = \"\";\n    obj.action &&\n      obj.action.forEach((tra: { name: string; entries: string[] }) => {\n        actions += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            actions += entry + \" \\n\";\n          });\n          actions += \" \\n\";\n        }\n      });\n    actions = replaceTags(actions);\n\n    let lactions = \"\";\n    obj.legendary &&\n      obj.legendary.forEach((tra: { name: string; entries: string[] }) => {\n        lactions += tra.name + \". \\n\";\n        if (tra.entries !== undefined) {\n          tra.entries.forEach((entry: string) => {\n            lactions += entry + \" \\n\";\n          });\n          lactions += \" \\n\";\n        }\n      });\n    lactions = replaceTags(lactions);\n\n    return new Monster(\n      0,\n      obj.name,\n      obj.source,\n      \"\",\n      \"\",\n      size,\n      type,\n      subtype,\n      alignment,\n      ac,\n      obj.hp.average,\n      speed,\n      cr,\n      obj.str,\n      obj.dex,\n      obj.con,\n      obj.int,\n      obj.wis,\n      obj.cha,\n      saves,\n      skills,\n      senses,\n      langs,\n      vulnerabilities,\n      resistencies,\n      immunities,\n      conImmunities,\n      traits,\n      actions,\n      lactions\n    );\n  }\n  return new Monster();\n};\n\nconst addAdditionalClassFeatures = (\n  additional: string[],\n  featureSets: FeatureSet[],\n  json: any,\n  sources: string\n) => {\n  additional.forEach((feature: any) => {\n    const featureParts: string[] = feature.split(\"|\");\n\n    let text = \"\";\n    json.classFeature.forEach((objFeature: any) => {\n      if (objFeature.name === featureParts[0] && objFeature.source === sources) {\n        text = recursiveTextAdder(objFeature.entries, text).text;\n      }\n    });\n    text = replaceTags(text);\n\n    if (text !== undefined && text !== null && text !== \"\") {\n      if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n        text = \"\";\n      }\n      if (featureSets[+featureParts[3] - 1] === undefined) {\n        featureSets.push(\n          new FeatureSet(\n            +featureParts[3],\n            [new Feature(featureParts[0], text, \"\", 0, [], undefined)],\n            [],\n            []\n          )\n        );\n      } else {\n        featureSets[+featureParts[3] - 1].features.push(\n          new Feature(featureParts[0], text, \"\", 0, [], undefined)\n        );\n      }\n    }\n  });\n};\n\nexport const makeClass = (obj: any, json: any, fileName: string): Class => {\n  const name = obj.name;\n  const sources = obj.source;\n  const hitdice = obj.hd ? \"d\" + obj.hd.faces : \"\";\n\n  let proficiencies = \"\";\n  if (obj.startingProficiencies !== undefined) {\n    if (obj.startingProficiencies.armor !== undefined) {\n      proficiencies = \"Armor: \";\n      obj.startingProficiencies.armor?.forEach((armor: string) => {\n        proficiencies += armor + \", \";\n      });\n    }\n    if (obj.startingProficiencies.weapons !== undefined) {\n      proficiencies += \"\\nWeapons: \";\n      obj.startingProficiencies.weapons?.forEach((wpn: string) => {\n        proficiencies += wpn + \", \";\n      });\n    }\n    if (obj.startingProficiencies.skills !== undefined) {\n      proficiencies += \"\\nSkills: \";\n      obj.startingProficiencies.skills[0]?.choose.from.forEach((skill: string) => {\n        proficiencies += skill + \", \";\n      });\n    }\n    proficiencies = replaceTags(proficiencies);\n  }\n\n  let equipment = \"\";\n  if (obj.startingEquipment) {\n    obj.startingEquipment.default?.forEach((eqp: string) => {\n      equipment += eqp + \", \";\n    });\n    equipment = replaceTags(equipment);\n  }\n\n  let featureSets: FeatureSet[] = [];\n  if (obj.classTableGroups !== undefined) {\n    obj.classTableGroups.forEach((col: any) => {\n      if (col.title !== undefined && col.title.includes(\"Slots\")) {\n        col.rows.forEach((row: number[], rowIndex: number) => {\n          if (featureSets[rowIndex] === undefined) {\n            featureSets.push(new FeatureSet(rowIndex + 1, [], [], []));\n          }\n          featureSets[rowIndex].spellslots = row;\n        });\n      } else {\n        col.colLabels.forEach((label: string, colIndex: number) => {\n          let clearLabel = replaceTags(label).split(\"|\")[0].trim();\n          col.rows.forEach((row: any, rowIndex: number) => {\n            if (featureSets[rowIndex] === undefined) {\n              featureSets.push(new FeatureSet(rowIndex + 1, [], [], []));\n            }\n            let bonis: Boni[] | undefined = featureSets[rowIndex].bonis;\n            if (bonis === undefined) bonis = [];\n            if (typeof row[colIndex] == \"number\") {\n              bonis.push(new Boni(clearLabel, row[colIndex] + \"\", true));\n            } else if (typeof row[colIndex] == \"string\") {\n              let text = replaceTags(row[colIndex]).split(\"|\")[0].trim();\n              bonis.push(new Boni(clearLabel, text, false));\n            } else {\n              if (row[colIndex].value !== undefined) {\n                bonis.push(new Boni(clearLabel, row[colIndex].value + \"\", false));\n              } else if (row[colIndex].toRoll !== undefined) {\n                let text = row[colIndex].toRoll[0].number + \"d\" + row[colIndex].toRoll[0].faces;\n                bonis.push(new Boni(clearLabel, text, false));\n              }\n            }\n            featureSets[rowIndex].bonis = bonis;\n          });\n        });\n      }\n    });\n  }\n\n  if (obj.classFeatures !== undefined) {\n    obj.classFeatures.forEach((feature: any) => {\n      let featureRaw: string = \"\";\n      if (typeof feature === \"string\") {\n        featureRaw = feature;\n      }\n      const featureParts: string[] = featureRaw.split(\"|\");\n\n      let text = \"\";\n      json.classFeature?.forEach((objFeature: any) => {\n        if (objFeature.name === featureParts[0] && objFeature.source === sources) {\n          const { text: newText, additional } = recursiveTextAdder(objFeature.entries, text);\n          if (additional.length > 0)\n            addAdditionalClassFeatures(additional, featureSets, json, sources);\n          text = newText;\n        }\n      });\n      text = replaceTags(text);\n\n      if (text !== undefined && text !== null && text !== \"\") {\n        let isAbilityImprov: boolean = false;\n        if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n          isAbilityImprov = true;\n        }\n        if (featureSets[+featureParts[3] - 1] === undefined) {\n          featureSets.push(\n            new FeatureSet(\n              +featureParts[3],\n              isAbilityImprov ? [] : [new Feature(featureParts[0], text, \"\", 0, [], undefined)],\n              [],\n              [],\n              isAbilityImprov\n            )\n          );\n        } else {\n          featureSets[+featureParts[3] - 1].features.push(\n            new Feature(featureParts[0], text, \"\", 0, [], undefined)\n          );\n          featureSets[+featureParts[3] - 1].isAbilityImprov = isAbilityImprov;\n        }\n      }\n    });\n  }\n\n  return new Class(0, name, featureSets, hitdice, proficiencies, equipment, fileName, sources, \"\");\n};\n\nconst addAdditionalSubclassFeatures = (additional: string[], features: FeatureSet[], json: any) => {\n  additional.forEach((feature: any) => {\n    const featureParts: string[] = feature.split(\"|\");\n\n    let text = \"\";\n    json.subclassFeature.forEach((objFeature: any) => {\n      if (objFeature.subclassShortName === featureParts[3] && objFeature.name === featureParts[0]) {\n        text = recursiveTextAdder(objFeature.entries, text).text;\n      }\n    });\n    text = replaceTags(text);\n\n    let filteredFeatures = features.filter((featureSet) => featureSet.level === +featureParts[5]);\n    if (filteredFeatures.length === 0) {\n      features.push(new FeatureSet(+featureParts[5], [], [], []));\n    }\n\n    if (text !== undefined && text !== null && text !== \"\") {\n      if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n        text = \"\";\n      }\n      features\n        .filter((featureSet) => featureSet.level === +featureParts[5])\n        .forEach((feat) => {\n          feat.features.push(new Feature(featureParts[0], text, \"\", 0, [], undefined));\n        });\n    }\n  });\n};\n\nexport const makeSubclass = (obj: any, json: any, classe: string, fileName: string): Subclass => {\n  let features: FeatureSet[] = [];\n  if (obj.subclassFeatures !== undefined) {\n    obj.subclassFeatures.forEach((feature: any) => {\n      let featureRaw: string = \"\";\n      if (typeof feature != \"string\") {\n        featureRaw = feature.classFeature || \"\";\n      } else {\n        featureRaw = feature;\n      }\n      const featureParts: string[] = featureRaw.split(\"|\");\n\n      let text = \"\";\n      json.subclassFeature?.forEach((objFeature: any) => {\n        if (\n          objFeature.subclassShortName === featureParts[3] &&\n          objFeature.name === featureParts[0]\n        ) {\n          const { text: newText, additional } = recursiveTextAdder(objFeature.entries, text);\n          if (additional.length > 0) addAdditionalSubclassFeatures(additional, features, json);\n          text = newText;\n        }\n      });\n      text = replaceTags(text);\n\n      let filteredFeatures = features.filter((featureSet) => featureSet.level === +featureParts[5]);\n      if (filteredFeatures.length === 0) {\n        features.push(new FeatureSet(+featureParts[5], [], [], []));\n      }\n\n      if (text !== undefined && text !== null && text !== \"\") {\n        if (featureParts[0].toLocaleLowerCase() === \"ability score improvement\") {\n          text = \"\";\n        }\n        features\n          .filter((featureSet) => featureSet.level === +featureParts[5])\n          .forEach((feat) => {\n            feat.features.push(new Feature(featureParts[0], text, \"\", 0, [], undefined));\n          });\n      }\n    });\n  }\n  return new Subclass(0, obj.name, classe, features, fileName, obj.source);\n};\n\nconst recursiveTextAdder = (\n  entries: any,\n  text: string,\n  seperator?: string\n): { text: string; additional: string[] } => {\n  let newText: string = text;\n  let additional: string[] = [];\n  if (entries !== undefined && entries !== null) {\n    if (typeof entries == \"string\" || typeof entries == \"number\") {\n      newText += entries + \"\";\n    } else if (Array.isArray(entries)) {\n      entries.forEach((entry) => {\n        const { text, additional } = recursiveTextAdder(entry, newText, seperator);\n        newText = text;\n        additional.concat(additional);\n      });\n      newText += \"\\n\";\n    } else if (entries.entries !== undefined) {\n      if (entries.name !== undefined) newText += entries.name + \"\\n\";\n      const { text, additional } = recursiveTextAdder(entries.entries, newText, seperator);\n      newText = text + \"\\r\\n\";\n      additional.concat(additional);\n    } else if (entries.items !== undefined) {\n      entries.items.forEach((item: any) => {\n        if (typeof item == \"string\" || typeof item == \"number\") {\n          newText += \"\\r\\n• \" + item;\n        } else if (item.type !== undefined && item.type === \"item\") {\n          newText += \"\\r\\n• \" + item.name + \": \" + item.entry;\n        }\n      });\n      newText += \"\\n\\n\";\n    } else if (entries.type !== undefined && entries.type === \"refClassFeature\") {\n      additional.push(entries.classFeature);\n    } else if (entries.type !== undefined && entries.type === \"refSubclassFeature\") {\n      additional.push(entries.subclassFeature);\n    } else if (entries.type !== undefined && entries.type === \"table\") {\n      newText += \"\\n ||tableStart||\";\n      if (entries.colLabels) {\n        newText += \"||\";\n        entries.colLabels.forEach((s: string) => (newText += s + \"|\"));\n        newText += \"|\";\n      }\n      if (entries.rows) {\n        newText += \"||\";\n        entries.rows.forEach((row: string[]) => {\n          newText += \"||\";\n          if (Array.isArray(row))\n            row.forEach((s: string) => {\n              newText += s + \"|\";\n            });\n          newText += \"|\";\n        });\n        newText += \"|\";\n      }\n      newText += \"||tableEnd||\\r\\n\";\n    } else if (typeof entries == \"object\") {\n      for (const value of Object.entries(entries)) {\n        if (value[0] !== undefined) {\n          const { text, additional } = recursiveTextAdder(value[0], newText, seperator);\n          newText = text + (seperator || \": \");\n          additional.concat(additional);\n        }\n        if (value[1] !== undefined) {\n          const { text, additional } = recursiveTextAdder(value[1], newText, seperator);\n          newText = text;\n          additional.concat(additional);\n        }\n        newText += \"\\r\\n\";\n      }\n    }\n  }\n  return { text: newText, additional: additional };\n};\n\nexport const makeSelection = (\n  obj: any\n): {\n  entityName: string;\n  entityPrerequsite: string;\n  entityText: string;\n  level: number;\n} => {\n  let text = \"\";\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text).text;\n  text = replaceTags(text);\n\n  let level: number = 0;\n  let prequisite: string = \"\";\n  if (obj.prerequisite !== undefined && obj.prerequisite !== \"\") {\n    for (const [key, value] of Object.entries(obj.prerequisite[0])) {\n      if (key === \"level\") {\n        for (const [key2, value2] of Object.entries(value as Object)) {\n          if (key2 === \"level\") {\n            level = value2;\n          } else {\n            prequisite += key2 + \": \" + value2.name + \", \";\n          }\n        }\n      } else if (typeof value === \"number\") {\n        prequisite += key + \": \" + value + \", \";\n      } else if (typeof value === \"string\") {\n        prequisite += key + \": \" + value + \", \";\n      } else if (Array.isArray(value)) {\n        prequisite += key + \": \";\n        // eslint-disable-next-line\n        value.forEach((val) => {\n          prequisite += val + \", \";\n        });\n      } else {\n        prequisite += key + \" \";\n        for (const [key2, value2] of Object.entries(value as Object)) {\n          if (typeof value2 === \"number\") {\n            prequisite += key2 + \": \" + value2 + \", \";\n          } else if (typeof value2 === \"string\") {\n            prequisite += key2 + \": \" + value2 + \", \";\n          } else {\n            prequisite += key + \" \";\n            for (const [key3, value3] of Object.entries(value as Object)) {\n              if (typeof value3 === \"number\") {\n                prequisite += key3 + \": \" + value3 + \", \";\n              } else if (typeof value3 === \"string\") {\n                prequisite += key3 + \": \" + value3 + \", \";\n              }\n            }\n            prequisite += \", \";\n          }\n        }\n        prequisite += \", \";\n      }\n    }\n  }\n\n  let name = obj.name;\n  name = obj.source !== undefined ? name + \" (\" + obj.source + \")\" : name;\n\n  return {\n    entityName: name,\n    entityPrerequsite: prequisite,\n    entityText: text,\n    level: level,\n  };\n};\n\nexport const makeFeat = (obj: any, json: any, fileName: string): Feat => {\n  let text = \"\";\n  if (obj.ability !== undefined) text = recursiveTextAdder(obj.ability, text).text;\n  if (obj.entries !== undefined) text = recursiveTextAdder(obj.entries, text).text;\n  text = replaceTags(text);\n\n  let prequisite = \"\";\n  if (obj.prerequisite !== undefined)\n    prequisite = recursiveTextAdder(obj.prerequisite, prequisite).text;\n  prequisite = replaceTags(prequisite);\n\n  let name = obj.name;\n  name = obj.source !== undefined ? name + \" (\" + obj.source + \")\" : name;\n\n  return {\n    name: name,\n    prerequisite: prequisite,\n    description: text,\n    sources: obj.source,\n  };\n};\n\nexport const makeBackground = (obj: any, json: any, fileName: string): Background => {\n  let proficiencies = \"\";\n  let text = \"\";\n\n  if (obj.entries !== undefined) {\n    let entries = [...obj.entries];\n    if (entries[0].type === \"list\") {\n      proficiencies = recursiveTextAdder(entries[0], proficiencies).text;\n      entries = entries.slice(1);\n    }\n    proficiencies = replaceTags(proficiencies);\n\n    text = recursiveTextAdder(entries, text).text;\n    text = replaceTags(text);\n  }\n\n  let name = obj.name;\n  name = obj.source !== undefined ? name + \" (\" + obj.source + \")\" : name;\n\n  return {\n    name: name,\n    proficiencies: proficiencies,\n    description: text,\n    sources: obj.source,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\n\nconst OtherImportOptions = () => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Import 5eTools</SelectionTitle>\n        <ImportField modus={ImportModus.ETOOLS} />\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default OtherImportOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst LocationsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Locations?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"locations\", \"DnDTome_locations.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Locations?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"locations\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all locations`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"locations\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default LocationsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CampaignsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Campaigns?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"campaigns\", \"DnDTome_campaigns.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Campaigns?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"campaigns\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all campaigns`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"campaigns\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CampaignsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst NpcsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Npcs?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"npcs\", \"DnDTome_npcs.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Npcs?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"npcs\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all npcs`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"npcs\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default NpcsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst QuestsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Quests?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"quests\", \"DnDTome_quests.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Quests?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"quests\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all quests`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"quests\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default QuestsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EventsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Events?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"events\", \"DnDTome_events.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Events?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"events\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all events`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"events\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EventsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst WorldsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Worlds?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"worlds\", \"DnDTome_worlds.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Worlds?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"worlds\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all worlds`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"worlds\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default WorldsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GroupsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Groups?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"groups\", \"DnDTome_groups.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Groups?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"groups\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all groups`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"groups\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GroupsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RandomTablesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all random Tables?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"randomTables\", \"DnDTome_randomTables.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} random Tables?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"randomTables\")} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all random Tables`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"randomTables\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RandomTablesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst FeatsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"feats\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Feats?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"feats\", \"DnDTome_feats.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Feats?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"feats\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Feats by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteByAttr(\"feats\", source)} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton text={`Send all feats`} icon={faPaperPlane} onClick={() => setSend(true)} />\n        )}\n        {!!send && <P2PSender data={\"feats\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default FeatsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { reciveAttributeSelection } from \"../../services/DatabaseService\";\nimport MultipleSelectField from \"../form_elements/MultipleSelectField\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n  triggerDeleteByAttr: (tableName: string, attrs: string[]) => void;\n}\n\nconst BackgroundsOptions = ({ amount, triggerDeleteAll, triggerDeleteByAttr }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [source, setSource] = useState<string[]>([]);\n  const [sourceList, setSourceList] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAttributeSelection(\"backgrounds\", \"sources\", function (result) {\n      let sources = result.map((source) => {\n        if (source === \"\") {\n          return { value: source.toString(), label: \"Empty\" };\n        }\n        return { value: source.toString(), label: source.toString() };\n      });\n      setSourceList(sources);\n    });\n  }, []);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Backgrounds?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"backgrounds\", \"DnDTome_backgrounds.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Backgrounds?</SectionText>\n          <IconButton icon={faTrashAlt} onClick={() => triggerDeleteAll(\"backgrounds\")} />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all Backgrounds by</SectionText>\n          <MultipleSelectField\n            options={sourceList}\n            label=\"Source\"\n            onChange={(sources: string[]) => setSource(sources)}\n          />\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteByAttr(\"backgrounds\", source)}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all backgrounds`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"backgrounds\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default BackgroundsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveCount,\n  reciveAllPromise,\n  deleteAllByAttrs,\n  deleteDatabase,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\nimport { isChar } from \"../../data/chars/Char\";\nimport { isClass } from \"../../data/classes/Class\";\nimport { isSubclass } from \"../../data/classes/Subclass\";\nimport { isEncounter } from \"../../data/encounter/Encounter\";\nimport { isGear } from \"../../data/Gear\";\nimport { isItem } from \"../../data/Item\";\nimport { isMonster } from \"../../data/Monster\";\nimport { isRace } from \"../../data/races/Race\";\nimport { isSubrace } from \"../../data/races/Subrace\";\nimport { isSpell } from \"../../data/Spell\";\nimport { isCampaign } from \"../../data/campaign/Campaign\";\nimport { isNpc } from \"../../data/campaign/Npc\";\nimport { isQuest } from \"../../data/campaign/Quest\";\nimport { isLocation } from \"../../data/world/Location\";\nimport { isGroup } from \"../../data/campaign/Group\";\nimport { isWorld } from \"../../data/world/World\";\nimport { isEvent } from \"../../data/world/Event\";\n\nimport { faExclamationTriangle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport ClassTile from \"../entities/classes/ClassTile\";\nimport EncounterTile from \"../entities/encounters/EncounterTile\";\nimport CharTile from \"../entities/chars/CharTile\";\nimport GearTile from \"../entities/gear/GearTile\";\nimport ItemTile from \"../entities/items/ItemTile\";\nimport MonsterTile from \"../entities/monsters/MonsterTile\";\nimport RaceTile from \"../entities/races/RaceTile\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\nimport SelectionsOptions from \"./SelectionsOptions\";\nimport OtherImportOptions from \"./OtherImportOptions\";\nimport CampaignTile from \"../entities/campaigns/CampaignTile\";\nimport QuestTile from \"../entities/quests/QuestTile\";\nimport LocationTile from \"../entities/locations/LocationTile\";\nimport NpcTile from \"../entities/npcs/NpcTile\";\nimport LocationsOptions from \"./LocationsOptions\";\nimport CampaignsOptions from \"./CampaignsOptions\";\nimport NpcsOptions from \"./NpcsOptions\";\nimport QuestsOptions from \"./QuestsOptions\";\nimport EventTile from \"../entities/events/EventTile\";\nimport WorldTile from \"../entities/worlds/WorldTile\";\nimport EventsOptions from \"./EventsOptions\";\nimport WorldsOptions from \"./WorldsOptions\";\nimport GroupTile from \"../entities/groups/GroupTile\";\nimport GroupsOptions from \"./GroupsOptions\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport RandomTableTile from \"../entities/random_tables/RandomTableTile\";\nimport { isRandomTable } from \"../../data/RandomTable\";\nimport RandomTablesOptions from \"./RandomTablesOptions\";\nimport { Dialog } from \"../general_elements/Dialog\";\nimport FeatsOptions from \"./FeatsOptions\";\nimport BackgroundsOptions from \"./BackgrounsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [showResetDialog, setResetDialog] = useState<boolean>(false);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [campaignAmount, setCampaignAmount] = useState<number>(0);\n  const [questAmount, setQuestAmount] = useState<number>(0);\n  const [locationAmount, setLocationAmount] = useState<number>(0);\n  const [worldAmount, setWorldAmount] = useState<number>(0);\n  const [eventAmount, setEventAmount] = useState<number>(0);\n  const [npcAmount, setNpcAmount] = useState<number>(0);\n  const [groupAmount, setGroupAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n  const [randomTableAmount, setRandomTableAmount] = useState<number>(0);\n  const [featAmount, setFeatAmount] = useState<number>(0);\n  const [backgroundAmount, setBackgroundAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"campaigns\", (result: number) => {\n        setCampaignAmount(result);\n      });\n      reciveCount(\"quests\", (result: number) => {\n        setQuestAmount(result);\n      });\n      reciveCount(\"worlds\", (result: number) => {\n        setWorldAmount(result);\n      });\n      reciveCount(\"events\", (result: number) => {\n        setEventAmount(result);\n      });\n      reciveCount(\"locations\", (result: number) => {\n        setLocationAmount(result);\n      });\n      reciveCount(\"npcs\", (result: number) => {\n        setNpcAmount(result);\n      });\n      reciveCount(\"groups\", (result: number) => {\n        setGroupAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveCount(\"randomTables\", (result: number) => {\n        setRandomTableAmount(result);\n      });\n      reciveCount(\"feats\", (result: number) => {\n        setFeatAmount(result);\n      });\n      reciveCount(\"backgrounds\", (result: number) => {\n        setBackgroundAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const triggerDeleteByAttr = (tableName: string, attrs: string[]) => {\n    deleteAllByAttrs(tableName, \"sources\", attrs);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isCampaign(entity)) {\n      return <CampaignTile key={index} campaign={entity} />;\n    } else if (isQuest(entity)) {\n      return <QuestTile key={index} quest={entity} />;\n    } else if (isLocation(entity)) {\n      return <LocationTile key={index} location={entity} />;\n    } else if (isNpc(entity)) {\n      return <NpcTile key={index} npc={entity} />;\n    } else if (isWorld(entity)) {\n      return <WorldTile key={index} world={entity} />;\n    } else if (isGroup(entity)) {\n      return <GroupTile key={index} group={entity} />;\n    } else if (isEvent(entity)) {\n      return <EventTile key={index} event={entity} />;\n    } else if (isRandomTable(entity)) {\n      return <RandomTableTile key={index} randomTable={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  const resetDatabase = () => {\n    deleteDatabase();\n    isReload(true);\n  };\n\n  return (\n    <>\n      {showResetDialog && (\n        <Dialog\n          message={`Reset Database?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            resetDatabase();\n            setResetDialog(false);\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setResetDialog(false);\n          }}\n        />\n      )}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton icon={faFileExport} onClick={() => exportAll(\"DnDTome_all.json\")} />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import Images</SelectionTitle>\n        <ImportField modus={ImportModus.IMAGE} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Reset Database</SelectionTitle>\n        <IconButton icon={faTrashAlt} onClick={() => setResetDialog(true)} />\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Feats\",\n          \"Backgrounds\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Selections\",\n          \"Chars\",\n          \"Encounters\",\n          \"Campaigns\",\n          \"Quests\",\n          \"Groups\",\n          \"Npc's\",\n          \"Worlds\",\n          \"Events\",\n          \"Locations\",\n          \"Random Table\",\n          \"Other Imports\",\n          \"Discord\",\n          \"Receive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions\n          amount={gearAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions\n          amount={itemAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Feats\" && (\n        <FeatsOptions\n          amount={featAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Backgrounds\" && (\n        <BackgroundsOptions\n          amount={backgroundAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions\n          amount={monsterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions\n          amounts={[raceAmount, subraceAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n          triggerDeleteByAttr={triggerDeleteByAttr}\n        />\n      )}\n      {activeTab === \"Selections\" && (\n        <SelectionsOptions\n          amount={selectionAmount}\n          triggerDeleteAll={triggerDeleteAll}\n          isReload={isReload}\n        />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions amount={encounterAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Campaigns\" && (\n        <CampaignsOptions amount={campaignAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Quests\" && (\n        <QuestsOptions amount={questAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Groups\" && (\n        <GroupsOptions amount={groupAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Npc's\" && (\n        <NpcsOptions amount={npcAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Worlds\" && (\n        <WorldsOptions amount={worldAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Events\" && (\n        <EventsOptions amount={eventAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Locations\" && (\n        <LocationsOptions amount={locationAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Random Table\" && (\n        <RandomTablesOptions amount={randomTableAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Other Imports\" && <OtherImportOptions />}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n"],"sourceRoot":""}