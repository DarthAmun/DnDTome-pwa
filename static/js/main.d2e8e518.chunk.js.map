{"version":3,"sources":["components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Services/OptionService.tsx","Data/Chars/Char.tsx","Data/Chars/RaceSet.tsx","Data/Chars/ClassSet.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Options/Options.tsx","components/Loading.tsx","components/Entities/Spells/SpellTile.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/TextButton.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassTile.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","buttons","color","backgroundColor","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","id","result","finally","close","remove","delete","reciveAll","toArray","array","reciveByAttribute","name","where","equalsIgnoreCase","reciveAllPromise","a","recivePromiseByAttribute","reciveAllFiltered","filters","filter","obj","test","forEach","push","fieldName","toLowerCase","includes","Array","arrayTest","filterPart","val","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","saveNewFromList","entities","filename","refinedEntities","map","entity","bulkPut","createNewWithId","put","reciveCount","count","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","Subrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isArray","isFeature","Class","featureSets","hitDices","proficiencies","equipment","Subclass","importFiles","fileList","from","file","i","fileReader","FileReader","onloadend","content","json","JSON","parse","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","isClass","isSubclass","abilityScoresCheck","ageCheck","traitsCheck","isRace","isSubrace","playerCheck","player","raceCheck","race","subraceCheck","subrace","isRaceSet","backgroundCheck","background","currentHpCheck","currentHp","initCheck","init","classeCheck","classe","subclasseCheck","subclasse","isClassSet","isChar","readAsText","exportAll","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faMeteor","faDragon","faIdCard","faCog","primaryHover","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","child","index","Tab","key","e","FileField","transform","Field","LabelText","Icon","Input","files","FontAwesomeIcon","IconButton","SimpleButton","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","reload","isReload","triggerImportFiles","triggerDeleteAll","clear","deleteAll","tab","General","OptionSection","SelectionTitle","ExternalLink","rel","faPatreon","faDiscord","OptionTab","faFileImport","SectionRow","SectionText","faFileExport","faTrashAlt","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","SpellTile","spell","formatTime","useCallback","split","formatLevel","hasRitual","hasConcentration","formatComponents","words","length","formatDuration","search","replace","trim","getPicture","Tile","fallback","School","Flag","Level","ImageName","PropWrapper","Prop","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","WideProp","faUser","faLink","Link","props","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","isMulti","classNamePrefix","Select","StringField","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setName","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","newSpell","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","results","slice","filterArray","SpellContainer","dataLength","next","s","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","state","action","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","equals","first","FormatedText","formatedText","setFormatedText","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","span","th","td","SpellView","CenterWrapper","View","Text","NumberField","max","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","SpellDetail","editMode","setMode","spellObj","editSpell","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","TopBar","faArrowLeft","goBack","EditToggle","mode","ToggleLeft","ToggleRight","faExclamationTriangle","setTimeout","updateSpell","faSave","spellId","faTrash","Message","IdToSpell","match","params","loading","NameToSpell","GearView","gear","faCoins","faWeightHanging","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","gearId","NameToGear","IdToGear","GearTile","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterTile","monster","isLegendary","Type","CR","faRunning","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","newMonster","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","PropTitle","faShieldAlt","src","img","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","monsterId","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","trait","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","field","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","raceId","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","subraceId","NameToSubrace","IdToSubrace","RaceTile","ImgContainer","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","item","itemBase","setItemBase","hasAttunment","Rarity","AutoStringField","optionTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","Promise","o","onSearch","searchTerm","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","itemId","NameToItem","IdToItem","ItemTile","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","newItem","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","subclass","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","TextButton","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","classeId","NameToClass","IdToClass","ClassTile","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","subclassId","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","char","deathSaves","setDeathSaves","prof","setProf","calcLevel","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeMoney","newChar","money","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","saves","strSaveProf","PropProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","classesClass","profsLangs","copper","silver","gold","platinum","electrum","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","classSet","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","actions","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","sort","f1","f2","b","baseitem","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","spellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","currencyBonis","castingHit","castingDC","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","spellNotes","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","oldItem","onChangeItem","attuned","charAt","toUpperCase","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","class","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","charId","NameToChar","IdToChar","CharTile","PropRowWrapper","RowProp","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","render","getElementById","URL","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2e8e518.chunk.js","sourcesContent":["interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    }\n  }\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size\n    }\n  }\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"dark\") {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      } else {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n  }\n}\n\n//Saves = strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf\n//Skills =  acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf,\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllPromise = (\n  tableName: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .toArray();\n      return array;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .filter((obj) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          callback(data);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put({ ...entity, filename: filename })\n        .then(function () {\n          console.log(entity.name);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName).bulkPut(refinedEntities).then(() => {\n        callback();\n      })\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components|| \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: string;\n  speed: string;\n  cr: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: string,\n    speed?: string,\n    cr?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || \"\";\n    this.speed = speed || \"\";\n    this.cr = cr || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"string\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string,text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return arg && nameCheck && textCheck && levelCheck;\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n","import { saveNewFromList, reciveAll } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { isSpell } from \"../Data/Spell\";\nimport Gear, { isGear } from \"../Data/Gear\";\nimport Monster, { isMonster } from \"../Data/Monster\";\nimport Race, { isRace } from \"../Data/Races/Race\";\nimport Subrace, { isSubrace } from \"../Data/Races/Subrace\";\nimport Item, { isItem } from \"../Data/Item\";\nimport Class, { isClass } from \"../Data/Classes/Class\";\nimport Subclass, { isSubclass } from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: () => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          if (Array.isArray(json)) {\n            if (isClass(json[0])) {\n              saveNewFromList(\"classes\", json as Class[], file.name, callback);\n            } else if (isSubclass(json[0])) {\n              saveNewFromList(\"subclasses\", json as Subclass[], file.name, callback);\n            } else if (isRace(json[0])) {\n              saveNewFromList(\"races\", json as Race[], file.name, callback);\n            } else if (isSubrace(json[0])) {\n              saveNewFromList(\"subraces\", json as Subrace[], file.name, callback);\n            } else if (isMonster(json[0])) {\n              saveNewFromList(\"monsters\", json as Monster[], file.name, callback);\n            } else if (isSpell(json[0])) {\n              saveNewFromList(\"spells\", json as Spell[], file.name, callback);\n            } else if (isGear(json[0])) {\n              saveNewFromList(\"gears\", json as Gear[], file.name, callback);\n            } else if (isItem(json[0])) {\n              saveNewFromList(\"items\", json as Item[], file.name, callback);\n            } else if (isChar(json[0])) {\n              saveNewFromList(\"chars\", json as Char[], file.name, callback);\n            }\n          }\n          //   saveNewSpells(spellsJson, file.name);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const exportAll = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id: number,\n    name: string,\n    player: string,\n    pic: string,\n    classes: ClassSet[],\n    race: RaceSet,\n    background: string,\n    spells: string[],\n    spellSlots: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis: { origin: string; value: number; max: number }[],\n    items: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters: string[],\n    ac: number,\n    hp: number,\n    currentHp: number,\n    init: number,\n    speed: string,\n    str: number,\n    dex: number,\n    con: number,\n    int: number,\n    wis: number,\n    cha: number,\n    saves: Saves,\n    actions: string,\n    profsLangs: string,\n    senses: string,\n    money: Money,\n    skills: Skills,\n    spellNotes: string,\n    alignment: string,\n    inspiration: number,\n    castingHit: number,\n    castingDC: number\n  ) {\n    this.id = id;\n    this.name = name;\n    this.player = player;\n    this.pic = pic;\n    this.classes = classes;\n    this.race = race;\n    this.background = background;\n    this.spells = spells;\n    this.spellSlots = spellSlots;\n    this.currencyBonis = currencyBonis;\n    this.items = items;\n    this.monsters = monsters;\n    this.ac = ac;\n    this.hp = hp;\n    this.currentHp = currentHp;\n    this.init = init;\n    this.speed = speed;\n    this.str = str;\n    this.dex = dex;\n    this.con = con;\n    this.int = int;\n    this.wis = wis;\n    this.cha = cha;\n    this.saves = saves;\n    this.actions = actions;\n    this.profsLangs = profsLangs;\n    this.senses = senses;\n    this.money = money;\n    this.skills = skills;\n    this.spellNotes = spellNotes;\n    this.alignment = alignment;\n    this.inspiration = inspiration;\n    this.castingHit = castingHit;\n    this.castingDC = castingDC;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race: string, subrace: string) {\n    this.race = race;\n    this.subrace = subrace;\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMeteor, faCog, faDragon, faIdCard } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      {/* <Link\n        to=\"/encounter\"\n        className={location.pathname === \"/encounter\" ? \"menuItemActiv\" : \"\"}\n      >\n        <img\n          alt=\"\"\n          src={encounterIcon}\n          style={{\n            width: \"20px\",\n            marginTop: \"10px\",\n            marginRight: \"5px\",\n            float: \"left\",\n          }}\n        />\n      </Link> */}\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input onChange={(e) => onChange(e.target.files)} type=\"file\"></Input>\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst IconButton = ({ icon, transform, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick}>\n      <Icon icon={icon} transform={transform} />\n    </SimpleButton>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\nimport { importFiles, exportAll } from \"../../Services/OptionService\";\nimport { deleteAll, reciveCount } from \"../../Services/DatabaseService\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileImport,\n  faTrashAlt,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\n\nconst Options = () => {\n  const { theme, setTheme } = useTheme();\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    importFiles(fileList, () => {\n      isReload(true);\n    });\n  };\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <General>\n          <OptionSection>\n            <SelectionTitle>Want to support me?</SelectionTitle>\n            <ExternalLink\n              href=\"https://www.patreon.com/bePatron?u=25310394\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"patreon\"\n            >\n              <FontAwesomeIcon icon={faPatreon} /> Become a patron\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>\n              Found some bugs? Or have some feedback?\n            </SelectionTitle>\n            <ExternalLink\n              href=\"https://discord.gg/2KB3tzG\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"discord\"\n            >\n              <FontAwesomeIcon icon={faDiscord} /> Join the discord\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Theme</SelectionTitle>\n            <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n          </OptionSection>\n        </General>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Spells?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"spells\", \"DnDTome_spells.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {spellAmount} Spells?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"spells\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Gear?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"gears\", \"DnDTome_gear.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {gearAmount} Gear?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"gears\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Items?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"items\", \"DnDTome_items.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {itemAmount} Items?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"items\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Monsters?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"monsters\", \"DnDTome_monsters.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {monsterAmount} Monsters?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"monsters\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Races\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Races?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"races\", \"DnDTome_races.json\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subraces?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"subraces\", \"DnDTome_subraces.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {raceAmount} Races?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"races\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subraceAmount} Subraces?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subraces\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Classes\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Classes?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"classes\", \"DnDTome_classes.json\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subclasses?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAll(\"subclasses\", \"DnDTome_subclasses.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {classAmount} Classes?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"classes\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subclassAmount} Subclasses?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subclasses\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Chars\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import</SelectionTitle>\n            <FileField\n              label=\"\"\n              icon={faFileImport}\n              onChange={(file) => triggerImportFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Chars?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAll(\"chars\", \"DnDTome_chars.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {charAmount} Chars?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"chars\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nconst Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n  position: fixed;\n  z-index: 1000;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  animation: bounce 2s linear infinite;\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[]\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      ></Input>\n    </Field>\n  );\n};\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringField\n        value={time}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(time) => setTime(time)}\n      />\n      <StringField\n        value={range}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(range) => setRange(range)}\n      />\n      <StringField\n        value={duration}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(duration) => setDuration(duration)}\n      />\n      <StringField\n        value={components}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(components) => setComponents(components)}\n      />\n      <StringField\n        value={classes}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(classes) => setClasses(classes)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <StringField\n        value={text}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(text) => setText(text)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      {/* {!error && loading && <LoadingSpinner />}\n        {!error && !loading && ( */}\n      <SpellContainer\n        dataLength={spells.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {spells!.map((spell: Spell, index: number) => {\n          return <SpellTile key={index} spell={spell}></SpellTile>;\n        })}\n      </SpellContainer>\n      {/* )}\n        {error && <>Fail</>} */}\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n      console.time(\"filtered get all\");\n        table\n          .filter((obj: T) => {\n            let test: boolean[] = [];\n            filters.forEach((filter) => {\n              if (typeof filter.value === \"string\") {\n                test.push(\n                  // @ts-ignore\n                  obj[filter.fieldName]\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                );\n              } else if (typeof filter.value === \"number\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (typeof filter.value === \"boolean\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (filter.value instanceof Array) {\n                let arrayTest: boolean = false;\n                filter.value.forEach(\n                  (filterPart: string | boolean | number) => {\n                    if (typeof filterPart === \"string\") {\n                      if (\n                        // @ts-ignore\n                        obj[filter.fieldName]\n                          .toLowerCase()\n                          .includes(filterPart.toLowerCase())\n                      )\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"number\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"boolean\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    }\n                  }\n                );\n                test.push(arrayTest);\n              }\n            });\n\n            let result = true;\n            test.forEach((val) => {\n              if (!val) result = false;\n            });\n            return result;\n          })\n          .sortBy(\"name\")\n          .then((data) => {\n            console.timeEnd(\"filtered get all\");\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellDetail = ({ spell }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = (spellId: number | undefined) => {\n    remove(\"spells\", spellId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj,spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSpell(spellObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearDetail = ({ gear }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = (gearId: number | undefined) => {\n    remove(\"gears\", gearId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteGear(gearObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={cost}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(cost) => setCost(cost)}\n      />\n      <StringField\n        value={weight}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(weight) => setWeight(weight)}\n      />\n      <StringField\n        value={damage}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(damage) => setDamage(damage)}\n      />\n      <StringField\n        value={properties}\n        label=\"Properties\"\n        onChange={(properties) => setProperties(properties)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <GearContainer\n        dataLength={gears.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {gears!.map((gear: Gear, index: number) => {\n          return <GearTile key={index} gear={gear}></GearTile>;\n        })}\n      </GearContainer>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n\n  svg {\n  margin-right: 5px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(\"\");\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField value={cr} label=\"Cr\" onChange={(cr: string) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringField\n        value={alignment}\n        label=\"Alignment\"\n        onChange={(alignment: string) => setAlignment(alignment)}\n      />\n      <StringField\n        value={speed}\n        label=\"Speed\"\n        onChange={(speed: string) => setSpeed(speed)}\n      />\n      <StringField\n        value={skills}\n        label=\"Skills\"\n        onChange={(skills: string) => setSkills(skills)}\n      />\n      <StringField\n        value={senses}\n        label=\"Senses\"\n        onChange={(senses: string) => setSenses(senses)}\n      />\n      <StringField\n        value={lang}\n        label=\"Languages\"\n        onChange={(lang: string) => setLang(lang)}\n      />\n      <StringField\n        value={dmgVulnerabilitie}\n        label=\"Vulnerabilities\"\n        onChange={(dmgVulnerabilitie: string) => setDmgVulnerabilitie(dmgVulnerabilitie)}\n      />\n      <StringField\n        value={dmgResistance}\n        label=\"Resistances\"\n        onChange={(dmgResistance: string) => setDmgResistance(dmgResistance)}\n      />\n      <StringField\n        value={dmgImmunities}\n        label=\"Immunities\"\n        onChange={(dmgImmunities: string) => setDmgImmunities(dmgImmunities)}\n      />\n      <StringField\n        value={conImmunities}\n        label=\"Condition Immunities\"\n        onChange={(conImmunities: string) => setConImmunities(conImmunities)}\n      />\n      <StringField\n        value={ablt}\n        label=\"Abilities\"\n        onChange={(ablt: string) => setAblt(ablt)}\n      />\n      <StringField\n        value={sAblt}\n        label=\"Spezial Abilities\"\n        onChange={(sAblt: string) => setSAblt(sAblt)}\n      />\n      <StringField\n        value={lAblt}\n        label=\"Legendary Abilities\"\n        onChange={(lAblt: string) => setLAblt(lAblt)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources: string) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  \n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <MonsterContainer\n        dataLength={monsters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {monsters!.map((monster: Monster, index: number) => {\n          return <MonsterTile key={index} monster={monster}></MonsterTile>;\n        })}\n      </MonsterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{monster.cr}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        {monster.ablt && (\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.sAblt && (\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        )}\n      </View>\n      <View>\n        {monster.lAblt && (\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <StringField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterDetail = ({ monster }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = (monsterId: number | undefined) => {\n    remove(\"monsters\", monsterId);\n    history.goBack();\n  };\n  \n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj,monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteMonster(monsterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View>\n            <TraitWrapper key={index}>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceDetail = ({ race }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = (raceId: number | undefined) => {\n    remove(\"races\", raceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj,race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteRace(raceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceDetail = ({ subrace }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = (subraceId: number | undefined) => {\n    remove(\"subraces\", subraceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj,subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubrace(subraceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={abilityScores}\n        label=\"Ability Scores\"\n        onChange={(abilityScores: string) => setAbilityScores(abilityScores)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <RaceContainer\n        dataLength={races.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {races!.map((race: Race, index: number) => {\n          return <RaceTile key={index} race={race}></RaceTile>;\n        })}\n      </RaceContainer>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  useEffect(() => {\n    if (typeof optionTable === \"string\") {\n      reciveAll(optionTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionTable instanceof Array && optionTable.length > 0) {\n      findAllItems(optionTable);\n    }\n  }, [optionTable]);\n\n  const findAllItems = async (optionTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      setFilteredOptions(\n        options.filter((option) => {\n          return option.name.includes(searchTerm);\n        })\n      );\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 1 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border: 1px solid #d4d4d4;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  overflow-y: scroll;\n  max-height: 100px;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  border-bottom: 1px solid #d4d4d4;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemDetail = ({ item }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = (itemId: number | undefined) => {\n    remove(\"items\", itemId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj,item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n  \n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteItem(itemObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faLink, faSearch, faRedoAlt, faBook, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringField\n        value={description}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(description) => setDescription(description)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ItemContainer\n        dataLength={items.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {items!.map((item: Item, index: number) => {\n          return <ItemTile key={index} item={item}></ItemTile>;\n        })}\n      </ItemContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassDetail = ({ classe }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = (classeId: number | undefined) => {\n    remove(\"classes\", classeId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteClass(classObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses]  = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    \n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <ClassContainer\n      dataLength={classes.length}\n      next={fetchMoreData}\n      hasMore={scrollParam.hasMore}\n      loader={<LoadingSpinner />}>\n        {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n      </ClassContainer>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassDetail = ({ subclass }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = (subclassId: number | undefined) => {\n    remove(\"subclasses\", subclassId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj,subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubclass(subclassObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (\n    newItem: string,\n    oldItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }\n  ) => {\n    let items = char.items.map(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        if (item.origin === oldItem.origin) {\n          return { ...item, origin: newItem };\n        } else {\n          return item;\n        }\n      }\n    );\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (newItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let items = char.items.map(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        if (item.origin === newItem.origin) {\n          return newItem;\n        } else {\n          return item;\n        }\n      }\n    );\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, item)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute({\n                          ...item,\n                          attuned: attunment,\n                        })\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof })\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute({ ...item, attribute: type })\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharDetail = ({ char }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = (charId: number | undefined) => {\n    remove(\"chars\", charId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar(charObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport { faLink, faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringField from \"../../FormElements/StringField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <StringField\n        value={sources}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 50px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <CharContainer\n        dataLength={chars.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {chars!.map((char: Char, index: number) => {\n          return <CharTile key={index} char={char}></CharTile>;\n        })}\n      </CharContainer>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={CharOverview}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}