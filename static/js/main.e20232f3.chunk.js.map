{"version":3,"sources":["dndtome icon_v2.png","../node_modules/peerjs/dist sync","components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/IEntity.tsx","Data/Selection.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Data/Encounter/Encounter.tsx","Services/OptionService.tsx","Services/5eToolService.tsx","components/FormElements/StringField.tsx","components/FormElements/TextButton.tsx","components/Loading.tsx","components/P2P/P2PReciver.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Entities/Classes/ClassTile.tsx","components/Encounters/EncounterTile.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Spells/SpellTile.tsx","components/Options/GeneralOptions.tsx","components/P2P/P2PSender.tsx","Services/PeerIdService.tsx","components/Options/SpellsOptions.tsx","components/Options/GearsOptions.tsx","components/Options/ItemsOptions.tsx","components/Options/MonstersOptions.tsx","components/Options/RacesOptions.tsx","components/Options/ClassesOptions.tsx","components/Options/CharsOptions.tsx","components/Options/EncountersOptions.tsx","components/Options/SelectionsOptions.tsx","components/Options/Options.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringSearchField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/GeneralElements/Dialog.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/EnumField.tsx","components/FormElements/NumberArrayField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","components/Encounters/EncounterSearchBar.tsx","components/Encounters/EncounterOverview.tsx","Data/Encounter/Player.tsx","Services/EncounterService.tsx","components/Encounters/Detail/EncounterEditView.tsx","Services/DiceService.tsx","components/FormElements/TinyNumberField.tsx","components/Encounters/Detail/EncounterView.tsx","components/Encounters/Detail/EncounterDetail.tsx","components/Encounters/Detail/LinkWrapper/NameToEncounter.tsx","components/Encounters/Detail/LinkWrapper/IdToEncounter.tsx","components/Statistics/Gear/CostRatioChart.tsx","components/Statistics/Gear/DamageRatioChart.tsx","components/Statistics/Gear/GearTypeRatioChart.tsx","components/Statistics/Gear/WeightRatioChart.tsx","components/Statistics/General/AmountOfEntitiesChart.tsx","components/Statistics/Items/AttunmentRatioChart.tsx","components/Statistics/Items/BaseRatioChart.tsx","components/Statistics/Items/ItemTypeRatioChart.tsx","components/Statistics/Items/MagicBonusRatioChart.tsx","components/Statistics/Items/RarityRatioChart.tsx","components/Statistics/Monsters/CrRatioChart.tsx","components/Statistics/Monsters/LegendaryRatioChart.tsx","components/Statistics/Monsters/MonsterTypeRatioChart.tsx","components/Statistics/Spells/ActionsRatioChart.tsx","components/Statistics/Spells/LevelRatioChart.tsx","components/Statistics/Spells/RitualRatioChart.tsx","components/Statistics/Spells/SchoolsRatioChart.tsx","components/Statistics/Statistics.tsx","components/Library/BookTile.tsx","Data/Book.tsx","components/Library/LibrarySearchBar.tsx","components/Library/Library.tsx","components/Library/Detail/BookView.tsx","components/Library/Detail/BookEditView.tsx","components/Library/Detail/BookDetail.tsx","components/Library/Detail/LinkWrapper/IdToBook.tsx","components/Library/Detail/LinkWrapper/NameToBook.tsx","Data/RandomTable.tsx","components/Home/Home.tsx","components/Help/Help.tsx","components/Entities/Selections/Detail/SelectionView.tsx","components/Entities/Selections/Detail/SelectionEditView.tsx","components/Entities/Selections/Detail/SelectionDetail.tsx","components/Entities/Selections/Detail/LinkWrapper/NameToSelection.tsx","components/Entities/Selections/SelectionTile.tsx","components/Entities/Selections/SelectionSearchBar.tsx","components/Entities/Selections/SelectionOverview.tsx","components/Entities/Selections/Detail/LinkWrapper/IdToSelection.tsx","components/RandomTables/Detail/RandomTableView.tsx","components/RandomTables/Detail/RandomTableEditView.tsx","components/RandomTables/Detail/RandomTableDetail.tsx","components/RandomTables/Detail/LinkWrapper/IdToRandomTable.tsx","components/RandomTables/Detail/LinkWrapper/NameToRandomTable.tsx","components/RandomTables/RandomTableTile.tsx","components/RandomTables/RandomTableSearchBar.tsx","components/RandomTables/RandomTableOverview.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","lightTheme","buttons","color","backgroundColor","disabled","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","selections","randomTables","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","result","finally","close","saveNew","entity","filename","a","put","prom","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","name","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","isIEntity","Selection","selectionOptions","isSelection","selectionOptionsCheck","isArray","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","selectionsCheck","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","activeSelections","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","Encounter","enemies","players","isPlaying","currentInit","roundCounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","scanImportFileTest","json","fileName","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","selectionFormatErrors","findSelectionFormattError","selectionFailCount","errors","item","gear","spell","monster","class","subclass","selection","JSON","stringify","failedObject","Errors","exportAllFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","tableList","results","list","parseGear","textPart","entryTextPart","listItem","colLabels","rows","cel","convertText","trim","dmg1","dmgType","property","prop","source","parseItem","bonusSpellAttack","Number","parseInt","bonusWeapon","bonusAc","reqAttune","baseItem","baseParts","split","StringField","placeholder","icon","transform","onChange","Field","LabelText","Icon","Input","styled","FontAwesomeIcon","div","TextButton","onClick","SimpleButton","button","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","LocalLoadingSpinner","Wrapper","LocalSpinner","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","console","log","faExclamationCircle","faCheck","Header","Bar","Name","HomeCredits","packageJson","NavButton","setOpen","Button","NavMenu","location","useLocation","Menu","to","className","pathname","faHome","Seperator","faMeteor","faIdCard","faDragon","faTable","faCog","faChartPie","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","map","child","index","Tab","key","FileField","accept","isMulti","files","multiple","IconButton","DisabledSimpleButton","ClassTile","getPicture","useCallback","Tile","fallback","PropWrapper","Prop","faLink","Link","Image","ImageElm","src","Empty","img","EncounterTile","encounter","faUser","PropTitle","span","CharTile","char","calcLevel","PropRowWrapper","RowProp","classSet","ImgContainer","props","GearTile","ImageName","faCoins","faWeightHanging","WideProp","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ItemTile","hasAttunment","Rarity","Flag","MonsterTile","isLegendary","formatCr","Type","CR","faRunning","RaceTile","SpellTile","formatTime","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","School","Level","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","GeneralOptions","General","OptionSection","SelectionTitle","ExternalLink","rel","faPatreon","faDiscord","P2PSender","mode","setName","setPeer","brokerId","min","max","password","characters","i","Math","floor","random","generateBrokerId","newPeer","errorData","send","disconnected","destroyed","reconnect","SpellsOptions","amount","triggerDeleteAll","setSend","OptionTab","SectionRow","SectionText","faFileExport","faTrashAlt","faPaperPlane","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","CharsOptions","EncountersOptions","SelectionsOptions","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","selectionAmount","setSelectionAmount","isReload","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","setData","triggerImportFiles","fileList","from","file","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","setTimeout","trigger5eToolsSpellImport","fromClassList","number","unit","condition","distance","typ","v","s","m","concentration","newSpell","meta","import5eToolsSpellsFiles","trigger5eToolsMonsterImport","_copy","tags","align","value2","save","skill","sense","langs","languages","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conditionImmune","trait","tra","entry","action","lactions","legendary","newMonster","average","import5eToolsMonstersFiles","trigger5eToolsItemsImport","baseitem","newGear","newItem","import5eToolsItemsFiles","clear","deleteAll","returnTile","Message","faFileImport","tab","OptionSectionLarge","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","classNamePrefix","Select","StringSearchField","field","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","setSort","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","slice","filterArray","SpellContainer","dataLength","next","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","first","FormatedText","formatedText","setFormatedText","formatLink","parts","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","th","td","SpellView","CenterWrapper","View","Text","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","Dialog","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","ButtonBar","SpellDetail","isNew","editMode","setMode","spellObj","editSpell","showDeleteDialog","setDeleteDialog","unsavedChanges","setUnsavedChanges","faExclamationTriangle","goBack","TopBar","faArrowLeft","EditToggle","ToggleLeft","ToggleRight","title","updateSpell","faSave","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","NameToGear","IdToGear","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","faShieldAlt","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","NameToSubrace","IdToSubrace","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","NameToItem","IdToItem","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","EnumField","NumberArrayField","values","setArray","handleValueChange","ClassEditView","setSelections","select","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","NameToClass","IdToClass","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","deathSaves","setDeathSaves","prof","setProf","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","f1","f2","b","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","selectionsData","activeSelect","featureName","activeOption","activeSelectOption","entityName","entityText","CharEditView","onChangeItemAttribute","recalcSelections","newActiveSelections","selectionName","featureCount","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","onChangeActiveSelection","oldActiveSelection","activeSelection","activSelect","notes","oldClass","newClassList","removeClass","addNewClass","find","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","NameToChar","IdToChar","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","EncounterSearchBar","newEncounter","createNewEncounter","EncounterOverview","allEncounters","setAllEncounters","setEncounters","EncounterContainer","Player","tempHp","initBonus","tag","crExpTable","exp","expTable","easy","hard","deadly","calcDifficulty","calcExp","enemyExp","enemy","crExp","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","newEnemy","oldEnemy","onChangePlayerField","newPlayer","oldPlayer","onChangeEnemy","newEnemyList","removeEnemy","addNewEnemy","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","rollDie","round","TinyNumberField","EncounterView","setPlayers","newPlayers","newField","finishEncounter","newEnemies","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Table","Row","isDead","PropField","faSkullCrossbones","EncounterDetail","encounterObj","editEncounter","updateEncounter","encounterId","editAndSaveEncounter","NameToEncounter","IdToEncounter","CostRatioChart","setLoading","generalCounts","setGeneralCounts","makeSchoolsData","costs","names","counts","colors","labels","datasets","paddingBottom","DamageRatioChart","GearTypeRatioChart","WeightRatioChart","weights","AmountOfEntitiesChart","makeGeneralCountsData","AttunmentRatioChart","attunments","BaseRatioChart","ItemTypeRatioChart","MagicBonusRatioChart","magicBoni","RarityRatioChart","CrRatioChart","crs","LegendaryRatioChart","leg","noleg","MonsterTypeRatioChart","ActionsRatioChart","times","newTimes","startsWith","LevelRatioChart","RitualRatioChart","rituals","SchoolsRatioChart","Statistics","BookTile","book","cover","pages","faTags","Tag","Book","LibrarySearchBar","setTags","setPages","newBook","createNewBook","Library","allBooks","setAllBooks","setBooks","LibraryContainer","pdfjs","GlobalWorkerOptions","workerSrc","BookView","numPages","setNumPages","pageNumber","setPageNumber","reader","readAsDataURL","base64data","changePage","prevPageNumber","DocumentWrapper","faArrowRight","onLoadSuccess","onItemClick","itemPageNumber","appVersion","msSaveBlob","url","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","TagWrapper","faTag","BookEditView","TagView","oldTag","onTagChange","removeTag","BookDetail","bookObj","editBook","updateBook","IdToBook","NameToBook","RandomTable","header","Home","bookAmount","setBookAmount","tableAmount","setTableAmount","HomeSectionLarge","logo","alt","HomeSection","newSelection","createNewSelection","newRandomTable","createNewRandomTable","faQuestionCircle","Help","HelpSection","SelectionView","SelectionEditView","SelectionWrapper","SelectionName","SelectionLevel","SelectionText","SelectionDetail","selectionObj","editSelection","updateSelection","NameToSelection","SelectionTile","SelectionSearchBar","SelectionOverview","allSelections","setAllSelections","SelectionContainer","IdToSelection","RandomTableView","randomTable","rand","setRand","faDice","lastRowValues","rollForRandom","RandomTableEditView","onRowChange","RowWrapper","RowCount","removeRow","RandomTableDetail","randomTableObj","editRandomTable","updateRandomTable","IdToRandomTable","NameToRandomTable","RandomTableTile","RandomTableSearchBar","RandomTableOverview","allRandomTables","setAllRandomTables","setRandomTables","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","getElementById","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e20232f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dndtome icon_v2.b0a4f31d.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 240;","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\nimport Encounter from \"../Data/Encounter/Encounter\";\nimport Book from \"../Data/Book\";\nimport Selection from \"../Data/Selection\";\nimport RandomTable from \"../Data/RandomTable\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nconst applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if(hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName]\n            .toLowerCase()\n            .includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName]\n              .toLowerCase()\n              .includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (\n  tableName: string,\n  attribute: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: { entityName: string; entityText: string; level: number }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: featureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Selection, {\n  findSelectionFormattError,\n  isSelection,\n} from \"../Data/Selection\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\nimport IEntity from \"../Data/IEntity\";\nimport Encounter, { isEncounter } from \"../Data/Encounter/Encounter\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file.name, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  let failCount = 0;\n  let failedObj: string[] = [];\n  let promList: Promise<any>[] = [];\n\n  if (Array.isArray(json)) {\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, fileName));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, fileName));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, fileName));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, fileName));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, fileName));\n      } else if (isEncounter(obj)) {\n        promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n      } else if (isSelection(obj)) {\n        promList.push(saveNew(\"selections\", obj as Selection, fileName));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, fileName));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  } else {\n    if (isClass(json)) {\n      promList.push(saveNew(\"classes\", json as Class, fileName));\n    } else if (isSubclass(json)) {\n      promList.push(saveNew(\"subclasses\", json as Subclass, fileName));\n    } else if (isRace(json)) {\n      promList.push(saveNew(\"races\", json as Race, fileName));\n    } else if (isSubrace(json)) {\n      promList.push(saveNew(\"subraces\", json as Subrace, fileName));\n    } else if (isMonster(json)) {\n      promList.push(saveNew(\"monsters\", json as Monster, fileName));\n    } else if (isSpell(json)) {\n      promList.push(saveNew(\"spells\", json as Spell, fileName));\n    } else if (isGear(json)) {\n      promList.push(saveNew(\"gears\", json as Gear, fileName));\n    } else if (isItem(json)) {\n      promList.push(saveNew(\"items\", json as Item, fileName));\n    } else if (isEncounter(json)) {\n      promList.push(saveNew(\"encounters\", json as Encounter, fileName));\n    } else if (isSelection(json)) {\n      promList.push(saveNew(\"selections\", json as Selection, fileName));\n    } else if (isChar(json)) {\n      saveNew(\"chars\", json as Char, fileName);\n    } else {\n      failCount++;\n      failedObj.push(\n        scanForFormatErrors(json)\n          .replaceAll(\"true\", \"success!\")\n          .replaceAll(\"false\", \"fail!\")\n      );\n    }\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n  const selectionFormatErrors = findSelectionFormattError(obj);\n  let selectionFailCount: number = 0;\n  for (const value of Object.entries(selectionFormatErrors)) {\n    if (!value[1]) selectionFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= selectionFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= selectionFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= selectionFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= selectionFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= selectionFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= selectionFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= selectionFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= selectionFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  if (\n    selectionFailCount <= itemFailCount &&\n    selectionFailCount <= gearFailCount &&\n    selectionFailCount <= monsterFailCount &&\n    selectionFailCount <= raceFailCount &&\n    selectionFailCount <= subraceFailCount &&\n    selectionFailCount <= classFailCount &&\n    selectionFailCount <= subclassFailCount &&\n    selectionFailCount <= spellFailCount\n  ) {\n    errors.push({ selection: selectionFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  tableList.push(reciveAllPromise(\"encounters\"));\n  tableList.push(reciveAllPromise(\"selections\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Spell from \"../Data/Spell\";\nimport { saveNew } from \"./DatabaseService\";\n\nexport const import5eToolsSpellsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.spell.forEach((obj: any) => {\n            let classes = \"\";\n            if (\n              obj.classes !== undefined &&\n              obj.classes.fromClassList !== undefined\n            ) {\n              obj.classes.fromClassList.forEach(\n                (classe: { name: string; source: string }) => {\n                  classes += classe.name + \", \";\n                }\n              );\n            }\n\n            let school = \"\";\n            if (obj.school === \"V\") school = \"Evocation\";\n            if (obj.school === \"D\") school = \"Divination\";\n            if (obj.school === \"N\") school = \"Necromancy\";\n            if (obj.school === \"T\") school = \"Transmutation\";\n            if (obj.school === \"I\") school = \"Illusion\";\n            if (obj.school === \"C\") school = \"Conjuration\";\n            if (obj.school === \"A\") school = \"Abjuration\";\n            if (obj.school === \"E\") school = \"Enchantment\";\n\n            let time = \"\";\n            if (obj.time !== undefined) {\n              time =\n                obj.time[0].number +\n                \" \" +\n                obj.time[0].unit +\n                \" \" +\n                (obj.time[0].condition ? obj.time[0].condition : \"\");\n            }\n\n            let range = \"\";\n            if (obj.range !== undefined) {\n              range =\n                obj.range.type +\n                \" \" +\n                (obj.distance\n                  ? obj.range.distance.typ +\n                    \" \" +\n                    (obj.range.distance.amount ? obj.range.distance.amount : \"\")\n                  : \"\");\n            }\n\n            let components = \"\";\n            if (obj.components !== undefined) {\n              components =\n                (obj.components.v ? \"V, \" : \"\") +\n                (obj.components.s ? \"S, \" : \"\");\n              if (obj.components.m !== undefined) {\n                if (obj.components.m.text !== undefined) {\n                  components = \"M (\" + obj.components.m.text + \")\";\n                } else {\n                  components = \"M (\" + obj.components.m + \")\";\n                }\n              }\n            }\n\n            let duration = \"\";\n            if (obj.duration !== undefined) {\n              let concentration = obj.duration[0].concentration;\n              duration =\n                (concentration ? \"Concentration, \" : \"\") +\n                obj.duration[0].type +\n                \" \" +\n                (obj.duration[0].duration !== undefined\n                  ? obj.duration[0].duration.type +\n                    \" \" +\n                    obj.duration[0].duration.amount\n                  : \"\");\n            }\n\n            let text = \"\";\n            obj.entries.forEach((textPart: string | any) => {\n              if (typeof textPart === \"string\") {\n                text += textPart + \"\\n\";\n              } else {\n                if (\n                  textPart.name !== undefined &&\n                  textPart.entries !== undefined\n                ) {\n                  text += \"\\n\" + textPart.name + \". \";\n                  textPart.entries.forEach((entryTextPart: string) => {\n                    text += entryTextPart + \"\\n\";\n                  });\n                } else if (textPart.items !== undefined) {\n                  textPart.items.forEach((listItem: string) => {\n                    text += \"• \" + listItem + \"\\n\";\n                  });\n                } else if (\n                  textPart.type !== undefined &&\n                  textPart.type === \"table\"\n                ) {\n                  text += \"||table||\\n\";\n                  if (textPart.colLabels !== undefined) {\n                    text += \"||\";\n                    textPart.colLabels.forEach((listItem: string) => {\n                      text += listItem + \"|\";\n                    });\n                    text += \"|\\n\";\n                  }\n                  textPart.rows.forEach((rows: string[]) => {\n                    text += \"||\";\n                    rows.forEach((cel: string) => {\n                      text += cel + \"|\";\n                    });\n                    text += \"|\\n\";\n                  });\n                  text += \"||table||\\n\";\n                } else {\n                  let convertText = JSON.stringify(textPart);\n                  convertText = convertText\n                    .replaceAll(\"},\", \"\\n\")\n                    .replaceAll(\"[\", \"\")\n                    .replaceAll(\"]\", \"\")\n                    .replaceAll(\"}\", \"\")\n                    .replaceAll(\"{@\", \"\")\n                    .replaceAll(\"{\", \"\");\n                  convertText = convertText.trim();\n                  text += convertText;\n                }\n              }\n            });\n            text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n            text = text.trim();\n\n            let newSpell = new Spell(\n              obj.name,\n              classes,\n              obj.source,\n              obj.level,\n              school,\n              time,\n              range,\n              components,\n              duration,\n              obj.meta && obj.meta.ritual ? 1 : 0,\n              text,\n              0,\n              file.name,\n              \"\"\n            );\n            promList.push(saveNew(\"spells\", newSpell, file.name));\n          });\n          await Promise.all(promList);\n          callback(json.spell.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsMonstersFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.monster.forEach((obj: any) => {\n            if (obj._copy === undefined) {\n              let type = \"\";\n              let subtype = \"\";\n              if (typeof obj.type === \"string\") {\n                type = obj.type;\n              } else {\n                type = obj.type.type;\n                if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n              }\n\n              let cr = 0;\n              if (obj.cr !== undefined) {\n                if (typeof obj.cr === \"string\") {\n                  if (obj.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr;\n                  }\n                } else {\n                  if (obj.cr.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr.cr;\n                  }\n                }\n              }\n\n              let alignment = \"\";\n              if (obj.alignment !== undefined) {\n                obj.alignment.forEach((align: string) => {\n                  if (align === \"L\") alignment += \"lawfull \";\n                  if (align === \"N\") alignment += \"neutral \";\n                  if (align === \"C\") alignment += \"chaotic \";\n                  if (align === \"G\") alignment += \"good \";\n                  if (align === \"E\") alignment += \"evil \";\n                });\n              }\n              alignment = alignment.trim();\n\n              let size = \"\";\n              if (obj.size !== undefined) {\n                if (obj.size === \"L\") size += \"large \";\n                else if (obj.size === \"H\") size += \"huge \";\n                else if (obj.size === \"T\") size += \"tiny \";\n                else if (obj.size === \"M\") size += \"medium \";\n                else if (obj.size === \"S\") size += \"small \";\n                else if (obj.size === \"G\") size += \"gargantuan \";\n              }\n              size = size.trim();\n\n              let ac = 0;\n              if (typeof obj.ac[0] === \"number\") {\n                ac = obj.ac[0];\n              } else {\n                ac = obj.ac[0].ac;\n              }\n\n              let speed = \"\";\n              for (const [key, value] of Object.entries(obj.speed)) {\n                if (typeof value === \"number\") {\n                  speed += key + \" \" + value + \"ft, \";\n                } else if (typeof value === \"boolean\") {\n                } else {\n                  speed += key + \" \";\n                  for (const value2 of Object.entries(\n                    value as Object\n                  )) {\n                    if (typeof value2[1] === \"number\") {\n                      speed += value2[1] + \"ft, \";\n                    } else if (typeof value2[1] === \"string\") {\n                      speed += value2[1];\n                    }\n                  }\n                  speed += \", \";\n                }\n              }\n              speed.trim();\n\n              let saves = \"\";\n              if (obj.save !== undefined)\n                for (const [key, value] of Object.entries(obj.save)) {\n                  saves += key + \" \" + value + \", \";\n                }\n              saves.trim();\n\n              let skills = \"\";\n              if (obj.skill !== undefined)\n                for (const [key, value] of Object.entries(obj.skill)) {\n                  skills += key + \" \" + value + \", \";\n                }\n              skills.trim();\n\n              let senses = \"\";\n              obj.senses &&\n                obj.senses.forEach((sense: string) => {\n                  senses += sense + \", \";\n                });\n              senses.trim();\n\n              let langs = \"\";\n              obj.languages &&\n                obj.languages.forEach((lang: string) => {\n                  langs += lang + \", \";\n                });\n              langs.trim();\n\n              let vulnerabilities = \"\";\n              obj.vulnerable &&\n                obj.vulnerable.forEach((vul: string) => {\n                  vulnerabilities += vul + \", \";\n                });\n              vulnerabilities.trim();\n\n              let resistencies = \"\";\n              obj.resist &&\n                obj.resist.forEach((res: string) => {\n                  resistencies += res + \", \";\n                });\n              resistencies.trim();\n\n              let immunities = \"\";\n              obj.immune &&\n                obj.immune.forEach((imu: string) => {\n                  immunities += imu + \", \";\n                });\n              immunities.trim();\n\n              let conImmunities = \"\";\n              obj.conditionImmune &&\n                obj.conditionImmune.forEach((imu: string) => {\n                  conImmunities += imu + \", \";\n                });\n              conImmunities.trim();\n\n              let traits = \"\";\n              obj.trait &&\n                obj.trait.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    traits += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        traits += entry + \" \\n\";\n                      });\n                      traits += \"\\n\";\n                    }\n                  }\n                );\n              traits = traits\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              traits = traits.trim();\n\n              let actions = \"\";\n              obj.action &&\n                obj.action.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    actions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        actions += entry + \" \\n\";\n                      });\n                      actions += \" \\n\";\n                    }\n                  }\n                );\n              actions = actions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              actions = actions.trim();\n\n              let lactions = \"\";\n              obj.legendary &&\n                obj.legendary.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    lactions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        lactions += entry + \" \\n\";\n                      });\n                      lactions += \" \\n\";\n                    }\n                  }\n                );\n              lactions = lactions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              lactions = lactions.trim();\n\n              let newMonster = new Monster(\n                0,\n                obj.name,\n                obj.source,\n                \"\",\n                size,\n                type,\n                subtype,\n                alignment,\n                ac,\n                obj.hp.average,\n                speed,\n                cr,\n                obj.str,\n                obj.dex,\n                obj.con,\n                obj.int,\n                obj.wis,\n                obj.cha,\n                saves,\n                skills,\n                senses,\n                langs,\n                vulnerabilities,\n                resistencies,\n                immunities,\n                conImmunities,\n                traits,\n                actions,\n                lactions\n              );\n              promList.push(saveNew(\"monsters\", newMonster, file.name));\n            }\n          });\n          await Promise.all(promList);\n          callback(json.monster.length);\n        }\n      };\n      fileReader.readAsText(file);\n      console.log(\"Done\");\n    });\n  }\n};\n\nexport const import5eToolsItemsFiles = (\n  fileList: FileList | null,\n  callback: (max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n\n          let items: any[] = [];\n          if (json.item !== undefined) items = json.item;\n          if (json.baseitem !== undefined) items = json.baseitem;\n\n          items.forEach((obj: any) => {\n            if (obj.rarity !== undefined) {\n              if (obj.rarity === \"none\" || obj.rarity === \"unknown\") {\n                let newGear: Gear = parseGear(obj, file.name);\n                promList.push(saveNew(\"gears\", newGear, file.name));\n              } else {\n                let newItem: Item = parseItem(obj, file.name);\n                promList.push(saveNew(\"items\", newItem, file.name));\n              }\n            }\n          });\n          await Promise.all(promList);\n          callback(items.length);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst parseGear = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let type = \"\";\n  if (obj.type !== undefined) {\n    type = obj.type;\n  }\n\n  let damage = \"\";\n  if (obj.dmg1 !== undefined) {\n    damage += obj.dmg1;\n    if (obj.dmgType !== undefined) {\n      if (obj.dmgType === \"S\") damage += \" slashing damage\";\n      else if (obj.dmgType === \"P\") damage += \" piercing damage\";\n      else if (obj.dmgType === \"B\") damage += \" bludgeoning damage\";\n      else if (obj.dmgType === \"R\") damage += \" radiant damage\";\n    }\n  }\n\n  let properties = \"\";\n  if (obj.range !== undefined) {\n    properties += \"ranged (\" + obj.range + \"), \";\n  }\n  if (obj.property !== undefined) {\n    obj.property.forEach((prop: string) => {\n      if (prop === \"L\") properties += \"light, \";\n      else if (prop === \"AF\") properties += \"radiant damage, \";\n      else if (prop === \"RLD\") properties += \"loading, \";\n      else if (prop === \"2H\") properties += \"two-handed, \";\n      else if (prop === \"F\") properties += \"finesse, \";\n      else if (prop === \"H\") properties += \"heavy, \";\n      else if (prop === \"R\") properties += \"reach, \";\n      else if (prop === \"T\") properties += \"thrown, \";\n      else if (prop === \"V\") properties += \"versatile, \";\n    });\n  }\n  properties = properties.trim();\n\n  let newGear = new Gear(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.value,\n    damage,\n    obj.weight,\n    properties,\n    type,\n    fileName\n  );\n  return newGear;\n};\n\nconst parseItem = (obj: any, fileName: string) => {\n  let text = \"\";\n  if (obj.entries !== undefined) {\n    obj.entries.forEach((textPart: string | any) => {\n      if (typeof textPart === \"string\") {\n        text += textPart + \"\\n\";\n      } else {\n        if (textPart.name !== undefined && textPart.entries !== undefined) {\n          text += \"\\n\" + textPart.name + \". \";\n          textPart.entries.forEach((entryTextPart: string) => {\n            text += entryTextPart + \"\\n\";\n          });\n        } else if (textPart.items !== undefined) {\n          textPart.items.forEach((listItem: string) => {\n            text += \"• \" + listItem + \"\\n\";\n          });\n        } else if (textPart.type !== undefined && textPart.type === \"table\") {\n          text += \"||table||\\n\";\n          if (textPart.colLabels !== undefined) {\n            text += \"||\";\n            textPart.colLabels.forEach((listItem: string) => {\n              text += listItem + \"|\";\n            });\n            text += \"|\\n\";\n          }\n          textPart.rows.forEach((rows: string[]) => {\n            text += \"||\";\n            rows.forEach((cel: string) => {\n              text += cel + \"|\";\n            });\n            text += \"|\\n\";\n          });\n          text += \"||table||\\n\";\n        } else {\n          let convertText = JSON.stringify(textPart);\n          convertText = convertText\n            .replaceAll(\"},\", \"\\n\")\n            .replaceAll(\"[\", \"\")\n            .replaceAll(\"]\", \"\")\n            .replaceAll(\"}\", \"\")\n            .replaceAll(\"{@\", \"\")\n            .replaceAll(\"{\", \"\");\n          convertText = convertText.trim();\n          text += convertText;\n        }\n      }\n    });\n    text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n  }\n  const description = text.trim();\n\n  let magicBonus = 0;\n  if (obj.bonusSpellAttack !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusSpellAttack.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusWeapon !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusWeapon.replaceAll(\"+\", \"\"));\n  } else if (obj.bonusAc !== undefined) {\n    magicBonus = Number.parseInt(obj.bonusAc.replaceAll(\"+\", \"\"));\n  }\n\n  let attunment = 0;\n  if (obj.reqAttune !== undefined) {\n    attunment = obj.reqAttune ? 1 : 0;\n  }\n\n  let base = \"\";\n  let type = \"\";\n  if (obj.baseItem !== undefined) {\n    let baseParts: string[] = obj.baseItem.split(\"|\");\n    base = baseParts[0];\n    type = baseParts[0];\n  }\n\n  let newItem = new Item(\n    0,\n    obj.name,\n    obj.source,\n    description,\n    \"\",\n    obj.rarity,\n    magicBonus,\n    attunment,\n    base,\n    type,\n    fileName\n  );\n  return newItem;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../Services/OptionService\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport TextButton from \"../FormElements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n  faHome,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n} from \"react-icons/gi\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/home\"\n        className={\n          location.pathname === \"/home\" || location.pathname === \"/\"\n            ? \"menuItemActiv\"\n            : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faHome} />\n        Home\n      </Link>\n      <Seperator />\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/selection-overview\"\n        className={\n          location.pathname === \"/selection-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <BiSelectMultiple />\n        Selections\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      <Seperator />\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/encounter-overview\"\n        className={\n          location.pathname === \"/encounter-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiSwordClash />\n        Encounters\n      </Link>\n      <Seperator />\n      <Link\n        to=\"/randomTable-overview\"\n        className={\n          location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faTable} />\n        Random Tables\n      </Link>\n      <Seperator />\n      <Link\n        to=\"/library\"\n        className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiBookmarklet />\n        Library\n      </Link>\n      <Seperator />\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n      <Link\n        to=\"/statistics\"\n        className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faChartPie} />\n        Statistics\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em - 50px);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  overflow-y: auto;\n  overflow-x: hidden;\n  top: 50px;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    flex: 1 1 auto;\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.tile.color};\n  }\n`;\n\nconst Seperator = styled.div`\n  width: 100%;\n  height: 1px;\n  border-bottom: 1px solid #a64dff;\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e:any) => void);\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDragon, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterTile = ({ encounter }: $Props) => {\n  return (\n    <Tile to={\"/encounter-detail/id/\" + encounter.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faUser} />\n            {encounter.players.length}\n          </Prop>\n          <Prop>\n            <Icon icon={faDragon} />\n            {encounter.enemies.length}\n          </Prop>\n          {encounter.isPlaying && (\n            <>\n              <Prop>Aktiv playing</Prop>\n              <Prop>\n                <PropTitle>Round: </PropTitle>\n                {encounter.roundCounter}\n              </Prop>\n            </>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EncounterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\n\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Want to support me?</SelectionTitle>\n        <ExternalLink\n          href=\"https://www.patreon.com/bePatron?u=25310394\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"patreon\"\n        >\n          <FontAwesomeIcon icon={faPatreon} /> Become a patron\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Found some bugs? Or have some feedback?</SelectionTitle>\n        <ExternalLink\n          href=\"https://discord.gg/2KB3tzG\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"discord\"\n        >\n          <FontAwesomeIcon icon={faDiscord} /> Join the discord\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport { generateBrokerId } from \"../../Services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField\n            value={peer.id}\n            label={`Your ${name} ID:`}\n            onChange={() => {}}\n          />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"gears\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all gears`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"items\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all items`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subraces\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n            }\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"classes\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subclasses\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SelectionsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Selections?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"selections\", \"DnDTome_selections.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Selections?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"selections\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all selections`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"selections\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SelectionsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { importFiles, exportAll } from \"../../Services/OptionService\";\nimport {\n  import5eToolsItemsFiles,\n  import5eToolsMonstersFiles,\n  import5eToolsSpellsFiles,\n} from \"../../Services/5eToolService\";\nimport {\n  deleteAll,\n  reciveCount,\n  reciveAllPromise,\n} from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport P2PReciver from \"../P2P/P2PReciver\";\nimport { isChar } from \"../../Data/Chars/Char\";\nimport { isClass } from \"../../Data/Classes/Class\";\nimport { isSubclass } from \"../../Data/Classes/Subclass\";\nimport { isEncounter } from \"../../Data/Encounter/Encounter\";\nimport { isGear } from \"../../Data/Gear\";\nimport { isItem } from \"../../Data/Item\";\nimport { isMonster } from \"../../Data/Monster\";\nimport { isRace } from \"../../Data/Races/Race\";\nimport { isSubrace } from \"../../Data/Races/Subrace\";\nimport { isSpell } from \"../../Data/Spell\";\n\nimport { faFileImport, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport ClassTile from \"../Entities/Classes/ClassTile\";\nimport EncounterTile from \"../Encounters/EncounterTile\";\nimport CharTile from \"../Entities/Chars/CharTile\";\nimport GearTile from \"../Entities/Gear/GearTile\";\nimport ItemTile from \"../Entities/Item/ItemTile\";\nimport MonsterTile from \"../Entities/Monster/MonsterTile\";\nimport RaceTile from \"../Entities/Races/RaceTile\";\nimport SpellTile from \"../Entities/Spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\nimport SelectionsOptions from \"./SelectionsOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \" of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsSpellImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsSpellsFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsMonsterImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsMonstersFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const trigger5eToolsItemsImport = (fileList: FileList | null) => {\n    isLoading(true);\n    import5eToolsItemsFiles(\n      fileList,\n      (max: number) => {\n        isReload(true);\n        isLoading(false);\n\n        setMessage(max + \" imported successfully!\");\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"DnDTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Selections\",\n          \"Chars\",\n          \"Encounters\",\n          \"Other Import\",\n          \"Recive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions amount={gearAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions amount={itemAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions\n          amount={monsterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions\n          amounts={[raceAmount, subraceAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Selections\" && (\n        <SelectionsOptions\n          amount={selectionAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions\n          amount={encounterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Other Import\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Spells</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsSpellImport(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Monsters</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsMonsterImport(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Items/Gear</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => trigger5eToolsItemsImport(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Recive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (\n    value: string,\n    sort: { name: string; label: string; sort: number }\n  ) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value, sort)}\n      ></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />\n          )}\n          {sort.sort === 2 && (\n            <IconButton\n              onClick={() => changeSort()}\n              icon={faChevronCircleDown}\n            />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringSearchField\n        value={time}\n        sort={sort}\n        field={\"time\"}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(\n          time: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTime(time);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={range}\n        sort={sort}\n        field={\"range\"}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setRange(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={duration}\n        sort={sort}\n        field={\"duration\"}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDuration(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={components}\n        sort={sort}\n        field={\"components\"}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setComponents(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={classes}\n        sort={sort}\n        field={\"classes\"}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setClasses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={text}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setText(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div\n        id=\"scrollable\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <SpellContainer\n          dataLength={spells.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {spells!.map((spell: Spell, index: number) => {\n            return <SpellTile key={index} spell={spell}></SpellTile>;\n          })}\n        </SpellContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName]\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName]\n                      .toLowerCase()\n                      .includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string =\n                \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\")\n                formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          console.log(formattedParts);\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableProp key={index}>\n                                {formatLink(cell)}\n                              </TableProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatTable(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatTable]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport P2PSender from \"../../../P2P/P2PSender\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  spell: Spell;\n  isNew: boolean;\n}\n\nconst SpellDetail = ({ spell, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj, spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${spell.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"spells\", spell.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSpell()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined && (\n        <SpellDetail spell={spell} isNew={spell.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  gear: Gear;\n  isNew: boolean;\n}\n\nconst GearDetail = ({ gear, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${gear.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"gears\", gear.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteGear()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={cost}\n        sort={sort}\n        field={\"cost\"}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setCost(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={weight}\n        sort={sort}\n        field={\"weight\"}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setWeight(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={damage}\n        sort={sort}\n        field={\"damage\"}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDamage(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={properties}\n        sort={sort}\n        field={\"properties\"}\n        label=\"Properties\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setProperties(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <GearContainer\n          dataLength={gears.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {gears!.map((gear: Gear, index: number) => {\n            return <GearTile key={index} gear={gear}></GearTile>;\n          })}\n        </GearContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\nimport NumberField from \"../../FormElements/NumberField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringSearchField\n        value={alignment}\n        sort={sort}\n        field={\"alignment\"}\n        label=\"Alignment\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAlignment(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={speed}\n        sort={sort}\n        field={\"speed\"}\n        label=\"Speed\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSpeed(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={skills}\n        sort={sort}\n        field={\"skills\"}\n        label=\"Skills\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSkills(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={senses}\n        sort={sort}\n        field={\"senses\"}\n        label=\"Senses\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSenses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lang}\n        sort={sort}\n        field={\"lang\"}\n        label=\"Languages\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLang(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgVulnerabilitie}\n        sort={sort}\n        field={\"dmgVulnerabilitie\"}\n        label=\"Vulnerabilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgVulnerabilitie(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgResistance}\n        sort={sort}\n        field={\"dmgResistance\"}\n        label=\"Resistances\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgResistance(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgImmunities}\n        sort={sort}\n        field={\"dmgImmunities\"}\n        label=\"Immunities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={conImmunities}\n        sort={sort}\n        field={\"conImmunities\"}\n        label=\"Con. Immun.\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setConImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={ablt}\n        sort={sort}\n        field={\"ablt\"}\n        label=\"Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sAblt}\n        sort={sort}\n        field={\"sAblt\"}\n        label=\"Spezial Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lAblt}\n        sort={sort}\n        field={\"lAblt\"}\n        label=\"Legendary Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <MonsterContainer\n          dataLength={monsters.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {monsters!.map((monster: Monster, index: number) => {\n            return <MonsterTile key={index} monster={monster}></MonsterTile>;\n          })}\n        </MonsterContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  monster: Monster;\n  isNew: boolean;\n}\n\nconst MonsterDetail = ({ monster, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj, monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${monster.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"monsters\", monster.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteMonster()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView\n          monster={monsterObj}\n          onEdit={(value) => editMonster(value)}\n        />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined && (\n        <MonsterDetail monster={monster} isNew={monster.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View key={index}>\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  race: Race;\n  isNew: boolean;\n}\n\nconst RaceDetail = ({ race, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj, race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${race.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"races\", race.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteRace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined && (\n        <RaceDetail race={race} isNew={race.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  subrace: Subrace;\n  isNew: boolean;\n}\n\nconst SubraceDetail = ({ subrace, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj, subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subrace.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subraces\", subrace.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSubrace()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView\n          subrace={subraceObj}\n          onEdit={(value) => editSubrace(value)}\n        />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined && (\n        <SubraceDetail subrace={subrace} isNew={subrace.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={abilityScores}\n        sort={sort}\n        field={\"abilityScores\"}\n        label=\"Ability Scores\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <RaceContainer\n          dataLength={races.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {races!.map((race: Race, index: number) => {\n            return <RaceTile key={index} race={race}></RaceTile>;\n          })}\n        </RaceContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${item.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  item: Item;\n  isNew: boolean;\n}\n\nconst ItemDetail = ({ item, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj, item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${item.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"items\", item.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteItem()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined && (\n        <ItemDetail item={item} isNew={item.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ItemContainer\n          dataLength={items.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {items!.map((item: Item, index: number) => {\n            return <ItemTile key={index} item={item}></ItemTile>;\n          })}\n        </ItemContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Selection from \"../../../../Data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  featureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport { reciveAll } from \"../../../../Services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  classe: Class;\n  isNew: boolean;\n}\n\nconst ClassDetail = ({ classe, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${classe.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"classes\", classe.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteClass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses] = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ClassContainer\n          dataLength={classes.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n        </ClassContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclass.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclass} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../Services/DatabaseService\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Selection from \"../../../../Data/Selection\";\nimport Feature, {\n  featureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../Data/Classes/Feature\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclass.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  subclass: Subclass;\n  isNew: boolean;\n}\n\nconst SubclassDetail = ({ subclass, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj, subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${subclass.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"subclasses\", subclass.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSubclass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView\n          subclass={subclassObj}\n          onEdit={(value) => editSubclass(value)}\n        />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined && (\n        <SubclassDetail subclass={subclass} isNew={subclass.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport P2PSender from \"../../../P2P/P2PSender\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <>\n          <CharGeneral char={char} onChange={saveChar} classes={classes} />\n          <View>\n            <PropWrapper>\n              {!send && (\n                <TextButton\n                  text={`Send ${char.name}`}\n                  icon={faPaperPlane}\n                  onClick={() => setSend(true)}\n                />\n              )}\n              {!!send && <P2PSender data={char} mode={\"THIS\"} />}\n            </PropWrapper>\n          </View>\n        </>\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      let selectionsData: {\n                        entityName: string;\n                        entityText: string;\n                        level: number;\n                      }[] = [];\n                      if (\n                        feature.selections !== undefined &&\n                        feature.selections.length > 0\n                      ) {\n                        char.activeSelections.forEach((activeSelect) => {\n                          if (activeSelect.featureName === feature.name) {\n                            selectionsData.push(activeSelect.activeOption);\n                          }\n                        });\n                      }\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                          {selectionsData.map((activeSelectOption) => {\n                            return (\n                              <>\n                                <br />\n                                <PropTitle>\n                                  Choosen {activeSelectOption.entityName}:\n                                </PropTitle>\n                                <FormatedText\n                                  text={activeSelectOption.entityText}\n                                />\n                              </>\n                            );\n                          })}\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Selection from \"../../../../Data/Selection\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport {\n  reciveAll,\n  reciveAllFiltered,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [selections, setSelections] = useState<Selection[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      setSelections(selectionsData);\n    });\n  }, []);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n\n  const recalcSelections = useCallback(() => {\n    let newActiveSelections: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[] = [];\n    classes.forEach((classe: Class) => {\n      classe.featureSets.forEach((featureSet: FeatureSet) => {\n        featureSet.features.forEach((feature: Feature) => {\n          if (\n            feature.selections !== undefined &&\n            feature.selections.length > 0\n          ) {\n            let count = 1;\n            feature.selections.forEach((select: string) => {\n              selections.forEach((selection: Selection) => {\n                if (selection.name === select) {\n                  newActiveSelections.push({\n                    selectionName: selection.name,\n                    activeOption: selection.selectionOptions[0],\n                    featureName: feature.name,\n                    featureCount: count,\n                    className: classe.name,\n                  });\n                  count++;\n                }\n              });\n            });\n          }\n        });\n      });\n      subclasses.forEach((subclass: Subclass) => {\n        if (classe.name === subclass.type) {\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            featureSet.features.forEach((feature: Feature) => {\n              if (\n                feature.selections !== undefined &&\n                feature.selections.length > 0\n              ) {\n                let count = 1;\n                feature.selections.forEach((select: string) => {\n                  selections.forEach((selection: Selection) => {\n                    if (selection.name === select) {\n                      newActiveSelections.push({\n                        selectionName: selection.name,\n                        activeOption: selection.selectionOptions[0],\n                        featureName: feature.name,\n                        featureCount: count,\n                        className: subclass.name,\n                      });\n                      count++;\n                    }\n                  });\n                });\n              }\n            });\n          });\n        }\n      });\n    });\n    return newActiveSelections;\n  }, [classes, subclasses, selections]);\n\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes: ClassSet[] = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      let newActiveSelections = recalcSelections();\n      onEdit({\n        ...char,\n        classes: classes,\n        activeSelections: newActiveSelections,\n      });\n    },\n    [char, onEdit, recalcSelections]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const onChangeActiveSelection = useCallback(\n    (\n      oldActiveSelection: {\n        selectionName: string;\n        activeOption: {\n          entityName: string;\n          entityText: string;\n          level: number;\n        };\n        featureName: string;\n        className: string;\n      },\n      select: string\n    ) => {\n      let newActiveSelections = char.activeSelections.map(\n        (activeSelection: {\n          selectionName: string;\n          activeOption: {\n            entityName: string;\n            entityText: string;\n            level: number;\n          };\n          featureName: string;\n          featureCount: number;\n          className: string;\n        }) => {\n          if (activeSelection === oldActiveSelection) {\n            let activSelect = {\n              entityName: \"\",\n              entityText: \"\",\n              level: 0,\n            };\n            selections.forEach((selection: Selection) => {\n              if (selection.name === activeSelection.selectionName) {\n                selection.selectionOptions.forEach((option) => {\n                  if (option.entityName === select) {\n                    activSelect = option;\n                  }\n                });\n              }\n            });\n            return { ...activeSelection, activeOption: activSelect };\n          } else {\n            return activeSelection;\n          }\n        }\n      );\n      onEdit({ ...char, activeSelections: newActiveSelections });\n    },\n    [char, selections, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n            {char.activeSelections?.map(\n              (\n                activeSelection: {\n                  selectionName: string;\n                  activeOption: {\n                    entityName: string;\n                    entityText: string;\n                    level: number;\n                  };\n                  featureName: string;\n                  className: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <PropWrapper key={index}>\n                    <SelectionTitle>\n                      {activeSelection.featureName} of{\" \"}\n                      {activeSelection.className}\n                    </SelectionTitle>\n                    <EnumField\n                      options={\n                        selections\n                          .find(\n                            (select) =>\n                              select.name === activeSelection.selectionName\n                          )\n                          ?.selectionOptions.filter(\n                            (option) => option.level <= calcLevel()\n                          )\n                          .map((option) => {\n                            return {\n                              value: option.entityName,\n                              label: option.entityName,\n                            };\n                          }) || []\n                      }\n                      value={{\n                        value: activeSelection.activeOption.entityName,\n                        label: activeSelection.activeOption.entityName,\n                      }}\n                      label={activeSelection.selectionName}\n                      onChange={(select) =>\n                        onChangeActiveSelection(activeSelection, select)\n                      }\n                    />\n                  </PropWrapper>\n                );\n              }\n            )}\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst SelectionTitle = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  char: Char;\n  isNew: boolean;\n}\n\nconst CharDetail = ({ char, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${char.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"chars\", char.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined && (\n        <CharDetail char={char} isNew={char.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <CharContainer\n          dataLength={chars.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {chars!.map((char: Char, index: number) => {\n            return <CharTile key={index} char={char}></CharTile>;\n          })}\n        </CharContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport StringField from \"../FormElements/StringField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst EncounterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Encounter\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default EncounterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 120px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../Loading\";\nimport EncounterTile from \"./EncounterTile\";\nimport EncounterSearchBar from \"./EncounterSearchBar\";\n\nconst EncounterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEncounters, setAllEncounters] = useState<Encounter[]>([]);\n  const [encounters, setEncounters] = useState<Encounter[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"encounters\", filters, (results: any[]) => {\n      setAllEncounters(results);\n      setEncounters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (encounters.length === allEncounters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEncounters((s) =>\n      s.concat(allEncounters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <EncounterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <EncounterContainer\n        dataLength={encounters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {encounters!.map((encounter: Encounter, index: number) => {\n          return <EncounterTile key={index} encounter={encounter}></EncounterTile>;\n        })}\n      </EncounterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default EncounterOverview;\n\nconst EncounterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import Encounter from \"../Data/Encounter/Encounter\";\nimport Player from \"../Data/Encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport IEntity from \"../../../Data/IEntity\";\nimport { isMonster } from \"../../../Data/Monster\";\nimport { reciveByAttribute } from \"../../../Services/DatabaseService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport AutoStringField from \"../../FormElements/AutoStringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport TextButton from \"../../FormElements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport { rollDie } from \"../../../Services/DiceService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport TinyNumberField from \"../../FormElements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterDetail = ({ encounter }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteEncounter(encounterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView\n          encounter={encounterObj}\n          onEdit={(value) => editEncounter(value)}\n        />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          onEdit={(value) => editAndSaveEncounter(value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(\n    db.encounters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItem(db.encounters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToEncounter;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CostRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const costs = await reciveAttributeSelectionPromise(\"gears\", \"cost\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cost of costs) {\n      if (cost !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"cost\",\n          cost.toString()\n        );\n        promList.push({\n          name: cost.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cost Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CostRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst DamageRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"damage\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"damage\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Damage Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default DamageRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst GearTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"type\",\n          type as number\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default GearTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst WeightRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const weights = await reciveAttributeSelectionPromise(\"gears\", \"weight\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const weight of weights) {\n      if (weight !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"weight\",\n          weight.toString()\n        );\n        promList.push({\n          name: weight.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Weight Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default WeightRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reciveCountPromise } from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AmountOfEntitiesChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeGeneralCountsData();\n  }, []);\n\n  const makeGeneralCountsData = async () => {\n    let promList: { name: string; count: number }[] = [];\n    promList.push({\n      name: \"spells\",\n      count: await reciveCountPromise(\"spells\"),\n    });\n    promList.push({ name: \"gears\", count: await reciveCountPromise(\"gears\") });\n    promList.push({ name: \"items\", count: await reciveCountPromise(\"items\") });\n    promList.push({\n      name: \"monsters\",\n      count: await reciveCountPromise(\"monsters\"),\n    });\n    promList.push({ name: \"races\", count: await reciveCountPromise(\"races\") });\n    promList.push({\n      name: \"subraces\",\n      count: await reciveCountPromise(\"subraces\"),\n    });\n    promList.push({\n      name: \"classes\",\n      count: await reciveCountPromise(\"classes\"),\n    });\n    promList.push({\n      name: \"subclasses\",\n      count: await reciveCountPromise(\"subclasses\"),\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Amount of Entities</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AmountOfEntitiesChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 20em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AttunmentRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const attunments = await reciveAttributeSelectionPromise(\"items\", \"attunment\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const attunment of attunments) {\n      if (attunment !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"attunment\",\n          attunment as number\n        );\n        promList.push({\n          name: attunment.toString() === \"0\" ? \"no attunment\" : \"attunment\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Attunment Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AttunmentRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst BaseRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const bases = await reciveAttributeSelectionPromise(\"items\", \"base\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const base of bases) {\n      if (base !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"base\",\n          base.toString()\n        );\n        promList.push({\n          name: base.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Base Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default BaseRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ItemTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"items\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ItemTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MagicBonusRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const magicBoni = await reciveAttributeSelectionPromise(\n      \"items\",\n      \"magicBonus\"\n    );\n\n    let promList: { name: string; count: number }[] = [];\n    for (const magicBonus of magicBoni) {\n      if (magicBonus !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"magicBonus\",\n          magicBonus as number\n        );\n        promList.push({\n          name: \"+\" + magicBonus.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MagicBonusRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RarityRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\"items\", \"rarity\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"rarity\",\n          rarity.toString()\n        );\n        promList.push({\n          name: rarity.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RarityRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CrRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const crs = await reciveAttributeSelectionPromise(\"monsters\", \"cr\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cr of crs) {\n      if (cr !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"cr\",\n          cr as number\n        );\n        promList.push({\n          name: cr.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cr Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CrRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LegendaryRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\n      \"monsters\",\n      \"lAblt\"\n    );\n\n    let leg = 0;\n    let noleg = 0;\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        leg += count;\n      } else {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        noleg += count;\n      }\n    }\n\n    promList.push({\n      name: \"Legendary\",\n      count: leg,\n    });\n    promList.push({\n      name: \"no Legendary\",\n      count: noleg,\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Legendary Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LegendaryRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MonsterTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"monsters\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MonsterTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ActionsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    let times = await reciveAttributeSelectionPromise(\"spells\", \"time\");\n    console.log(times);\n\n    let newTimes:string[] = [];\n    times.forEach((time) => {\n      if(!time.toString().startsWith(\"1 reaction\")) {\n        newTimes.push(time.toString());\n      }\n    })\n\n    let promList: { name: string; count: number }[] = [];\n    for (const time of newTimes) {\n      if (time !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"time\",\n          time.toString()\n        );\n        promList.push({\n          name: time.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Time Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ActionsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800em;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LevelRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const levels = await reciveAttributeSelectionPromise(\"spells\", \"level\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const level of levels) {\n      if (level !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"level\",\n          level as number\n        );\n        promList.push({\n          name: \"Level \" + level.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Level Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LevelRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RitualRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rituals = await reciveAttributeSelectionPromise(\"spells\", \"ritual\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const ritual of rituals) {\n      if (ritual !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"ritual\",\n          ritual as number\n        );\n        promList.push({\n          name: ritual.toString() === \"0\" ? \"no Ritual\" : \"Ritual\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Ritual Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RitualRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst SchoolsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const schools = await reciveAttributeSelectionPromise(\"spells\", \"school\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const school of schools) {\n      if (school !== \"\")\n        promList.push({\n          name: school.toString(),\n          count: await recivePromiseByAttributeCount(\n            \"spells\",\n            \"school\",\n            school.toString()\n          ),\n        });\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>School Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default SchoolsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport CostRatioChart from \"./Gear/CostRatioChart\";\nimport DamageRatioChart from \"./Gear/DamageRatioChart\";\nimport GearTypeRatioChart from \"./Gear/GearTypeRatioChart\";\nimport WeightRatioChart from \"./Gear/WeightRatioChart\";\nimport AmountOfEntitiesChart from \"./General/AmountOfEntitiesChart\";\nimport AttunmentRatioChart from \"./Items/AttunmentRatioChart\";\nimport BaseRatioChart from \"./Items/BaseRatioChart\";\nimport ItemTypeRatioChart from \"./Items/ItemTypeRatioChart\";\nimport MagicBonusRatioChart from \"./Items/MagicBonusRatioChart\";\nimport RarityRatioChart from \"./Items/RarityRatioChart\";\nimport CrRatioChart from \"./Monsters/CrRatioChart\";\nimport LegendaryRatioChart from \"./Monsters/LegendaryRatioChart\";\nimport MonsterTypeRatioChart from \"./Monsters/MonsterTypeRatioChart\";\nimport ActionsRatioChart from \"./Spells/ActionsRatioChart\";\nimport LevelRatioChart from \"./Spells/LevelRatioChart\";\nimport RitualRatioChart from \"./Spells/RitualRatioChart\";\nimport SchoolsRatioChart from \"./Spells/SchoolsRatioChart\";\n\nconst Statistics = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Gears\", \"Magic Items\", \"Monsters\"]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <OptionTab>\n          <AmountOfEntitiesChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <SchoolsRatioChart />\n          <LevelRatioChart />\n          <RitualRatioChart />\n          <ActionsRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <GearTypeRatioChart />\n          <DamageRatioChart />\n          <CostRatioChart />\n          <WeightRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <RarityRatioChart />\n          <AttunmentRatioChart />\n          <MagicBonusRatioChart />\n          <BaseRatioChart />\n          <ItemTypeRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <LegendaryRatioChart />\n          <MonsterTypeRatioChart />\n          <CrRatioChart />\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Statistics;\n\nconst OptionTab = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{book.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              {book.pages}\n            </RowProp>\n            <RowProp>\n              <FontAwesomeIcon icon={faTags} />\n              {book.tags &&\n                book.tags.map((tag: string, index: number) => (\n                  <Tag key={index}>{tag}</Tag>\n                ))}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\nimport Filter from \"../../Data/Filter\";\nimport Book from \"../../Data/Book\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport NumberField from \"../FormElements/NumberField\";\nimport StringSearchField from \"../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst LibrarySearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={tags}\n        sort={sort}\n        field={\"tags\"}\n        label=\"Tags\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTags(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField\n        value={pages}\n        label=\"Pages\"\n        onChange={(pages: number) => setPages(pages)}\n      />\n\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Book\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default LibrarySearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport { LoadingSpinner } from \"../Loading\";\nimport BookTile from \"./BookTile\";\nimport LibrarySearchBar from \"./LibrarySearchBar\";\n\nconst Library = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allBooks, setAllBooks] = useState<Book[]>([]);\n  const [books, setBooks] = useState<Book[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"books\", filters, (results: any[]) => {\n      setAllBooks(results);\n      setBooks(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (books.length === allBooks.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setBooks((s) =>\n      s.concat(allBooks.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <LibrarySearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={books.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {books!.map((book: Book, index: number) => {\n            return <BookTile key={index} book={book}></BookTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default Library;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport FileField from \"../../FormElements/FileField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Dialog from \"../../GeneralElements/Dialog\";\n\ninterface $Props {\n  book: Book;\n  isNew: boolean;\n}\n\nconst BookDetail = ({ book, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj, book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${book.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"books\", book.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateBook(\"books\", bookObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteBook()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { id: string };\n\nconst IdToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItem(db.books, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToBook;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined && (\n        <BookDetail book={book} isNew={book.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToBook;\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Book from \"../../Data/Book\";\nimport Selection from \"../../Data/Selection\";\nimport Class from \"../../Data/Classes/Class\";\nimport Subclass from \"../../Data/Classes/Subclass\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Gear from \"../../Data/Gear\";\nimport Item from \"../../Data/Item\";\nimport Monster from \"../../Data/Monster\";\nimport Race from \"../../Data/Races/Race\";\nimport Subrace from \"../../Data/Races/Subrace\";\nimport Spell from \"../../Data/Spell\";\nimport {\n  createNewWithId,\n  reciveAllPromise,\n  reciveCount,\n} from \"../../Services/DatabaseService\";\n\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiBookmarklet,\n  GiSwordClash,\n} from \"react-icons/gi\";\nimport {\n  faChartPie,\n  faCog,\n  faDragon,\n  faIdCard,\n  faMeteor,\n  faPlusCircle,\n  faQuestionCircle,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AppWrapper from \"../AppWrapper\";\nimport TextButton from \"../FormElements/TextButton\";\nimport logo from \"../../dndtome icon_v2.png\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport RandomTable from \"../../Data/RandomTable\";\n\nconst Home = () => {\n  let history = useHistory();\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n  const [bookAmount, setBookAmount] = useState<number>(0);\n  const [selectionAmount, setSelectionAmount] = useState<number>(0);\n  const [tableAmount, setTableAmount] = useState<number>(0);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveCount(\"books\", (result: number) => {\n        setBookAmount(result);\n      });\n      reciveCount(\"selections\", (result: number) => {\n        setSelectionAmount(result);\n      });\n      reciveCount(\"randomTables\", (result: number) => {\n        setTableAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <General>\n        <HomeSectionLarge>\n          <img src={logo} alt=\"logo\" />\n        </HomeSectionLarge>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faMeteor} /> Spells\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${spellAmount} spells in your collection. `}\n            {spellAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to spells\"}\n              onClick={() => history.push(`/spell-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSpell()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiCrystalWand /> Magic Items\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${itemAmount} magic items in your collection. `}\n            {itemAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to items\"}\n              onClick={() => history.push(`/item-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewItem()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBackpack /> Gears\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${gearAmount} gears in your collection. `}\n            {gearAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to gears\"}\n              onClick={() => history.push(`/gear-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewGear()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiWomanElfFace /> Races\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${raceAmount} races in your collection. `}\n            {raceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to races\"}\n              onClick={() => history.push(`/race-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subraces</SelectionTitle>\n          <SectionText>\n            {`You have ${subraceAmount} subraces in your collection. `}\n            {subraceAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubrace()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiPlagueDoctorProfile /> Classes\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${classAmount} classes in your collection. `}\n            {classAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to classes\"}\n              onClick={() => history.push(`/class-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewClass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>Subclass</SelectionTitle>\n          <SectionText>\n            {`You have ${subclassAmount} subclass in your collection. `}\n            {subclassAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSubclass()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <BiSelectMultiple /> Selection\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${selectionAmount} selections in your collection. `}\n            {selectionAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to selections\"}\n              onClick={() => history.push(`/selection-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewSelection()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faIdCard} /> Characters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${charAmount} characters in your collection. `}\n            {charAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to characters\"}\n              onClick={() => history.push(`/char-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => history.push(`/char-lab`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faDragon} /> Monsters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${monsterAmount} monsters in your collection. `}\n            {monsterAmount <= 0 && `Try import some in the options.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to monsters\"}\n              onClick={() => history.push(`/monster-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewMonster()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiSwordClash /> Encounters\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${encounterAmount} encounters in your collection. `}\n            {encounterAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to encounters\"}\n              onClick={() => history.push(`/encounter-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewEncounter()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faTable} /> Random Tables\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${tableAmount} random tables in your collection. `}\n            {tableAmount <= 0 && `Try creating one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to Tables\"}\n              onClick={() => history.push(`/randomTable-overview`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Create\"}\n              onClick={() => createNewRandomTable()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <GiBookmarklet /> Library\n          </SelectionTitle>\n          <SectionText>\n            {`You have ${bookAmount} pdf's in your collection. `}\n            {bookAmount <= 0 && `Try adding one.`}\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to library\"}\n              onClick={() => history.push(`/library`)}\n            />\n            <TextButton\n              icon={faPlusCircle}\n              text={\"Add\"}\n              onClick={() => createNewBook()}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faChartPie} /> Statistics\n          </SelectionTitle>\n          <SectionText>For more Statistics on your collection...</SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to statistics\"}\n              onClick={() => history.push(`/statistics`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faCog} /> Options\n          </SelectionTitle>\n          <SectionText>\n            To import/export or to make other adjustments to your collection...\n          </SectionText>\n          <ButtonBar>\n            <TextButton\n              text={\"Go to options\"}\n              onClick={() => history.push(`/options`)}\n            />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Help\n          </SelectionTitle>\n          <SectionText>\n            Help on where to find what and how to add tables or hyperlinks\n            inside of text fields.\n          </SectionText>\n          <ButtonBar>\n            <TextButton text={\"Help\"} onClick={() => history.push(`/help`)} />\n          </ButtonBar>\n        </HomeSection>\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Home;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nconst HomeSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n`;\nconst HomeSectionLarge = styled(HomeSection)`\n  min-width: calc(100% - 1em);\n  background-color: transparent;\n  box-shadow: none;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  max-height: 20px;\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n\nconst ButtonBar = styled(SectionText)`\n  align-self: flex-end;\n  max-height: 50px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport FormatedText from \"../GeneralElements/FormatedText\";\nimport TabBar from \"../GeneralElements/TabBar\";\n\nconst Help = () => {\n  const [activeTab, setTab] = useState<string>(\"Create\");\n\n  return (\n    <AppWrapper>\n      <General>\n        <TabBar\n          children={[\"Create\", \"Import\", \"Export\", \"Text Formating\"]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"Create\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create Entitys</SelectionTitle>\n              <SectionText>\n                To create a new Spell for example go to Spells and hit \"Add\n                Spell\" in the top middle.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create Sub-Entitys</SelectionTitle>\n              <SectionText>\n                For subclasses/subraces you need to visit a class/race and click\n                the little circled + in the subclass/subrace section of the\n                class/race.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Import\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>\n                How to import Entitiys via .json files\n              </SelectionTitle>\n              <SectionText>\n                Go to options and select a file in the top left file select\n                dialog titled \"Import\".\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>\n                How to import Entitiys via the send functionallity\n              </SelectionTitle>\n              <SectionText>\n                Go to options and navigate to recive. Add the ID of the sender\n                to the filed and accept sended entities.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import 5eTools files</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to \"Other Import\" and select the file\n                dialog suited for the entity you want to import.\n              </SectionText>\n              <SectionText>Your entity is not listed there?</SectionText>\n              <SectionText>\n                Those will be updated and added gradually.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import from other sources</SelectionTitle>\n              <SectionText>\n                As of now only dndtome and 5eTools .json files are supported.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Export\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>\n                How to export Entitiys to .json files\n              </SelectionTitle>\n              <SectionText>\n                Go to options and click the \"export\"-Button located in the top\n                right section titled \"Export\". This will export your hole\n                collection to one big file! (Excluding your pdf library)\n              </SectionText>\n              <SectionText>\n                Or go to options and navigate to the entities you want to send\n                for example \"Spells\". There you can export all your spells to\n                one file.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>\n                How to send Entitiys via the send functionallity\n              </SelectionTitle>\n              <SectionText>\n                Go to options and navigate to the entities you want to send for\n                example \"Spells\". Click the \"Send all Spells\"-Button and copy\n                the ID.\n              </SectionText>\n              <SectionText>\n                Or go to the entities overview and choose a single entity for\n                example a spell called \"Heal\". Click the \"Send Heal\"-Button and\n                copy the ID.\n              </SectionText>\n              <SectionText>You can now send the ID to the reciver.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export 5eTools files</SelectionTitle>\n              <SectionText>Not supported as of now.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export to other sources</SelectionTitle>\n              <SectionText>\n                As of now you can only export to dndtome .json files.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Text Formating\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create a hyper-link</SelectionTitle>\n              <SectionText>\n                You can add a hyper-link in every textarea.\n              </SectionText>\n              <SectionText>\n                To do so write: [[spell.Heal Me]] to link to the spell with the\n                name \"Heal Me\".\n              </SectionText>\n              <SectionText>\n                Result: <FormatedText text={\"[[spell.Heal Me]]\"} />\n              </SectionText>\n              <SectionText>This works for all entities.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table</SelectionTitle>\n              <SectionText>You can add a table in every textarea.</SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"Cell1\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header3|...||||Cell1|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table with links in it</SelectionTitle>\n              <SectionText>You can add a link to every cell of a table in every textarea.</SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"[[spell.Heal Me]]\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header|...||||[[spell.Heal Me]]|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n      </General>\n    </AppWrapper>\n  );\n};\n\nexport default Help;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst HelpSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../Data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../Data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport StringField from \"../../../FormElements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) =>\n                    onSelectionChange(selection, \"entityName\", name)\n                  }\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) =>\n                    onSelectionChange(selection, \"level\", level)\n                  }\n                />\n                <IconButton\n                  icon={faTrash}\n                  onClick={() => removeSelection(selection)}\n                />\n                <SelectionText\n                value={selection.entityText}\n                label=\"Text\"\n                onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n              />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SelectionView from \"./SelectionView\";\nimport SelectionEditView from \"./SelectionEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Selection from \"../../../../Data/Selection\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  remove,\n  updateWithCallback,\n} from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../GeneralElements/Dialog\";\n\ninterface $Props {\n  selection: Selection;\n  isNew: boolean;\n}\n\nconst SelectionDetail = ({ selection, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [selectionObj, editSelection] = useState<Selection>(selection);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSelection = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (selectionObj !== selection) {\n      setUnsavedChanges(true);\n    }\n  }, [selectionObj, selection]);\n\n  const updateSelection = (tableName: string, selectionObj: Selection) => {\n    updateWithCallback(tableName, selectionObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${selection.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"selections\", selection.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSelection(\"selections\", selectionObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteSelection()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SelectionEditView selection={selectionObj} onEdit={(value) => editSelection(value)} />\n      ) : (\n        <SelectionView selection={selectionObj} />\n      )}\n    </>\n  );\n};\n\nexport default SelectionDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SelectionDetail from \"../SelectionDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSelection = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [selection, loading, error] = useItemByAttr(\n    db.selections,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && selection !== undefined && (\n        <SelectionDetail selection={selection} isNew={selection.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSelection;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Selection from \"../../../Data/Selection\";\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionTile = ({ selection }: $Props) => {\n  return (\n    <Tile to={\"/selection-detail/id/\" + selection.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <WideProp>Options: {selection.selectionOptions.length}</WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SelectionTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Selection from \"../../../Data/Selection\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SelectionSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    \n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      \n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSelection()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Selection\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SelectionSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Selection from \"../../../Data/Selection\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SelectionTile from \"./SelectionTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SelectionSearchBar from \"./SelectionSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SelectionOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSelections, setAllSelections] = useState<Selection[]>([]);\n  const [selections, setSelections] = useState<Selection[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"selections\", filters, (results: any[]) => {\n      setAllSelections(results);\n      setSelections(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (selections.length === allSelections.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSelections((s) =>\n      s.concat(allSelections.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SelectionSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <SelectionContainer\n          dataLength={selections.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {selections!.map((selection: Selection, index: number) => {\n            return <SelectionTile key={index} selection={selection}></SelectionTile>;\n          })}\n        </SelectionContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SelectionOverview;\n\nconst SelectionContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SelectionDetail from \"../SelectionDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSelection = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [selection, loading, error] = useItem(db.selections, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && selection !== undefined && (\n        <SelectionDetail selection={selection} isNew={selection.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSelection;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../Data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport FormatedText from \"../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\",\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\",\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../Data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport StringField from \"../../FormElements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items, Description,...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}, Description ${index},...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../Data/RandomTable\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport RandomTableView from \"./RandomTableView\";\nimport RandomTableEditView from \"./RandomTableEditView\";\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Dialog from \"../../GeneralElements/Dialog\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  isNew: boolean;\n}\n\nconst RandomTableDetail = ({ randomTable, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [randomTableObj, editRandomTable] = useState<RandomTable>(randomTable);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRandomTable = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (randomTableObj !== randomTable) {\n      setUnsavedChanges(true);\n    }\n  }, [randomTableObj, randomTable]);\n\n  const updateRandomTable = (tableName: string, randomTableObj: RandomTable) => {\n    updateWithCallback(tableName, randomTableObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${randomTable.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"randomTables\", randomTable.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && (\n          <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />\n        )}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRandomTable(\"randomTables\", randomTableObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteRandomTable()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RandomTableEditView randomTable={randomTableObj} onEdit={(value) => editRandomTable(value)} />\n      ) : (\n        <RandomTableView randomTable={randomTableObj} />\n      )}\n    </>\n  );\n};\n\nexport default RandomTableDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport RandomTableDetail from \"../RandomTableDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRandomTable = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [randomTable, loading, error] = useItem(db.randomTables, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && randomTable !== undefined && (\n        <RandomTableDetail randomTable={randomTable} isNew={randomTable.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRandomTable;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport RandomTableDetail from \"../RandomTableDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRandomTable = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [randomTable, loading, error] = useItemByAttr(\n    db.randomTables,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && randomTable !== undefined && (\n        <RandomTableDetail randomTable={randomTable} isNew={randomTable.name === \"\" ? true : false} />\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRandomTable;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../Data/RandomTable\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableTile = ({ randomTable }: $Props) => {\n  return (\n    <Tile to={\"/randomTable-detail/id/\" + randomTable.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <PropWrapper>\n          <Name>\n            <b>{randomTable.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              Rows: {randomTable.rows.length}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RandomTableTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\nimport Filter from \"../../Data/Filter\";\nimport RandomTable from \"../../Data/RandomTable\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport StringSearchField from \"../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RandomTableSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRandomTable()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Table\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RandomTableSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 100px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../Data/RandomTable\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport { LoadingSpinner } from \"../Loading\";\nimport RandomTableTile from \"./RandomTableTile\";\nimport RandomTableSearchBar from \"./RandomTableSearchBar\";\n\nconst RandomTableOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRandomTables, setAllRandomTables] = useState<RandomTable[]>([]);\n  const [randomTables, setRandomTables] = useState<RandomTable[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"randomTables\", filters, (results: any[]) => {\n      setAllRandomTables(results);\n      setRandomTables(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (randomTables.length === allRandomTables.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRandomTables((s) =>\n      s.concat(allRandomTables.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RandomTableSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={randomTables.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {randomTables!.map((randomTable: RandomTable, index: number) => {\n            return <RandomTableTile key={index} randomTable={randomTable}></RandomTableTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RandomTableOverview;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\nimport EncounterOverview from \"./components/Encounters/EncounterOverview\";\nimport NameToEncounter from \"./components/Encounters/Detail/LinkWrapper/NameToEncounter\";\nimport IdToEncounter from \"./components/Encounters/Detail/LinkWrapper/IdToEncounter\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Library from \"./components/Library/Library\";\nimport IdToBook from \"./components/Library/Detail/LinkWrapper/IdToBook\";\nimport NameToBook from \"./components/Library/Detail/LinkWrapper/NameToBook\";\nimport Home from \"./components/Home/Home\";\nimport Help from \"./components/Help/Help\";\nimport NameToSelection from \"./components/Entities/Selections/Detail/LinkWrapper/NameToSelection\";\nimport SelectionOverview from \"./components/Entities/Selections/SelectionOverview\";\nimport IdToSelection from \"./components/Entities/Selections/Detail/LinkWrapper/IdToSelection\";\nimport IdToRandomTable from \"./components/RandomTables/Detail/LinkWrapper/IdToRandomTable\";\nimport NameToRandomTable from \"./components/RandomTables/Detail/LinkWrapper/NameToRandomTable\";\nimport RandomTableOverview from \"./components/RandomTables/RandomTableOverview\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/home\" component={Home}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n          <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n          <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n          <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n          <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n          <Route path=\"/selection-detail/name/:name\" component={NameToSelection}></Route>\n          <Route path=\"/selection-detail/id/:id\" component={IdToSelection}></Route>\n          <Route path=\"/selection-overview\" component={SelectionOverview}></Route>\n          <Route path=\"/randomTable-detail/name/:name\" component={NameToRandomTable}></Route>\n          <Route path=\"/randomTable-detail/id/:id\" component={IdToRandomTable}></Route>\n          <Route path=\"/randomTable-overview\" component={RandomTableOverview}></Route>\n          <Route path=\"/statistics\" component={Statistics}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n          <Route path=\"/library\" component={Library}></Route>\n          <Route path=\"/help\" component={Help}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}