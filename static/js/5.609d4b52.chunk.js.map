{"version":3,"sources":["data/chars/ClassSet.tsx","data/Monster.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/encounter/Encounter.tsx","hooks/DexieHooks.tsx","data/encounter/Player.tsx","data/encounter/BuildEncounter.tsx","data/encounter/BuildPlayer.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","services/DiceService.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/form_elements/NumberField.tsx","components/form_elements/AutoStringField.tsx"],"names":["ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","Monster","id","name","sources","pic","size","type","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","nameCheck","picCheck","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","BackButton","icon","transform","action","Back","onClick","Icon","styled","FontAwesomeIcon","theme","main","highlight","buttons","color","div","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","backgroundColor","tile","Encounter","enemies","players","isPlaying","currentInit","roundCounter","map","dimension","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","currentInitCheck","roundCounterCheck","useItem","table","useState","effect","setEffect","reducer","useCallback","state","data","error","useReducer","dispatch","useEffect","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Player","tempHp","initBonus","tag","cord","BuildEncounter","encounter","characters","difficulty","calcExp","easy","medium","hard","deadly","BuildPlayer","entity","buildEncounter","a","console","time","characterList","enemyList","forEach","push","buildPlayer","enemy","Promise","all","timeEnd","filter","char","sort","b","calcDifficulty","recivePromiseByAttribute","newPlayer","crExpTable","exp","expTable","length","enemyExp","crExp","EncounterEditView","onEdit","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangePlayerField","oldPlayer","CenterWrapper","View","StringField","value","label","onChange","AutoStringField","optionTable","newMap","PropWrapper","Prop","PropTitle","CharView","index","Container","key","newMonster","reciveByAttribute","result","onChangeEnemy","NumberField","IconButton","faTrash","newEnemyList","splice","removeEnemy","TextButton","text","faPlus","addNewEnemy","classSet","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","span","backgroundColorLink","rollDie","max","Math","round","random","TinyNumberField","showMax","Field","Input","e","target","Max","input","Board","img","currentPlayerNumber","onChangePlayers","onChangeDimension","board","setBoard","dragItem","setDragItem","makeDrag","makeDrop","makeRow","row","list","j","updatePlayers","makeBoard","BoardRow","log","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","PlayerSlot","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isDead","isCurrent","Empty","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","EncounterView","dmView","history","useHistory","loadedEncounter","setLoadedEncounter","loading","isLoading","newField","finishEncounter","newEnemies","Name","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","PropField","MainLink","faSkullCrossbones","PlayerImage","tr","td","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","Message","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","placeholder","LabelText","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","filters","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllFilteredPromise","o","concat","reciveAllFiltered","onSearch","searchTerm","newOptions","option","includes","Options","opt","Option"],"mappings":"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","file":"static/js/5.609d4b52.chunk.js","sourcesContent":["export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  dimension: { width: number; height: number; size: number, zoom: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    dimension?: { width: number; height: number; size: number, zoom: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n  cord: number[];\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number,\n    cord?: number[]\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n    this.cord = cord || [0,0];\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import BuildPlayer from \"./BuildPlayer\";\nimport Encounter from \"./Encounter\";\n\nexport default class BuildEncounter {\n  encounter: Encounter;\n  characters: BuildPlayer[];\n  enemies: BuildPlayer[];\n  players: BuildPlayer[];\n  difficulty: {\n    difficulty: string;\n    calcExp: {\n      easy: number;\n      medium: number;\n      hard: number;\n      deadly: number;\n    };\n  };\n\n  constructor(\n    encounter?: Encounter,\n    characters?: BuildPlayer[],\n    enemies?: BuildPlayer[],\n    players?: BuildPlayer[],\n    difficulty?: {\n      difficulty: string;\n      calcExp: {\n        easy: number;\n        medium: number;\n        hard: number;\n        deadly: number;\n      };\n    }\n  ) {\n    this.encounter = encounter || new Encounter();\n    this.characters = characters || [];\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.difficulty = difficulty || {\n      difficulty: \"\",\n      calcExp: {\n        easy: 0,\n        medium: 0,\n        hard: 0,\n        deadly: 0,\n      },\n    };\n  }\n}\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Player from \"./Player\";\n\nexport default class BuildPlayer {\n  player: Player;\n  entity: Char | Monster;\n\n  constructor(player?: Player, entity?: Char | Monster) {\n    this.player = player || new Player();\n    this.entity = entity || new Monster();\n  }\n}\n","import BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  let players = [...characters, ...enemies];\n  if (encounter.isPlaying) {\n    players = players.sort((a: BuildPlayer, b: BuildPlayer) =>\n      a.player.init < b.player.init ? 1 : -1\n    );\n  }\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isMonster) newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { reciveByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"locations\"}\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = useCallback((player: BuildPlayer) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: BuildPlayer): number => {\n      if (player.player.isMonster) {\n        const monster = player.entity as Monster;\n        switch (monster.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, player, isDead, isCurrent }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: size - 6 + \"px\",\n    width: size - 6 + \"px\",\n    opacity: isDead ? \"0.5\" : \"1\",\n    border: isCurrent ? \"\" : \"none\",\n  };\n\n  if (pic !== \"\") {\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n`;\n\nconst Empty = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { buildEncounter } from \"../../../../services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loadedEncounter, setLoadedEncounter] = useState<BuildEncounter>(new BuildEncounter());\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    buildEncounter(encounter).then((buildEncounter) => {\n      setLoadedEncounter(buildEncounter);\n      isLoading(false);\n    });\n  }, [encounter, setLoadedEncounter]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = loadedEncounter.encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = loadedEncounter.encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % loadedEncounter.players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % loadedEncounter.players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (loadedEncounter.players[nextInit].player.currentHp <= 0) {\n      if ((nextInit + 1) % loadedEncounter.players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % loadedEncounter.players.length;\n      counter++;\n      if (counter > loadedEncounter.players.length) {\n        break;\n      }\n    }\n    if (counter > loadedEncounter.players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  const onChangeDimension = useCallback((dimension: {\n    width: number;\n    height: number;\n    size: number;\n    zoom: number;\n  }) => {\n    onEdit({ ...loadedEncounter.encounter, dimension: dimension });\n  },[loadedEncounter.encounter, onEdit]);\n\n  const onChangePlayers = useCallback((players: BuildPlayer[]) => {\n    if (players !== loadedEncounter.players) {\n      let newPlayers: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (!player.player.isMonster) {\n          newPlayers.push(player.player);\n        }\n      });\n      let newEnemies: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (player.player.isMonster) {\n          newEnemies.push(player.player);\n        }\n      });\n\n      onEdit({ ...loadedEncounter.encounter, players: newPlayers, enemies: newEnemies });\n    }\n  },[loadedEncounter.encounter, loadedEncounter.players, onEdit]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          {dmView && (\n            <PropElm>\n              <PropTitle>Difficulty: </PropTitle>\n              {loadedEncounter.difficulty.difficulty}\n            </PropElm>\n          )}\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                {dmView && <th>Current Hp</th>}\n                {dmView && <th>Hp</th>}\n                {dmView && <th>AC</th>}\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {loadedEncounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                return (\n                  <Row\n                    current={encounter.currentInit === index && encounter.isPlaying}\n                    isDead={buildPlayer.player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.init}\n                        onChange={(init) => onChangePlayerField(\"init\", init, buildPlayer.player)}\n                      />\n                    </PropField>\n                    <Prop>\n                      {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                        <PlayerImage player={buildPlayer}></PlayerImage>\n                      ) : (\n                        <></>\n                      )}\n                      {buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {dmView ? buildPlayer.player.name : \"???\"}\n                        </MainLink>\n                      )}\n                      {!buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    {dmView && (\n                      <>\n                        <PropField>\n                          <TinyNumberField\n                            value={buildPlayer.player.currentHp}\n                            max={buildPlayer.player.hp}\n                            onChange={(currentHp) =>\n                              onChangePlayerField(\"currentHp\", currentHp, buildPlayer.player)\n                            }\n                          />\n                        </PropField>\n                        <Prop>{buildPlayer.player.hp}</Prop>\n                        <Prop>{buildPlayer.player.ac}</Prop>\n                      </>\n                    )}\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {buildPlayer.player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(buildPlayer.player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n      {loadedEncounter && encounter.map !== \"\" && encounter.map !== undefined && (\n        <Board\n          onChangePlayers={onChangePlayers}\n          players={loadedEncounter.players}\n          dimension={\n            encounter.dimension !== undefined\n              ? encounter.dimension\n              : { width: 20, height: 20, size: 20, zoom: 100 }\n          }\n          currentPlayerNumber={loadedEncounter.encounter.currentInit}\n          onChangeDimension={onChangeDimension}\n          img={encounter.map}\n        ></Board>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  min-width: 500px;\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}