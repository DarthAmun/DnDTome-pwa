{"version":3,"sources":["logo192.png","services/DatabaseService.tsx","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","database/MyDatabase.tsx","components/SearchbarStyle.tsx"],"names":["module","exports","update","tableName","data","db","MyAppDatabase","open","then","table","id","finally","close","updateWithCallback","callback","result","saveNew","entity","filename","a","put","prom","saveWithCallback","add","remove","undefined","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","name","value","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","Header","Bar","NameWrapper","Logo","src","LogoImg","Name","HomeCredits","packageJson","version","styled","div","theme","header","backgroundColor","color","img","NavButton","setOpen","Button","onClick","button","buttons","NavMenu","location","useLocation","Menu","TopSide","to","className","pathname","icon","faHome","Seperator","MiddleSide","LeftSide","faMapMarkedAlt","faTable","RightSide","faMeteor","faIdCard","faDragon","BottomSide","faChartPie","faCog","main","tile","RightTooltip","highlight","Navigation","Nav","AppWrapper","children","useState","moveNav","mode","handlers","useSwipeable","onSwipedRight","onSwipedLeft","App","Content","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","stores","chars_spells","chars_monsters","chars_items","Dexie","Tooltip","span","LeftTooltip","FixedBar","SearchBar","CreateButton","hoverColor","ExportButton","FieldGroup"],"mappings":"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FACTC,WAAY,gDACZC,MACE,iSAEJ,EAAK7D,QAAQ,GAAGyE,OAAO,CACrBC,aAAc,KACdC,eAAgB,KAChBC,YAAa,KAEbvB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,kCAEd,EAAK9D,QAAQ,GAAGyE,OAAO,CACrBpB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,yCAET,EAAK/D,QAAQ,IAAIyE,OAAO,CACtBpB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKhE,QAAQ,IAAIyE,OAAO,CACtBpB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKhE,QAAQ,IAAIyE,OAAO,CACtBpB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKjE,QAAQ,IAAIyE,OAAO,CACtBpB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKjE,QAAQ,IAAIyE,OAAO,CACtBpB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU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","file":"static/js/1.06beff85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>DnDTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n  faHome,\n  faTable,\n  faMapMarkedAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiBookshelf,\n  GiSolarSystem,\n  GiScrollUnfurled,\n  GiDjinn,\n} from \"react-icons/gi\";\nimport { BiSelectMultiple } from \"react-icons/bi\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport { MdEvent } from \"react-icons/md\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n        <Seperator />\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/campaign-overview\"\n            className={location.pathname === \"/campaign-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBookmarklet />\n            <RightTooltip>Campaigns</RightTooltip>\n          </Link>\n          <Link\n            to=\"/quest-overview\"\n            className={location.pathname === \"/quest-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiScrollUnfurled />\n            <RightTooltip>Quests</RightTooltip>\n          </Link>\n           <Link\n            to=\"/group-overview\"\n            className={location.pathname === \"/group-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <HiUserGroup />\n            <RightTooltip>Groups</RightTooltip>\n          </Link>\n          <Link\n            to=\"/npc-overview\"\n            className={location.pathname === \"/npc-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiDjinn />\n            <RightTooltip>Npc's</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/world-overview\"\n            className={location.pathname === \"/world-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSolarSystem />\n            <RightTooltip>Worlds</RightTooltip>\n          </Link>\n          <Link\n            to=\"/location-overview\"\n            className={location.pathname === \"/location-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMapMarkedAlt} />\n            <RightTooltip>Locations</RightTooltip>\n          </Link>\n          <Link\n            to=\"/event-overview\"\n            className={location.pathname === \"/event-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <MdEvent />\n            <RightTooltip>Events</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/randomTable-overview\"\n            className={location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link to=\"/library\" className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}>\n            <GiBookshelf />\n            <RightTooltip>Library</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/item-overview\"\n            className={location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiCrystalWand />\n            <RightTooltip>Magic Items</RightTooltip>\n          </Link>\n          <Link\n            to=\"/gear-overview\"\n            className={location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiBackpack />\n            <RightTooltip>Gear</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n          <Link\n            to=\"/class-overview\"\n            className={location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiPlagueDoctorProfile />\n            <RightTooltip>Classes</RightTooltip>\n          </Link>\n          <Link\n            to=\"/selection-overview\"\n            className={location.pathname === \"/selection-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <BiSelectMultiple />\n            <RightTooltip>Selections</RightTooltip>\n          </Link>\n          <Link\n            to=\"/char-overview\"\n            className={location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faIdCard} />\n            <RightTooltip>Chars</RightTooltip>\n          </Link>\n          <Seperator />\n          <Link\n            to=\"/monster-overview\"\n            className={location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faDragon} />\n            <RightTooltip>Monsters</RightTooltip>\n          </Link>\n          <Link\n            to=\"/encounter-overview\"\n            className={location.pathname === \"/encounter-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSwordClash />\n            <RightTooltip>Encounters</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link to=\"/options\" className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}>\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, map, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","import styled from \"styled-components\";\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nexport const Bar = styled.div<SearchMode>`\n  position: absolute;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 125px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  position: fixed;\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n\n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n"],"sourceRoot":""}