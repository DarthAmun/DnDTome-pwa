{"version":3,"sources":["components/form_elements/AutoStringField.tsx","data/chars/ClassSet.tsx","data/Monster.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/encounter/Encounter.tsx","services/DiceService.tsx","hooks/DexieHooks.tsx","data/encounter/Player.tsx","data/encounter/BuildEncounter.tsx","data/encounter/BuildPlayer.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/form_elements/NumberField.tsx"],"names":["AutoStringField","optionTable","filters","value","label","icon","transform","onChange","useState","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","undefined","Promise","all","items","o","concat","useEffect","reciveAllFiltered","data","Array","length","onSearch","searchTerm","newOptions","filter","option","name","includes","Field","LabelText","Icon","Input","type","e","target","Options","map","opt","index","Option","key","onClick","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Monster","id","sources","pic","size","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","nameCheck","picCheck","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","classes","background","spells","spellSlots","activeSelections","currencyBonis","monsters","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classesCheck","isArray","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Encounter","enemies","players","isPlaying","currentInit","roundCounter","dimension","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","currentInitCheck","roundCounterCheck","rollCommand","commands","krit","result","newCommands","split","command","test","trim","multiplier","startsWith","parseInt","replaceAll","rollDie","max","Math","round","random","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Player","tempHp","initBonus","tag","cord","BuildEncounter","encounter","characters","difficulty","calcExp","easy","medium","hard","deadly","BuildPlayer","entity","buildEncounter","console","time","characterList","enemyList","buildPlayer","enemy","timeEnd","char","sort","b","calcDifficulty","recivePromiseByAttribute","newPlayer","crExpTable","exp","expTable","enemyExp","crExp","EncounterEditView","onEdit","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","i","onChangePlayerField","oldPlayer","CenterWrapper","View","StringField","newMap","PropWrapper","Prop","PropTitle","CharView","Container","newMonster","reciveByAttribute","onChangeEnemy","NumberField","IconButton","faTrash","newEnemyList","splice","removeEnemy","TextButton","text","faPlus","addNewEnemy","classSet","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","span","backgroundColorLink","TinyNumberField","showMax","Max","Board","img","currentPlayerNumber","onChangePlayers","onChangeDimension","board","setBoard","dragItem","setDragItem","makeDrag","makeDrop","makeRow","row","list","j","updatePlayers","makeBoard","BoardRow","log","BoardWrapper","BoardBar","step","BoardContainer","BoardLayer","MapLayer","src","PlayerSlot","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isDead","isCurrent","Empty","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","EncounterView","dmView","history","useHistory","loadedEncounter","setLoadedEncounter","loading","isLoading","newField","finishEncounter","newEnemies","Name","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","Row","current","PropField","MainLink","faSkullCrossbones","PlayerImage","tr","td","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","TopBar","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","Message","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","placeholder","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/5.84f94e09.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  dimension: { width: number; height: number; size: number, zoom: number };\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    dimension?: { width: number; height: number; size: number, zoom: number }\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    currentInitCheck &&\n    roundCounterCheck\n  );\n}\n","export const rollCommand = (commands: string, krit?: boolean): number => {\n  let result = 0;\n\n  let newCommands = \"\";\n  commands\n    .split(\" \")\n    .filter((command) => /\\d+/g.test(command))\n    .forEach((command) => {\n      newCommands += command;\n    });\n  newCommands = newCommands.trim();\n\n  newCommands.split(\" \").forEach((command: string) => {\n    let multiplier: number = 1;\n    if (!command.startsWith(\"d\")) {\n      multiplier = parseInt(command.split(\"d\")[0]);\n      command = command.split(\"d\")[1];\n    }\n    command = command.replaceAll(\"d\", \"\");\n    if (krit) multiplier = multiplier * 2;\n\n    if (command.includes(\"+\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"+\")[0])) + parseInt(command.split(\"+\")[1]);\n    } else if (command.includes(\"-\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"-\")[0])) - parseInt(command.split(\"-\")[1]);\n    } else {\n      result += multiplier * rollDie(parseInt(command));\n    }\n  });\n  return result;\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n  cord: number[];\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number,\n    cord?: number[]\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n    this.cord = cord || [0,0];\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import BuildPlayer from \"./BuildPlayer\";\nimport Encounter from \"./Encounter\";\n\nexport default class BuildEncounter {\n  encounter: Encounter;\n  characters: BuildPlayer[];\n  enemies: BuildPlayer[];\n  players: BuildPlayer[];\n  difficulty: {\n    difficulty: string;\n    calcExp: {\n      easy: number;\n      medium: number;\n      hard: number;\n      deadly: number;\n    };\n  };\n\n  constructor(\n    encounter?: Encounter,\n    characters?: BuildPlayer[],\n    enemies?: BuildPlayer[],\n    players?: BuildPlayer[],\n    difficulty?: {\n      difficulty: string;\n      calcExp: {\n        easy: number;\n        medium: number;\n        hard: number;\n        deadly: number;\n      };\n    }\n  ) {\n    this.encounter = encounter || new Encounter();\n    this.characters = characters || [];\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.difficulty = difficulty || {\n      difficulty: \"\",\n      calcExp: {\n        easy: 0,\n        medium: 0,\n        hard: 0,\n        deadly: 0,\n      },\n    };\n  }\n}\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Player from \"./Player\";\n\nexport default class BuildPlayer {\n  player: Player;\n  entity: Char | Monster;\n\n  constructor(player?: Player, entity?: Char | Monster) {\n    this.player = player || new Player();\n    this.entity = entity || new Monster();\n  }\n}\n","import BuildEncounter from \"../data/encounter/BuildEncounter\";\nimport BuildPlayer from \"../data/encounter/BuildPlayer\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildEncounter = async (encounter: Encounter): Promise<BuildEncounter> => {\n  console.time(\"t\");\n  let characters: BuildPlayer[];\n  let enemies: BuildPlayer[];\n\n  console.time(\"load\");\n  let characterList: Promise<BuildPlayer>[] = [];\n  let enemyList: Promise<BuildPlayer>[] = [];\n\n  encounter.players.forEach((player: Player) => {\n    characterList.push(buildPlayer(player));\n  });\n  encounter.enemies.forEach((enemy: Player) => {\n    enemyList.push(buildPlayer(enemy));\n  });\n  characters = await Promise.all(characterList);\n  enemies = await Promise.all(enemyList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  enemies = enemies.filter((enemy) => enemy !== undefined);\n  let players = [...characters, ...enemies];\n  if (encounter.isPlaying) {\n    players = players.sort((a: BuildPlayer, b: BuildPlayer) =>\n      a.player.init < b.player.init ? 1 : -1\n    );\n  }\n\n  const difficulty = calcDifficulty(encounter);\n\n  console.timeEnd(\"t\");\n  return new BuildEncounter(encounter, characters, enemies, players, difficulty);\n};\n\nexport const buildPlayer = async (player: Player): Promise<BuildPlayer> => {\n  let newPlayer: any;\n\n  if (player.isMonster) newPlayer = await recivePromiseByAttribute(\"monsters\", \"name\", player.name);\n  else newPlayer = await recivePromiseByAttribute(\"chars\", \"name\", player.name);\n\n  return new BuildPlayer(player, newPlayer);\n};\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { reciveByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\n\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"locations\"}\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangePlayerField(\"level\", level, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BuildPlayer from \"../../../data/encounter/BuildPlayer\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  img: string;\n  players: BuildPlayer[];\n  dimension: { width: number; height: number; size: number; zoom: number };\n  currentPlayerNumber: number;\n  onChangePlayers: (value: BuildPlayer[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n}\n\nconst Board = ({\n  img,\n  players,\n  dimension,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<BuildPlayer>();\n\n  const makeDrag = useCallback((player: BuildPlayer) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): BuildPlayer | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [dimension, players, onChangePlayers, currentPlayerNumber, makeDrop, makeDrag]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.log(\"Redo Board\");\n    makeBoard();\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop]);\n\n  return (\n    <BoardWrapper>\n      <BoardBar>\n        <NumberField\n          value={dimension.zoom}\n          label=\"Zoom\"\n          step={10}\n          onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n        />\n        <NumberField\n          value={dimension.width}\n          label=\"Horizontal\"\n          onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n        />\n        <NumberField\n          value={dimension.height}\n          label=\"Vertical\"\n          onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n        />\n        <NumberField\n          value={dimension.size}\n          label=\"Size\"\n          onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n        />\n      </BoardBar>\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  size: number;\n  zoom: number;\n  cord: number[];\n  currentPlayerNumber: number;\n  players: BuildPlayer[];\n  makeDrop: () => BuildPlayer | undefined;\n  makeDrag: (player: BuildPlayer) => void;\n  updatePlayers: (players: BuildPlayer[]) => void;\n}\nconst PlayerSlot = ({\n  size,\n  zoom,\n  cord,\n  players,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: BuildPlayer[] = players.map((player: BuildPlayer) => {\n      if (player === changedPlayer) {\n        return { ...player, player: { ...player.player, cord: cord } };\n      } else {\n        return player;\n      }\n    });\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: BuildPlayer) => {\n    console.log(\"drag\", player.player.name, player.player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: BuildPlayer): number => {\n      if (player.player.isMonster) {\n        const monster = player.entity as Monster;\n        switch (monster.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot size={size * zoom} onDrop={(e) => drop(e, cord)} onDragOver={dragOver}>\n      {players.map((playerIcon: BuildPlayer, index: number) => {\n        if (\n          (playerIcon.player.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n          (playerIcon.player.cord !== undefined &&\n            playerIcon.player.cord[0] === cord[0] &&\n            playerIcon.player.cord[1] === cord[1])\n        )\n          return (\n            <Image\n              key={\"icon\" + index}\n              drag={drag}\n              player={playerIcon}\n              dragOver={dragOver}\n              pic={playerIcon.entity.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.player.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n`;\n\ninterface $ImageProps {\n  pic: string;\n  size: number;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: BuildPlayer;\n  drag: (e: any, player: BuildPlayer) => void;\n  dragOver: any;\n}\n\nconst Image = ({ dragOver, drag, pic, size, player, isDead, isCurrent }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: size - 6 + \"px\",\n    width: size - 6 + \"px\",\n    opacity: isDead ? \"0.5\" : \"1\",\n    border: isCurrent ? \"\" : \"none\",\n  };\n\n  if (pic !== \"\") {\n    return (\n      <ImageElm\n        onDragStart={(e) => drag(e, player)}\n        onDragOver={dragOver}\n        draggable\n        style={style}\n      ></ImageElm>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n`;\n\nconst Empty = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport BuildPlayer from \"../../../../data/encounter/BuildPlayer\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport { buildEncounter } from \"../../../../services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport BuildEncounter from \"../../../../data/encounter/BuildEncounter\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loadedEncounter, setLoadedEncounter] = useState<BuildEncounter>(new BuildEncounter());\n  const [loading, isLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    buildEncounter(encounter).then((buildEncounter) => {\n      setLoadedEncounter(buildEncounter);\n      isLoading(false);\n    });\n  }, [encounter, setLoadedEncounter]);\n\n  const onChangePlayerField = (field: string, newField: string | number, oldPlayer: Player) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = loadedEncounter.encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = loadedEncounter.encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % loadedEncounter.players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % loadedEncounter.players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (loadedEncounter.players[nextInit].player.currentHp <= 0) {\n      if ((nextInit + 1) % loadedEncounter.players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % loadedEncounter.players.length;\n      counter++;\n      if (counter > loadedEncounter.players.length) {\n        break;\n      }\n    }\n    if (counter > loadedEncounter.players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  const onChangeDimension = useCallback((dimension: {\n    width: number;\n    height: number;\n    size: number;\n    zoom: number;\n  }) => {\n    onEdit({ ...loadedEncounter.encounter, dimension: dimension });\n  },[loadedEncounter.encounter, onEdit]);\n\n  const onChangePlayers = useCallback((players: BuildPlayer[]) => {\n    if (players !== loadedEncounter.players) {\n      let newPlayers: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (!player.player.isMonster) {\n          newPlayers.push(player.player);\n        }\n      });\n      let newEnemies: Player[] = [];\n      players.forEach((player: BuildPlayer) => {\n        if (player.player.isMonster) {\n          newEnemies.push(player.player);\n        }\n      });\n\n      onEdit({ ...loadedEncounter.encounter, players: newPlayers, enemies: newEnemies });\n    }\n  },[loadedEncounter.encounter, loadedEncounter.players, onEdit]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          {dmView && (\n            <PropElm>\n              <PropTitle>Difficulty: </PropTitle>\n              {loadedEncounter.difficulty.difficulty}\n            </PropElm>\n          )}\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                {dmView && <th>Current Hp</th>}\n                {dmView && <th>Hp</th>}\n                {dmView && <th>AC</th>}\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {loadedEncounter.players.map((buildPlayer: BuildPlayer, index: number) => {\n                return (\n                  <Row\n                    current={encounter.currentInit === index && encounter.isPlaying}\n                    isDead={buildPlayer.player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={buildPlayer.player.init}\n                        onChange={(init) => onChangePlayerField(\"init\", init, buildPlayer.player)}\n                      />\n                    </PropField>\n                    <Prop>\n                      {buildPlayer.entity.pic !== \"\" && buildPlayer.entity.pic !== undefined ? (\n                        <PlayerImage player={buildPlayer}></PlayerImage>\n                      ) : (\n                        <></>\n                      )}\n                      {buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {dmView ? buildPlayer.player.name : \"???\"}\n                        </MainLink>\n                      )}\n                      {!buildPlayer.player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${buildPlayer.player.name}`)\n                          }\n                        >\n                          {buildPlayer.player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    {dmView && (\n                      <>\n                        <PropField>\n                          <TinyNumberField\n                            value={buildPlayer.player.currentHp}\n                            max={buildPlayer.player.hp}\n                            onChange={(currentHp) =>\n                              onChangePlayerField(\"currentHp\", currentHp, buildPlayer.player)\n                            }\n                          />\n                        </PropField>\n                        <Prop>{buildPlayer.player.hp}</Prop>\n                        <Prop>{buildPlayer.player.ac}</Prop>\n                      </>\n                    )}\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {buildPlayer.player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(buildPlayer.player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n      {loadedEncounter && encounter.map !== \"\" && encounter.map !== undefined && (\n        <Board\n          onChangePlayers={onChangePlayers}\n          players={loadedEncounter.players}\n          dimension={\n            encounter.dimension !== undefined\n              ? encounter.dimension\n              : { width: 20, height: 20, size: 20, zoom: 100 }\n          }\n          currentPlayerNumber={loadedEncounter.encounter.currentInit}\n          onChangeDimension={onChangeDimension}\n          img={encounter.map}\n        ></Board>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\ninterface $PlayerImageProps {\n  player: BuildPlayer;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.entity.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  min-width: 500px;\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}