{"version":3,"sources":["data/encounter/Encounter.tsx","components/entities/encounters/details/link_wrapper/NameToEncounter.tsx","components/general_elements/ErrorTile.tsx"],"names":["Encounter","id","name","enemies","players","isPlaying","currentInit","roundCounter","this","isEncounter","arg","nameCheck","undefined","enemiesCheck","Array","isArray","playersCheck","isPlayingCheck","NameToEncounter","match","history","useHistory","db","MyAppDatabase","useItemByAttr","encounters","params","encounter","loading","error","text","buttonText","onButton","newEncounter","createNewWithId","push","createNewEncounter","isNew","ErrorTile","Tile","PropWrapper","Name","Text","PropTitle","onClick","icon","faPlusCircle","styled","div","theme","tile","color","backgroundColor","boxShadow","headerColor","span","backgroundColorLink"],"mappings":"qLAGqBA,EASnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAhBHN,QAgBE,OAfFC,UAeE,OAdFC,aAcE,OAbFC,aAaE,OAZFC,eAYE,OAXFC,iBAWE,OAVFC,kBAUE,EACAC,KAAKP,GAAKA,EACVO,KAAKN,KAAOA,GAAQ,GACpBM,KAAKL,QAAUA,GAAW,GAC1BK,KAAKJ,QAAUA,GAAW,GAC1BI,KAAKH,UAAYA,IAAa,EAC9BG,KAAKF,YAAcA,GAAe,EAClCE,KAAKD,aAAeA,GAAgB,GAIjC,SAASE,EAAYC,GAC1B,IAAMC,OAAyBC,IAAbF,EAAIR,MAAyC,iBAAZQ,EAAIR,KACjDW,OAA+BD,IAAhBF,EAAIP,SAAyBW,MAAMC,QAAQL,EAAIP,SAC9Da,OAA+BJ,IAAhBF,EAAIN,SAAyBU,MAAMC,QAAQL,EAAIN,SAC9Da,OACcL,IAAlBF,EAAIL,WAAmD,kBAAjBK,EAAIL,UAC5C,OAAOK,GAAOC,GAAaE,GAAgBG,GAAgBC,I,6ICS9CC,UAjCS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACrBC,EAAUC,cACRC,EAAK,IAAIC,IAFoD,EAG/BC,YAAcF,EAAGG,WAAY,OAAQN,EAAMO,OAAOxB,MAHnB,mBAG5DyB,EAH4D,KAGjDC,EAHiD,KAGxCC,EAHwC,KAanE,OACE,kBAAC,IAAD,MACIA,GAASD,GAAW,kBAAC,IAAD,MACrBC,IAAUD,GAAW,sDACpBC,IAAUD,QAAyBhB,IAAde,GACrB,kBAAC,IAAD,CACEG,KAAM,0DACNC,WAAY,MACZC,SAAU,kBAhBS,WACzB,IAAIC,EAAe,IAAIjC,IAAU,EAAGmB,EAAMO,OAAOxB,aAC1C+B,EAAahC,GACpBiC,YAAgB,aAAcD,GAAc,SAAChC,GAC3CmB,EAAQe,KAAR,+BAAqClC,OAYjBmC,MAGlBP,GAAUD,QAAyBhB,IAAde,EAGrB,GAFA,kBAAC,IAAD,CAAiBA,UAAWA,EAAWU,MAA0B,KAAnBV,EAAUzB,U,uwCCTjDoC,IAjBG,SAAC,GAA4C,IAA1CR,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SACrC,OACE,kBAACO,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kDAEF,kBAACC,EAAD,KACE,kBAACC,EAAD,eACCb,GAEH,kBAAC,IAAD,CAAYA,KAAMC,EAAYa,QAAS,kBAAMZ,KAAYa,KAAMC,SAQvE,IAAMP,EAAOQ,IAAOC,IAAV,KAEC,qBAAGC,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAUpCZ,EAAOM,IAAOC,IAAV,KAOC,qBAAGC,MAAkBC,KAAKI,eAK/Bd,EAAcO,IAAOC,IAAV,KASXL,EAAYI,IAAOQ,KAAV,KAEJ,qBAAGN,MAAkBC,KAAKM,uBAK/Bd,EAAOK,IAAOC,IAAV,KAQY,qBAAGC,MAAkBC,KAAKE","file":"static/js/67.1fcf4f33.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Encounter from \"../../../../../data/encounter/Encounter\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(db.encounters, \"name\", match.params.name);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter(0, match.params.name);\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && encounter === undefined && (\n        <ErrorTile\n          text={\"No such encounter exists. Want to creat such encounter?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEncounter()}\n        />\n      )}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} isNew={encounter.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n"],"sourceRoot":""}