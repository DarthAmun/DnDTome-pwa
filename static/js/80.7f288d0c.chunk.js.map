{"version":3,"sources":["components/entities/gear/details/link_wrapper/IdToGear.tsx"],"names":["IdToGear","match","db","MyAppDatabase","useItem","gears","params","id","gear","loading","error","undefined","isNew","name"],"mappings":"yKAwBeA,UAfE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACZC,EAAK,IAAIC,IAD6C,EAE7BC,YAAQF,EAAGG,OAAQJ,EAAMK,OAAOC,IAFH,mBAErDC,EAFqD,KAE/CC,EAF+C,KAEtCC,EAFsC,KAI5D,OACE,qCACIA,GAASD,GAAW,kBAAC,IAAD,MACrBC,IAAUD,GAAW,mDACpBC,IAAUD,QAAoBE,IAATH,GACrB,kBAAC,IAAD,CAAYA,KAAMA,EAAMI,MAAqB,KAAdJ,EAAKK","file":"static/js/80.7f288d0c.chunk.js","sourcesContent":["import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default IdToGear;\n"],"sourceRoot":""}