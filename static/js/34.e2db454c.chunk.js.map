{"version":3,"sources":["data/classes/Feature.tsx","components/form_elements/ShortTextField.tsx","components/form_elements/EnumField.tsx","data/classes/FeatureSet.tsx","data/classes/Subclass.tsx","components/form_elements/NumberArrayField.tsx","components/entities/classes/details/ClassView.tsx","components/entities/classes/details/ClassEditView.tsx","components/entities/classes/details/ClassDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/entities/classes/details/link_wrapper/IdToClass.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/general_elements/Dialog.tsx","components/form_elements/NumberField.tsx","components/form_elements/TextField.tsx","components/form_elements/CheckField.tsx","../node_modules/peerjs/dist sync"],"names":["FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","undefined","forEach","option","toString","Feature","name","text","selections","type","this","normal","isFeature","arg","nameCheck","textCheck","selectionsCheck","Array","isArray","ShortTextField","icon","transform","onChange","Field","LabelText","Icon","Input","e","target","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","textarea","input","EnumField","options","handleChange","StyledSelect","classNamePrefix","Select","buttons","FeatureSet","level","profBonus","features","bonis","spellslots","isFeatureSet","levelCheck","profBonusCheck","featuresCheck","Subclass","id","filename","sources","isSubclass","typeCheck","sourcesCheck","NumberArrayField","values","max","useState","array","setArray","handleValueChange","index","map","key","ClassView","classe","send","setSend","subclasses","setSubclasses","hardSubselect","setHardSubselect","history","useHistory","useEffect","reciveAllFiltered","fieldName","sort","results","getPicture","useCallback","pic","CenterWrapper","ImageView","View","Name","PropWrapper","Prop","hitDices","faLink","Text","PropTitle","FormatedText","proficiencies","equipment","CheckField","length","subclass","link","SubclasseLink","onClick","push","CreateButton","newSubclass","createNewWithId","createNewSubclass","faPlusCircle","TextButton","faPaperPlane","P2PSender","data","mode","featureSets","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","count","levels","i","printSpellslots","featureSet","spellslot","boni","FeatureProp","feature","span","backgroundColorLink","table","tr","th","td","Image","ImageElm","src","Empty","img","button","ClassEditView","onEdit","setSelections","reciveAll","selectionOptions","select","onFeatureSetChange","oldFeature","field","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","StringField","faImage","TextField","FeatureView","FeatureNumber","IconButton","faTrash","indexOf","splice","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","faPlus","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","NumberField","ClassDetail","isNew","editMode","setMode","classObj","editClass","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","title","tableName","updateWithCallback","result","setTimeout","updateClass","faSave","Message","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","height","hoverColor","placeholder","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","then","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","includes","parts","split","formattedParts","part","codePart","linkParts","TextPart","Link","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","IdToClass","match","db","MyAppDatabase","useItem","classes","params","error","effect","setEffect","reducer","state","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Back","ToggleLeft","ToggleRight","EditToggle","props","setName","peer","setPeer","setError","brokerId","min","password","characters","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","disconnected","destroyed","reconnect","reciveAllPromise","faExclamationCircle","DialogWrapper","ButtonBar","step","defaultChecked","checked","Checkmark","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/34.e2db454c.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [hardSubselect, setHardSubselect] = useState<boolean>(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      hardSubselect\n        ? [\n            { fieldName: \"type\", value: classe.name, sort: 0 },\n            { fieldName: \"sources\", value: classe.sources, sort: 0 },\n          ]\n        : [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe, hardSubselect]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <CheckField value={hardSubselect} label=\"Hard Select\" onChange={setHardSubselect} />\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink key={index} onClick={() => history.push(link)}>\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={classe.featureSets[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(classe.featureSets[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Class from \"../../../../data/classes/Class\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  classe: Class;\n  isNew: boolean;\n}\n\nconst ClassDetail = ({ classe, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${classe.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"classes\", classe.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateClass(\"classes\", classObj)} icon={faSave} />\n            <IconButton onClick={() => deleteClass()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItem } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined && (\n        <ClassDetail classe={classe} isNew={classe.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default IdToClass;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 98;"],"sourceRoot":""}