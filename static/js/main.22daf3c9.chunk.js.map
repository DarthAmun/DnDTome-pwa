{"version":3,"sources":["components/theme/Theme.tsx","components/Loading.tsx","components/theme/MyThemeProvider.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","buttons","color","backgroundColor","disabled","hoverColor","height","input","main","highlight","header","tile","backgroundColorLink","headerColor","boxShadow","nav","size","small","width","medium","large","darkTheme","LoadingSpinner","Spinner","Icon","icon","faDiceD20","id","r","cx","cy","stopColor","offset","CompleteLoadingSpinner","CompleteWrapper","LocalLoadingSpinner","Wrapper","LocalSpinner","styled","div","theme","FontAwesomeIcon","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","CampaignOverview","lazy","IdToCampaign","NameToCampaign","CharOverview","IdToChar","NameToChar","CharLab","ClassOverview","IdToClass","NameToClass","IdToEncounter","NameToEncounter","EncounterOverview","IdToEvent","NameToEvent","EventOverview","IdToGear","NameToGear","GearOverview","IdToGroup","NameToGroup","GroupOverview","IdToItem","NameToItem","ItemOverview","IdToBook","NameToBook","Library","IdToLocation","NameToLocation","LocationOverview","IdToMonster","NameToMonster","MonsterOverview","IdToNpc","NameToNpc","NpcOverview","IdToQuest","NameToQuest","QuestOverview","IdToRace","NameToRace","RaceOverview","IdToRandomTable","NameToRandomTable","RandomTableOverview","IdToSelection","NameToSelection","SelectionOverview","IdToSpell","NameToSpell","SpellOverview","IdToSubclass","NameToSubclass","IdToSubrace","NameToSubrace","IdToWorld","NameToWorld","WorldOverview","Help","Home","Options","Statistics","App","fallback","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22daf3c9.chunk.js","sourcesContent":["interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    hoverColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  header: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    headerColor: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"darkgrey\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"#F3F5F8\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    headerColor: \"black\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#fff\",\n    backgroundColor: \"#F55C5C\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"#191D38\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#1A1F3B\",\n  },\n  main: {\n    backgroundColor: \"#191D38\",\n    color: \"\",\n    highlight: \"#F55C5C\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#191D38\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#1F2340\",\n    backgroundColorLink: \"#E45D68\",\n    headerColor: \"#CACBDB\",\n    color: \"lightslategray\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const CompleteLoadingSpinner = () => (\n  <CompleteWrapper>\n    <Spinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </Spinner>\n  </CompleteWrapper>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst CompleteWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import React, { lazy, Suspense } from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/theme/MyThemeProvider\";\nimport { CompleteLoadingSpinner } from \"./components/Loading\";\n\nconst CampaignOverview = lazy(() => import(\"./components/entities/campaigns/CampaignOverview\"));\nconst IdToCampaign = lazy(\n  () => import(\"./components/entities/campaigns/details/link_wrapper/IdToCampaign\")\n);\nconst NameToCampaign = lazy(\n  () => import(\"./components/entities/campaigns/details/link_wrapper/NameToCampaign\")\n);\nconst CharOverview = lazy(() => import(\"./components/entities/chars/CharOverview\"));\nconst IdToChar = lazy(() => import(\"./components/entities/chars/details/link_wrapper/IdToChar\"));\nconst NameToChar = lazy(\n  () => import(\"./components/entities/chars/details/link_wrapper/NameToChar\")\n);\nconst CharLab = lazy(() => import(\"./components/entities/chars/lab/CharLab\"));\nconst ClassOverview = lazy(() => import(\"./components/entities/classes/ClassOverview\"));\nconst IdToClass = lazy(\n  () => import(\"./components/entities/classes/details/link_wrapper/IdToClass\")\n);\nconst NameToClass = lazy(\n  () => import(\"./components/entities/classes/details/link_wrapper/NameToClass\")\n);\nconst IdToEncounter = lazy(\n  () => import(\"./components/entities/encounters/details/link_wrapper/IdToEncounter\")\n);\nconst NameToEncounter = lazy(\n  () => import(\"./components/entities/encounters/details/link_wrapper/NameToEncounter\")\n);\nconst EncounterOverview = lazy(() => import(\"./components/entities/encounters/EncounterOverview\"));\nconst IdToEvent = lazy(() => import(\"./components/entities/events/details/link_wrapper/IdToEvent\"));\nconst NameToEvent = lazy(\n  () => import(\"./components/entities/events/details/link_wrapper/NameToEvent\")\n);\nconst EventOverview = lazy(() => import(\"./components/entities/events/EventOverview\"));\nconst IdToGear = lazy(() => import(\"./components/entities/gear/details/link_wrapper/IdToGear\"));\nconst NameToGear = lazy(() => import(\"./components/entities/gear/details/link_wrapper/NameToGear\"));\nconst GearOverview = lazy(() => import(\"./components/entities/gear/GearOverview\"));\nconst IdToGroup = lazy(() => import(\"./components/entities/groups/details/link_wrapper/IdToGroup\"));\nconst NameToGroup = lazy(\n  () => import(\"./components/entities/groups/details/link_wrapper/NameToGroup\")\n);\nconst GroupOverview = lazy(() => import(\"./components/entities/groups/GroupOverview\"));\nconst IdToItem = lazy(() => import(\"./components/entities/item/details/link_wrapper/IdToItem\"));\nconst NameToItem = lazy(() => import(\"./components/entities/item/details/link_wrapper/NameToItem\"));\nconst ItemOverview = lazy(() => import(\"./components/entities/item/ItemOverview\"));\nconst IdToBook = lazy(() => import(\"./components/entities/library/details/link_wrapper/IdToBook\"));\nconst NameToBook = lazy(\n  () => import(\"./components/entities/library/details/link_wrapper/NameToBook\")\n);\nconst Library = lazy(() => import(\"./components/entities/library/Library\"));\nconst IdToLocation = lazy(\n  () => import(\"./components/entities/location/details/link_wrapper/IdToLocation\")\n);\nconst NameToLocation = lazy(\n  () => import(\"./components/entities/location/details/link_wrapper/NameToLocation\")\n);\nconst LocationOverview = lazy(() => import(\"./components/entities/location/LocationOverview\"));\nconst IdToMonster = lazy(\n  () => import(\"./components/entities/monster/details/link_wrapper/IdToMonster\")\n);\nconst NameToMonster = lazy(\n  () => import(\"./components/entities/monster/details/link_wrapper/NameToMonster\")\n);\nconst MonsterOverview = lazy(() => import(\"./components/entities/monster/MonsterOverview\"));\nconst IdToNpc = lazy(() => import(\"./components/entities/npc/details/link_wrapper/IdToNpc\"));\nconst NameToNpc = lazy(() => import(\"./components/entities/npc/details/link_wrapper/NameToNpc\"));\nconst NpcOverview = lazy(() => import(\"./components/entities/npc/NpcOverview\"));\nconst IdToQuest = lazy(() => import(\"./components/entities/quest/details/link_wrapper/IdToQuest\"));\nconst NameToQuest = lazy(\n  () => import(\"./components/entities/quest/details/link_wrapper/NameToQuest\")\n);\nconst QuestOverview = lazy(() => import(\"./components/entities/quest/QuestOverview\"));\nconst IdToRace = lazy(() => import(\"./components/entities/races/details/link_wrapper/IdToRace\"));\nconst NameToRace = lazy(\n  () => import(\"./components/entities/races/details/link_wrapper/NameToRace\")\n);\nconst RaceOverview = lazy(() => import(\"./components/entities/races/RaceOverview\"));\nconst IdToRandomTable = lazy(\n  () => import(\"./components/entities/random_tables/details/link_wrapper/IdToRandomTable\")\n);\nconst NameToRandomTable = lazy(\n  () => import(\"./components/entities/random_tables/details/link_wrapper/NameToRandomTable\")\n);\nconst RandomTableOverview = lazy(\n  () => import(\"./components/entities/random_tables/RandomTableOverview\")\n);\nconst IdToSelection = lazy(\n  () => import(\"./components/entities/selections/details/link-wrapper/IdToSelection\")\n);\nconst NameToSelection = lazy(\n  () => import(\"./components/entities/selections/details/link-wrapper/NameToSelection\")\n);\nconst SelectionOverview = lazy(() => import(\"./components/entities/selections/SelectionOverview\"));\nconst IdToSpell = lazy(() => import(\"./components/entities/spells/details/link_wrapper/IdToSpell\"));\nconst NameToSpell = lazy(\n  () => import(\"./components/entities/spells/details/link_wrapper/NameToSpell\")\n);\nconst SpellOverview = lazy(() => import(\"./components/entities/spells/SpellOverview\"));\nconst IdToSubclass = lazy(\n  () => import(\"./components/entities/subclasses/details/link_wrapper/IdToSubclass\")\n);\nconst NameToSubclass = lazy(\n  () => import(\"./components/entities/subclasses/details/link_wrapper/NameToSubclass\")\n);\nconst IdToSubrace = lazy(\n  () => import(\"./components/entities/subraces/details/link_wrapper/IdToSubrace\")\n);\nconst NameToSubrace = lazy(\n  () => import(\"./components/entities/subraces/details/link_wrapper/NameToSubrace\")\n);\nconst IdToWorld = lazy(() => import(\"./components/entities/worlds/details/link_wrapper/IdToWorld\"));\nconst NameToWorld = lazy(\n  () => import(\"./components/entities/worlds/details/link_wrapper/NameToWorld\")\n);\nconst WorldOverview = lazy(() => import(\"./components/entities/worlds/WorldOverview\"));\nconst Help = lazy(() => import(\"./components/help/Help\"));\nconst Home = lazy(() => import(\"./components/home/Home\"));\nconst Options = lazy(() => import(\"./components/options/Options\"));\nconst Statistics = lazy(() => import(\"./components/statistics/Statistics\"));\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Suspense fallback={<CompleteLoadingSpinner />}>\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/home\" component={Home}></Route>\n            <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n            <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n            <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n            <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n            <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n            <Route path=\"/gear-overview\" component={GearOverview}></Route>\n            <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n            <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n            <Route path=\"/item-overview\" component={ItemOverview}></Route>\n            <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n            <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n            <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n            <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n            <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n            <Route path=\"/race-overview\" component={RaceOverview}></Route>\n            <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n            <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n            <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n            <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n            <Route path=\"/class-overview\" component={ClassOverview}></Route>\n            <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n            <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n            <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n            <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n            <Route path=\"/char-overview\" component={CharOverview}></Route>\n            <Route path=\"/char-lab\" component={CharLab}></Route>\n            <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n            <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n            <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n            <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n            <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n            <Route path=\"/selection-detail/name/:name\" component={NameToSelection}></Route>\n            <Route path=\"/selection-detail/id/:id\" component={IdToSelection}></Route>\n            <Route path=\"/selection-overview\" component={SelectionOverview}></Route>\n            <Route path=\"/randomTable-detail/name/:name\" component={NameToRandomTable}></Route>\n            <Route path=\"/randomTable-detail/id/:id\" component={IdToRandomTable}></Route>\n            <Route path=\"/randomTable-overview\" component={RandomTableOverview}></Route>\n            <Route path=\"/campaign-detail/name/:name\" component={NameToCampaign}></Route>\n            <Route path=\"/campaign-detail/id/:id\" component={IdToCampaign}></Route>\n            <Route path=\"/campaign-overview\" component={CampaignOverview}></Route>\n            <Route path=\"/quest-detail/name/:name\" component={NameToQuest}></Route>\n            <Route path=\"/quest-detail/id/:id\" component={IdToQuest}></Route>\n            <Route path=\"/quest-overview\" component={QuestOverview}></Route>\n            <Route path=\"/group-detail/name/:name\" component={NameToGroup}></Route>\n            <Route path=\"/group-detail/id/:id\" component={IdToGroup}></Route>\n            <Route path=\"/group-overview\" component={GroupOverview}></Route>\n            <Route path=\"/npc-detail/name/:name\" component={NameToNpc}></Route>\n            <Route path=\"/npc-detail/id/:id\" component={IdToNpc}></Route>\n            <Route path=\"/npc-overview\" component={NpcOverview}></Route>\n            <Route path=\"/world-detail/name/:name\" component={NameToWorld}></Route>\n            <Route path=\"/world-detail/id/:id\" component={IdToWorld}></Route>\n            <Route path=\"/world-overview\" component={WorldOverview}></Route>\n            <Route path=\"/event-detail/name/:name\" component={NameToEvent}></Route>\n            <Route path=\"/event-detail/id/:id\" component={IdToEvent}></Route>\n            <Route path=\"/event-overview\" component={EventOverview}></Route>\n            <Route path=\"/location-detail/name/:name\" component={NameToLocation}></Route>\n            <Route path=\"/location-detail/id/:id\" component={IdToLocation}></Route>\n            <Route path=\"/location-overview\" component={LocationOverview}></Route>\n            <Route path=\"/statistics\" component={Statistics}></Route>\n            <Route path=\"/options\" component={Options}></Route>\n            <Route path=\"/library\" component={Library}></Route>\n            <Route path=\"/help\" component={Help}></Route>\n          </Switch>\n        </Suspense>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}