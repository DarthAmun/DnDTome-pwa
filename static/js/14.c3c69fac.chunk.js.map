{"version":3,"sources":["components/entities/monsters/MonsterTile.tsx","data/races/Subrace.tsx","data/classes/Feature.tsx","components/form_elements/EnumField.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/world/Location.tsx","data/campaign/Campaign.tsx","data/classes/FeatureSet.tsx","components/entities/npcs/NpcTile.tsx","components/entities/chars/CharTile.tsx","data/world/World.tsx","components/general_elements/Dialog.tsx","data/classes/Subclass.tsx","data/campaign/Group.tsx","components/entities/locations/LocationTile.tsx","components/entities/events/EventTile.tsx","../node_modules/peerjs/dist sync","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","components/form_elements/FileField.tsx","components/general_elements/ErrorTile.tsx","components/entities/locations/details/LocationEditView.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","data/campaign/Note.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignView.tsx","components/form_elements/NumberArrayField.tsx","components/form_elements/ShortTextField.tsx","components/entities/classes/details/ClasseEditView.tsx","components/entities/classes/details/ClasseView.tsx","components/entities/events/details/EventEditView.tsx","components/entities/events/details/EventView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearView.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/items/details/ItemEditView.tsx","components/entities/items/details/ItemView.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookView.tsx","components/entities/locations/details/LocationView.tsx","components/entities/monsters/details/MonsterEditView.tsx","components/entities/monsters/details/MonsterView.tsx","components/entities/npcs/details/NpcEditView.tsx","components/entities/npcs/details/NpcView.tsx","components/entities/quests/details/QuestEditView.tsx","components/entities/quests/details/QuestView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceView.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/entities/selections/details/SelectionEditView.tsx","components/entities/selections/details/SelectionView.tsx","components/entities/spells/details/SpellEditView.tsx","components/entities/spells/details/SpellView.tsx","components/entities/subclasses/details/SubclasseEditView.tsx","components/entities/subclasses/details/SubclasseView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceView.tsx","components/entities/worlds/details/WorldEditView.tsx","data/world/BuildWorld.tsx","services/WorldService.tsx","components/entities/worlds/details/WorldView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/details/ToEntity.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/CheckField.tsx","data/races/Trait.tsx","database/MyDatabase.tsx"],"names":["MonsterTile","monster","isLegendary","useCallback","undefined","lAblt","trim","sAblt","includes","formatCr","cr","getPicture","pic","Tile","to","id","Type","type","subtype","Flag","CR","ImageName","Image","name","Name","PropWrapper","Prop","size","alignment","WideProp","Icon","icon","faRunning","speed","lang","faLink","sources","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","main","highlight","headerColor","FontAwesomeIcon","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Subrace","filename","abilityScores","traits","this","isSubrace","arg","nameCheck","typeCheck","abilityScoresCheck","traitsCheck","Array","isArray","isTrait","sourcesCheck","FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","forEach","option","toString","Feature","text","selections","normal","isFeature","textCheck","selectionsCheck","EnumField","options","transform","onChange","handleChange","Field","LabelText","StyledSelect","classNamePrefix","Select","input","buttons","BackButton","action","Back","onClick","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Location","map","dimension","markers","width","isLocation","mapCheck","dimensionCheck","markersCheck","Campaign","description","players","logs","npcs","notes","flow","isCampaign","picCheck","descriptionCheck","playersCheck","logsCheck","npcsCheck","notesCheck","FeatureSet","level","profBonus","features","bonis","spellslots","isFeatureSet","levelCheck","profBonusCheck","featuresCheck","NpcTile","npc","RowProp","ImgContainer","CharTile","char","calcLevel","classes","classe","campaign","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","World","locations","events","isWorld","locationCheck","eventCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","Subclass","isSubclass","Group","monsters","isGroup","monstersCheck","flowCheck","LocationTile","location","EventTile","event","faCalendarAlt","date","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","EditDialog","activeElement","onSave","onClose","onDelete","useState","setLabel","useEffect","StringField","TextButton","faTimes","faSave","newElement","onSaveClick","Map","editable","onEdit","showEditDialog","setEditDialaog","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","position","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","console","log","editMarker","FormatedText","FileField","accept","isMulti","Input","target","files","multiple","ErrorTile","buttonText","onButton","Text","PropTitle","faPlusCircle","span","backgroundColorLink","LocationEditView","http","sizeOf","parse","get","response","chunks","on","chunk","push","buffer","Buffer","concat","CenterWrapper","View","faImage","update","tableName","data","db","MyAppDatabase","open","then","table","finally","close","updateWithCallback","callback","result","saveNew","entity","put","prom","saveNewFromList","entities","refinedEntities","bulkPut","saveWithCallback","add","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromise","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","filter","fieldName","hasTag","fieldPart","toLowerCase","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","body","appendChild","removeChild","IconButton","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","Note","title","content","tags","memo","StyledNode","Position","Top","onConnect","params","Left","Right","Bottom","isNode","isEdge","nodeTypes","customeNode","CustomeNode","FlowChart","initElements","isEditable","elements","setElements","setActiveElement","FlowContainer","onNodeDragStop","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","FlowBar","faPlus","newNode","x","length","y","addNewNode","newElm","CampaignEditView","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","TabBar","children","tab","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","time","characterList","npcList","Promise","timeEnd","NoteSearchBar","hasTitle","onSend","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","tabs","setTabs","setFilters","newTabs","Loading","Header","SearchableNoteView","NoteWrapper","faTags","SearchableView","toLocaleString","NumberArrayField","values","max","setArray","handleValueChange","ShortTextField","textarea","ClasseEditView","setSelections","selectionOptions","select","onFeatureSetChange","oldFeature","featureSets","featureSet","onBoniChange","oldBoni","boni","onFeatureChange","oldFeatureSet","feature","ClassView","hitDices","proficiencies","equipment","FeatureView","FeatureWrapper","FeatureNumber","indexOf","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","CheckField","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","NumberField","ClasseView","send","setSend","subclasses","setSubclasses","hardSubselect","setHardSubselect","history","useHistory","results","ImageView","subclass","link","SubclasseLink","CreateButton","newSubclass","createNewSubclass","faPaperPlane","P2PSender","FeatureRow","FeatureHeadProp","colSpan","SpellProp","levels","i","printSpellslots","spellslot","FeatureProp","tr","th","td","src","img","EventEditView","EventView","GearEditView","gear","cost","faCoins","weight","faWeightHanging","damage","faCrosshairs","properties","GearView","GroupEditView","group","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","BuildGroup","buildGroup","monsterList","GroupView","loadedGroup","setLoadedGroup","ItemEditView","item","base","attunment","magicBonus","rarity","ItemView","itemBase","setItemBase","hasAttunment","className","Rarity","BookEditView","book","faFileImport","file","fileList","from","triggerImportFiles","cover","pages","TagView","tag","TagWrapper","oldTag","onTagChange","removeTag","BookView","pdfjs","GlobalWorkerOptions","workerSrc","version","setBase","numPages","setNumPages","pageNumber","setPageNumber","reader","FileReader","readAsDataURL","onloadend","base64data","changePage","offset","prevPageNumber","DocumentWrapper","faArrowRight","faArrowLeft","onLoadSuccess","onItemClick","itemPageNumber","LocalLoadingSpinner","appVersion","msSaveBlob","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","Tag","faTag","LocationView","MonsterEditView","FieldGroup","hp","ac","str","dex","con","int","wis","cha","senses","savingThrows","skills","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","ablt","MonsterView","faShieldAlt","NpcEditView","NpcView","QuestEditView","quest","rewards","followQuest","newQuest","QuestView","RaceEditView","onTraitChange","oldTrait","trait","age","TraitView","TraitWrapper","TraitName","TraitLevel","removeTrait","TraitText","RaceView","subraces","setSubraces","SubraceLink","newSubrace","createNewSubrace","RandomTableEditView","randomTable","onRowChange","rows","header","placeholder","row","RowWrapper","RowCount","cells","removeRow","RandomTableView","rand","setRand","faDice","lastRowValues","split","Math","round","random","rollForRandom","range","min","TableHeadProp","cell","TableProp","SelectionEditView","SelectionWrapper","SelectionName","entityName","SelectionLevel","SelectionText","entityText","SelectionView","SpellEditView","spell","school","ritual","faHistory","faPowerOff","rotate","duration","faHourglassHalf","components","faMortarPestle","faUser","SpellView","formatLevel","hasRitual","hasConcentration","School","Level","SubclasseEditView","SubclassView","SubclasseView","SubraceEditView","SubraceView","WorldEditView","world","newLocation","oldLocation","newLocationlList","onChangeLocation","removeLocation","addNewLocation","newEvent","oldEvent","newEventlList","onChangeEvent","removeEvent","addNewEvent","BuildWorld","buildWorld","eventList","locationList","WorldView","loadedWorld","setLoadedWorld","localeCompare","EntityDetail","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEntity","msg","setTimeout","editAndSaveEntity","views","faExclamationTriangle","goBack","TopBar","newObj","duplicateEntity","faClone","entityId","React","toLocaleLowerCase","ToEntity","match","setEntityName","setEntity","error","setError","makeEntity","newEntity","newMatch","path","replaceAll","newCampaign","createNewEntity","charAt","toUpperCase","LinkCheck","entitiyFound","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","formatLink","parts","formattedParts","part","codePart","linkParts","TextPart","formatTable","textPart","tableRows","isHead","formatText","setName","peer","setPeer","brokerId","password","floor","generateBrokerId","newPeer","Peer","host","secure","conn","errorData","disconnected","destroyed","reconnect","faExclamationCircle","step","Bar","child","Tab","isActive","filedName","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","items","o","onSearch","searchTerm","newOptions","Options","Option","defaultChecked","checked","Checkmark","Trait","spells","gears","races","chars","encounters","books","randomTables","campaigns","quests","worlds","groups","stores","chars_spells","chars_monsters","chars_items","upgrade","trans","toCollection","modify","Dexie"],"mappings":"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CE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPv2B,WAAY,2CAEd,EAAKulB,QAAQ,IAAIsR,OAAO,CACtBX,OACE,oGACFX,MACE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPv2B,WAAY,yCACZw2B,aAAc,uCAEhB,EAAKjR,QAAQ,IAAIsR,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPv2B,WAAY,yCACZw2B,aAAc,uCAEhB,EAAKjR,QAAQ,IAAIsR,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPv2B,WAAY,yCACZw2B,aAAc,qCACdC,UACE,yFAEJ,EAAKlR,QAAQ,IAAIsR,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPv2B,WAAY,yCACZw2B,aAAc,qCACdC,UACE,uFACFC,OACE,2FACFj0B,KAAM,gEACNk0B,OAAQ,4EACR1xB,UAAW,iEACXC,OAAQ,uEAEV,EAAKqgB,QAAQ,IAAIsR,OAAO,CACtBX,OACE,8GACFX,MACE,6FACFY,MACE,0FACFjwB,SACE,mOACFkwB,MACE,+FACFpM,SAAU,6DACV5lB,QAAS,qFACT4b,WAAY,gDACZqW,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACP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","file":"static/js/14.c3c69fac.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const dimensionCheck =\n    arg.dimension !== undefined &&\n    typeof arg.dimension.height == \"number\" &&\n    typeof arg.dimension.width == \"number\";\n  const markersCheck = arg.markers !== undefined && Array.isArray(arg.markers);\n  return arg && nameCheck && sourcesCheck && mapCheck && dimensionCheck && markersCheck;\n}\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logsCheck = arg.logs !== undefined && Array.isArray(arg.logs);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\n\nexport default class World implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  locations: string[];\n  events: string[];\n  map: string;\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    description?: string,\n    locations?: string[],\n    events?: string[],\n    map?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isWorld(arg: any): arg is World {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const eventCheck = arg.events !== undefined && Array.isArray(arg.events);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return (\n    arg && nameCheck && descriptionCheck && locationCheck && eventCheck && sourcesCheck && mapCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  notes: Note[];\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    notes?: Note[],\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.notes = notes || [];\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    notesCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Location from \"../../../data/world/Location\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationTile = ({ location }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <Tile to={\"/location-detail/id/\" + location.id}>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{location.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{location.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {location.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default LocationTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Event from \"../../../data/world/Event\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventTile = ({ event }: $Props) => {\n  return (\n    <Tile to={\"/event-detail/id/\" + event.id}>\n      <Name>\n        <b>{event.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faCalendarAlt} />\n          {event.date}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {event.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default EventTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 233;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Location from \"../../../../data/world/Location\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport Map from \"../../../general_elements/map/Map\";\n\nimport { faLink, faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\ninterface $Props {\n  location: Location;\n  onEdit: (value: Location) => void;\n}\n\nconst LocationEditView = ({ location, onEdit }: $Props) => {\n  useEffect(() => {\n    if (location.map !== undefined && location.map !== \"\") {\n      let url = require(\"url\");\n      let http = require(\"http\");\n      let sizeOf = require(\"image-size\");\n\n      let options = url.parse(location.map);\n      http.get(options, function (response: any) {\n        let chunks: any = [];\n        response\n          .on(\"data\", function (chunk: any) {\n            chunks.push(chunk);\n          })\n          .on(\"end\", function () {\n            let buffer = Buffer.concat(chunks);\n            let size = sizeOf(buffer);\n            onEdit({ ...location, dimension: { height: size.height, width: size.width } });\n          });\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.map]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={location.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...location, name: name })}\n        />\n\n        <StringField\n          value={location.map}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...location, map: pic })}\n        />\n        <NumberField\n          value={location.dimension.width}\n          label=\"Map width\"\n          onChange={(width) =>\n            onEdit({ ...location, dimension: { ...location.dimension, width: width } })\n          }\n        />\n        <NumberField\n          value={location.dimension.height}\n          label=\"Map height\"\n          onChange={(height) =>\n            onEdit({ ...location, dimension: { ...location.dimension, height: height } })\n          }\n        />\n        <StringField\n          value={location.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...location, sources: sources })}\n        />\n      </View>\n      <Map editable={true} location={location} onEdit={onEdit} />\n    </CenterWrapper>\n  );\n};\n\nexport default LocationEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      let newTabs = [\"General\"];\n      if (buildCampaign.characters.length > 0) newTabs.push(\"Players\");\n      if (buildCampaign.npcs.length > 0) newTabs.push(\"Npcs\");\n      setTabs([...newTabs, \"Notes\", \"Log\", \"Graph\", \"Map\"]);\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && loadedCampaign.characters && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && loadedCampaign.npcs && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClasseEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClasseView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [hardSubselect, setHardSubselect] = useState<boolean>(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      hardSubselect\n        ? [\n            { fieldName: \"type\", value: classe.name, sort: 0 },\n            { fieldName: \"sources\", value: classe.sources, sort: 0 },\n          ]\n        : [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe, hardSubselect]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <CheckField value={hardSubselect} label=\"Hard Select\" onChange={setHardSubselect} />\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclasse-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink key={index} onClick={() => history.push(link)}>\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={classe.featureSets[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(classe.featureSets[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Event from \"../../../../data/world/Event\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n  onEdit: (value: Event) => void;\n}\n\nconst EventEditView = ({ event, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={event.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...event, name: name })}\n        />\n        <StringField\n          value={event.date}\n          label=\"Date\"\n          onChange={(date) => onEdit({ ...event, date: date })}\n        />\n        <StringField\n          value={event.sources}\n          label=\"Sources\"\n          onChange={(sources) => onEdit({ ...event, sources: sources })}\n        />\n        <TextField\n          value={event.description}\n          label=\"Description\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...event, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Event from \"../../../../data/world/Event\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventView = ({ event }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{event.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCalendarAlt} />\n            {event.date}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {event.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <PropTitle>Description</PropTitle>\n          <FormatedText text={event.description} />\n        </Text>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${event.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={event} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport Note from \"../../../../data/campaign/Note\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Notes\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {group.notes !== undefined &&\n            group.notes.map((note: Note, index: number) => {\n              return (\n                <Container key={index}>\n                  <StringField\n                    value={note.title}\n                    label=\"Title\"\n                    onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                  <TextField\n                    value={note.content}\n                    label=\"Feature Text\"\n                    onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                  />\n                  <StringField\n                    value={note.tags}\n                    label=\"Tags\"\n                    onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                  />\n                </Container>\n              );\n            })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monsters/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\nimport Note from \"../../../../data/campaign/Note\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport NoteSearchBar from \"../../campaigns/NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.group.notes.length > 0) newTabs.push(\"Notes\");\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedGroup.group.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../data/Item\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../data/Item\";\nimport Gear from \"../../../../data/Gear\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${item.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Location from \"../../../../data/world/Location\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport Map from \"../../../general_elements/map/Map\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\nimport \"leaflet/dist/leaflet.css\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationView = ({ location }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{location.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{location.name}</b>\n          </Name>\n        )}\n      </View>\n\n      <Map editable={false} location={location} />\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${location.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={location} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default LocationView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Npc from \"../../../../data/campaign/Npc\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n  onEdit: (value: Npc) => void;\n}\n\nconst NpcEditView = ({ npc, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={npc.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...npc, name: name })}\n        />\n        <StringField\n          value={npc.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...npc, pic: pic })}\n        />\n        <StringField\n          value={npc.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...npc, sources: sources })}\n        />\n        <TextField\n          value={npc.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...npc, description: description })}\n        />\n        <TextField\n          value={npc.traits}\n          label=\"Traits\"\n          icon={faBookOpen}\n          onChange={(traits) => onEdit({ ...npc, traits: traits })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcView = ({ npc }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={npc.description} />\n          </Text>\n          <Text>\n            <PropTitle>Traits: </PropTitle>\n            <FormatedText text={npc.traits} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${npc.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={npc} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Quest from \"../../../../data/campaign/Quest\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n  onEdit: (value: Quest) => void;\n}\n\nconst QuestEditView = ({ quest, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={quest.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...quest, name: name })}\n        />\n\n        <StringField\n          value={quest.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...quest, pic: pic })}\n        />\n        <StringField\n          value={quest.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...quest, sources: sources })}\n        />\n        <TextField\n          value={quest.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...quest, description: description })}\n        />\n        <TextField\n          value={quest.rewards}\n          label=\"Rewards\"\n          height={\"50px\"}\n          icon={faBookOpen}\n          onChange={(rewards) => onEdit({ ...quest, rewards: rewards })}\n        />\n        <TextField\n          value={quest.followQuest}\n          label=\"Followup\"\n          height={\"30px\"}\n          icon={faBookOpen}\n          onChange={(newQuest) => onEdit({ ...quest, followQuest: newQuest })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestView = ({ quest }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={quest.description} />\n          </Text>\n          <Text>\n            <FormatedText text={quest.rewards} />\n          </Text>\n          <Prop>\n            <FormatedText text={quest.followQuest} />\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${quest.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={quest} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      <View>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          );\n        })}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) =>\n                    onSelectionChange(selection, \"entityName\", name)\n                  }\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) =>\n                    onSelectionChange(selection, \"level\", level)\n                  }\n                />\n                <IconButton\n                  icon={faTrash}\n                  onClick={() => removeSelection(selection)}\n                />\n                <SelectionText\n                value={selection.entityText}\n                label=\"Text\"\n                onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n              />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../data/Spell\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport { faLink, faPlus, faTrash, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclasse: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclasseEditView = ({ subclasse, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const onBoniChange = (oldFeature: FeatureSet, oldBoni: Boni, field: string, value: string) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclasse, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclasse.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(0, featureSet.spellslots.length - 1),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclasse.features.length - 1 >= 0) {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclasse.features[subclasse.features.length - 1].bonis,\n            spellslots: subclasse.features[subclasse.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclasse.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclasse, name: name })}\n        />\n        <StringField\n          value={subclasse.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclasse, type: type })}\n        />\n        <StringField\n          value={subclasse.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclasse, sources: sources })}\n        />\n      </SubclassView>\n      {subclasse.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) => onFeatureSetChange(featureSet, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeFeatureSet(featureSet)} />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) => onSpellslotChange(featureSet, spellslots)}\n              />\n              <IconButton icon={faMinus} onClick={() => removeSpellslot(featureSet)} />\n              <IconButton icon={faPlus} onClick={() => addNewSpellslot(featureSet)} />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) => onBoniChange(featureSet, boni, \"name\", name)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeBoni(boni)} />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) => onBoniChange(featureSet, boni, \"value\", value)}\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) => onFeatureChange(featureSet, feature, \"name\", name)}\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) => onFeatureChange(featureSet, feature, \"type\", type)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeFeature(feature)} />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) => onFeatureChange(featureSet, feature, \"text\", text)}\n                      />\n                      {feature.selections &&\n                        feature.selections.map((selection: string, index: number) => {\n                          return (\n                            <FeatureContainer key={index}>\n                              <EnumField\n                                options={selections}\n                                value={{ value: selection, label: selection }}\n                                label=\"Name\"\n                                onChange={(name) =>\n                                  onSelectionChange(featureSet, feature, selection, name)\n                                }\n                              />\n                              <IconButton\n                                icon={faTrash}\n                                onClick={() => removeSelection(selection)}\n                              />\n                            </FeatureContainer>\n                          );\n                        })}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton text={\"Add new Level\"} icon={faPlus} onClick={() => addNewFeatureSet()} />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclasse: Subclass;\n}\n\nconst SubclasseView = ({ subclasse }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    console.log(subclasse);\n  }, [subclasse]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclasse.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclasse.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclasse.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclasse.features !== undefined &&\n          subclasse.features.length !== 0 &&\n          subclasse.features[0].spellslots &&\n          subclasse.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={subclasse.features[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclasse.features[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(subclasse.features[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {subclasse.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclasse.features !== undefined && subclasse.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclasse.features[0].bonis &&\n                      subclasse.features[0].bonis.length > 0 &&\n                      subclasse.features[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclasse.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclasse.features !== undefined &&\n            subclasse.features.map((featureSet) => {\n              return featureSet.features.map((feature, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{feature.name}:</PropTitle>\n                    <FormatedText text={feature.text} />\n                  </Text>\n                );\n              });\n            })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclasse.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclasse} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport World from \"../../../../data/world/World\";\n\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldEditView = ({ world, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeLocation = (oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations\n        .filter((location: string) => location !== oldLocation)\n        .map((location: string) => {\n          return location;\n        });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const addNewLocation = () => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        return location;\n      });\n      newLocationlList.push(\"\");\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const onChangeLocation = (newLocation: string, oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        if (location === oldLocation) {\n          return newLocation;\n        } else {\n          return location;\n        }\n      });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n\n  const removeEvent = (oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events\n        .filter((event: string) => event !== oldEvent)\n        .map((event: string) => {\n          return event;\n        });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const addNewEvent = () => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        return event;\n      });\n      newEventlList.push(\"\");\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const onChangeEvent = (newEvent: string, oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        if (event === oldEvent) {\n          return newEvent;\n        } else {\n          return event;\n        }\n      });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={world.name}\n            label=\"World Name\"\n            onChange={(name) => onEdit({ ...world, name: name })}\n          />\n          <StringField\n            value={world.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...world, sources: sources })}\n          />\n          <TextField\n            value={world.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...world, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Locations\" && (\n        <>\n          {world.locations.map((location: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"locations\"}\n                  value={location}\n                  label=\"Location\"\n                  onChange={(newLocation) => onChangeLocation(newLocation, location)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLocation(location)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Location\"} icon={faPlus} onClick={() => addNewLocation()} />\n        </>\n      )}\n      {activeTab === \"Events\" && (\n        <>\n          {world.events.map((event: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"events\"}\n                  value={event}\n                  label=\"Event\"\n                  onChange={(newEvent) => onChangeEvent(newEvent, event)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEvent(event)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Event\"} icon={faPlus} onClick={() => addNewEvent()} />\n        </>\n      )}\n      {activeTab === \"World Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={world.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...world, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default WorldEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Location from \"./Location\";\nimport Event from \"./Event\";\nimport World from \"./World\";\n\nexport default class BuildWorld {\n  world: World;\n  locations: Location[];\n  events: Event[];\n  map: Location;\n\n  constructor(world?: World, locations?: Location[], events?: Event[], map?: Location) {\n    this.world = world || new World();\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildWorld from \"../data/world/BuildWorld\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildWorld = async (world: World): Promise<BuildWorld> => {\n  console.time(\"t\");\n  let events: Event[];\n  let locations: Location[];\n  let map: Location;\n\n  console.time(\"load\");\n  let eventList: Promise<Event>[] = [];\n  let locationList: Promise<Location>[] = [];\n\n  world.events.forEach((event: string) => {\n    eventList.push(recivePromiseByAttribute(\"events\", \"name\", event));\n  });\n  world.locations.forEach((location: string) => {\n    locationList.push(recivePromiseByAttribute(\"locations\", \"name\", location));\n  });\n  events = await Promise.all(eventList);\n  locations = await Promise.all(locationList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", world.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildWorld(world, locations, events, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport World from \"../../../../data/world/World\";\nimport Location from \"../../../../data/world/Location\";\nimport Event from \"../../../../data/world/Event\";\nimport BuildWorld from \"../../../../data/world/BuildWorld\";\nimport { buildWorld } from \"../../../../services/WorldService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport LocationTile from \"../../locations/LocationTile\";\nimport EventTile from \"../../events/EventTile\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldView = ({ world, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedWorld, setLoadedWorld] = useState<BuildWorld>(new BuildWorld());\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  useEffect(() => {\n    buildWorld(world).then((buildWorld) => {\n      setLoadedWorld(buildWorld);\n      setLoading(false);\n    });\n  }, [world, setLoadedWorld]);\n\n  const getPicture = useCallback(() => {\n    if (loadedWorld !== undefined) {\n      if (loadedWorld.map.map === \"\" || loadedWorld.map.map === null) {\n        return \"\";\n      }\n      return loadedWorld.map.map;\n    }\n    return \"\";\n  }, [loadedWorld]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedWorld && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedWorld.world.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedWorld.world.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedWorld.world.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedWorld.world.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Locations\" && (\n            <PropWrapper>\n              {loadedWorld.locations.map((location: Location, index: number) => {\n                return <LocationTile location={location} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Events\" && (\n            <PropWrapper>\n              {loadedWorld.events\n                .sort((a, b) => a.date.localeCompare(b.date))\n                .map((event: Event, index: number) => {\n                  return <EventTile event={event} key={index} />;\n                })}\n            </PropWrapper>\n          )}\n          {activeTab === \"World Map\" && <Map editable={false} location={loadedWorld.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WorldView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport CampaignEditView from \"../../entities/campaigns/details/CampaignEditView\";\nimport CampaignView from \"../../entities/campaigns/details/CampaignView\";\nimport ClasseEditView from \"../../entities/classes/details/ClasseEditView\";\nimport ClasseView from \"../../entities/classes/details/ClasseView\";\nimport EventEditView from \"../../entities/events/details/EventEditView\";\nimport EventView from \"../../entities/events/details/EventView\";\nimport GearEditView from \"../../entities/gear/details/GearEditView\";\nimport GearView from \"../../entities/gear/details/GearView\";\nimport GroupEditView from \"../../entities/groups/details/GroupEditView\";\nimport GroupView from \"../../entities/groups/details/GroupView\";\nimport ItemEditView from \"../../entities/items/details/ItemEditView\";\nimport ItemView from \"../../entities/items/details/ItemView\";\nimport BookEditView from \"../../entities/library/details/BookEditView\";\nimport BookView from \"../../entities/library/details/BookView\";\nimport LocationEditView from \"../../entities/locations/details/LocationEditView\";\nimport LocationView from \"../../entities/locations/details/LocationView\";\nimport MonsterEditView from \"../../entities/monsters/details/MonsterEditView\";\nimport MonsterView from \"../../entities/monsters/details/MonsterView\";\nimport NpcEditView from \"../../entities/npcs/details/NpcEditView\";\nimport NpcView from \"../../entities/npcs/details/NpcView\";\nimport QuestEditView from \"../../entities/quests/details/QuestEditView\";\nimport QuestView from \"../../entities/quests/details/QuestView\";\nimport RaceEditView from \"../../entities/races/details/RaceEditView\";\nimport RaceView from \"../../entities/races/details/RaceView\";\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport SelectionEditView from \"../../entities/selections/details/SelectionEditView\";\nimport SelectionView from \"../../entities/selections/details/SelectionView\";\nimport SpellEditView from \"../../entities/spells/details/SpellEditView\";\nimport SpellView from \"../../entities/spells/details/SpellView\";\nimport SubclasseEditView from \"../../entities/subclasses/details/SubclasseEditView\";\nimport SubclasseView from \"../../entities/subclasses/details/SubclasseView\";\nimport SubraceEditView from \"../../entities/subraces/details/SubraceEditView\";\nimport SubraceView from \"../../entities/subraces/details/SubraceView\";\nimport WorldEditView from \"../../entities/worlds/details/WorldEditView\";\nimport WorldView from \"../../entities/worlds/details/WorldView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  const views = {\n    CampaignView: CampaignView,\n    CampaignEditView: CampaignEditView,\n    ClasseView: ClasseView,\n    ClasseEditView: ClasseEditView,\n    EventView: EventView,\n    EventEditView: EventEditView,\n    GearView: GearView,\n    GearEditView: GearEditView,\n    GroupView: GroupView,\n    GroupEditView: GroupEditView,\n    ItemView: ItemView,\n    ItemEditView: ItemEditView,\n    BookView: BookView,\n    BookEditView: BookEditView,\n    LocationView: LocationView,\n    LocationEditView: LocationEditView,\n    MonsterView: MonsterView,\n    MonsterEditView: MonsterEditView,\n    NpcView: NpcView,\n    NpcEditView: NpcEditView,\n    QuestView: QuestView,\n    QuestEditView: QuestEditView,\n    RaceView: RaceView,\n    RaceEditView: RaceEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n    SelectionView: SelectionView,\n    SelectionEditView: SelectionEditView,\n    SpellView: SpellView,\n    SpellEditView: SpellEditView,\n    SubclasseView: SubclasseView,\n    SubclasseEditView: SubclasseEditView,\n    SubraceView: SubraceView,\n    SubraceEditView: SubraceEditView,\n    WorldView: WorldView,\n    WorldEditView: WorldEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  const createNewEntity = () => {\n    let newCampaign = new Campaign(0, match.params.name);\n    delete newCampaign.id;\n    createNewWithId(entityName + \"s\", newCampaign, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(19).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters:\n        \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(20)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups:\n          \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n      .upgrade((trans: any) => {\n        return trans.chars.toCollection().modify((char: Char) => {\n          if (char.campaign === undefined) char = { ...char, campaign: \"\" };\n        });\n      });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n"],"sourceRoot":""}