{"version":3,"sources":["components/entities/gear/details/GearView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/general_elements/Dialog.tsx","components/form_elements/TextField.tsx","../node_modules/peerjs/dist sync"],"names":["GearView","gear","useState","send","setSend","getPicture","useCallback","undefined","pic","CenterWrapper","View","ImageName","name","Name","PropWrapper","Prop","Icon","icon","faCoins","cost","faWeightHanging","weight","type","faLink","sources","damage","faCrosshairs","properties","Text","FormatedText","text","description","TextButton","faPaperPlane","onClick","P2PSender","data","mode","styled","div","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","GearEditView","onEdit","StringField","value","label","onChange","faImage","TextField","faBookOpen","GearDetail","isNew","editMode","setMode","gearObj","editGear","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","useEffect","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","id","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","toString","title","IconButton","tableName","updateWithCallback","result","setTimeout","updateGear","faSave","faTrash","Message","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","height","button","hoverColor","placeholder","Field","LabelText","Input","e","target","input","LinkCheck","loading","setLoading","entitiyFound","setEntity","recivePromiseByAttributeCount","then","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","includes","parts","split","formattedParts","forEach","part","index","codePart","linkParts","link","push","TextPart","key","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","span","backgroundColorLink","th","td","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Back","ToggleLeft","ToggleRight","EditToggle","props","setName","peer","setPeer","setError","brokerId","min","max","password","characters","i","length","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","disconnected","destroyed","reconnect","reciveAllPromise","results","faExclamationCircle","DialogWrapper","ButtonBar","textarea","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/16.4c48883c.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Gear from \"../../../../data/Gear\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  gear: Gear;\n  isNew: boolean;\n}\n\nconst GearDetail = ({ gear, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${gear.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"gears\", gear.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateGear(\"gears\", gearObj)} icon={faSave} />\n            <IconButton onClick={() => deleteGear()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 97;"],"sourceRoot":""}