{"version":3,"sources":["components/entities/npc/NpcTile.tsx","components/entities/chars/CharTile.tsx","components/entities/monster/MonsterTile.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","data/campaign/Group.tsx","data/campaign/Note.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/groups/details/GroupDetail.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/entities/groups/details/link_wrapper/NameToGroup.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/general_elements/ErrorTile.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx"],"names":["NpcTile","npc","getPicture","useCallback","undefined","pic","Tile","to","id","Image","PropWrapper","Name","name","WideProp","Icon","icon","faLink","sources","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","RowProp","main","highlight","Prop","FontAwesomeIcon","ImgContainer","Empty","props","CharTile","char","calcLevel","level","classes","forEach","classe","campaign","PropRowWrapper","player","race","subrace","map","classSet","index","key","subclasse","background","alignment","MonsterTile","monster","isLegendary","lAblt","trim","sAblt","includes","formatCr","cr","Type","type","subtype","Flag","CR","ImageName","size","faRunning","speed","lang","headerColor","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","memo","data","StyledNode","position","Position","Top","onConnect","params","console","log","Left","FormatedText","text","label","Right","Bottom","input","EditDialog","activeElement","onSave","onClose","useState","setLabel","useEffect","isNode","isEdge","Dialog","StringField","value","onChange","TextButton","faTimes","onClick","faSave","newElement","onSaveClick","nodeTypes","customeNode","CustomeNode","FlowBar","FlowChart","initElements","isEditable","onEdit","elements","setElements","setActiveElement","showEditDialog","setEditDialaog","FlowContainer","onNodeDragStop","event","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","IconButton","faPlus","newNode","toString","x","length","y","concat","addNewNode","newElm","Group","description","notes","players","npcs","monsters","flow","filename","this","isGroup","arg","nameCheck","picCheck","descriptionCheck","notesCheck","Array","isArray","playersCheck","npcsCheck","monstersCheck","flowCheck","sourcesCheck","Note","title","content","tags","NoteSearchBar","hasTitle","onSend","open","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","GroupEditView","group","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","CenterWrapper","TabBar","children","tab","View","faImage","TextField","faBookOpen","Container","newNote","faTrash","filter","removeNote","newContent","newTags","push","addNewNote","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","graph","BuildGroup","champaign","characters","buildGroup","a","time","characterList","npcList","monsterList","recivePromiseByAttribute","Promise","all","timeEnd","GroupView","loading","setLoading","loadedGroup","setLoadedGroup","tabs","setTabs","filters","setFilters","then","newTabs","Loading","Header","Text","PropTitle","SearchableNoteView","applyFilters","NoteWrapper","faTags","SearchableView","span","backgroundColorLink","GroupDetail","isNew","editMode","setMode","groupObj","editGroup","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateGroup","tableName","updateWithCallback","result","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","faExclamationTriangle","groupId","remove","Message","editAndSaveGroup","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","height","button","hoverColor","placeholder","Field","LabelText","Input","e","target","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","LinkCheck","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","textPart","table","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","NameToGroup","match","db","MyAppDatabase","groups","buttonText","onButton","newGroup","createNewWithId","createNewGroup","Back","ToggleLeft","ToggleRight","EditToggle","filedName","sort","fieldName","textarea","ErrorTile","faPlusCircle","Bar","child","Tab","isActive","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllFilteredPromise","items","o","reciveAllFiltered","onSearch","searchTerm","newOptions","option","Options","opt","Option"],"mappings":"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","file":"static/js/32.44ed4704.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  notes: Note[];\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    notes?: Note[],\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.notes = notes || [];\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    notesCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport Note from \"../../../../data/campaign/Note\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Notes\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {group.notes !== undefined &&\n            group.notes.map((note: Note, index: number) => {\n              return (\n                <Container key={index}>\n                  <StringField\n                    value={note.title}\n                    label=\"Title\"\n                    onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                  <TextField\n                    value={note.content}\n                    label=\"Feature Text\"\n                    onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                  />\n                  <StringField\n                    value={note.tags}\n                    label=\"Tags\"\n                    onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                  />\n                </Container>\n              );\n            })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npc/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monster/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\nimport Note from \"../../../../data/campaign/Note\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport NoteSearchBar from \"../../campaigns/NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.group.notes.length > 0) newTabs.push(\"Notes\");\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedGroup.group.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Group from \"../../../../data/campaign/Group\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport GroupEditView from \"./GroupEditView\";\nimport GroupView from \"./GroupView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  group: Group;\n  isNew: boolean;\n}\n\nconst GroupDetail = ({ group, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [groupObj, editGroup] = useState<Group>(group);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGroup = (groupId: number | undefined) => {\n    remove(\"groups\", groupId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (groupObj !== group) {\n      setUnsavedChanges(true);\n    }\n  }, [groupObj, group]);\n\n  const updateGroup = (tableName: string, groupObj: Group) => {\n    console.log(groupObj);\n    updateWithCallback(tableName, groupObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveGroup = (group: Group) => {\n    editGroup(group);\n    updateGroup(\"groups\", group);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateGroup(\"groups\", groupObj)} icon={faSave} />\n            <IconButton onClick={() => deleteGroup(groupObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GroupEditView group={groupObj} onEdit={(value) => editGroup(value)} />\n      ) : (\n        <GroupView group={groupObj} onEdit={(value) => editAndSaveGroup(value)} />\n      )}\n    </>\n  );\n};\n\nexport default GroupDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Group from \"../../../../../data/campaign/Group\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport GroupDetail from \"../GroupDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGroup = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [group, loading, error] = useItemByAttr(db.groups, \"name\", match.params.name);\n\n  const createNewGroup = () => {\n    let newGroup = new Group(0, match.params.name);\n    delete newGroup.id;\n    createNewWithId(\"groups\", newGroup, (id) => {\n      history.push(`/group-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && group === undefined && (\n        <ErrorTile\n          text={\"No such group exists. Want to creat such group?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewGroup()}\n        />\n      )}\n      {!error && !loading && group !== undefined ? (\n        <GroupDetail group={group} isNew={group.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToGroup;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}