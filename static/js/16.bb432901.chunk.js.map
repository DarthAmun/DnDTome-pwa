{"version":3,"sources":["services/CharacterService.tsx","data/races/Trait.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/CheckField.tsx","data/races/Race.tsx","components/form_elements/DataSelectField.tsx","data/races/Subrace.tsx","components/form_elements/AutoStringField.tsx","data/chars/BuildChar.tsx","components/form_elements/EnumField.tsx","data/Modifier.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx"],"names":["recalcClasses","char","a","bonis","spellSlots","fullClassList","classList","classes","forEach","classe","push","recivePromiseByAttribute","Promise","all","classSet","name","class","featureSet","featureSets","level","boni","isCurrency","origin","value","max","spellslots","length","slots","currencyBonis","updatedBonis","map","newBoni","updatedOldBonis","old","undefined","Array","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","calcLevel","calcProf","Math","ceil","buildCharacter","character","console","time","prof","subclasses","classFeatures","raceFeatures","gears","items","monsters","subclassList","itemList","gearList","baseList","monsterList","spellList","subclasse","item","monster","spells","spell","currentItems","base","currentGears","currentBases","filter","q","idx","findIndex","g","race","subrace","classLevel","charClass","subclass","type","features","traits","trait","originItem","toLowerCase","gear","timeEnd","modifiers","concat","extractModifier","description","text","feature","BuildChar","cut","str","cutStart","cutEnd","substr","extractTarget","target","includes","split","newModifiers","indexOf","rawModifier","substring","Modifier","ModifierOperator","EQUAL","parseInt","ADD","SUBSTRACT","applyMods","newChar","sort","b","operator","mod","replacePlaceholder","isArray","modPromises","resolve","reject","replaceAll","then","entity","oldCharacter","rawPlaceholder","replace","floor","eval","Trait","this","isTrait","arg","nameCheck","textCheck","levelCheck","ClassSet","isClassSet","classeCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","Char","id","player","campaign","pic","picBase64","background","activeSelections","ac","hp","currentHp","init","speed","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","CheckField","label","icon","transform","onChange","Field","LabelText","Icon","Input","defaultChecked","e","checked","Checkmark","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","buttons","Race","filename","abilityScores","age","size","lang","sources","isRace","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","sourcesCheck","DataSelectField","optionTable","filters","useState","optionsTable","options","setOptions","findAllItems","useCallback","entityList","table","reciveAllFilteredPromise","entities","o","useEffect","handleChange","option","StyledSelect","isMulti","classNamePrefix","Select","Subrace","isSubrace","typeCheck","AutoStringField","filteredOptions","setFilteredOptions","reciveAllFiltered","data","onSearch","searchTerm","newOptions","slice","Options","opt","index","Option","key","onClick","EnumField","_defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","Constructor","protoProps","staticProps","op","tar","prototype","CharLabGeneral","completed","CenterWrapper","CharView","StringField","IconButton","faCheckCircle","disabled","CharLabClass","setClasses","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","fieldName","results","PropWrapper","NumberField","faTrash","oldClass","newClassList","removeClass","TextButton","faPlus","addNewClass","Text","PropTitle","FormatedText","proficiencies","equipment","span","backgroundColorLink","CharLabRace","setRace","setSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","onChangeItem","newItem","onChangeItemAttribute","Container","attuned","attunment","attribute","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","CharLab","history","useHistory","activeTab","setTab","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","TabBar","children","tab","View","nextTab","Prop","faEdit","saveWithCallback","result","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","webhook","useWebhook","json","setJson","formatedText","setFormatedText","newText","formatDiscordText","newJson","username","content","JSON","stringify","rollDiscord","command","rollCommand","rolls","sendMessage","newCommand","krit","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","entityParts","link","Link","formatTable","textPart","newTable","tableEnd","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","FormatedTextContainer","style","float","padding","faDiscord","sendEmbedMessage","th","td","step","Bar","child","Tab","isActive"],"mappings":"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","file":"static/js/16.bb432901.chunk.js","sourcesContent":["import BuildChar from \"../data/chars/BuildChar\";\nimport Char from \"../data/chars/Char\";\nimport ClassSet from \"../data/chars/ClassSet\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Modifier, { ModifierOperator } from \"../data/Modifier\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const recalcClasses = async (char: Char) => {\n  let bonis: { origin: string; value: number; max: number }[] = [];\n  let spellSlots: {\n    origin: string;\n    slots: number[];\n    max: number[];\n  }[] = [];\n  let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n  let classList: Promise<Class>[] = [];\n\n  char.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n  });\n  const results = await Promise.all(classList);\n  results.forEach((classe: Class) => {\n    char.classes.forEach((classSet) => {\n      if (classe.name === classSet.classe) {\n        fullClassList.push({ class: classe, classSet: classSet });\n      }\n    });\n  });\n\n  fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n    let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n    if (featureSet.bonis) {\n      featureSet.bonis.forEach((boni: Boni) => {\n        if (boni.isCurrency) {\n          bonis = [\n            ...bonis,\n            {\n              origin: boni.name,\n              value: +boni.value,\n              max: +boni.value,\n            },\n          ];\n        }\n      });\n    }\n    if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n      spellSlots = [\n        ...spellSlots,\n        {\n          origin: classe.class.name,\n          slots: featureSet.spellslots,\n          max: featureSet.spellslots,\n        },\n      ];\n    }\n  });\n\n  if (char.currencyBonis && char.currencyBonis.length > 0) {\n    let updatedBonis = bonis.map((newBoni) => {\n      let updatedOldBonis = char.currencyBonis.map((old) => {\n        if (newBoni.origin === old.origin) {\n          return {\n            origin: newBoni.origin,\n            value: old.value,\n            max: newBoni.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldBonis &&\n        updatedOldBonis.length > 0 &&\n        updatedOldBonis[0] !== undefined &&\n        updatedOldBonis[0] !== null\n      ) {\n        return updatedOldBonis[0];\n      } else {\n        return newBoni;\n      }\n    });\n    if (updatedBonis && updatedBonis.length > 0) {\n      bonis = Array.from(updatedBonis);\n    }\n  }\n\n  if (char.spellSlots && char.spellSlots.length > 0) {\n    let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n      let updatedOldSlots = char.spellSlots.map((old) => {\n        if (newSpellSlots.origin === old.origin) {\n          return {\n            origin: newSpellSlots.origin,\n            slots: old.slots,\n            max: newSpellSlots.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldSlots &&\n        updatedOldSlots.length > 0 &&\n        updatedOldSlots[0] !== undefined &&\n        updatedOldSlots[0] !== null\n      ) {\n        return updatedOldSlots[0];\n      } else {\n        return newSpellSlots;\n      }\n    });\n    if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n      spellSlots = Array.from(updatedSpellSlots);\n    }\n  }\n\n  let updatedChar = {\n    ...char,\n    spellSlots: spellSlots,\n    currencyBonis: bonis,\n  };\n  return updatedChar;\n};\n\nexport const calcLevel = (char: Char): number => {\n  let level = 0;\n  char.classes.forEach((classe) => {\n    level += classe.level;\n  });\n  return level;\n};\n\nexport const calcProf = (char: Char): number => {\n  let level = calcLevel(char);\n  return Math.ceil(level / 4) + 1;\n};\n\nexport const buildCharacter = async (character: Char): Promise<BuildChar> => {\n  console.time(\"build Character\");\n  let level: number = calcLevel(character);\n  let prof: number = calcProf(character);\n  let classes: Class[] = [];\n  let subclasses: Subclass[] = [];\n  let classFeatures: FeatureSet[] = [];\n  let race: Race;\n  let subrace: Subrace;\n  let raceFeatures: Trait[] = [];\n  let gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let spells: Spell[];\n  let monsters: Monster[] = [];\n\n  console.time(\"load\");\n  let classList: Promise<Class>[] = [];\n  let subclassList: Promise<Subclass>[] = [];\n  let itemList: Promise<Item>[] = [];\n  let gearList: Promise<Gear>[] = [];\n  let baseList: Promise<Gear>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n  let spellList: Promise<Spell>[] = [];\n\n  character.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    subclassList.push(recivePromiseByAttribute(\"subclasses\", \"name\", classe.subclasse));\n  });\n  character.items.forEach((item) => {\n    itemList.push(recivePromiseByAttribute(\"items\", \"name\", item.origin));\n    gearList.push(recivePromiseByAttribute(\"gears\", \"name\", item.origin));\n  });\n  character.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  character.spells.forEach((spell: string) => {\n    spellList.push(recivePromiseByAttribute(\"spells\", \"name\", spell));\n  });\n\n  let currentItems = await Promise.all(itemList);\n  currentItems.forEach((item) => {\n    if (item !== undefined) baseList.push(recivePromiseByAttribute(\"gears\", \"name\", item.base));\n  });\n\n  classes = await Promise.all(classList);\n  subclasses = await Promise.all(subclassList);\n  monsters = await Promise.all(monsterList);\n  spells = await Promise.all(spellList);\n  let currentGears = await Promise.all(gearList);\n  let currentBases = await Promise.all(baseList);\n\n  currentBases = currentBases.filter(\n    (q, idx) => currentBases.findIndex((g) => g.name === q.name) === idx\n  );\n\n  race = await recivePromiseByAttribute(\"races\", \"name\", character.race.race);\n  subrace = await recivePromiseByAttribute(\"subraces\", \"name\", character.race.subrace);\n\n  classes.forEach((classe: Class) => {\n    if (classe !== undefined) {\n      let classLevel = 0;\n      character.classes.forEach((charClass) => {\n        if (charClass !== undefined)\n          if (classe.name === charClass.classe) {\n            classLevel = charClass.level;\n          }\n      });\n      classe.featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet !== undefined) {\n          if (featureSet.level <= classLevel) {\n            classFeatures.push(featureSet);\n          }\n        }\n      });\n      subclasses?.forEach((subclass: Subclass) => {\n        if (subclass !== undefined)\n          if (subclass.type === classe.name) {\n            subclass.features.forEach((featureSet: FeatureSet) => {\n              if (featureSet.level <= classLevel) {\n                classFeatures.push(featureSet);\n              }\n            });\n          }\n      });\n    }\n  });\n  if (race !== undefined) {\n    race.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n    subrace?.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n  }\n  character.items.forEach((originItem) => {\n    if (originItem !== undefined) {\n      currentItems.forEach(async (item: Item) => {\n        if (item !== undefined) {\n          if (originItem.origin.toLowerCase() === item.name.toLowerCase()) {\n            if (item.base !== \"\") {\n              currentBases.forEach((base: Gear) => {\n                if (base !== undefined && base.name.toLowerCase() === item.base.toLowerCase()) {\n                  items.push({ ...originItem, item: item, base: base });\n                }\n              });\n            } else {\n              items.push({ ...originItem, item: item, base: undefined });\n            }\n          }\n        }\n      });\n      currentGears.forEach((gear: Gear) => {\n        if (gear !== undefined)\n          if (originItem.origin.toLowerCase() === gear.name.toLowerCase()) {\n            gears.push({ ...originItem, gear: gear });\n          }\n      });\n    }\n  });\n  console.timeEnd(\"load\");\n\n  console.time(\"modifier\");\n  let modifiers: Modifier[] = [];\n  gears.forEach((gear) => {\n    modifiers = modifiers.concat(extractModifier(gear.gear.description, \"Gear: \" + gear.origin));\n  });\n  items.forEach((item) => {\n    modifiers = modifiers.concat(\n      extractModifier(item.item.description, \"Magic Item: \" + item.origin)\n    );\n  });\n  raceFeatures.forEach((trait) => {\n    modifiers = modifiers.concat(extractModifier(trait.text, \"Race Feature: \" + trait.name));\n  });\n  classFeatures.forEach((featureSet) => {\n    featureSet.features.forEach((feature) => {\n      modifiers = modifiers.concat(extractModifier(feature.text, \"Class Feature: \" + feature.name));\n    });\n  });\n  console.timeEnd(\"modifier\");\n\n  items = items.filter((item) => item !== undefined);\n  gears = gears.filter((gear) => gear !== undefined);\n  spells = spells.filter((spell) => spell !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"build Character\");\n  return new BuildChar(\n    character,\n    level,\n    prof,\n    classes,\n    subclasses,\n    classFeatures,\n    race,\n    subrace,\n    raceFeatures,\n    gears,\n    items,\n    spells,\n    monsters,\n    modifiers\n  );\n};\n\nconst cut = (str: string, cutStart: number, cutEnd: number) => {\n  return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n};\n\nconst extractTarget = (target: string): string | string[] => {\n  if (target.includes(\".\")) {\n    return target.split(\".\");\n  }\n  return target;\n};\n\nconst extractModifier = (text: string, origin: string): Modifier[] => {\n  let newModifiers: Modifier[] = [];\n\n  while (text.includes(\"{{\")) {\n    const cutStart = text.indexOf(\"{{\");\n    const cutEnd = text.indexOf(\"}}\");\n    const rawModifier = text.substring(cutStart + 2, cutEnd);\n    text = cut(text, cutStart, cutEnd + 1);\n\n    if (rawModifier.includes(\"=\")) {\n      const split = rawModifier.split(\"=\");\n\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.EQUAL,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"+\")) {\n      const split = rawModifier.split(\"+\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.ADD,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"-\")) {\n      const split = rawModifier.split(\"-\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.SUBSTRACT,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    }\n  }\n  return newModifiers;\n};\n\nexport const applyMods = async (char: BuildChar, modifiers: boolean): Promise<BuildChar> => {\n  if (modifiers) {\n    let newChar = char;\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (typeof mod.target == \"string\") {\n          const target: string = mod.target;\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: replacePlaceholder(newChar, mod.value),\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: newChar.character[target] + mod.value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) + value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) - value,\n              },\n            };\n          }\n        } else if (Array.isArray(mod.target) && mod.target[1] !== \"add\") {\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: replacePlaceholder(newChar, mod.value),\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: newChar.character[mod.target[0]][mod.target[1]] + mod.value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) + value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) - value,\n                },\n              },\n            };\n          }\n        }\n      });\n\n    let modPromises: Promise<boolean>[] = [];\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (mod.target[1] === \"add\" && typeof mod.value == \"string\") {\n          const value: string = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              recivePromiseByAttribute(mod.target[0], \"name\", value.replaceAll('\"', \"\")).then(\n                (entity) => {\n                  newChar = { ...newChar, [mod.target[0]]: [...newChar[mod.target[0]], entity] };\n                  resolve(true);\n                }\n              );\n            })\n          );\n        }\n      });\n    await Promise.all(modPromises);\n    return newChar;\n  } else {\n    return { ...char, character: char.oldCharacter };\n  }\n};\n\nexport const replacePlaceholder = (char: BuildChar, text: string | number) => {\n  if (typeof text == \"string\" && text.includes(\"[\") && text.includes(\"]\")) {\n    text = text.replaceAll('\"', \"\");\n    while (text.includes(\"[\") && text.includes(\"]\")) {\n      const cutStart = text.indexOf(\"[\");\n      const cutEnd = text.indexOf(\"]\");\n      const rawPlaceholder = text.substring(cutStart + 1, cutEnd);\n      text = text.replace(text.substring(cutStart, cutEnd + 1), char.character[rawPlaceholder]);\n    }\n    // eslint-disable-next-line\n    return Math.floor(eval(text));\n  }\n  return text;\n};\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n  picBase64: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    picBase64?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFilteredPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst DataSelectField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string[]>(optionTable);\n  const [options, setOptions] = useState<\n    {\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let entityList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        entityList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(entityList);\n      results.forEach((entities: IEntity[]) => {\n        entities.forEach((entity: IEntity) => {\n          setOptions((o) =>\n            o.concat({\n              value: entity.name,\n              label: entity.name,\n            })\n          );\n        });\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionsTable !== undefined && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default DataSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import Class from \"../classes/Class\";\nimport FeatureSet from \"../classes/FeatureSet\";\nimport Subclass from \"../classes/Subclass\";\nimport Gear from \"../Gear\";\nimport Item from \"../Item\";\nimport Modifier from \"../Modifier\";\nimport Monster from \"../Monster\";\nimport Race from \"../races/Race\";\nimport Subrace from \"../races/Subrace\";\nimport Trait from \"../races/Trait\";\nimport Spell from \"../Spell\";\nimport Char from \"./Char\";\n\nexport default class BuildChar {\n  character: Char;\n  oldCharacter: Char;\n  level: number;\n  prof: number;\n  classes: Class[];\n  subclasses: Subclass[];\n  classFeatures: FeatureSet[];\n  race: Race;\n  subrace: Subrace;\n  raceFeatures: Trait[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  spells: Spell[];\n  monsters: Monster[];\n  modifiers: Modifier[];\n\n  constructor(\n    character?: Char,\n    level?: number,\n    prof?: number,\n    classes?: Class[],\n    subclasses?: Subclass[],\n    classFeatures?: FeatureSet[],\n    race?: Race,\n    subrace?: Subrace,\n    raceFeatures?: Trait[],\n    gears?: {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    items?: {\n      item: Item;\n      base: Gear | undefined;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    spells?: Spell[],\n    monsters?: Monster[],\n    modifiers?: Modifier[]\n  ) {\n    this.character = character || new Char();\n    this.oldCharacter = character || new Char();\n    this.level = level || 0;\n    this.prof = prof || 0;\n    this.classes = classes || [];\n    this.subclasses = subclasses || [];\n    this.classFeatures = classFeatures || [];\n    this.race = race || new Race();\n    this.subrace = subrace || new Subrace();\n    this.raceFeatures = raceFeatures || [];\n    this.gears = gears || [];\n    this.items = items || [];\n    this.spells = spells || [];\n    this.monsters = monsters || [];\n    this.modifiers = modifiers || [];\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","export enum ModifierOperator {\n  EQUAL,\n  ADD,\n  SUBSTRACT,\n}\n\nexport default class Modifier {\n  target: string | string[];\n  operator: ModifierOperator;\n  value: string | number;\n  origin: string;\n\n  constructor(\n    target: string | string[],\n    operator: ModifierOperator,\n    value: string | number,\n    origin: string\n  ) {\n    this.target = target;\n    this.operator = operator;\n    this.value = value;\n    this.origin = origin;\n  }\n\n  makeString(): string {\n    let op = \"\";\n    if (this.operator === ModifierOperator.ADD) {\n      op = \"+\";\n    } else if (this.operator === ModifierOperator.SUBSTRACT) {\n      op = \"-\";\n    } else if (this.operator === ModifierOperator.EQUAL) {\n      op = \"=\";\n    }\n\n    let tar = \"\";\n    if (Array.isArray(this.target)) {\n      tar = `${this.target[0]}.${this.target[1]}`;\n    } else {\n      tar = this.target;\n    }\n\n    return `${tar} ${op} ${this.value}`;\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <DataSelectField\n          optionTable={[\"campaigns\"]}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <DataSelectField\n                optionTable={[\"classes\"]}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <DataSelectField\n                optionTable={[\"subclasses\"]}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <DataSelectField\n            optionTable={[\"races\"]}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) => onChange({ ...char, race: { ...char.race, race: race } })}\n          />\n          <DataSelectField\n            optionTable={[\"subraces\"]}\n            filters={[{ fieldName: \"type\", value: char.race.race, sort: 0 }]}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) => onChange({ ...char, race: { ...char.race, subrace: subrace } })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport { calcProf } from \"../../../../services/CharacterService\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * calcProf(char) + formatScore(stat);\n    },\n    [formatScore, char]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter((item) => item.origin !== oldItem.origin);\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) => onChangeItemAttribute({ ...item, prof: prof }, index)}\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label: item.attribute.charAt(0).toUpperCase() + item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) => onChangeItemAttribute({ ...item, attribute: type }, index)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton text={\"Add new Item\"} icon={faPlus} onClick={() => addNewItem()} />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20\" + rolls + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \" \" + rolls + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string, index: number): JSX.Element => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={\"TextPart\" + index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                if (linkParts[1].includes(\"|\")) {\n                  const entityParts = linkParts[1].split(\"|\");\n                  const link: string =\n                    \"/\" +\n                    linkEntity +\n                    \"-detail/name/\" +\n                    entityParts[0] +\n                    \"?source=\" +\n                    entityParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={entityParts[0]} /> {entityParts[0]} (\n                        {entityParts[1]})\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                } else {\n                  const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                }\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else if (text.length > 0) {\n          return <TextPart key={\"TextPart\" + index}>{text}</TextPart>;\n        }\n      }\n      return <></>;\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string): JSX.Element[] => {\n      if (textPart.includes(\"||tableStart||\")) {\n        let newTable: JSX.Element[] = [];\n        const table: string[] = text.split(\"||tableStart||\");\n\n        table.forEach((textPart: string, index: number) => {\n          if (textPart.includes(\"||tableEnd||\")) {\n            const tableEnd = textPart.split(\"||tableEnd||\");\n            const tableRows: string[] = tableEnd[0].split(\"||\");\n            let isHead = true;\n            newTable.push(\n              <table key={\"table\" + index}>\n                <tbody key={\"tbody\" + index}>\n                  {tableRows.map((row: string, index: number) => {\n                    if (row.includes(\"|\")) {\n                      if (isHead) {\n                        isHead = false;\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                            })}\n                          </tr>\n                        );\n                      } else {\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableProp key={index}>{formatLink(cell, index)}</TableProp>;\n                            })}\n                          </tr>\n                        );\n                      }\n                    } else {\n                      return <></>;\n                    }\n                  })}\n                </tbody>\n              </table>\n            );\n            newTable.push(formatLink(tableEnd[1], index));\n          } else {\n            newTable.push(formatLink(table[0], index));\n          }\n        });\n        return newTable;\n      }\n      return [formatLink(textPart, 0)];\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n"],"sourceRoot":""}