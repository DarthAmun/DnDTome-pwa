{"version":3,"sources":["components/form_elements/ImageField.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","services/PeerIdService.tsx","components/form_elements/FileField.tsx","data/Monster.tsx","components/general_elements/Dialog.tsx","components/form_elements/AutoStringField.tsx","data/campaign/Npc.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","../node_modules/peerjs/dist sync","hooks/DexieHooks.tsx","data/encounter/Encounter.tsx","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/general_elements/ErrorTile.tsx","data/encounter/Player.tsx","services/EncounterService.tsx","components/form_elements/SingleSelectField.tsx","components/entities/encounters/details/EncounterEditView.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/entities/encounters/details/link_wrapper/NameToEncounter.tsx","components/form_elements/NumberField.tsx"],"names":["ImageImportField","label","onFinished","Files","isMulti","accept","icon","faFileImport","onChange","file","fileList","console","log","files","Array","from","reader","FileReader","onload","event","target","result","readAsDataURL","changeFile","styled","div","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","undefined","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","picBase64","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","generateBrokerId","min","max","password","characters","i","length","Math","floor","random","FileField","transform","Field","LabelText","Icon","Input","e","type","multiple","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","input","Monster","sources","size","subtype","cr","savingThrows","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","filename","isMonster","sourcesCheck","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","onClick","DamageDialog","damageText","damageClick","healText","healClick","useState","dmg","setDmg","value","style","float","AutoStringField","optionTable","filters","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","Promise","all","o","concat","useEffect","reciveAllFiltered","data","onSearch","searchTerm","newOptions","filter","option","includes","slice","Options","map","opt","index","Option","Npc","char","monster","traits","description","isNpc","traitsCheck","descriptionCheck","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Encounter","enemies","players","isPlaying","currentInit","roundCounter","mapBase64","dimension","board","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","mapBase64Check","currentInitCheck","roundCounterCheck","boardCheck","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","send","JSON","stringify","errorData","parse","connect","minWidth","faExclamationCircle","TinyNumberField","showMax","Max","span","Board","img","showName","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","setBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","makeDrag","makeDrop","toggleFog","cord","b","newBoard","makeRow","row","list","j","PlayerSlot","updatePlayers","makeBoard","BoardRow","time","timeEnd","makeFog","f","BoardWrapper","BoardBar","step","toggle","faFill","BoardContainer","BoardLayer","MapLayer","src","drag","dragOver","preventDefault","defineSize","Slot","onDrop","changedPlayer","newPlayers","drop","onDragOver","isVisible","playerIcon","Image","isDead","isCurrent","Empty","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","ErrorTile","buttonText","onButton","Tile","PropWrapper","Name","Text","PropTitle","faPlusCircle","boxShadow","headerColor","backgroundColorLink","Player","tempHp","initBonus","tag","isEnemy","crExpTable","exp","expTable","easy","medium","hard","deadly","calcDifficulty","calcExp","crExp","enemyExp","enemy","difficulty","SingleSelectField","handleChange","StyledSelect","classNamePrefix","Select","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","field","newEnemy","oldEnemy","onChangeEnemy","found","recivePromiseByAttribute","results","classSet","onChangePlayerField","newPlayer","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","FieldGroup","base64","IconButton","faTrash","Prop","CharView","Container","newMonster","NumberField","newEnemyList","splice","removeEnemy","TextButton","faPlus","addNewEnemy","newPlayerList","removePlayer","addNewPlayer","EncounterView","dmView","history","useHistory","damageDialog","setDamageDialog","damageDialogIndex","setDamageDialogIndex","setPlayers","newField","finishEncounter","newEnemies","getMap","toggleVisibility","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","sort","localeCompare","Row","current","PropField","MainLink","PropRight","DamageButton","faSkullCrossbones","faHandHoldingHeart","faEye","button","disabled","PlayerImage","tr","td","TopBar","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","NameToEncounter","match","db","MyAppDatabase","encounters","params","loading","newEncounter","createNewEncounter"],"mappings":"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","file":"static/js/14.b1bc8547.chunk.js","sourcesContent":["import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FileField from \"./FileField\";\n\ninterface $Props {\n  label?: string;\n  onFinished: (base64: string) => void;\n}\n\nconst ImageImportField = ({ label, onFinished }: $Props) => {\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        onFinished(event.target.result);\n      };\n      reader.readAsDataURL(files[0]);\n      console.log(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label={label || \"\"}\n          isMulti={false}\n          accept={\"image/png, image/jpeg\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n    </>\n  );\n};\n\nexport default ImageImportField;\n\nconst Files = styled.div`\n  flex: 1 1 auto;\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  picBase64: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    picBase64?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\nimport Monster from \"../Monster\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  picBase64: string;\n  char: Char | undefined;\n  monster: Monster | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    picBase64?: string,\n    char?: Char | undefined,\n    monster?: Monster | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.char = char || undefined;\n    this.monster = monster || undefined;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    descriptionCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 259;","import Dexie, { DexieError } from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  mapBase64: string;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  board: boolean[][];\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    mapBase64?: string,\n    dimension?: { width: number; height: number; size: number; zoom: number },\n    board?: boolean[][]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.mapBase64 = mapBase64 || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n    this.board = board || [];\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const mapBase64Check = arg.mapBase64 !== undefined && typeof arg.mapBase64 == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  const boardCheck = arg.board !== undefined && Array.isArray(arg.board);\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    mapBase64Check &&\n    currentInitCheck &&\n    boardCheck &&\n    roundCounterCheck\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: boolean[][];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: boolean[][]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<boolean[][]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number[]) => {\n      if (fog) {\n        console.log(\"toggle fog\");\n        setFogBoard((b) => {\n          let newBoard = [...b];\n          newBoard[cord[0]][cord[1]] = !newBoard[cord[0]][cord[1]];\n          return newBoard;\n        });\n      }\n    },\n    [setFogBoard, fog]\n  );\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            isHost={isHost}\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            showName={showName}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            fog={\n              fogBoard && fogBoard.length >= row && fogBoard[row].length >= j\n                ? fogBoard[row][j]\n                : false\n            }\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            toggleFog={toggleFog}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [\n      dimension,\n      players,\n      showName,\n      onChangePlayers,\n      currentPlayerNumber,\n      makeDrop,\n      makeDrag,\n      isHost,\n      fogBoard,\n      toggleFog,\n    ]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.time(\"Redo Board\");\n    makeBoard();\n    console.timeEnd(\"Redo Board\");\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop, isHost, fog, currentFogBoard]);\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(fogBoard);\n    }\n  }, [fog, fogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number[];\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number[]) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot\n      size={size * zoom}\n      fog={false}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players\n        .filter((a) => !a.isVisible || isHost)\n        .map((playerIcon: Player, index: number) => {\n          if (\n            (playerIcon.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n            (playerIcon.cord !== undefined &&\n              playerIcon.cord[0] === cord[0] &&\n              playerIcon.cord[1] === cord[1])\n          )\n            return (\n              <Image\n                key={\"icon\" + index}\n                index={index}\n                drag={drag}\n                player={playerIcon}\n                isHost={isHost}\n                showName={showName}\n                dragOver={dragOver}\n                pic={playerIcon.pic}\n                size={defineSize(size, playerIcon)}\n                isDead={playerIcon.currentHp <= 0}\n                isCurrent={currentPlayerNumber === index}\n              />\n            );\n          return <Empty key={\"icon\" + index} />;\n        })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isEnemy: boolean;\n  isMonster: boolean;\n  isNpc: boolean;\n  isVisible: boolean;\n  level: number;\n  cord: number[];\n  pic: string;\n  size: string;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isEnemy?: boolean,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    isVisible?: boolean,\n    level?: number,\n    cord?: number[],\n    pic?: string,\n    size?: string\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isEnemy = isEnemy || false;\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.isVisible = isVisible || true;\n    this.level = level || 0;\n    this.cord = cord || [0, 0];\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck &&\n    picCheck &&\n    sizeCheck\n  );\n}\n","import Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      if (player.isMonster) {\n        crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n          if (player.level === crExp.cr) {\n            calcExp.easy += crExp.exp;\n            calcExp.medium += crExp.exp;\n            calcExp.hard += crExp.exp;\n            calcExp.deadly += crExp.exp;\n          }\n        });\n      } else {\n        calcExp.easy += expTable[player.level].easy;\n        calcExp.medium += expTable[player.level].medium;\n        calcExp.hard += expTable[player.level].hard;\n        calcExp.deadly += expTable[player.level].deadly;\n      }\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport { recivePromiseByAttribute } from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport ImageImportField from \"../../../form_elements/ImageField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = [...encounter.enemies];\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = async (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = [...encounter.enemies];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newEnemy));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newEnemy));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: true,\n        isMonster: true,\n        isNpc: false,\n        isVisible: true,\n        level: results[0].cr,\n        pic: results[0].pic,\n        size: results[0].size,\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      enemies[i] = {\n        ...oldEnemy,\n        name: newEnemy,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: true,\n        isMonster: true,\n        isNpc: false,\n        isVisible: true,\n        level: level,\n        pic: results[0].pic,\n        size: \"medium\",\n      };\n      onEdit({ ...encounter, enemies: enemies });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: true,\n          isVisible: true,\n          level: results[0].monster.cr,\n          pic: results[0].monster.pic,\n          size: results[0].monster.size,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isEnemy: true,\n          isMonster: false,\n          isNpc: true,\n          isVisible: true,\n          level: level,\n          pic: results[0].char.pic,\n          size: \"medium\",\n        };\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n      }\n      onEdit({ ...encounter, enemies: enemies });\n    } else {\n      enemies[i] = { ...oldEnemy, name: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    }\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = [...encounter.players];\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = async (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = [...encounter.players];\n\n    let found: any[] = [];\n    found.push(recivePromiseByAttribute(\"monsters\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"npcs\", \"name\", newPlayer));\n    found.push(recivePromiseByAttribute(\"chars\", \"name\", newPlayer));\n    let results = await Promise.all(found);\n    results = results.filter((e) => e !== undefined);\n\n    if (results[0] && isMonster(results[0])) {\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: false,\n        isMonster: true,\n        isNpc: false,\n        isVisible: true,\n        level: results[0].cr,\n        pic: results[0].pic,\n        size: results[0].size,\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isChar(results[0])) {\n      let level = 0;\n      results[0].classes.forEach((classSet: ClassSet) => {\n        level += classSet.level;\n      });\n      players[i] = {\n        ...oldPlayer,\n        name: newPlayer,\n        hp: results[0].hp,\n        currentHp: results[0].hp,\n        ac: results[0].ac,\n        isEnemy: false,\n        isMonster: false,\n        isNpc: false,\n        isVisible: true,\n        level: level,\n        pic: results[0].pic,\n        size: \"medium\",\n      };\n      onEdit({ ...encounter, players: players });\n    } else if (results[0] && isNpc(results[0])) {\n      if (results[0].monster !== undefined) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].monster.hp,\n          currentHp: results[0].monster.hp,\n          ac: results[0].monster.ac,\n          isEnemy: false,\n          isMonster: true,\n          isNpc: true,\n          isVisible: true,\n          level: results[0].monster.cr,\n          pic: results[0].monster.pic,\n          size: results[0].monster.size,\n        };\n      } else if (results[0].char !== undefined) {\n        let level = 0;\n        results[0].char.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].char.hp,\n          currentHp: results[0].char.hp,\n          ac: results[0].char.ac,\n          isMonster: false,\n          isEnemy: false,\n          isNpc: true,\n          isVisible: true,\n          level: level,\n          pic: results[0].char.pic,\n          size: \"medium\",\n        };\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n      }\n      onEdit({ ...encounter, players: players });\n    } else {\n      players[i] = { ...oldPlayer, name: newPlayer };\n      onEdit({ ...encounter, players: players });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <StringField\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n        <FieldGroup>\n          <ImageImportField\n            label=\"Map\"\n            onFinished={(base64) => onEdit({ ...encounter, mapBase64: base64 })}\n          />\n          <IconButton icon={faTrash} onClick={() => onEdit({ ...encounter, mapBase64: \"\" })} />\n        </FieldGroup>\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) => onChangeEnemyField(\"level\", level, enemy, index)}\n              />\n              <StringField\n                value={enemy.pic}\n                label=\"Pic\"\n                onChange={(pic) => onChangeEnemyField(\"pic\", pic, enemy, index)}\n              />\n              <SingleSelectField\n                options={[\n                  { value: \"tiny\", label: \"tiny\" },\n                  { value: \"small\", label: \"small\" },\n                  { value: \"medium\", label: \"medium\" },\n                  { value: \"large\", label: \"large\" },\n                  { value: \"huge\", label: \"huge\" },\n                  { value: \"gargantuan\", label: \"gargantuan\" },\n                ]}\n                value={enemy.size}\n                label={\"Size\"}\n                onChange={(size) => onChangePlayerField(\"size\", size, enemy, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) => onChangePlayerField(\"currentHp\", currentHp, player, index)}\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) => onChangePlayerField(\"initBonus\", initBonus, player, index)}\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n              />\n              <StringField\n                value={player.pic}\n                label=\"Pic\"\n                onChange={(pic) => onChangePlayerField(\"pic\", pic, player, index)}\n              />\n              <SingleSelectField\n                options={[\n                  { value: \"tiny\", label: \"tiny\" },\n                  { value: \"small\", label: \"small\" },\n                  { value: \"medium\", label: \"medium\" },\n                  { value: \"large\", label: \"large\" },\n                  { value: \"huge\", label: \"huge\" },\n                  { value: \"gargantuan\", label: \"gargantuan\" },\n                ]}\n                value={player.size}\n                label={\"Size\"}\n                onChange={(size) => onChangePlayerField(\"size\", size, player, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 2 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n\n  @media (max-width: 576px) {\n    flex-wrap: wrap;\n  }\n`;\n","import {\n  faEye,\n  faEyeSlash,\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GiBroadsword, GiHeartBottle } from \"react-icons/gi\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { DamageDialog } from \"../../../general_elements/Dialog\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport { LoadingSpinner } from \"../../../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [damageDialog, setDamageDialog] = useState<boolean>(false);\n  const [damageDialogIndex, setDamageDialogIndex] = useState<number>(0);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      const { difficulty } = calcDifficulty(encounter);\n      setDifficulty(difficulty);\n    }\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number | boolean,\n    oldPlayer: Player\n  ) => {\n    if (encounter !== undefined) {\n      if (oldPlayer.isEnemy) {\n        let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, enemies: newPlayers });\n      } else {\n        let newPlayers = encounter.players.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, players: newPlayers });\n      }\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        if (player.init < 0) {\n          let roll = rollDie(20);\n          roll += player.initBonus || 0;\n          return { ...player, init: roll };\n        } else {\n          return player;\n        }\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        if (enemy.init < 0) {\n          let roll = rollDie(20);\n          roll += enemy.initBonus || 0;\n          return { ...enemy, init: roll };\n        } else {\n          return enemy;\n        }\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: true,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const finishEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        return { ...player, init: -1 };\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        return { ...enemy, init: -1 };\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: false,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const nextPlayer = () => {\n    if (encounter !== undefined) {\n      let nextInit = (encounter.currentInit + 1) % players.length;\n      let roundCounter = encounter.roundCounter;\n      if ((encounter.currentInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n\n      let counter = 0;\n      while (players[nextInit].currentHp <= 0 || players[nextInit].isVisible) {\n        if ((nextInit + 1) % players.length === 0) {\n          roundCounter++;\n        }\n        nextInit = (nextInit + 1) % players.length;\n        counter++;\n        if (counter > players.length) {\n          break;\n        }\n      }\n      if (counter > players.length) {\n        finishEncounter();\n      } else {\n        onEdit({\n          ...encounter,\n          currentInit: nextInit,\n          roundCounter: roundCounter,\n        });\n      }\n    }\n  };\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          let newEnemies: Player[] = [];\n          players.forEach((player: Player) => {\n            if (player.isEnemy) {\n              newEnemies.push(player);\n            }\n          });\n          onEdit({ ...encounter, players: newPlayers, enemies: newEnemies });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const showDamageDialog = (i: number) => {\n    setDamageDialogIndex(i);\n    setDamageDialog(true);\n  };\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  const toggleVisibility = (player: Player) => {\n    onChangePlayerField(\"isVisible\", !player.isVisible, player);\n  };\n\n  const onChangeDimension = (dimension: {\n    width: number;\n    height: number;\n    size: number;\n    zoom: number;\n  }) => {\n    if (dimension.zoom !== encounter.dimension.zoom) {\n      console.time(\"makeFogBoard\");\n      let newBoard: boolean[][] = [];\n      for (let i = 0; i < dimension.height; i++) {\n        newBoard.push([]);\n        for (let j = 0; j < dimension.width; j++) {\n          newBoard[i].push(true);\n        }\n      }\n      console.timeEnd(\"makeFogBoard\");\n      onEdit({ ...encounter, dimension: dimension, board: newBoard });\n    } else {\n      onEdit({ ...encounter, dimension: dimension });\n    }\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {encounter && damageDialog && (\n          <DamageDialog\n            name={players[damageDialogIndex].name}\n            damageText={\"Damage\"}\n            damageClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp - currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            healText={\"Heal\"}\n            healClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp + currentHp > players[damageDialogIndex].hp\n                  ? players[damageDialogIndex].hp\n                  : players[damageDialogIndex].currentHp + currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            abortText={\"Back\"}\n            abortClick={() => {\n              setDamageDialog(false);\n            }}\n          />\n        )}\n        <View mode={dmView ? 1 : 0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            {dmView && (\n              <PropElm>\n                <PropTitle>Difficulty: </PropTitle>\n                {difficulty}\n              </PropElm>\n            )}\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n            {encounter && !encounter.isPlaying && (\n              <TextButton\n                text={\"Start Encounter\"}\n                icon={faPlayCircle}\n                onClick={() => startEncounter()}\n              />\n            )}\n            {encounter && encounter.isPlaying && (\n              <>\n                <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n                <TextButton\n                  text={\"End Encounter\"}\n                  icon={faStopCircle}\n                  onClick={() => finishEncounter()}\n                />\n              </>\n            )}\n          </PropWrapper>\n          {!encounter && <LoadingSpinner />}\n          {encounter && (\n            <Table>\n              <thead>\n                <tr>\n                  <th>Init</th>\n                  <th>Name</th>\n                  {dmView && <th>Current Hp</th>}\n                  {dmView && <th>AC</th>}\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {encounter &&\n                  players\n                    .sort((a: Player, b: Player) => {\n                      if (b.init === a.init || !encounter.isPlaying) {\n                        return a.name.localeCompare(b.name);\n                      }\n                      return b.init - a.init;\n                    })\n                    .filter((a) => !a.isVisible || dmView)\n                    .map((player: Player, index: number) => {\n                      return (\n                        <Row\n                          current={encounter.currentInit === index && encounter.isPlaying}\n                          isDead={player.currentHp <= 0}\n                          key={index}\n                        >\n                          <PropField>\n                            <TinyNumberField\n                              value={player.init}\n                              onChange={(init) => onChangePlayerField(\"init\", init, player)}\n                            />\n                          </PropField>\n                          <Prop style={{ minWidth: \"100%\" }}>\n                            {player.pic !== \"\" && player.pic !== undefined ? (\n                              <PlayerImage player={player}></PlayerImage>\n                            ) : (\n                              <></>\n                            )}\n                            {player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/monster-detail/name/${player.name}`)}\n                              >\n                                {dmView ? `${player.name} ${index}` : `??? ${index}`}\n                              </MainLink>\n                            )}\n                            {!player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                              >\n                                {player.name}\n                              </MainLink>\n                            )}\n                          </Prop>\n                          <PropRight style={{ minWidth: \"100px\" }}>\n                            <DamageButton onClick={() => showDamageDialog(index)}>\n                              <GiBroadsword />\n                              <GiHeartBottle />\n                            </DamageButton>\n                            {dmView && `${player.currentHp} / ${player.hp}`}\n                          </PropRight>\n                          {dmView && <Prop>{player.ac}</Prop>}\n                          {/* <Prop>{player.tag}</Prop> */}\n                          <Prop style={{ minWidth: \"100px\" }}>\n                            {player.currentHp > 0 && (\n                              <IconButton\n                                icon={faSkullCrossbones}\n                                onClick={() => killPlayer(player)}\n                              />\n                            )}\n                            {player.currentHp <= 0 && (\n                              <IconButton\n                                icon={faHandHoldingHeart}\n                                onClick={() => revicePlayer(player)}\n                              />\n                            )}\n                            {player.isVisible && (\n                              <IconButton\n                                icon={faEyeSlash}\n                                onClick={() => toggleVisibility(player)}\n                              />\n                            )}\n                            {!player.isVisible && (\n                              <IconButton icon={faEye} onClick={() => toggleVisibility(player)} />\n                            )}\n                          </Prop>\n                        </Row>\n                      );\n                    })}\n              </tbody>\n            </Table>\n          )}\n        </View>\n        {encounter && getMap() !== \"\" && (\n          <Board\n            isHost={dmView}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={dmView}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={(dimension) => onChangeDimension(dimension)}\n            onChangeBoard={(board) => onEdit({ ...encounter, board: board })}\n            img={getMap()}\n          ></Board>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterView;\n\nconst DamageButton = styled.button`\n  svg {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  font-size: 16px;\n  float: left;\n  padding: 5px;\n  margin-right: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border-radius: 10px;\n  border: none;\n\n  transition: color 0.2s;\n  background: ${({ theme }) => theme.buttons.backgroundColor};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n`;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 450px;\";\n    } else {\n      return \"min-width: 600px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst PropRight = styled(Prop)`\n  text-align: right;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      <P2PEncounter\n        encounter={encounterObj}\n        onEdit={(value) => editEncounter(value)}\n        isHost={true}\n      />\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Encounter from \"../../../../../data/encounter/Encounter\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(db.encounters, \"name\", match.params.name);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter(0, match.params.name);\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && encounter === undefined && (\n        <ErrorTile\n          text={\"No such encounter exists. Want to creat such encounter?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEncounter()}\n        />\n      )}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} isNew={encounter.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}