{"version":3,"sources":["components/form_elements/ImageField.tsx","data/campaign/Npc.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","services/PeerIdService.tsx","components/form_elements/FileField.tsx","data/Monster.tsx","components/general_elements/Dialog.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","../node_modules/peerjs/dist sync","hooks/DexieHooks.tsx","data/encounter/Encounter.tsx","components/form_elements/SingleSelectField.tsx","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/general_elements/ErrorTile.tsx","data/encounter/Player.tsx","services/EncounterService.tsx","components/entities/encounters/details/EncounterEditView.tsx","data/encounter/Slot.tsx","components/entities/encounters/details/EncounterView.tsx","components/entities/encounters/details/EncounterDetail.tsx","components/entities/encounters/details/link_wrapper/NameToEncounter.tsx","components/form_elements/NumberField.tsx"],"names":["ImageImportField","label","onFinished","Files","isMulti","accept","icon","faFileImport","onChange","file","fileList","console","log","files","Array","from","reader","FileReader","onload","event","target","result","readAsDataURL","changeFile","styled","div","Npc","id","name","pic","picBase64","char","monster","traits","description","sources","filename","this","undefined","isNpc","arg","nameCheck","picCheck","picBase64Check","traitsCheck","descriptionCheck","sourcesCheck","ClassSet","classe","level","subclasse","isClassSet","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","campaign","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","isArray","generateBrokerId","min","max","password","characters","i","length","Math","floor","random","FileField","transform","Field","LabelText","Icon","Input","e","type","multiple","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","input","Monster","size","subtype","cr","savingThrows","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","typeCheck","subtypeCheck","alignmentCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","text","onClick","DamageDialog","damageText","damageClick","healText","healClick","useState","dmg","setDmg","value","style","float","AutoStringField","optionTable","options","filters","term","setTerm","optionsTable","allOptions","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","push","reciveAllFilteredPromise","Promise","all","o","concat","useEffect","reciveAllFiltered","data","onSearch","searchTerm","time","newOptions","filter","option","toLowerCase","startsWith","slice","timeEnd","onKeyDown","key","applyTerm","Options","map","opt","index","Option","BackButton","action","Back","buttons","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","then","catch","useItemByAttr","attr","attrValue","where","equalsIgnoreCase","first","Encounter","enemies","players","isPlaying","currentInit","roundCounter","mapBase64","dimension","board","width","zoom","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","mapCheck","mapBase64Check","currentInitCheck","roundCounterCheck","boardCheck","SingleSelectField","handleChange","StyledSelect","classNamePrefix","Select","P2PEncounter","encounter","isHost","onEdit","peerId","setId","peer","setPeer","setError","connections","setConn","isChanged","setChanged","brokerId","newPeer","Peer","host","secure","on","conn","send","JSON","stringify","errorData","parse","connect","minWidth","faExclamationCircle","TinyNumberField","showMax","Max","span","Board","img","showName","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","makeDrag","makeDrop","toggleFog","cord","newBoard","makeFog","f","BoardWrapper","BoardBar","step","toggle","faFill","BoardContainer","LayerWrapper","Grid","slot","PlayerSlot","updatePlayers","MapLayer","src","drag","dragOver","preventDefault","defineSize","GridCell","onDrop","changedPlayer","newPlayers","drop","onDragOver","playerIcon","isVisible","Empty","Image","isDead","isCurrent","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","zIndex","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","ErrorTile","buttonText","onButton","Tile","PropWrapper","Name","Text","PropTitle","faPlusCircle","boxShadow","headerColor","backgroundColorLink","Player","tempHp","initBonus","tag","isEnemy","crExpTable","exp","expTable","easy","medium","hard","deadly","calcDifficulty","calcExp","crExp","enemyExp","enemy","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","removeEnemy","newEnemyList","splice","addNewEnemy","onChangeEnemyField","field","newEnemy","oldEnemy","onChangeEnemy","found","recivePromiseByAttribute","results","classSet","removePlayer","newPlayerList","addNewPlayer","onChangePlayerField","newPlayer","oldPlayer","onChangePlayer","CenterWrapper","View","StringField","newMap","FieldGroup","base64","IconButton","faTrash","Prop","CharView","Container","newMonster","NumberField","TextButton","faPlus","Slot","EncounterView","dmView","history","useHistory","damageDialog","setDamageDialog","damageDialogIndex","setDamageDialogIndex","setPlayers","newField","finishEncounter","newEnemies","getMap","toggleVisibility","PropElm","faPlayCircle","roll","rollDie","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Loading","Table","sort","b","localeCompare","Row","current","PropField","MainLink","PropRight","DamageButton","faSkullCrossbones","faHandHoldingHeart","faEye","button","disabled","PlayerImage","tr","td","TopBar","EncounterDetail","isNew","editMode","setMode","dmMode","setDmMode","encounterObj","editEncounter","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEncounter","tableName","msg","updateWithCallback","setTimeout","editAndSaveEncounter","faArrowLeft","goBack","toString","faExclamationTriangle","faSave","obj","newObj","createNewWithId","duplicateEncounter","faClone","encounterId","remove","NameToEncounter","match","db","MyAppDatabase","encounters","params","loading","newEncounter","createNewEncounter"],"mappings":"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","file":"static/js/14.c15a74a5.chunk.js","sourcesContent":["import { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport FileField from \"./FileField\";\n\ninterface $Props {\n  label?: string;\n  onFinished: (base64: string) => void;\n}\n\nconst ImageImportField = ({ label, onFinished }: $Props) => {\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        onFinished(event.target.result);\n      };\n      reader.readAsDataURL(files[0]);\n      console.log(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label={label || \"\"}\n          isMulti={false}\n          accept={\"image/png, image/jpeg\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n    </>\n  );\n};\n\nexport default ImageImportField;\n\nconst Files = styled.div`\n  flex: 1 1 auto;\n`;\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\nimport Monster from \"../Monster\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  picBase64: string;\n  char: Char | undefined;\n  monster: Monster | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    picBase64?: string,\n    char?: Char | undefined,\n    monster?: Monster | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.char = char || undefined;\n    this.monster = monster || undefined;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    descriptionCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  picBase64: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    picBase64?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck = arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck = arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined && typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\nimport NumberField from \"../form_elements/NumberField\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\ninterface $DamageProps {\n  name: string;\n  damageText: string;\n  damageClick: (value: number) => void;\n  healText: string;\n  healClick: (value: number) => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nexport const DamageDialog = ({\n  name,\n  damageText,\n  damageClick,\n  healText,\n  healClick,\n  abortText,\n  abortClick,\n}: $DamageProps) => {\n  const [dmg, setDmg] = useState<number>(0);\n  return (\n    <DialogWrapper>\n      <NumberField value={dmg} label={name} onChange={setDmg} />\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={damageText} onClick={() => damageClick(dmg)} style={{ float: \"left\" }} />\n        <TextButton\n          text={healText}\n          onClick={() => healClick(dmg)}\n          style={{ backgroundColor: \"lightgreen\", float: \"left\" }}\n        />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nconst DialogWrapper = styled.div`\n  width: 280px;\n  position: fixed;\n  z-index: 1010;\n  top: 100px;\n  left: calc(50% - 150px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable?: string | string[];\n  options?: IEntity[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  options,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [term, setTerm] = useState<string>(value);\n  const [optionsTable] = useState<string | string[]>(optionTable !== undefined ? optionTable : []);\n  const [allOptions, setOptions] = useState<IEntity[]>(options !== undefined ? options : []);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionTable !== undefined) {\n      if (typeof optionsTable === \"string\") {\n        reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n          setOptions(data);\n        });\n      }\n      if (optionsTable instanceof Array && optionsTable.length > 0) {\n        findAllItems(optionsTable);\n      }\n    }\n  }, [optionTable, optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      console.time(\"search\");\n      setTerm(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = allOptions\n          .filter((option) => {\n            return option.name.toLowerCase().startsWith(searchTerm.toLowerCase());\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n      console.timeEnd(\"search\");\n    },\n    [allOptions]\n  );\n\n  const applyTerm = (e: any) => {\n    if (e.key === \"Enter\") {\n      onChange(term);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={term}\n        onChange={(e) => onSearch(e.target.value)}\n        onKeyDown={(e) => applyTerm(e)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option\n                key={index}\n                onClick={(e) => {\n                  setTerm(opt.name);\n                  onChange(opt.name);\n                }}\n              >\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 259;","import Dexie, { DexieError } from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect && table !== undefined) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\nimport Slot from \"./Slot\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n  map: string;\n  mapBase64: string;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  board: Slot[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number,\n    map?: string,\n    mapBase64?: string,\n    dimension?: { width: number; height: number; size: number; zoom: number },\n    board?: Slot[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n    this.map = map || \"\";\n    this.mapBase64 = mapBase64 || \"\";\n    this.dimension = dimension || { width: 20, height: 20, size: 20, zoom: 100 };\n    this.board = board || [];\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck = arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const mapBase64Check = arg.mapBase64 !== undefined && typeof arg.mapBase64 == \"string\";\n  const currentInitCheck = arg.currentInit !== undefined && typeof arg.currentInit == \"number\";\n  const roundCounterCheck = arg.roundCounter !== undefined && typeof arg.roundCounter == \"number\";\n  const boardCheck = arg.board !== undefined && Array.isArray(arg.board);\n  return (\n    arg &&\n    nameCheck &&\n    enemiesCheck &&\n    playersCheck &&\n    isPlayingCheck &&\n    mapCheck &&\n    mapBase64Check &&\n    currentInitCheck &&\n    boardCheck &&\n    roundCounterCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: {\n    value: string;\n    label: string;\n  }[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SingleSelectField = ({ options, value, label, icon, transform, onChange }: $Props) => {\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default SingleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Slot from \"../../../data/encounter/Slot\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: Slot[];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: Slot[]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<Slot[]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n\n  useEffect(() => {\n    setFogBoard(fogBoard);\n  }, [fogBoard]);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number) => {\n      if (fog) {\n        let newBoard = [...currentFogBoard];\n        newBoard[cord].fog = !newBoard[cord].fog;\n        console.log(\"toggle fog\", currentFogBoard[cord], newBoard[cord]);\n        setFogBoard(newBoard);\n      }\n    },\n    [setFogBoard, fog, currentFogBoard]\n  );\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(currentFogBoard);\n    }\n  }, [fog, currentFogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <LayerWrapper zoom={dimension.zoom / 100}>\n          <Grid>\n            {fogBoard?.map((slot: Slot, i: number) => {\n              return (\n                <PlayerSlot\n                  isHost={isHost}\n                  key={i}\n                  cord={i}\n                  showName={showName}\n                  players={players}\n                  size={dimension.size}\n                  zoom={dimension.zoom / 100}\n                  fog={slot.fog}\n                  makeDrop={makeDrop}\n                  makeDrag={makeDrag}\n                  toggleFog={toggleFog}\n                  updatePlayers={onChangePlayers}\n                  currentPlayerNumber={currentPlayerNumber}\n                />\n              );\n            })}\n          </Grid>\n          <MapLayer zoom={dimension.zoom / 100} src={img} />\n        </LayerWrapper>\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number;\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <GridCell\n      size={size * zoom}\n      fog={fog}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players.map((playerIcon: Player, index: number) => {\n        if ((!playerIcon.isVisible || isHost) && playerIcon.cord === cord)\n          return (\n            <Image\n              key={\"icon\" + index}\n              index={index}\n              drag={drag}\n              player={playerIcon}\n              isHost={isHost}\n              showName={showName}\n              dragOver={dragOver}\n              pic={playerIcon.pic}\n              size={defineSize(size, playerIcon)}\n              isDead={playerIcon.currentHp <= 0}\n              isCurrent={currentPlayerNumber === index}\n            />\n          );\n        return <Empty key={\"icon\" + index} />;\n      })}\n    </GridCell>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1;\n  padding: 5px;\n  margin: 5px;\n  min-height: 75vh;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: no-wrap;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\nconst LayerWrapper = styled.div<ZoomProp>`\n  width: calc(100px * ${({ zoom }) => zoom * 10});\n  position: absolute;\n  left: 0;\n  right: 0;\n`;\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  max-height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: space-between;\n`;\n\nconst Grid = styled.div`\n  z-index: 100;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: flex-start;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\nconst GridCell = styled.div<SizeProp>`\n  flex: 1 1;\n  min-width: calc(${({ size }) => size}px + 1px);\n  max-width: calc(${({ size }) => size}px + 1px);\n  min-height: calc(${({ size }) => size}px + 1px);\n  max-height: calc(${({ size }) => size}px + 1px);\n  margin-left: -1px;\n  margin-top: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: relative;\n  box-sizing: border-box;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      zIndex: 200,\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isEnemy: boolean;\n  isMonster: boolean;\n  isNpc: boolean;\n  isVisible: boolean;\n  level: number;\n  cord: number;\n  pic: string;\n  size: string;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isEnemy?: boolean,\n    isMonster?: boolean,\n    isNpc?: boolean,\n    isVisible?: boolean,\n    level?: number,\n    cord?: number,\n    pic?: string,\n    size?: string\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isEnemy = isEnemy || false;\n    this.isMonster = isMonster || false;\n    this.isNpc = isNpc || false;\n    this.isVisible = isVisible || true;\n    this.level = level || 0;\n    this.cord = cord || 0;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck = arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck &&\n    picCheck &&\n    sizeCheck\n  );\n}\n","import Encounter from \"../data/encounter/Encounter\";\nimport Player from \"../data/encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  console.time(\"calcDifficulty\");\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      if (player.isMonster) {\n        crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n          if (player.level === crExp.cr) {\n            calcExp.easy += crExp.exp;\n            calcExp.medium += crExp.exp;\n            calcExp.hard += crExp.exp;\n            calcExp.deadly += crExp.exp;\n          }\n        });\n      } else {\n        calcExp.easy += expTable[player.level].easy;\n        calcExp.medium += expTable[player.level].medium;\n        calcExp.hard += expTable[player.level].hard;\n        calcExp.deadly += expTable[player.level].deadly;\n      }\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  console.timeEnd(\"calcDifficulty\");\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isNpc } from \"../../../../data/campaign/Npc\";\nimport { isChar } from \"../../../../data/chars/Char\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport IEntity from \"../../../../data/IEntity\";\nimport { isMonster } from \"../../../../data/Monster\";\nimport {\n  reciveAllFilteredPromise,\n  recivePromiseByAttribute,\n} from \"../../../../services/DatabaseService\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport ImageImportField from \"../../../form_elements/ImageField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SingleSelectField from \"../../../form_elements/SingleSelectField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n  const [allOptions, setOptions] = useState<IEntity[]>([]);\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const findAllItems = useCallback(async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllFilteredPromise(table, []));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  }, []);\n\n  useEffect(() => {\n    findAllItems([\"monsters\", \"chars\", \"npcs\"]);\n  }, [findAllItems]);\n\n  const removeEnemy = useCallback(\n    (i: number) => {\n      let newEnemyList = [...encounter.enemies];\n      newEnemyList.splice(i, 1);\n      onEdit({ ...encounter, enemies: newEnemyList });\n    },\n    [encounter, onEdit]\n  );\n  const addNewEnemy = useCallback(() => {\n    let newEnemyList = [...encounter.enemies];\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  }, [encounter, onEdit]);\n  const onChangeEnemyField = useCallback(\n    (field: string, newEnemy: string | number, oldEnemy: Player, i: number) => {\n      let enemies = [...encounter.enemies];\n      enemies[i] = { ...oldEnemy, [field]: newEnemy };\n      onEdit({ ...encounter, enemies: enemies });\n    },\n    [encounter, onEdit]\n  );\n  const onChangeEnemy = useCallback(\n    async (newEnemy: string, oldEnemy: Player, i: number) => {\n      let enemies = [...encounter.enemies];\n\n      let found: any[] = [];\n      found.push(recivePromiseByAttribute(\"monsters\", \"name\", newEnemy));\n      found.push(recivePromiseByAttribute(\"npcs\", \"name\", newEnemy));\n      found.push(recivePromiseByAttribute(\"chars\", \"name\", newEnemy));\n      let results = await Promise.all(found);\n      results = results.filter((e) => e !== undefined);\n\n      if (results[0] && isMonster(results[0])) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: results[0].cr,\n          pic: results[0].pic,\n          size: results[0].size,\n          cord: 0,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else if (results[0] && isChar(results[0])) {\n        let level = 0;\n        results[0].classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: true,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: level,\n          pic: results[0].pic,\n          size: \"medium\",\n          cord: 0,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else if (results[0] && isNpc(results[0])) {\n        if (results[0].monster !== undefined) {\n          enemies[i] = {\n            ...oldEnemy,\n            name: newEnemy,\n            hp: results[0].monster.hp,\n            currentHp: results[0].monster.hp,\n            ac: results[0].monster.ac,\n            isEnemy: true,\n            isMonster: true,\n            isNpc: true,\n            isVisible: true,\n            level: results[0].monster.cr,\n            pic: results[0].monster.pic,\n            size: results[0].monster.size,\n            cord: 0,\n          };\n        } else if (results[0].char !== undefined) {\n          let level = 0;\n          results[0].char.classes.forEach((classSet: ClassSet) => {\n            level += classSet.level;\n          });\n          enemies[i] = {\n            ...oldEnemy,\n            name: newEnemy,\n            hp: results[0].char.hp,\n            currentHp: results[0].char.hp,\n            ac: results[0].char.ac,\n            isEnemy: true,\n            isMonster: false,\n            isNpc: true,\n            isVisible: true,\n            level: level,\n            pic: results[0].char.pic,\n            size: \"medium\",\n            cord: 0,\n          };\n        } else {\n          enemies[i] = { ...oldEnemy, name: newEnemy, isNpc: true };\n        }\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const removePlayer = useCallback(\n    (i: number) => {\n      let newPlayerList = [...encounter.players];\n      newPlayerList.splice(i, 1);\n      onEdit({ ...encounter, players: newPlayerList });\n    },\n    [encounter, onEdit]\n  );\n  const addNewPlayer = useCallback(() => {\n    let newPlayerList = [...encounter.players];\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  }, [encounter, onEdit]);\n  const onChangePlayerField = useCallback(\n    (field: string, newPlayer: string | number, oldPlayer: Player, i: number) => {\n      let players = [...encounter.players];\n      players[i] = { ...oldPlayer, [field]: newPlayer };\n      onEdit({ ...encounter, players: players });\n    },\n    [encounter, onEdit]\n  );\n  const onChangePlayer = useCallback(\n    async (newPlayer: string, oldPlayer: Player, i: number) => {\n      let players = [...encounter.players];\n\n      let found: any[] = [];\n      found.push(recivePromiseByAttribute(\"monsters\", \"name\", newPlayer));\n      found.push(recivePromiseByAttribute(\"npcs\", \"name\", newPlayer));\n      found.push(recivePromiseByAttribute(\"chars\", \"name\", newPlayer));\n      let results = await Promise.all(found);\n      results = results.filter((e) => e !== undefined);\n\n      if (results[0] && isMonster(results[0])) {\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: false,\n          isMonster: true,\n          isNpc: false,\n          isVisible: true,\n          level: results[0].cr,\n          pic: results[0].pic,\n          size: results[0].size,\n          cord: 0,\n        };\n        onEdit({ ...encounter, players: players });\n      } else if (results[0] && isChar(results[0])) {\n        let level = 0;\n        results[0].classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: results[0].hp,\n          currentHp: results[0].hp,\n          ac: results[0].ac,\n          isEnemy: false,\n          isMonster: false,\n          isNpc: false,\n          isVisible: true,\n          level: level,\n          pic: results[0].pic,\n          size: \"medium\",\n          cord: 0,\n        };\n        onEdit({ ...encounter, players: players });\n      } else if (results[0] && isNpc(results[0])) {\n        if (results[0].monster !== undefined) {\n          players[i] = {\n            ...oldPlayer,\n            name: newPlayer,\n            hp: results[0].monster.hp,\n            currentHp: results[0].monster.hp,\n            ac: results[0].monster.ac,\n            isEnemy: false,\n            isMonster: true,\n            isNpc: true,\n            isVisible: true,\n            level: results[0].monster.cr,\n            pic: results[0].monster.pic,\n            size: results[0].monster.size,\n            cord: 0,\n          };\n        } else if (results[0].char !== undefined) {\n          let level = 0;\n          results[0].char.classes.forEach((classSet: ClassSet) => {\n            level += classSet.level;\n          });\n          players[i] = {\n            ...oldPlayer,\n            name: newPlayer,\n            hp: results[0].char.hp,\n            currentHp: results[0].char.hp,\n            ac: results[0].char.ac,\n            isMonster: false,\n            isEnemy: false,\n            isNpc: true,\n            isVisible: true,\n            level: level,\n            pic: results[0].char.pic,\n            size: \"medium\",\n            cord: 0,\n          };\n        } else {\n          players[i] = { ...oldPlayer, name: newPlayer, isNpc: true };\n        }\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n        <StringField\n          value={encounter.map}\n          label=\"Map\"\n          onChange={(newMap) => onEdit({ ...encounter, map: newMap })}\n        />\n        <FieldGroup>\n          <ImageImportField\n            label=\"Map\"\n            onFinished={(base64) => onEdit({ ...encounter, mapBase64: base64 })}\n          />\n          <IconButton icon={faTrash} onClick={() => onEdit({ ...encounter, mapBase64: \"\" })} />\n        </FieldGroup>\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {allOptions.length > 0 &&\n          encounter.enemies.map((enemy: Player, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  // optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                  options={allOptions}\n                  value={enemy.name}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeEnemy(newMonster, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.currentHp}\n                  label=\"Current Hp\"\n                  onChange={(currentHp) => onChangeEnemyField(\"currentHp\", currentHp, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.hp}\n                  label=\"Hp\"\n                  onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.ac}\n                  label=\"AC\"\n                  onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.initBonus}\n                  label=\"Init Bonus\"\n                  onChange={(initBonus) => onChangeEnemyField(\"initBonus\", initBonus, enemy, index)}\n                />\n                <NumberField\n                  value={enemy.level}\n                  label=\"Cr\"\n                  onChange={(level) => onChangeEnemyField(\"level\", level, enemy, index)}\n                />\n                <StringField\n                  value={enemy.pic}\n                  label=\"Pic\"\n                  onChange={(pic) => onChangeEnemyField(\"pic\", pic, enemy, index)}\n                />\n                <SingleSelectField\n                  options={[\n                    { value: \"tiny\", label: \"tiny\" },\n                    { value: \"small\", label: \"small\" },\n                    { value: \"medium\", label: \"medium\" },\n                    { value: \"large\", label: \"large\" },\n                    { value: \"huge\", label: \"huge\" },\n                    { value: \"gargantuan\", label: \"gargantuan\" },\n                  ]}\n                  value={enemy.size}\n                  label={\"Size\"}\n                  onChange={(size) => onChangePlayerField(\"size\", size, enemy, index)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n              </Container>\n            );\n          })}\n        <Container>\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewEnemy()} />\n        </Container>\n      </CharView>\n      <CharView>\n        {allOptions.length > 0 &&\n          encounter.players.map((player: Player, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  // optionTable={[\"monsters\", \"chars\", \"npcs\"]}\n                  options={allOptions}\n                  value={player.name}\n                  label=\"Character\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player, index)}\n                />\n                <NumberField\n                  value={player.currentHp}\n                  label=\"Current Hp\"\n                  onChange={(currentHp) =>\n                    onChangePlayerField(\"currentHp\", currentHp, player, index)\n                  }\n                />\n                <NumberField\n                  value={player.hp}\n                  label=\"Hp\"\n                  onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n                />\n                <NumberField\n                  value={player.ac}\n                  label=\"AC\"\n                  onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n                />\n                <NumberField\n                  value={player.initBonus}\n                  label=\"Init Bonus\"\n                  onChange={(initBonus) =>\n                    onChangePlayerField(\"initBonus\", initBonus, player, index)\n                  }\n                />\n                <NumberField\n                  value={player.level}\n                  label=\"Level\"\n                  onChange={(level) => onChangePlayerField(\"level\", level, player, index)}\n                />\n                <StringField\n                  value={player.pic}\n                  label=\"Pic\"\n                  onChange={(pic) => onChangePlayerField(\"pic\", pic, player, index)}\n                />\n                <SingleSelectField\n                  options={[\n                    { value: \"tiny\", label: \"tiny\" },\n                    { value: \"small\", label: \"small\" },\n                    { value: \"medium\", label: \"medium\" },\n                    { value: \"large\", label: \"large\" },\n                    { value: \"huge\", label: \"huge\" },\n                    { value: \"gargantuan\", label: \"gargantuan\" },\n                  ]}\n                  value={player.size}\n                  label={\"Size\"}\n                  onChange={(size) => onChangePlayerField(\"size\", size, player, index)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n              </Container>\n            );\n          })}\n        <Container>\n          <TextButton text={\"Add new Character\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 2 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n\n  @media (max-width: 576px) {\n    flex-wrap: wrap;\n  }\n`;\n","export default class Slot {\n  fog: boolean;\n\n  constructor(fog?: boolean) {\n    this.fog = fog || true;\n  }\n}\n","import {\n  faEye,\n  faEyeSlash,\n  faHandHoldingHeart,\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { GiBroadsword, GiHeartBottle } from \"react-icons/gi\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport { rollDie } from \"../../../../services/DiceService\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport { DamageDialog } from \"../../../general_elements/Dialog\";\nimport { calcDifficulty } from \"../../../../services/EncounterService\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport Slot from \"../../../../data/encounter/Slot\";\n\ninterface $Props {\n  encounter: Encounter;\n  dmView: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, dmView, onEdit }: $Props) => {\n  let history = useHistory();\n  const [damageDialog, setDamageDialog] = useState<boolean>(false);\n  const [damageDialogIndex, setDamageDialogIndex] = useState<number>(0);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      const { difficulty } = calcDifficulty(encounter);\n      setDifficulty(difficulty);\n    }\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number | boolean,\n    oldPlayer: Player\n  ) => {\n    if (encounter !== undefined) {\n      if (oldPlayer.isEnemy) {\n        let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, enemies: newPlayers });\n      } else {\n        let newPlayers = encounter.players.map((newPlayer: Player) => {\n          if (oldPlayer === newPlayer) {\n            return { ...newPlayer, [field]: newField };\n          } else {\n            return newPlayer;\n          }\n        });\n        onEdit({ ...encounter, players: newPlayers });\n      }\n    }\n  };\n\n  const killPlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const revicePlayer = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 1, enemy);\n  };\n\n  const startEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        if (player.init < 0) {\n          let roll = rollDie(20);\n          roll += player.initBonus || 0;\n          return { ...player, init: roll };\n        } else {\n          return player;\n        }\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        if (enemy.init < 0) {\n          let roll = rollDie(20);\n          roll += enemy.initBonus || 0;\n          return { ...enemy, init: roll };\n        } else {\n          return enemy;\n        }\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: true,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const finishEncounter = () => {\n    if (encounter !== undefined) {\n      let newPlayers = encounter.players.map((player: Player) => {\n        return { ...player, init: -1 };\n      });\n      let newEnemies = encounter.enemies.map((enemy: Player) => {\n        return { ...enemy, init: -1 };\n      });\n      onEdit({\n        ...encounter,\n        enemies: newEnemies,\n        players: newPlayers,\n        isPlaying: false,\n        currentInit: 0,\n        roundCounter: 0,\n      });\n    }\n  };\n\n  const nextPlayer = () => {\n    if (encounter !== undefined) {\n      let nextInit = (encounter.currentInit + 1) % players.length;\n      let roundCounter = encounter.roundCounter;\n      if ((encounter.currentInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n\n      let counter = 0;\n      while (players[nextInit].currentHp <= 0 || players[nextInit].isVisible) {\n        if ((nextInit + 1) % players.length === 0) {\n          roundCounter++;\n        }\n        nextInit = (nextInit + 1) % players.length;\n        counter++;\n        if (counter > players.length) {\n          break;\n        }\n      }\n      if (counter > players.length) {\n        finishEncounter();\n      } else {\n        onEdit({\n          ...encounter,\n          currentInit: nextInit,\n          roundCounter: roundCounter,\n        });\n      }\n    }\n  };\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          let newEnemies: Player[] = [];\n          players.forEach((player: Player) => {\n            if (player.isEnemy) {\n              newEnemies.push(player);\n            }\n          });\n          onEdit({ ...encounter, players: newPlayers, enemies: newEnemies });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const onChangeDimension = (dimension: {\n    width: number;\n    height: number;\n    size: number;\n    zoom: number;\n  }) => {\n    if (dimension.zoom === encounter.dimension.zoom) {\n      console.time(\"makeFogBoard\");\n      let newBoard: Slot[] = [...Array(dimension.width * dimension.height)].map(() => {\n        return new Slot();\n      });\n      console.timeEnd(\"makeFogBoard\");\n      onEdit({ ...encounter, dimension: dimension, board: newBoard });\n    } else {\n      onEdit({ ...encounter, dimension: dimension });\n    }\n  };\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  const showDamageDialog = (i: number) => {\n    setDamageDialogIndex(i);\n    setDamageDialog(true);\n  };\n\n  const toggleVisibility = (player: Player) => {\n    onChangePlayerField(\"isVisible\", !player.isVisible, player);\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {encounter && damageDialog && (\n          <DamageDialog\n            name={players[damageDialogIndex].name}\n            damageText={\"Damage\"}\n            damageClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp - currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            healText={\"Heal\"}\n            healClick={(currentHp) => {\n              onChangePlayerField(\n                \"currentHp\",\n                players[damageDialogIndex].currentHp + currentHp > players[damageDialogIndex].hp\n                  ? players[damageDialogIndex].hp\n                  : players[damageDialogIndex].currentHp + currentHp,\n                players[damageDialogIndex]\n              );\n              setDamageDialog(false);\n            }}\n            abortText={\"Back\"}\n            abortClick={() => {\n              setDamageDialog(false);\n            }}\n          />\n        )}\n        <View mode={dmView ? 1 : 0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            {dmView && (\n              <PropElm>\n                <PropTitle>Difficulty: </PropTitle>\n                {difficulty}\n              </PropElm>\n            )}\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n            {encounter && !encounter.isPlaying && (\n              <TextButton\n                text={\"Start Encounter\"}\n                icon={faPlayCircle}\n                onClick={() => startEncounter()}\n              />\n            )}\n            {encounter && encounter.isPlaying && (\n              <>\n                <TextButton text={\"Next\"} icon={faStepForward} onClick={() => nextPlayer()} />\n                <TextButton\n                  text={\"End Encounter\"}\n                  icon={faStopCircle}\n                  onClick={() => finishEncounter()}\n                />\n              </>\n            )}\n          </PropWrapper>\n          {!encounter && <LoadingSpinner />}\n          {encounter && (\n            <Table>\n              <thead>\n                <tr>\n                  <th>Init</th>\n                  <th>Name</th>\n                  {dmView && <th>Current Hp</th>}\n                  {dmView && <th>AC</th>}\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {encounter &&\n                  players\n                    .sort((a: Player, b: Player) => {\n                      if (b.init === a.init || !encounter.isPlaying) {\n                        return a.name.localeCompare(b.name);\n                      }\n                      return b.init - a.init;\n                    })\n                    .filter((a) => !a.isVisible || dmView)\n                    .map((player: Player, index: number) => {\n                      return (\n                        <Row\n                          current={encounter.currentInit === index && encounter.isPlaying}\n                          isDead={player.currentHp <= 0}\n                          key={index}\n                        >\n                          <PropField>\n                            <TinyNumberField\n                              value={player.init}\n                              onChange={(init) => onChangePlayerField(\"init\", init, player)}\n                            />\n                          </PropField>\n                          <Prop style={{ minWidth: \"100%\" }}>\n                            {player.pic !== \"\" && player.pic !== undefined ? (\n                              <PlayerImage player={player}></PlayerImage>\n                            ) : (\n                              <></>\n                            )}\n                            {player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/monster-detail/name/${player.name}`)}\n                              >\n                                {dmView ? `${player.name} ${index}` : `??? ${index}`}\n                              </MainLink>\n                            )}\n                            {!player.isMonster && (\n                              <MainLink\n                                onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                              >\n                                {player.name}\n                              </MainLink>\n                            )}\n                          </Prop>\n                          <PropRight style={{ minWidth: \"100px\" }}>\n                            <DamageButton onClick={() => showDamageDialog(index)}>\n                              <GiBroadsword />\n                              <GiHeartBottle />\n                            </DamageButton>\n                            {dmView && `${player.currentHp} / ${player.hp}`}\n                          </PropRight>\n                          {dmView && <Prop>{player.ac}</Prop>}\n                          {/* <Prop>{player.tag}</Prop> */}\n                          <Prop style={{ minWidth: \"100px\" }}>\n                            {player.currentHp > 0 && (\n                              <IconButton\n                                icon={faSkullCrossbones}\n                                onClick={() => killPlayer(player)}\n                              />\n                            )}\n                            {player.currentHp <= 0 && (\n                              <IconButton\n                                icon={faHandHoldingHeart}\n                                onClick={() => revicePlayer(player)}\n                              />\n                            )}\n                            {player.isVisible && (\n                              <IconButton\n                                icon={faEyeSlash}\n                                onClick={() => toggleVisibility(player)}\n                              />\n                            )}\n                            {!player.isVisible && (\n                              <IconButton icon={faEye} onClick={() => toggleVisibility(player)} />\n                            )}\n                          </Prop>\n                        </Row>\n                      );\n                    })}\n              </tbody>\n            </Table>\n          )}\n        </View>\n        {encounter && (\n          <Board\n            isHost={dmView}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={dmView}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={(dimension) => onChangeDimension(dimension)}\n            onChangeBoard={(board) => onEdit({ ...encounter, board: board })}\n            img={getMap()}\n          />\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterView;\n\nconst DamageButton = styled.button`\n  svg {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  font-size: 16px;\n  float: left;\n  padding: 5px;\n  margin-right: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border-radius: 10px;\n  border: none;\n\n  transition: color 0.2s;\n  background: ${({ theme }) => theme.buttons.backgroundColor};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n`;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 600px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 450px;\";\n    } else {\n      return \"min-width: 600px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst PropRight = styled(Prop)`\n  text-align: right;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import {\n  faArrowLeft,\n  faClone,\n  faExclamationTriangle,\n  faSave,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport { createNewWithId, remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n  isNew: boolean;\n}\n\nconst EncounterDetail = ({ encounter, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [dmMode, setDmMode] = useState<boolean>(true);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter, msg: string) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEncounter = (tableName: string, obj: Encounter) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEncounter(\n        { ...encounter, name: encounter.name + \" [Clone]\" },\n        \"Cloning successful!\"\n      );\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter, msg: string) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter, msg);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {!editMode && (\n          <EditToggle mode={(!dmMode).toString()}>\n            <ToggleLeft onClick={() => setDmMode(true)}>DM View</ToggleLeft>\n            <ToggleRight onClick={() => setDmMode(false)}>Player View</ToggleRight>\n          </EditToggle>\n        )}\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => duplicateEncounter(\"encounters\", encounterObj)}\n              icon={faClone}\n            />\n            <IconButton onClick={() => deleteEncounter(encounterObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      <P2PEncounter\n        encounter={encounterObj}\n        onEdit={(value) => editEncounter(value)}\n        isHost={true}\n      />\n      {editMode ? (\n        <EncounterEditView encounter={encounterObj} onEdit={(value) => editEncounter(value)} />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          dmView={dmMode}\n          onEdit={(value) => editAndSaveEncounter(value, \"Saved successful!\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Encounter from \"../../../../../data/encounter/Encounter\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(db.encounters, \"name\", match.params.name);\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter(0, match.params.name);\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && encounter === undefined && (\n        <ErrorTile\n          text={\"No such encounter exists. Want to creat such encounter?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEncounter()}\n        />\n      )}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} isNew={encounter.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}