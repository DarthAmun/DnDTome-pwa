{"version":3,"sources":["data/world/Location.tsx","components/entities/npc/NpcTile.tsx","components/entities/chars/CharTile.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","data/campaign/Campaign.tsx","data/campaign/Note.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/details/CampaignView.tsx","components/entities/campaigns/details/CampaignDetail.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/entities/campaigns/details/link_wrapper/NameToCampaign.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","database/MyDatabase.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/general_elements/ErrorTile.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx"],"names":["Location","id","name","sources","map","dimension","markers","this","height","width","isLocation","arg","nameCheck","undefined","sourcesCheck","mapCheck","dimensionCheck","markersCheck","Array","isArray","NpcTile","npc","getPicture","useCallback","pic","Tile","to","Image","PropWrapper","Name","WideProp","Icon","icon","faLink","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","RowProp","main","highlight","Prop","FontAwesomeIcon","ImgContainer","Empty","props","CharTile","char","calcLevel","level","classes","forEach","classe","campaign","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","alignment","memo","data","StyledNode","type","position","Position","Top","style","onConnect","params","console","log","Left","FormatedText","text","label","Right","Bottom","input","EditDialog","activeElement","onSave","onClose","useState","setLabel","useEffect","isNode","isEdge","Dialog","StringField","value","onChange","TextButton","faTimes","onClick","faSave","newElement","onSaveClick","nodeTypes","customeNode","CustomeNode","FlowBar","FlowChart","initElements","isEditable","onEdit","elements","setElements","setActiveElement","showEditDialog","setEditDialaog","FlowContainer","onNodeDragStop","event","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","IconButton","faPlus","newNode","toString","x","length","y","concat","addNewNode","newElm","onDelete","Map","location","editable","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","e","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","editMarker","Campaign","description","players","logs","npcs","notes","flow","filename","isCampaign","picCheck","descriptionCheck","playersCheck","logsCheck","npcsCheck","notesCheck","Note","title","content","tags","NoteSearchBar","hasTitle","onSend","open","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignEditView","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","CenterWrapper","TabBar","children","tab","View","faImage","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","filter","removePlayer","push","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","time","characterList","npcList","recivePromiseByAttribute","Promise","all","timeEnd","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","tabs","setTabs","filters","setFilters","then","newTabs","Loading","Header","ImageName","Text","PropTitle","SearchableNoteView","applyFilters","NoteWrapper","faTags","SearchableView","sort","date","toLocaleString","span","backgroundColorLink","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","CampaignDetail","isNew","editMode","setMode","campaignObj","editCampaign","showAlert","setAlert","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateCampaign","tableName","updateWithCallback","result","setTimeout","TopBar","BackButton","faArrowLeft","action","goBack","mode","faExclamationTriangle","campaignId","remove","Message","editAndSaveCampaign","update","db","MyAppDatabase","table","finally","close","callback","saveNew","entity","put","prom","saveNewFromList","entities","refinedEntities","bulkPut","saveWithCallback","add","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttributeCount","equals","reciveAllPromise","obj","test","fieldName","hasTag","fieldPart","toLowerCase","includes","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sortBy","reciveAllFilteredPromise","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","deleteAll","clear","exportFilteredFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","removeChild","floatLeft","disabled","transform","SimpleButton","left","DisabledSimpleButton","buttons","button","hoverColor","placeholder","Field","LabelText","Input","LinkCheck","entitiyFound","setEntity","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","str","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","part","codePart","linkParts","link","TextPart","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","NameToCampaign","match","useItemByAttr","campaigns","error","buttonText","onButton","newCampaign","createNewCampaign","useItem","effect","setEffect","reducer","state","useReducer","dispatch","get","catch","attr","attrValue","first","Back","ToggleLeft","ToggleRight","EditToggle","spells","items","gears","monsters","races","subraces","subclasses","chars","encounters","books","selections","randomTables","quests","worlds","locations","events","groups","version","stores","chars_spells","chars_monsters","chars_items","upgrade","trans","toCollection","modify","Dexie","filedName","textarea","ErrorTile","faPlusCircle","headerColor","Bar","child","Tab","isActive","optionsTable","options","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","option","Options","opt","Option"],"mappings":"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,EAAKc,QAAQ,GAAGC,OAAO,CACrBlB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFI,MACE,+9BAEJ,EAAKU,QAAQ,GAAGC,OAAO,CACrBlB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFI,MACE,69BACFY,aAAc,oCACdC,eAAgB,4BAChBC,YACE,8FAEJ,EAAKJ,QAAQ,GAAGC,OAAO,CACrBlB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iSAEJ,EAAKU,QAAQ,GAAGC,OAAO,CACrBC,aAAc,KACdC,eAAgB,KAChBC,YAAa,KAEbrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,+RACFC,WAAY,kCAEd,EAAKS,QAAQ,GAAGC,OAAO,CACrBlB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,yCAET,EAAKQ,QAAQ,IAAIC,OAAO,CACtBlB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKO,QAAQ,IAAIC,OAAO,CACtBlB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKO,QAAQ,IAAIC,OAAO,CACtBlB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKM,QAAQ,IAAIC,OAAO,CACtBlB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKM,QAAQ,IAAIC,OAAO,CACtBlB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdjC,UACE,yFAEJ,EAAKuC,QAAQ,IAAIC,OAAO,CACtBlB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdjC,UACE,uFACFkC,OACE,2FACFvT,KAAM,gEACNwT,OAAQ,4EACRC,UAAW,iEACXC,OAAQ,uEAEV,EAAKE,QAAQ,IAAIC,OAAO,CACtBlB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdjC,UACE,4FACFkC,OACE,2FACFvT,KAAM,gEACNwT,OAAQ,4EACRC,UAAW,iEACXC,OAAQ,uEAEV,EAAKE,QAAQ,IAAIC,OAAO,CACtBlB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVnd,QAAS,qFACTod,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdjC,UACE,gGACFkC,OAAQ,wEACRvT,KAAM,gEACNwT,OAAQ,iEACRC,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","file":"static/js/29.8908c301.chunk.js","sourcesContent":["import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const dimensionCheck =\n    arg.dimension !== undefined &&\n    typeof arg.dimension.height == \"number\" &&\n    typeof arg.dimension.width == \"number\";\n  const markersCheck = arg.markers !== undefined && Array.isArray(arg.markers);\n  return arg && nameCheck && sourcesCheck && mapCheck && dimensionCheck && markersCheck;\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logsCheck = arg.logs !== undefined && Array.isArray(arg.logs);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npc/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      let newTabs = [\"General\"];\n      if (buildCampaign.characters.length > 0) newTabs.push(\"Players\");\n      if (buildCampaign.npcs.length > 0) newTabs.push(\"Npcs\");\n      setTabs([...newTabs, \"Notes\", \"Log\", \"Graph\", \"Map\"]);\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && loadedCampaign.characters && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && loadedCampaign.npcs && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\n\nimport BackButton from \"../../../form_elements/BackButton\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport CampaignEditView from \"./CampaignEditView\";\nimport CampaignView from \"./CampaignView\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  campaign: Campaign;\n  isNew: boolean;\n}\n\nconst CampaignDetail = ({ campaign, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [campaignObj, editCampaign] = useState<Campaign>(campaign);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteCampaign = (campaignId: number | undefined) => {\n    remove(\"campaigns\", campaignId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (campaignObj !== campaign) {\n      setUnsavedChanges(true);\n    }\n  }, [campaignObj, campaign]);\n\n  const updateCampaign = (tableName: string, campaignObj: Campaign) => {\n    console.log(campaignObj);\n    updateWithCallback(tableName, campaignObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveCampaign = (campaign: Campaign) => {\n    editCampaign(campaign);\n    updateCampaign(\"campaigns\", campaign);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateCampaign(\"campaigns\", campaignObj)} icon={faSave} />\n            <IconButton onClick={() => deleteCampaign(campaignObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CampaignEditView campaign={campaignObj} onEdit={(value) => editCampaign(value)} />\n      ) : (\n        <CampaignView campaign={campaignObj} onEdit={(value) => editAndSaveCampaign(value)} />\n      )}\n    </>\n  );\n};\n\nexport default CampaignDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        console.log(obj, filter);\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Campaign from \"../../../../../data/campaign/Campaign\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport CampaignDetail from \"../CampaignDetail\";\n\ntype TParams = { name: string };\n\nconst NameToCampaign = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [campaign, loading, error] = useItemByAttr(db.campaigns, \"name\", match.params.name);\n\n  const createNewCampaign = () => {\n    let newCampaign = new Campaign(0, match.params.name);\n    delete newCampaign.id;\n    createNewWithId(\"campaigns\", newCampaign, (id) => {\n      history.push(`/campaign-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && campaign === undefined && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewCampaign()}\n        />\n      )}\n      {!error && !loading && campaign !== undefined ? (\n        <CampaignDetail campaign={campaign} isNew={campaign.name === \"\" ? true : false} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NameToCampaign;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equalsIgnoreCase(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(19).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters:\n        \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(20)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups: \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n      .upgrade((trans: any) => {\n        return trans.chars.toCollection().modify((char: Char) => {\n          if (char.campaign === undefined) char = { ...char, campaign: \"\" };\n        });\n      });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}