{"version":3,"sources":["database/MyDatabase.tsx","data/races/Race.tsx","data/races/Subrace.tsx","data/Monster.tsx","components/entities/monsters/MonsterTile.tsx","data/world/Location.tsx","data/classes/Feature.tsx","components/form_elements/EnumField.tsx","data/classes/FeatureSet.tsx","data/Gear.tsx","data/Item.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","data/campaign/Campaign.tsx","components/general_elements/RollableProp.tsx","data/world/World.tsx","data/Spell.tsx","data/classes/Class.tsx","components/entities/npcs/NpcTile.tsx","components/entities/chars/CharTile.tsx","data/classes/Subclass.tsx","data/campaign/Group.tsx","data/campaign/Npc.tsx","data/campaign/Quest.tsx","data/world/Event.tsx","components/general_elements/Dialog.tsx","components/entities/locations/LocationTile.tsx","components/entities/events/EventTile.tsx","data/IEntity.tsx","data/Selection.tsx","../node_modules/peerjs/dist sync","components/general_elements/map/MarkerEditDialog.tsx","components/general_elements/map/Map.tsx","components/form_elements/FileField.tsx","components/general_elements/ErrorTile.tsx","data/Book.tsx","data/RandomTable.tsx","components/entities/locations/details/LocationEditView.tsx","data/campaign/Note.tsx","components/general_elements/flow/CustomeNode.tsx","components/general_elements/flow/NodeEditDialog.tsx","components/general_elements/flow/FlowChart.tsx","components/entities/campaigns/details/CampaignEditView.tsx","data/campaign/BuildCampaign.tsx","services/CampaignService.tsx","components/entities/campaigns/NoteSearchBar.tsx","components/entities/campaigns/details/CampaignView.tsx","components/form_elements/NumberArrayField.tsx","components/form_elements/ShortTextField.tsx","components/entities/classes/details/ClasseEditView.tsx","components/entities/classes/details/ClasseView.tsx","components/entities/events/details/EventEditView.tsx","components/entities/events/details/EventView.tsx","components/entities/gear/details/GearEditView.tsx","components/entities/gear/details/GearView.tsx","components/entities/groups/details/GroupEditView.tsx","data/campaign/BuildGroup.tsx","services/GroupService.tsx","components/entities/groups/details/GroupView.tsx","components/entities/items/details/ItemEditView.tsx","components/entities/items/details/ItemView.tsx","components/entities/library/details/BookEditView.tsx","components/entities/library/details/BookView.tsx","components/entities/locations/details/LocationView.tsx","components/entities/monsters/details/MonsterEditView.tsx","components/entities/monsters/details/MonsterView.tsx","components/entities/npcs/details/NpcEditView.tsx","components/entities/npcs/details/NpcView.tsx","components/entities/quests/details/QuestEditView.tsx","components/entities/quests/details/QuestView.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/races/details/RaceView.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/entities/selections/details/SelectionEditView.tsx","components/entities/selections/details/SelectionView.tsx","components/entities/spells/details/SpellEditView.tsx","components/entities/spells/details/SpellView.tsx","components/entities/subclasses/details/SubclasseEditView.tsx","components/entities/subclasses/details/SubclasseView.tsx","components/entities/subraces/details/SubraceEditView.tsx","components/entities/subraces/details/SubraceView.tsx","components/entities/worlds/details/WorldEditView.tsx","data/world/BuildWorld.tsx","services/WorldService.tsx","components/entities/worlds/details/WorldView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/details/ToEntity.tsx","services/DatabaseService.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","data/Filter.tsx","components/form_elements/TextField.tsx","components/form_elements/AutoStringField.tsx","data/races/Trait.tsx","components/form_elements/CheckField.tsx"],"names":["MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","selections","randomTables","campaigns","quests","npcs","worlds","locations","events","groups","version","stores","chars_spells","chars_monsters","chars_items","upgrade","trans","toCollection","modify","char","undefined","campaign","table","Dexie","Race","name","id","filename","pic","abilityScores","age","alignment","size","speed","lang","traits","sources","this","isRace","arg","nameCheck","picCheck","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","Array","isArray","isTrait","sourcesCheck","Subrace","type","isSubrace","typeCheck","Monster","subtype","ac","hp","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","subtypeCheck","acCheck","hpCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","MonsterTile","monster","isLegendary","useCallback","trim","includes","formatCr","getPicture","Tile","to","Type","Flag","CR","ImageName","Image","Name","PropWrapper","Prop","WideProp","Icon","icon","faRunning","faLink","styled","Link","theme","tile","color","backgroundColor","boxShadow","div","main","highlight","headerColor","FontAwesomeIcon","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Location","map","dimension","markers","height","width","isLocation","mapCheck","dimensionCheck","markersCheck","FeatureType","featureTypeArray","value","label","getOptionFromEnum","opt","forEach","option","toString","Feature","text","normal","isFeature","textCheck","selectionsCheck","EnumField","options","transform","onChange","handleChange","Field","LabelText","StyledSelect","classNamePrefix","Select","input","buttons","FeatureSet","level","profBonus","features","bonis","spellslots","isFeatureSet","levelCheck","profBonusCheck","featuresCheck","Gear","description","cost","damage","weight","properties","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","BackButton","action","Back","onClick","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","Campaign","players","logs","notes","flow","isCampaign","playersCheck","logsCheck","npcsCheck","notesCheck","RollableProp","title","rolledValue","webhook","useWebhook","PropText","rollString","roll","rollCommand","result","krit","fail","newName","newJson","username","embeds","author","icon_url","fields","sendEmbedMessage","JSON","stringify","rollDiscord","cursor","PropTitle","float","padding","lineHeight","fontSize","margin","marginLeft","faDiscord","span","backgroundColorLink","World","isWorld","locationCheck","eventCheck","Spell","school","time","range","components","duration","ritual","isSpell","classesCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","NpcTile","npc","RowProp","ImgContainer","CharTile","calcLevel","classe","PropRowWrapper","player","race","subrace","classSet","index","key","subclasse","background","Subclass","isSubclass","Group","isGroup","monstersCheck","flowCheck","Npc","isNpc","Quest","rewards","followQuest","isQuest","followQuestCheck","rewardsCheck","Event","date","isEvent","dateCheck","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","LocationTile","location","EventTile","event","faCalendarAlt","isIEntity","Selection","selectionOptions","isSelection","selectionOptionsCheck","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","EditDialog","activeElement","onSave","onClose","onDelete","useState","setLabel","useEffect","StringField","TextButton","faTimes","faSave","newElement","onSaveClick","Map","editable","onEdit","showEditDialog","setEditDialaog","setActive","mapWrap","useRef","setMap","mapHeight","setHeight","bounds","setBounds","gcd","a","b","divisor","widthratio","heightratio","number","fitBounds","current","clientHeight","MapWrapper","ref","MarkerEditDialog","element","markerList","splice","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","url","ImageOverlay","markerPositions","Markers","useMapEvents","click","position","latlng","iconRetinaUrl","require","iconUrl","shadowUrl","iconSize","iconAnchor","marker","Marker","Popup","autoPan","minWidth","onOpen","console","log","editMarker","FormatedText","FileField","accept","isMulti","Input","target","files","multiple","ErrorTile","buttonText","onButton","Text","faPlusCircle","Book","cover","data","pages","tags","Blob","RandomTable","header","rows","LocationEditView","http","sizeOf","parse","get","response","chunks","on","chunk","push","buffer","Buffer","concat","CenterWrapper","View","faImage","Note","content","memo","StyledNode","Position","Top","onConnect","params","Left","Right","Bottom","isNode","isEdge","nodeTypes","customeNode","CustomeNode","FlowChart","initElements","isEditable","elements","setElements","setActiveElement","FlowContainer","onNodeDragStop","node","els","el","onElementsRemove","elementsToRemove","removeElements","labelBgStyle","fill","fillOpacity","labelStyle","addEdge","onLoad","reactFlowInstance","fitView","snapToGrid","connectionMode","ConnectionMode","Loose","snapGrid","elementsSelectable","nodesConnectable","nodesDraggable","onElementClick","elm","deleteKeyCode","gap","FlowBar","IconButton","faPlus","newNode","x","length","y","addNewNode","newElm","CampaignEditView","activeTab","setTab","onChangeNote","field","newValue","oldNote","newNotelList","note","onChangeLog","oldLog","newLoglList","TabBar","children","tab","TextField","faBookOpen","Container","AutoStringField","optionTable","newPlayer","oldPlayer","newPlayerlList","onChangePlayer","faTrash","filter","removePlayer","addNewPlayer","newNpc","oldNpc","newNpclList","onChangeNpc","removeNpc","addNewNpc","newNote","removeNote","newContent","newTags","addNewNote","removeLog","Date","addNewLog","graph","newMap","BuildCampaign","champaign","characters","buildCampaign","characterList","npcList","recivePromiseByAttribute","Promise","all","timeEnd","NoteSearchBar","hasTitle","onSend","open","setOpen","setTitle","setContent","setTags","newFilters","Filter","search","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","CampaignView","loading","setLoading","loadedCampaign","setLoadedCampaign","tabs","setTabs","filters","setFilters","then","newTabs","Loading","Header","SearchableNoteView","applyFilters","NoteWrapper","faTags","SearchableView","sort","toLocaleString","NumberArrayField","values","max","array","setArray","handleValueChange","ShortTextField","textarea","ClasseEditView","setSelections","reciveAll","select","onFeatureSetChange","oldFeature","featureSet","onBoniChange","oldBoni","boni","onFeatureChange","oldFeatureSet","feature","ClassView","FeatureView","FeatureWrapper","FeatureNumber","indexOf","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","slice","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","CheckField","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","selection","oldSelection","featuresets","onSelectionChange","removeSelection","addNewSelection","addNewFeature","NumberField","ClasseView","send","setSend","setSubclasses","hardSubselect","setHardSubselect","history","useHistory","reciveAllFiltered","fieldName","results","ImageView","subclass","link","SubclasseLink","CreateButton","newSubclass","createNewWithId","createNewSubclass","faPaperPlane","P2PSender","FeatureRow","FeatureHeadProp","colSpan","SpellProp","count","levels","i","printSpellslots","spellslot","FeatureProp","tr","th","td","src","img","button","EventEditView","EventView","json","setJson","inline","formatDiscordText","GearEditView","gear","faCoins","faWeightHanging","faCrosshairs","GearView","GroupEditView","group","newMonster","oldMonster","newMonsterlList","onChangeMonster","removeMonster","addNewMonster","BuildGroup","buildGroup","monsterList","GroupView","loadedGroup","setLoadedGroup","ItemEditView","item","ItemView","itemBase","setItemBase","hasAttunment","className","Rarity","toLowerCase","BookEditView","book","faFileImport","file","fileList","from","triggerImportFiles","TagView","tag","TagWrapper","oldTag","onTagChange","removeTag","BookView","pdfjs","GlobalWorkerOptions","workerSrc","setBase","numPages","setNumPages","pageNumber","setPageNumber","reader","FileReader","readAsDataURL","onloadend","base64data","changePage","offset","prevPageNumber","DocumentWrapper","disabled","faArrowRight","faArrowLeft","onLoadSuccess","onItemClick","itemPageNumber","LocalLoadingSpinner","navigator","appVersion","window","msSaveBlob","URL","createObjectURL","showPdf","faExternalLinkAlt","msSaveOrOpenBlob","pdfURL","document","createElement","download","href","body","appendChild","removeChild","downloadFile","faFileDownload","Tag","faTag","LocationView","MonsterEditView","FieldGroup","MonsterView","image","formatScore","score","Math","floor","makeSave","attr","replaceAll","split","save","parseInt","faShieldAlt","NpcEditView","NpcView","QuestEditView","quest","newQuest","QuestView","RaceEditView","onTraitChange","oldTrait","trait","TraitView","TraitWrapper","TraitName","TraitLevel","removeTrait","TraitText","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","RandomTableEditView","randomTable","onRowChange","placeholder","row","RowWrapper","RowCount","cells","removeRow","RandomTableView","rand","setRand","faDice","lastRowValues","round","random","rollForRandom","min","TableHeadProp","cell","TableProp","SelectionEditView","SelectionWrapper","SelectionName","entityName","SelectionLevel","SelectionText","entityPrerequsite","entityText","SelectionView","SpellEditView","spell","faHistory","faPowerOff","rotate","faHourglassHalf","faMortarPestle","faUser","SpellView","formatLevel","hasRitual","hasConcentration","School","Level","SubclasseEditView","SubclassView","SubclasseView","SubraceEditView","SubraceView","WorldEditView","world","newLocation","oldLocation","newLocationlList","onChangeLocation","removeLocation","addNewLocation","newEvent","oldEvent","newEventlList","onChangeEvent","removeEvent","addNewEvent","BuildWorld","buildWorld","eventList","locationList","WorldView","loadedWorld","setLoadedWorld","localeCompare","EntityDetail","entity","tableName","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEntity","msg","updateWithCallback","setTimeout","editAndSaveEntity","views","faExclamationTriangle","remove","goBack","TopBar","obj","newObj","duplicateEntity","faClone","entityId","React","toLocaleLowerCase","ToEntity","match","setEntityName","setEntity","error","setError","makeEntity","newEntity","recivePromise","newMatch","path","entities","createNewEntity","charAt","toUpperCase","update","db","finally","close","callback","saveNew","put","prom","saveNewFromList","refinedEntities","bulkPut","saveWithCallback","add","delete","toArray","reciveCount","reciveCountPromise","reciveByAttribute","where","equalsIgnoreCase","recivePromiseByAttributeCount","equals","reciveAllPromise","test","hasTag","fieldPart","arrayTest","filterPart","val","sortedFiled","reverse","sortBy","reciveAllFilteredPromise","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","deleteAll","clear","deleteAllByAttrs","attrs","anyOf","exportFilteredFromTable","blob","decodeURIComponent","encodeURI","encodeURIComponent","LinkCheck","entitiyFound","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","command","sendMessage","newCommand","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","formatTable","textPart","tableRows","isHead","formatText","FormatedTextContainer","setName","peer","setPeer","brokerId","password","generateBrokerId","newPeer","Peer","host","secure","conn","errorData","disconnected","destroyed","reconnect","faExclamationCircle","step","Bar","child","Tab","isActive","filedName","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Options","Option","Trait","defaultChecked","checked","Checkmark"],"mappings":"+KAsBaA,EAAb,kDAsBE,aAAe,IAAD,8BACZ,cAAM,cAtBRC,YAqBc,IApBdC,WAoBc,IAnBdC,WAmBc,IAlBdC,cAkBc,IAjBdC,WAiBc,IAhBdC,cAgBc,IAfdC,aAec,IAddC,gBAcc,IAbdC,WAac,IAZdC,gBAYc,IAXdC,WAWc,IAVdC,gBAUc,IATdC,kBASc,IARdC,eAQc,IAPdC,YAOc,IANdC,UAMc,IALdC,YAKc,IAJdC,eAIc,IAHdC,YAGc,IAFdC,YAEc,EAEZ,EAAKC,QAAQ,GAAGC,OAAO,CACrBrB,OACE,sGAEJ,EAAKoB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,mEAET,EAAKmB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,kFAET,EAAKkB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,qOAEJ,EAAKiB,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFK,MACE,+9BAEJ,EAAKY,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MAAO,iEACPC,MAAO,gFACPC,SACE,mOACFK,MACE,69BACFc,aAAc,oCACdC,eAAgB,4BAChBC,YACE,8FAEJ,EAAKJ,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iSAEJ,EAAKY,QAAQ,GAAGC,OAAO,CACrBC,aAAc,KACdC,eAAgB,KAChBC,YAAa,KAEbxB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,kCAEd,EAAKW,QAAQ,GAAGC,OAAO,CACrBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,yCAET,EAAKU,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,+RACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKS,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,2CAEd,EAAKS,QAAQ,IAAIC,OAAO,CACtBrB,OACE,oGACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKQ,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,uCAEhB,EAAKQ,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,yFAEJ,EAAKO,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,uFACFC,OACE,2FACFC,KAAM,gEACNC,OAAQ,4EACRC,UAAW,iEACXC,OAAQ,uEAEV,EAAKE,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,4FACFC,OACE,2FACFC,KAAM,gEACNC,OAAQ,4EACRC,UAAW,iEACXC,OAAQ,uEAEV,EAAKE,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACRC,KAAM,gEACNC,OAAQ,iEACRC,UACE,qFACFC,OAAQ,4DAEV,EAAKE,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WAAY,gCACZC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACRC,KAAM,gEACNC,OAAQ,qEACRC,UAAW,yDACXC,OAAQ,mDACRC,OAAQ,mFAEV,EAAKC,QAAQ,IAAIC,OAAO,CACtBrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QAAS,qFACTC,WAAY,gDACZC,MACE,iTACFC,WACE,qFACFC,MAAO,uCACPC,WAAY,yCACZC,aAAc,qCACdC,UACE,gGACFC,OAAQ,wEACRC,KAAM,gEACNC,OAAQ,qEACRC,UAAW,yDACXC,OAAQ,mDACRC,OAAQ,mFAEV,EAAKC,QAAQ,IACVC,OAAO,CACNrB,OACE,8GACFC,MACE,6FACFC,MACE,0FACFC,SACE,mOACFC,MACE,+FACFC,SAAU,6DACVC,QACE,qFACFC,WAAY,gDACZC,MACE,2TACFC,WACE,qFACFC,MAAO,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","file":"static/js/11.60b4e31a.chunk.js","sourcesContent":["import Dexie from \"dexie\";\nimport Book from \"../data/Book\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Quest from \"../data/campaign/Quest\";\nimport Char from \"../data/chars/Char\";\nimport Class from \"../data/classes/Class\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Encounter from \"../data/encounter/Encounter\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport RandomTable from \"../data/RandomTable\";\nimport Selection from \"../data/Selection\";\nimport Spell from \"../data/Spell\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport Group from \"../data/campaign/Group\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n  selections: Dexie.Table<Selection, number>; // number = type of the primkey\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  campaigns: Dexie.Table<Campaign, number>; // number = type of the primkey\n  quests: Dexie.Table<Quest, number>; // number = type of the primkey\n  npcs: Dexie.Table<Npc, number>; // number = type of the primkey\n  worlds: Dexie.Table<World, number>; // number = type of the primkey\n  locations: Dexie.Table<Location, number>; // number = type of the primkey\n  events: Dexie.Table<Event, number>; // number = type of the primkey\n  groups: Dexie.Table<Group, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears: \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n    this.version(10).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(11).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n    });\n    this.version(12).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(13).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(14).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n    });\n    this.version(15).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(16).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, quests, npcs, notes, players, map, sources, filename\",\n      quests:\n        \"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, notes, sources, filename\",\n      locations: \"++id, name, map, description, events, notes, sources, filename\",\n      events: \"++id, name, description, locations, npcs, notes, sources, filename\",\n    });\n    this.version(17).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, events, notes, sources, filename\",\n      locations:\n        \"++id, name, map, dimension, description, events, notes, markers, sources, filename\",\n      events: \"++id, name, description, npcs, notes, sources, filename\",\n    });\n    this.version(18).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(19).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes: \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters:\n        \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n      books: \"++id, name, cover, data, pages, tags\",\n      selections: \"++id, name, selectionOptions, filename\",\n      randomTables: \"++id, name, rows, header, filename\",\n      campaigns:\n        \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n      quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n      npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n      worlds: \"++id, name, map, description, locations, events, sources, filename\",\n      locations: \"++id, name, map, dimension, markers, sources, filename\",\n      events: \"++id, name, description, date, sources, filename\",\n      groups: \"++id, name, pic, description, npcs, players, monsters, flow, sources, filename\",\n    });\n    this.version(20)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups:\n          \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n      .upgrade((trans: any) => {\n        return trans.chars.toCollection().modify((char: Char) => {\n          if (char.campaign === undefined) char = { ...char, campaign: \"\" };\n        });\n      });\n      this.version(21)\n      .stores({\n        spells:\n          \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic, filename\",\n        items:\n          \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n        gears:\n          \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n        monsters:\n          \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, sources, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n        races:\n          \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n        subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n        classes:\n          \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n        subclasses: \"++id, name, type, features, sources, filename\",\n        chars:\n          \"++id, name, player, campaign, pic, classes, race, background, spells, spellSlots, activeSelections, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n        encounters:\n          \"++id, name, enemies, players, isPlaying, currentInit, roundCounter, map, dimension\",\n        books: \"++id, name, cover, data, pages, tags\",\n        selections: \"++id, name, selectionOptions, filename\",\n        randomTables: \"++id, name, rows, header, filename\",\n        campaigns:\n          \"++id, name, pic, description, world, npcs, notes, logs, players, flow, map, sources, filename\",\n        quests: \"++id, name, pic, description, rewards, followQuest, sources, filename\",\n        npcs: \"++id, name, pic, char, traits, description, sources, filename\",\n        worlds: \"++id, name, map, description, locations, events, sources, filename\",\n        locations: \"++id, name, map, dimension, markers, sources, filename\",\n        events: \"++id, name, description, date, sources, filename\",\n        groups:\n          \"++id, name, pic, description, notes, npcs, players, monsters, flow, sources, filename\",\n      })\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n    this.selections = this.table(\"selections\");\n    this.randomTables = this.table(\"randomTables\");\n    this.campaigns = this.table(\"campaigns\");\n    this.quests = this.table(\"quests\");\n    this.npcs = this.table(\"npcs\");\n    this.worlds = this.table(\"worlds\");\n    this.locations = this.table(\"locations\");\n    this.events = this.table(\"events\");\n    this.groups = this.table(\"groups\");\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Type>\n        {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n      </Type>\n\n      <Flag>\n        <b>{isLegendary()}</b>\n      </Flag>\n\n      <CR>\n        <b>{formatCr()}</b>\n      </CR>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{monster.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <GiResize />\n          {monster.size}\n        </Prop>\n        <Prop>\n          <GiAngelOutfit />\n          {monster.alignment}\n        </Prop>\n        <WideProp>\n          <Icon icon={faRunning} />\n          {monster.speed}\n        </WideProp>\n        <WideProp>\n          <MdRecordVoiceOver />\n          {monster.lang}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {monster.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import { LatLng } from \"leaflet\";\nimport IEntity from \"../IEntity\";\n\nexport default class Location implements IEntity {\n  id?: number;\n  name: string;\n  map: string;\n  dimension: { height: number; width: number };\n  markers: { position: LatLng; text: string }[];\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    map?: string,\n    dimension?: { height: number; width: number },\n    markers?: { position: LatLng; text: string }[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.map = map || \"\";\n    this.dimension = dimension || {\n      height: 1,\n      width: 1,\n    };\n    this.markers = markers || [];\n  }\n}\n\nexport function isLocation(arg: any): arg is Location {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const dimensionCheck =\n    arg.dimension !== undefined &&\n    typeof arg.dimension.height == \"number\" &&\n    typeof arg.dimension.width == \"number\";\n  const markersCheck = arg.markers !== undefined && Array.isArray(arg.markers);\n  return arg && nameCheck && sourcesCheck && mapCheck && dimensionCheck && markersCheck;\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum FeatureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: FeatureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: FeatureType;\n  selections: string[];\n  constructor(\n    name: string,\n    text: string,\n    selections: string[],\n    type?: FeatureType\n  ) {\n    this.name = name;\n    this.text = text;\n    this.type = type || FeatureType.normal;\n    this.selections = selections;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const selectionsCheck =\n    arg.selections !== undefined &&\n    Array.isArray(arg.selections) &&\n    typeof arg.selections[0] == \"string\";\n  return arg && nameCheck && textCheck && selectionsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Item implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\n// campaigns: \"++id, name, pic, description, world, quests, events, notes, sources, filename\",\nexport default class Campaign implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  players: string[];\n  logs: Note[];\n  map: string;\n  npcs: string[];\n  notes: Note[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    players?: string[],\n    logs?: Note[],\n    map?: string,\n    npcs?: string[],\n    notes?: Note[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.players = players || [];\n    this.logs = logs || [];\n    this.map = map || \"\";\n    this.npcs = npcs || [];\n    this.notes = notes || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isCampaign(arg: any): arg is Campaign {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const logsCheck = arg.logs !== undefined && Array.isArray(arg.logs);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    playersCheck &&\n    logsCheck &&\n    npcsCheck &&\n    notesCheck &&\n    mapCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../data/chars/Char\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendEmbedMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\n\ninterface $RollableProps {\n  char?: Char;\n  title: string;\n  value?: string | number;\n  rolledValue: number;\n}\n\nconst RollableProp = ({ char, title, value, rolledValue }: $RollableProps) => {\n  let webhook = useWebhook();\n\n  const rollDiscord = () => {\n    let rollString: string = \"\";\n    let roll: number = 0;\n\n    if (rolledValue >= 0) {\n      const { result, text } = rollCommand(\"d20+\" + rolledValue);\n      roll = result;\n      rollString = \"d20(`\" + (result - rolledValue) + \"`)+\" + rolledValue + text;\n    } else {\n      const { result, text } = rollCommand(\"d20\" + rolledValue);\n      roll = result;\n      rollString = \"d20(`\" + (result - rolledValue) + \"`)\" + rolledValue + text;\n    }\n\n    let krit = false;\n    if (roll - rolledValue === 20) krit = true;\n    let fail = false;\n    if (roll - rolledValue === 1) fail = true;\n\n    if (rollString !== \"\" && webhook !== undefined) {\n      const newName =\n        char !== undefined\n          ? rolledValue >= 0\n            ? title + \"(+\" + rolledValue + \")\"\n            : title + \"(\" + rolledValue + \")\"\n          : title;\n      rollString = char !== undefined ? rollString : \"\";\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: char !== undefined ? char.name : \"???\",\n              icon_url: char !== undefined ? char.pic : \"\",\n            },\n            fields: [\n              {\n                name: newName,\n                value:\n                  roll +\n                  (fail ? \" :red_circle:\" : \"\") +\n                  (krit ? \" :green_circle:\" : \"\") +\n                  (rollString !== \"\" ? \" ||\" + rollString + \"||\" : \"\"),\n              },\n            ],\n          },\n        ],\n      };\n      sendEmbedMessage(webhook, JSON.stringify(newJson));\n    }\n  };\n\n  return (\n    <PropText\n      onClick={() => rollDiscord()}\n      style={{ cursor: webhook !== undefined ? \"pointer\" : \"default\" }}\n    >\n      <PropTitle>{title}:</PropTitle>\n      {value !== undefined ? value + \" \" : \"\"}\n      {value !== undefined\n        ? \"(\" + (rolledValue >= 0 ? \"+\" + rolledValue : rolledValue) + \")\"\n        : rolledValue}\n      {webhook !== undefined && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n            height: \"10px\",\n            lineHeight: \"10px\",\n            fontSize: \"10px\",\n            margin: \"0px\",\n            marginLeft: \"5px\",\n          }}\n          icon={faDiscord}\n        />\n      )}\n    </PropText>\n  );\n};\n\nexport default RollableProp;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class World implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  locations: string[];\n  events: string[];\n  map: string;\n  sources: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    description?: string,\n    locations?: string[],\n    events?: string[],\n    map?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isWorld(arg: any): arg is World {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const eventCheck = arg.events !== undefined && Array.isArray(arg.events);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return (\n    arg && nameCheck && descriptionCheck && locationCheck && eventCheck && sourcesCheck && mapCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Npc from \"../../../data/campaign/Npc\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcTile = ({ npc }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <Tile to={\"/npc-detail/id/\" + npc.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{npc.name}</b>\n        </Name>\n\n        <WideProp>\n          <Icon icon={faLink} />\n          {npc.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default NpcTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  min-width: calc(100% - 20px);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n  min-width: calc(100% - 10px);\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  min-width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../data/chars/Char\";\nimport ClassSet from \"../../../data/chars/ClassSet\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n        {char.campaign && <Name>{char.campaign}</Name>}\n        <PropRowWrapper>\n          <RowProp>{calcLevel()}</RowProp>\n          <RowProp>{char.player}</RowProp>\n          <RowProp>{char.race.race}</RowProp>\n          <RowProp>{char.race.subrace}</RowProp>\n        </PropRowWrapper>\n        {char.classes &&\n          char.classes.map((classSet: ClassSet, index: number) => {\n            return (\n              <PropRowWrapper key={index}>\n                <RowProp>{classSet.level}</RowProp>\n                <RowProp>{classSet.classe}</RowProp>\n                <RowProp>{classSet.subclasse}</RowProp>\n              </PropRowWrapper>\n            );\n          })}\n        <Prop>{char.background}</Prop>\n        <Prop>{char.alignment}</Prop>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImgContainer pic={pic}></ImgContainer>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${(props) => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","import { FlowElement } from \"react-flow-renderer\";\nimport IEntity from \"../IEntity\";\nimport Note from \"./Note\";\n\nexport default class Group implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  notes: Note[];\n  players: string[];\n  npcs: string[];\n  monsters: string[];\n  flow: FlowElement[];\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    notes?: Note[],\n    players?: string[],\n    npcs?: string[],\n    monsters?: string[],\n    flow?: FlowElement[],\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.notes = notes || [];\n    this.players = players || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n    this.flow = flow || [];\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGroup(arg: any): arg is Group {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const notesCheck = arg.notes !== undefined && Array.isArray(arg.notes);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const npcsCheck = arg.npcs !== undefined && Array.isArray(arg.npcs);\n  const monstersCheck = arg.monsters !== undefined && Array.isArray(arg.monsters);\n  const flowCheck = arg.flow !== undefined && Array.isArray(arg.flow);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    notesCheck &&\n    playersCheck &&\n    npcsCheck &&\n    monstersCheck &&\n    flowCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findCampaignFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import Char from \"../chars/Char\";\nimport IEntity from \"../IEntity\";\n\n//npcs: \"++id, name, pic, char, traits, description, sources, filename\",\nexport default class Npc implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  char: Char | undefined;\n  traits: string;\n  description: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    char?: Char | undefined,\n    traits?: string,\n    description?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.char = char;\n    this.traits = traits || \"\";\n    this.description = description || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isNpc(arg: any): arg is Npc {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const traitsCheck = arg.traits !== undefined && typeof arg.traits == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return arg && nameCheck && picCheck && descriptionCheck && traitsCheck && sourcesCheck;\n}\n\nexport function findNpcFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\n//quests:\"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\nexport default class Quest implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  rewards: string;\n  followQuest: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    rewards?: string,\n    followQuest?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.rewards = rewards || \"\";\n    this.followQuest = followQuest || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isQuest(arg: any): arg is Quest {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const followQuestCheck = arg.followQuest !== undefined && typeof arg.followQuest == \"string\";\n  const rewardsCheck = arg.rewards !== undefined && typeof arg.rewards == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    followQuestCheck &&\n    rewardsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findQuestFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Event implements IEntity {\n  id?: number;\n  name: string;\n  description: string;\n  date: string;\n  sources: string;\n\n  constructor(id?: number, name?: string, description?: string, date?: string, sources?: string) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.date = date || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isEvent(arg: any): arg is Event {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const dateCheck = arg.date !== undefined && typeof arg.date == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  const mapCheck = arg.map !== undefined && typeof arg.map == \"string\";\n  return arg && nameCheck && descriptionCheck && dateCheck && sourcesCheck && mapCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Location from \"../../../data/world/Location\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationTile = ({ location }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <Tile to={\"/location-detail/id/\" + location.id}>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{location.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{location.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {location.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default LocationTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Event from \"../../../data/world/Event\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventTile = ({ event }: $Props) => {\n  return (\n    <Tile to={\"/event-detail/id/\" + event.id}>\n      <Name>\n        <b>{event.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faCalendarAlt} />\n          {event.date}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {event.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default EventTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","export default interface IEntity {\n    id?: number;\n    name: string;\n}\n\nexport function isIEntity(arg: any): arg is IEntity {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  \n    return (\n      arg &&\n      nameCheck \n    );\n  }","import IEntity, { isIEntity } from \"./IEntity\";\n\nexport default class Selection implements IEntity {\n  id?: number;\n  name: string;\n  selectionOptions: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    selectionOptions?: {\n      entityName: string;\n      entityPrerequsite: string;\n      entityText: string;\n      level: number;\n    }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.selectionOptions = selectionOptions || [];\n  }\n}\n\nexport function isSelection(arg: any): arg is Selection {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n\n  return arg && nameCheck && selectionOptionsCheck;\n}\n\nexport function findSelectionFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  selectionOptionsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const selectionOptionsCheck =\n    arg.selectionOptions !== undefined &&\n    Array.isArray(arg.selectionOptions) &&\n    isIEntity(arg.selectionOptions[0]);\n  return {\n    nameCheck: nameCheck,\n    selectionOptionsCheck: selectionOptionsCheck,\n  };\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 243;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\nimport { LatLng } from \"leaflet\";\n\ninterface $Props {\n  activeElement: { position: LatLng; text: string };\n  onSave: (element: { position: LatLng; text: string }) => void;\n  onDelete: () => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose, onDelete }: $Props) => {\n  const [label, setLabel] = useState<string>(activeElement.text);\n\n  useEffect(() => {\n    setLabel(activeElement.text);\n  }, [activeElement]);\n\n  const onSaveClick = () => {\n    let newElement = { ...activeElement };\n    newElement.text = label;\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Delete\"} icon={faTimes} onClick={onDelete} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import { Icon, LatLng } from \"leaflet\";\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { ImageOverlay, MapContainer, Marker, TileLayer, Popup, useMapEvents } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport Location from \"../../../data/world/Location\";\nimport FormatedText from \"../FormatedText\";\nimport MarkerEditDialog from \"./MarkerEditDialog\";\n\ninterface $Props {\n  location: Location;\n  editable: boolean;\n  onEdit?: (value: Location) => void;\n}\n\nconst Map = ({ location, editable, onEdit }: $Props) => {\n  const [showEditDialog, setEditDialaog] = useState<boolean>(false);\n  const [activeElement, setActive] = useState<number>();\n\n  const mapWrap = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any>(null);\n  const [mapHeight, setHeight] = useState<string>();\n  const [bounds, setBounds] = useState<any>();\n  const position: any = [0, 0];\n\n  const gcd = useCallback((a: number, b: number): number => {\n    return b ? gcd(b, a % b) : a;\n  }, []);\n\n  const reduceBounds = (number: number[][]): number[][] => {\n    const newBounds = [\n      [number[0][0] * 0.5, number[0][1] * 0.5],\n      [number[1][0] * 0.5, number[1][1] * 0.5],\n    ];\n    return newBounds;\n  };\n\n  useEffect(() => {\n    if (\n      location.dimension !== undefined &&\n      location.map !== undefined &&\n      location.map !== \"\" &&\n      location.dimension !== { height: 0, width: 0 }\n    ) {\n      const divisor = gcd(location.dimension.width, location.dimension.height);\n      const widthratio = location.dimension.width / divisor;\n      const heightratio = location.dimension.height / divisor;\n      const bounds: any = [\n        [-(heightratio / 2), -(widthratio / 2)],\n        [heightratio / 2, widthratio / 2],\n      ];\n      setBounds(bounds);\n    }\n  }, [location.map, location.dimension, gcd]);\n\n  useEffect(() => {\n    if (map !== null && bounds) {\n      map.fitBounds(reduceBounds(bounds));\n    }\n  }, [map, bounds]);\n\n  useEffect(() => {\n    if (mapWrap && mapWrap.current) {\n      const height = mapWrap.current.clientHeight;\n      setHeight(height + \"px\");\n    }\n  }, []);\n\n  const onSave = (element: { position: LatLng; text: string }) => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList[activeElement] = element;\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  const onDelete = () => {\n    if (editable && onEdit !== undefined && activeElement !== undefined) {\n      let markerList = [...location.markers];\n      markerList.splice(activeElement, 1);\n      setEditDialaog(false);\n      setActive(undefined);\n      onEdit({\n        ...location,\n        markers: markerList,\n      });\n    }\n  };\n\n  return (\n    <MapWrapper ref={mapWrap}>\n      {showEditDialog && activeElement !== undefined && (\n        <MarkerEditDialog\n          activeElement={location.markers[activeElement]}\n          onSave={onSave}\n          onDelete={onDelete}\n          onClose={() => setEditDialaog(false)}\n        ></MarkerEditDialog>\n      )}\n      {location.map && mapHeight && bounds && (\n        <MapContainer\n          style={{ height: mapHeight, width: \"100%\" }}\n          center={position}\n          zoom={1}\n          scrollWheelZoom={false}\n          whenCreated={setMap}\n        >\n          <TileLayer url={\"\"} />\n          <ImageOverlay bounds={bounds} url={location.map} />\n          <Markers\n            markerPositions={location.markers}\n            location={location}\n            editable={editable}\n            onEdit={onEdit}\n            setActive={setActive}\n            setEditDialaog={setEditDialaog}\n          />\n        </MapContainer>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default Map;\n\ninterface $MarkersProps {\n  location: Location;\n  editable: boolean;\n  markerPositions: { position: LatLng; text: string }[];\n  onEdit?: (value: Location) => void;\n  setActive: (value: number) => void;\n  setEditDialaog: (value: boolean) => void;\n}\n\nconst Markers = ({\n  location,\n  editable,\n  markerPositions,\n  onEdit,\n  setActive,\n  setEditDialaog,\n}: $MarkersProps) => {\n  useMapEvents({\n    click(e) {\n      if (editable && onEdit !== undefined) {\n        onEdit({\n          ...location,\n          markers: [...location.markers, { position: e.latlng, text: \"New\" }],\n        });\n      }\n    },\n  });\n\n  const editMarker = (index: number) => {\n    if (editable && onEdit !== undefined) {\n      console.log(index);\n      setActive(index);\n      setEditDialaog(true);\n    }\n  };\n\n  let icon = new Icon({\n    iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n    iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n    shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  });\n\n  return (\n    <>\n      {markerPositions &&\n        markerPositions.map((marker: { position: LatLng; text: string }, index: number) => {\n          return (\n            <Marker key={index} position={marker.position} icon={icon}>\n              <Popup autoPan={true} minWidth={120} onOpen={() => editMarker(index)}>\n                <FormatedText text={marker.text} />\n              </Popup>\n            </Marker>\n          );\n        })}\n    </>\n  );\n};\n\nconst MapWrapper = styled.div`\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  position: relative;\n\n  height: calc(100vh - 265px);\n  width: calc(100% - 6px);\n\n  & .leaflet-popup {\n    .leaflet-popup-content-wrapper {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n      color: ${({ theme }) => theme.tile.color};\n    }\n    .leaflet-popup-tip {\n      background-color: ${({ theme }) => theme.tile.backgroundColor};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Location from \"../../../../data/world/Location\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport Map from \"../../../general_elements/map/Map\";\n\nimport { faLink, faImage } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\ninterface $Props {\n  location: Location;\n  onEdit: (value: Location) => void;\n}\n\nconst LocationEditView = ({ location, onEdit }: $Props) => {\n  useEffect(() => {\n    if (location.map !== undefined && location.map !== \"\") {\n      let url = require(\"url\");\n      let http = require(\"http\");\n      let sizeOf = require(\"image-size\");\n\n      let options = url.parse(location.map);\n      http.get(options, function (response: any) {\n        let chunks: any = [];\n        response\n          .on(\"data\", function (chunk: any) {\n            chunks.push(chunk);\n          })\n          .on(\"end\", function () {\n            let buffer = Buffer.concat(chunks);\n            let size = sizeOf(buffer);\n            onEdit({ ...location, dimension: { height: size.height, width: size.width } });\n          });\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.map]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={location.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...location, name: name })}\n        />\n\n        <StringField\n          value={location.map}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...location, map: pic })}\n        />\n        <NumberField\n          value={location.dimension.width}\n          label=\"Map width\"\n          onChange={(width) =>\n            onEdit({ ...location, dimension: { ...location.dimension, width: width } })\n          }\n        />\n        <NumberField\n          value={location.dimension.height}\n          label=\"Map height\"\n          onChange={(height) =>\n            onEdit({ ...location, dimension: { ...location.dimension, height: height } })\n          }\n        />\n        <StringField\n          value={location.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...location, sources: sources })}\n        />\n      </View>\n      <Map editable={true} location={location} onEdit={onEdit} />\n    </CenterWrapper>\n  );\n};\n\nexport default LocationEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export default class Note {\n  title: string;\n  content: string;\n  tags: string;\n\n  constructor(title?: string, content?: string, tags?: string) {\n    this.title = title || \"\";\n    this.content = content || \"\";\n    this.tags = tags || \"\";\n  }\n}\n","import React, { memo } from \"react\";\nimport { Handle, Node, Position } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport FormatedText from \"../FormatedText\";\n\nexport default memo(({ data }: Node) => {\n  return (\n    <StyledNode>\n      <Handle\n        type=\"source\"\n        position={Position.Top}\n        id=\"a\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Left}\n        id=\"b\"\n        style={{ background: \"#555\" }}\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\n      />\n      <div>\n        <FormatedText text={data.label} />\n      </div>\n      <Handle type=\"source\" position={Position.Right} id=\"c\" style={{ background: \"#555\" }} />\n      <Handle type=\"source\" position={Position.Bottom} id=\"d\" style={{ background: \"#555\" }} />\n    </StyledNode>\n  );\n});\n\nconst StyledNode = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlowElement, isNode, isEdge } from \"react-flow-renderer\";\nimport StringField from \"../../form_elements/StringField\";\nimport { faSave, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../form_elements/TextButton\";\n\ninterface $Props {\n  activeElement: FlowElement;\n  onSave: (element: FlowElement) => void;\n  onClose: () => void;\n}\n\nconst EditDialog = ({ activeElement, onSave, onClose }: $Props) => {\n  const [label, setLabel] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (isNode(activeElement)) setLabel(activeElement.data.label);\n    if (isEdge(activeElement) && activeElement.label !== undefined) setLabel(activeElement.label);\n  }, [activeElement, setLabel]);\n\n  const onSaveClick = () => {\n    let newElement = activeElement;\n    if (isNode(newElement)) {\n      newElement.data = { ...newElement.data, label: label };\n    }\n    if (isEdge(newElement)) {\n      if (newElement.label !== undefined) {\n        newElement = { ...newElement, label: label };\n      } else {\n        newElement.label = label;\n      }\n    }\n    onSave(newElement);\n  };\n\n  return (\n    <Dialog>\n      <StringField value={label} label=\"Label\" onChange={setLabel} />\n      <TextButton text={\"Cancel\"} icon={faTimes} onClick={onClose} />\n      <TextButton text={\"Save\"} icon={faSave} onClick={() => onSaveClick()} />\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n\nconst Dialog = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0px;\n\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  margin: 0.5em;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n`;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport ReactFlow, {\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowElement,\n  isEdge,\n  ConnectionMode,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomeNode from \"./CustomeNode\";\nimport EditDialog from \"./NodeEditDialog\";\nimport IconButton from \"../../form_elements/IconButton\";\n\ninterface $Props {\n  initElements: Elements;\n  isEditable: boolean;\n  onEdit?: (value: FlowElement[]) => void;\n}\n\nconst nodeTypes = {\n  customeNode: CustomeNode,\n};\n\nconst FlowChart = ({ initElements, isEditable, onEdit }: $Props) => {\n  const [elements, setElements] = useState<FlowElement[]>(initElements);\n  const [activeElement, setActiveElement] = useState<FlowElement>();\n  const [showEditDialog, setEditDialaog] = useState<boolean>();\n\n  useEffect(() => {\n    console.log(\"change\");\n    if (onEdit !== undefined && initElements !== elements) onEdit(elements);\n  }, [elements, onEdit, initElements]);\n\n  const addNewNode = () => {\n    let id: number = 0;\n    elements.forEach((elm) => {\n      if (+elm.id >= id) id = +elm.id + 1;\n    });\n    const newNode: Elements = [\n      {\n        id: id.toString(),\n        type: \"customeNode\",\n        data: {\n          label: \"New Node\",\n        },\n        position: { x: 250 + elements.length * 15, y: 0 + elements.length * 15 },\n      },\n    ];\n    setElements((els: Elements) => els.concat(newNode));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) =>\n    setElements((els: Elements) => removeElements(elementsToRemove, els));\n  const onConnect = (params: Edge | Connection) => {\n    params = {\n      ...params,\n      type: \"smoothstep\",\n      label: \"Test\",\n      labelBgStyle: { fill: \"#1F2340\", fillOpacity: 1.0 },\n      labelStyle: { fill: \"white\" },\n    };\n    setElements((els: Elements) => addEdge(params, els));\n  };\n  const onLoad = (reactFlowInstance: any) => {\n    console.log(\"flow loaded:\", reactFlowInstance);\n    reactFlowInstance.fitView();\n  };\n  const onElementClick = (event: MouseEvent, elm: any) => {\n    if (isEdge(elm)) {\n      elements.forEach((el) => {\n        if (el.id === elm.id && isEdge(el)) {\n          elm.label = el.label;\n        }\n      });\n    }\n    setActiveElement(elm);\n    setEditDialaog(true);\n  };\n  const onSave = (newElm: FlowElement) => {\n    setElements((els) =>\n      els.map((el) => {\n        if (el.id === newElm.id) {\n          return newElm;\n        }\n        return el;\n      })\n    );\n    setEditDialaog(false);\n  };\n\n  const onNodeDragStop = (event: MouseEvent, node: Node) => {\n    setElements((els: Elements) =>\n      els.map((el: any) => {\n        if (node.id === el.id) el.position = node.position;\n        return el;\n      })\n    );\n  };\n\n  return (\n    <FlowContainer>\n      <ReactFlow\n        elements={elements}\n        onNodeDragStop={onNodeDragStop}\n        onElementsRemove={onElementsRemove}\n        onConnect={onConnect}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        snapGrid={[15, 15]}\n        elementsSelectable={isEditable}\n        nodesConnectable={isEditable}\n        nodesDraggable={isEditable}\n        onElementClick={isEditable ? onElementClick : undefined}\n        deleteKeyCode={46}\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={15} />\n      </ReactFlow>\n      {isEditable && (\n        <FlowBar>\n          <IconButton icon={faPlus} onClick={() => addNewNode()} />\n        </FlowBar>\n      )}\n      {showEditDialog && activeElement && (\n        <EditDialog\n          activeElement={activeElement}\n          onSave={onSave}\n          onClose={() => setEditDialaog(false)}\n        ></EditDialog>\n      )}\n    </FlowContainer>\n  );\n};\n\nexport default FlowChart;\n\nconst FlowBar = styled.div`\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst FlowContainer = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 5px;\n  width: 100%;\n  height: calc(100vh - 260px);\n  min-height: 50vh;\n  border-radius: 5px;\n  position: relative;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Note from \"../../../../data/campaign/Note\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignEditView = ({ campaign, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (campaign !== undefined) {\n      let newNpclList = campaign.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...campaign, npcs: newNpclList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (campaign !== undefined) {\n      let newPlayerlList = campaign.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...campaign, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (campaign !== undefined) {\n      let newNotelList = campaign.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...campaign, notes: newNotelList });\n    }\n  };\n\n  const removeLog = (oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs\n        .filter((log: Note) => log !== oldLog)\n        .map((log: Note) => {\n          return log;\n        });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const addNewLog = () => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((log: Note) => {\n        return log;\n      });\n      newLoglList.push(new Note(new Date().toString(), \"\", \"\"));\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n  const onChangeLog = (field: string, newValue: string, oldLog: Note) => {\n    if (campaign !== undefined) {\n      let newLoglList = campaign.logs.map((logs: Note) => {\n        if (logs === oldLog) {\n          return { ...logs, [field]: newValue };\n        } else {\n          return logs;\n        }\n      });\n      onEdit({ ...campaign, logs: newLoglList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Players\", \"Npcs\", \"Notes\", \"Log\", \"Graph\", \"Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={campaign.name}\n            label=\"Campaign Name\"\n            onChange={(name) => onEdit({ ...campaign, name: name })}\n          />\n          <StringField\n            value={campaign.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...campaign, pic: pic })}\n          />\n          <StringField\n            value={campaign.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...campaign, sources: sources })}\n          />\n          <TextField\n            value={campaign.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...campaign, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {campaign.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {campaign.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {campaign.notes.map((note: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <StringField\n                  value={note.title}\n                  label=\"Title\"\n                  onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                <TextField\n                  value={note.content}\n                  label=\"Feature Text\"\n                  onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                />\n                <StringField\n                  value={note.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Log\" && (\n        <>\n          {campaign.logs.map((log: Note, index: number) => {\n            return (\n              <Container key={index}>\n                <TextField\n                  height={\"30px\"}\n                  value={log.content}\n                  label=\"Log Entry\"\n                  onChange={(newContent) => onChangeLog(\"content\", newContent, log)}\n                />\n                <StringField\n                  value={log.tags}\n                  label=\"Tags\"\n                  onChange={(newTags) => onChangeLog(\"tags\", newTags, log)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLog(log)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewLog()} />\n        </>\n      )}\n      {activeTab === \"Graph\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={campaign.flow}\n            onEdit={(graph) => onEdit({ ...campaign, flow: graph })}\n          />\n        </Container>\n      )}\n      {activeTab === \"Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={campaign.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...campaign, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CampaignEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Location from \"../world/Location\";\nimport Campaign from \"./Campaign\";\nimport Npc from \"./Npc\";\n\nexport default class BuildCampaign {\n  campaign: Campaign;\n  characters: Char[];\n  npcs: Npc[];\n  map: Location;\n\n  constructor(champaign?: Campaign, characters?: Char[], npcs?: Npc[], map?: Location) {\n    this.campaign = champaign || new Campaign();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildCampaign from \"../data/campaign/BuildCampaign\";\nimport Campaign from \"../data/campaign/Campaign\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Location from \"../data/world/Location\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildCampaign = async (campaign: Campaign): Promise<BuildCampaign> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let map: Location;\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n\n  campaign.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  campaign.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", campaign.map);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildCampaign(campaign, characters, npcs, map);\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Filter from \"../../../data/Filter\";\n\nimport { faSearch, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { Bar, SearchBar } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  hasTitle: boolean;\n  onSend: (filters: Filter[]) => void;\n}\n\nconst NoteSearchBar = ({ hasTitle, onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (title !== \"\") {\n      newFilters = [...newFilters, new Filter(\"title\", title)];\n    }\n    if (content !== \"\") {\n      newFilters = [...newFilters, new Filter(\"content\", content)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setTitle(\"\");\n      setContent(\"\");\n      setTags(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  return (\n    <>\n      <Bar open={open}>\n        {hasTitle && <StringField value={title} label=\"Title\" onChange={(title: string) => setTitle(title)} />}\n        <StringField\n          value={content}\n          label=\"Content\"\n          onChange={(content: string) => setContent(content)}\n        />\n        <StringField value={tags} label=\"Tags\" onChange={(tags: string) => setTags(tags)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </Bar>\n    </>\n  );\n};\n\nexport default NoteSearchBar;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Campaign from \"../../../../data/campaign/Campaign\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport Note from \"../../../../data/campaign/Note\";\nimport Filter from \"../../../../data/Filter\";\nimport BuildCampaign from \"../../../../data/campaign/BuildCampaign\";\nimport { buildCampaign } from \"../../../../services/CampaignService\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport NoteSearchBar from \"../NoteSearchBar\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\n\ninterface $Props {\n  campaign: Campaign;\n  onEdit: (value: Campaign) => void;\n}\n\nconst CampaignView = ({ campaign, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedCampaign, setLoadedCampaign] = useState<BuildCampaign>(new BuildCampaign());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildCampaign(campaign).then((buildCampaign) => {\n      let newTabs = [\"General\"];\n      if (buildCampaign.characters.length > 0) newTabs.push(\"Players\");\n      if (buildCampaign.npcs.length > 0) newTabs.push(\"Npcs\");\n      setTabs([...newTabs, \"Notes\", \"Log\", \"Graph\", \"Map\"]);\n      setLoadedCampaign(buildCampaign);\n      setLoading(false);\n    });\n  }, [campaign, setLoadedCampaign]);\n\n  const getPicture = useCallback(() => {\n    if (campaign !== undefined) {\n      if (campaign.pic === \"\" || campaign.pic === null) {\n        return \"\";\n      }\n      return campaign.pic;\n    }\n    return \"\";\n  }, [campaign]);\n\n  const formatDate = (date: string): string => {\n    return new Date(date).toLocaleString();\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedCampaign && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedCampaign.campaign.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedCampaign.campaign.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedCampaign.campaign.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Players\" && loadedCampaign.characters && (\n            <PropWrapper>\n              {loadedCampaign.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && loadedCampaign.npcs && (\n            <PropWrapper>\n              {loadedCampaign.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedCampaign.campaign.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Log\" && (\n            <>\n              <NoteSearchBar hasTitle={false} onSend={setFilters} />\n              <SearchableView>\n                {loadedCampaign.campaign.logs\n                  .filter((log: Note) => applyFilters(log, filters))\n                  .sort((a: Note, b: Note) => +new Date(b.title) - +new Date(a.title))\n                  .map((log: Note, index: number) => {\n                    return (\n                      <PropWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{formatDate(log.title)}:</PropTitle>\n                          <FormatedText text={log.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {log.tags}\n                        </Prop>\n                      </PropWrapper>\n                    );\n                  })}\n              </SearchableView>\n            </>\n          )}\n          {activeTab === \"Graph\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedCampaign.campaign.flow} />\n            </PropWrapper>\n          )}\n          {activeTab === \"Map\" && <Map editable={false} location={loadedCampaign.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CampaignView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextField from \"../../../form_elements/TextField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClasseEditView = ({ classe, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<\n    { value: string; label: string }[]\n  >([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return {...feature, selections: selections};\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: FeatureType.normal,\n          selections: []\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      })\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                      {feature.selections &&\n                        feature.selections.map(\n                          (selection: string, index: number) => {\n                            return (\n                              <FeatureContainer key={index}>\n                                <EnumField\n                                  options={selections}\n                                  value={{ value: selection, label: selection }}\n                                  label=\"Name\"\n                                  onChange={(name) =>\n                                    onSelectionChange(\n                                      featureSet,\n                                      feature,\n                                      selection,\n                                      name\n                                    )\n                                  }\n                                />\n                                <IconButton\n                                  icon={faTrash}\n                                  onClick={() => removeSelection(selection)}\n                                />\n                              </FeatureContainer>\n                            );\n                          }\n                        )}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClasseView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [hardSubselect, setHardSubselect] = useState<boolean>(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      hardSubselect\n        ? [\n            { fieldName: \"type\", value: classe.name, sort: 0 },\n            { fieldName: \"sources\", value: classe.sources, sort: 0 },\n          ]\n        : [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe, hardSubselect]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <CheckField value={hardSubselect} label=\"Hard Select\" onChange={setHardSubselect} />\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclasse-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink key={index} onClick={() => history.push(link)}>\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={classe.featureSets[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(classe.featureSets[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Event from \"../../../../data/world/Event\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  event: Event;\n  onEdit: (value: Event) => void;\n}\n\nconst EventEditView = ({ event, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={event.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...event, name: name })}\n        />\n        <StringField\n          value={event.date}\n          label=\"Date\"\n          onChange={(date) => onEdit({ ...event, date: date })}\n        />\n        <StringField\n          value={event.sources}\n          label=\"Sources\"\n          onChange={(sources) => onEdit({ ...event, sources: sources })}\n        />\n        <TextField\n          value={event.description}\n          label=\"Description\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...event, description: description })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Event from \"../../../../data/world/Event\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { faCalendarAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  event: Event;\n}\n\nconst EventView = ({ event }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: event.name,\n            },\n            fields: [\n              {\n                name: \"Date\",\n                value: event.date ? event.date : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: event.description ? formatDiscordText(event.description) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [event, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{event.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCalendarAlt} />\n            {event.date}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {event.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <PropTitle>Description</PropTitle>\n          <FormatedText text={event.description} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${event.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${event.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={event} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EventView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../data/Gear\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Gear from \"../../../../data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: gear.name,\n              icon_url: gear.pic,\n            },\n            fields: [\n              {\n                name: \"Weight\",\n                value: gear.weight ? gear.weight : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Cost\",\n                value: gear.cost ? gear.cost : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Properties\",\n                value: gear.properties ? gear.properties : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Damgae\",\n                value: gear.damage ? gear.damage : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Type\",\n                value: gear.type ? gear.type : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: gear.description ? formatDiscordText(gear.description) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [gear, webhook]);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        {webhook !== undefined && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${gear.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Group from \"../../../../data/campaign/Group\";\n\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport Note from \"../../../../data/campaign/Note\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupEditView = ({ group, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeNpc = (oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs\n        .filter((npc: string) => npc !== oldNpc)\n        .map((npc: string) => {\n          return npc;\n        });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const addNewNpc = () => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        return npc;\n      });\n      newNpclList.push(\"\");\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n  const onChangeNpc = (newNpc: string, oldNpc: string) => {\n    if (group !== undefined) {\n      let newNpclList = group.npcs.map((npc: string) => {\n        if (npc === oldNpc) {\n          return newNpc;\n        } else {\n          return npc;\n        }\n      });\n      onEdit({ ...group, npcs: newNpclList });\n    }\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters\n        .filter((monster: string) => monster !== oldMonster)\n        .map((monster: string) => {\n          return monster;\n        });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const addNewMonster = () => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        return monster;\n      });\n      newMonsterlList.push(\"\");\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    if (group !== undefined) {\n      let newMonsterlList = group.monsters.map((monster: string) => {\n        if (monster === oldMonster) {\n          return newMonster;\n        } else {\n          return monster;\n        }\n      });\n      onEdit({ ...group, monsters: newMonsterlList });\n    }\n  };\n\n  const removePlayer = (oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players\n        .filter((player: string) => player !== oldPlayer)\n        .map((player: string) => {\n          return player;\n        });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const addNewPlayer = () => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        return player;\n      });\n      newPlayerlList.push(\"\");\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: string) => {\n    if (group !== undefined) {\n      let newPlayerlList = group.players.map((player: string) => {\n        if (player === oldPlayer) {\n          return newPlayer;\n        } else {\n          return player;\n        }\n      });\n      onEdit({ ...group, players: newPlayerlList });\n    }\n  };\n\n  const removeNote = (oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes\n        .filter((note: Note) => note !== oldNote)\n        .map((note: Note) => {\n          return note;\n        });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const addNewNote = () => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        return note;\n      });\n      newNotelList.push(new Note());\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n  const onChangeNote = (field: string, newValue: string, oldNote: Note) => {\n    if (group !== undefined) {\n      let newNotelList = group.notes.map((note: Note) => {\n        if (note === oldNote) {\n          return { ...note, [field]: newValue };\n        } else {\n          return note;\n        }\n      });\n      onEdit({ ...group, notes: newNotelList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Notes\", \"Players\", \"Npcs\", \"Monsters\", \"Relationships\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={group.name}\n            label=\"Group Name\"\n            onChange={(name) => onEdit({ ...group, name: name })}\n          />\n          <StringField\n            value={group.pic}\n            label=\"Picture\"\n            icon={faImage}\n            onChange={(pic) => onEdit({ ...group, pic: pic })}\n          />\n          <StringField\n            value={group.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...group, sources: sources })}\n          />\n          <TextField\n            value={group.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...group, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <>\n          {group.notes !== undefined &&\n            group.notes.map((note: Note, index: number) => {\n              return (\n                <Container key={index}>\n                  <StringField\n                    value={note.title}\n                    label=\"Title\"\n                    onChange={(newNote) => onChangeNote(\"title\", newNote, note)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeNote(note)} />\n                  <TextField\n                    value={note.content}\n                    label=\"Feature Text\"\n                    onChange={(newContent) => onChangeNote(\"content\", newContent, note)}\n                  />\n                  <StringField\n                    value={note.tags}\n                    label=\"Tags\"\n                    onChange={(newTags) => onChangeNote(\"tags\", newTags, note)}\n                  />\n                </Container>\n              );\n            })}\n          <TextButton text={\"Add new Note\"} icon={faPlus} onClick={() => addNewNote()} />\n        </>\n      )}\n      {activeTab === \"Players\" && (\n        <>\n          {group.players.map((player: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"chars\"}\n                  value={player}\n                  label=\"Player\"\n                  onChange={(newPlayer) => onChangePlayer(newPlayer, player)}\n                />\n                <IconButton icon={faTrash} onClick={() => removePlayer(player)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Player\"} icon={faPlus} onClick={() => addNewPlayer()} />\n        </>\n      )}\n      {activeTab === \"Npcs\" && (\n        <>\n          {group.npcs.map((npc: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"npcs\"}\n                  value={npc}\n                  label=\"Npc\"\n                  onChange={(newPlayer) => onChangeNpc(newPlayer, npc)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeNpc(npc)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Npc\"} icon={faPlus} onClick={() => addNewNpc()} />\n        </>\n      )}\n      {activeTab === \"Monsters\" && (\n        <>\n          {group.monsters.map((monster: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"monsters\"}\n                  value={monster}\n                  label=\"Monster\"\n                  onChange={(newMonster) => onChangeMonster(newMonster, monster)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeMonster(monster)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Monster\"} icon={faPlus} onClick={() => addNewMonster()} />\n        </>\n      )}\n      {activeTab === \"Relationships\" && (\n        <Container>\n          <FlowChart\n            isEditable={true}\n            initElements={group.flow}\n            onEdit={(graph) => onEdit({ ...group, flow: graph })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default GroupEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Char from \"../chars/Char\";\nimport Monster from \"../Monster\";\nimport Group from \"./Group\";\nimport Npc from \"./Npc\";\n\nexport default class BuildGroup {\n  group: Group;\n  characters: Char[];\n  npcs: Npc[];\n  monsters: Monster[]\n\n  constructor(champaign?: Group, characters?: Char[], npcs?: Npc[], monsters?: Monster[]) {\n    this.group = champaign || new Group();\n    this.characters = characters || [];\n    this.npcs = npcs || [];\n    this.monsters = monsters || [];\n  }\n}\n","import BuildGroup from \"../data/campaign/BuildGroup\";\nimport Group from \"../data/campaign/Group\";\nimport Npc from \"../data/campaign/Npc\";\nimport Char from \"../data/chars/Char\";\nimport Monster from \"../data/Monster\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildGroup = async (group: Group): Promise<BuildGroup> => {\n  console.time(\"t\");\n  let characters: Char[];\n  let npcs: Npc[];\n  let monsters: Monster[];\n\n  console.time(\"load\");\n  let characterList: Promise<Char>[] = [];\n  let npcList: Promise<Npc>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n\n  group.players.forEach((player: string) => {\n    characterList.push(recivePromiseByAttribute(\"chars\", \"name\", player));\n  });\n  group.npcs.forEach((npc: string) => {\n    npcList.push(recivePromiseByAttribute(\"npcs\", \"name\", npc));\n  });\n  group.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  characters = await Promise.all(characterList);\n  npcs = await Promise.all(npcList);\n  monsters = await Promise.all(monsterList);\n  console.timeEnd(\"load\");\n\n  characters = characters.filter((char) => char !== undefined);\n  npcs = npcs.filter((npc) => npc !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"t\");\n  return new BuildGroup(group, characters, npcs, monsters);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Group from \"../../../../data/campaign/Group\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport Char from \"../../../../data/chars/Char\";\nimport BuildGroup from \"../../../../data/campaign/BuildGroup\";\nimport { buildGroup } from \"../../../../services/GroupService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport NpcTile from \"../../npcs/NpcTile\";\nimport CharTile from \"../../chars/CharTile\";\nimport { faLink, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport FlowChart from \"../../../general_elements/flow/FlowChart\";\nimport MonsterTile from \"../../monsters/MonsterTile\";\nimport Monster from \"../../../../data/Monster\";\nimport Note from \"../../../../data/campaign/Note\";\nimport { applyFilters } from \"../../../../services/DatabaseService\";\nimport NoteSearchBar from \"../../campaigns/NoteSearchBar\";\nimport Filter from \"../../../../data/Filter\";\n\ninterface $Props {\n  group: Group;\n  onEdit: (value: Group) => void;\n}\n\nconst GroupView = ({ group, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedGroup, setLoadedGroup] = useState<BuildGroup>(new BuildGroup());\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\"General\"]);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  useEffect(() => {\n    buildGroup(group).then((buildGroup) => {\n      let newTabs = [\"General\"];\n      if (buildGroup.group.notes.length > 0) newTabs.push(\"Notes\");\n      if (buildGroup.characters.length > 0) newTabs.push(\"Players\");\n      if (buildGroup.npcs.length > 0) newTabs.push(\"Npcs\");\n      if (buildGroup.monsters.length > 0) newTabs.push(\"Monsters\");\n      setTabs([...newTabs, \"Relationships\"]);\n      setLoadedGroup(buildGroup);\n      setLoading(false);\n    });\n  }, [group, setLoadedGroup]);\n\n  const getPicture = useCallback(() => {\n    if (group !== undefined) {\n      if (group.pic === \"\" || group.pic === null) {\n        return \"\";\n      }\n      return group.pic;\n    }\n    return \"\";\n  }, [group]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedGroup && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedGroup.group.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedGroup.group.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} activeTab={activeTab} />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedGroup.group.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedGroup.group.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Notes\" && (\n            <>\n              <NoteSearchBar hasTitle={true} onSend={setFilters} />\n              <SearchableNoteView>\n                {loadedGroup.group.notes\n                  .filter((note: Note) => applyFilters(note, filters))\n                  .map((note: Note, index: number) => {\n                    return (\n                      <NoteWrapper key={index}>\n                        <Prop>\n                          <PropTitle>{note.title}</PropTitle>\n                          <FormatedText text={note.content} />\n                        </Prop>\n                        <Prop>\n                          <Icon icon={faTags} />\n                          {note.tags}\n                        </Prop>\n                      </NoteWrapper>\n                    );\n                  })}\n              </SearchableNoteView>\n            </>\n          )}\n          {activeTab === \"Players\" && (\n            <PropWrapper>\n              {loadedGroup.characters.map((player: Char, index: number) => {\n                return <CharTile char={player} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Npcs\" && (\n            <PropWrapper>\n              {loadedGroup.npcs.map((npc: Npc, index: number) => {\n                return <NpcTile npc={npc} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Monsters\" && (\n            <PropWrapper>\n              {loadedGroup.monsters.map((monster: Monster, index: number) => {\n                return <MonsterTile monster={monster} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Relationships\" && (\n            <PropWrapper>\n              <FlowChart isEditable={false} initElements={loadedGroup.group.flow} />\n            </PropWrapper>\n          )}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default GroupView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst SearchableView = styled.div`\n  margin-top: 50px;\n`;\n\nconst SearchableNoteView = styled(SearchableView)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst NoteWrapper = styled(PropWrapper)`\n  flex: 1 1 100%;\n  max-width: 800px;\n  padding: 10px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../data/Item\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport NumberField from \"../../../form_elements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../data/Item\";\nimport Gear from \"../../../../data/Gear\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: item.name,\n              icon_url: item.pic,\n            },\n            fields: [\n              {\n                name: \"Bonus\",\n                value: item.magicBonus ? item.magicBonus : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Rarity\",\n                value: item.rarity ? item.rarity : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Type\",\n                value: item.type ? item.type : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Base\",\n                value: item.base ? item.base : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Damage\",\n                value: itemBase && itemBase.damage ? itemBase.damage : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Properties\",\n                value: itemBase && itemBase.properties ? itemBase.properties : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: formatDiscordText(item.description),\n              },\n            ],\n          },\n        ],\n      };\n\n      setJson(JSON.stringify(newJson));\n    }\n  }, [item, webhook, itemBase]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        {webhook !== undefined && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${item.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${item.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport FileField from \"../../../form_elements/FileField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../../data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Location from \"../../../../data/world/Location\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport Map from \"../../../general_elements/map/Map\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\nimport \"leaflet/dist/leaflet.css\";\n\ninterface $Props {\n  location: Location;\n}\n\nconst LocationView = ({ location }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (location !== undefined) {\n      if (location.map === \"\" || location.map === null) {\n        return \"\";\n      }\n      return location.map;\n    }\n    return \"\";\n  }, [location]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{location.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{location.name}</b>\n          </Name>\n        )}\n      </View>\n\n      <Map editable={false} location={location} />\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${location.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={location} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default LocationView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faRunning, faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport RollableProp from \"../../../general_elements/RollableProp\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: monster.name,\n              icon_url: monster.pic,\n            },\n            image: {\n              url: monster.pic,\n            },\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [monster, webhook]);\n\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const makeSave = (attr: string): number => {\n    let boni = formatScore(monster[attr]);\n    if (monster.savingThrows !== \"\") {\n      monster.savingThrows\n        .replaceAll(\" \", \"\")\n        .split(\",\")\n        .forEach((save: string) => {\n          if (save.includes(attr)) {\n            boni = parseInt(save.replaceAll(attr, \"\").replaceAll(\"+\", \"\").trim());\n          }\n        });\n    }\n    return boni;\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type} {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <RollableProp title={\"Str\"} value={monster.str} rolledValue={makeSave(\"str\")} />\n          <RollableProp title={\"Dex\"} value={monster.dex} rolledValue={makeSave(\"dex\")} />\n          <RollableProp title={\"Con\"} value={monster.con} rolledValue={makeSave(\"con\")} />\n          <RollableProp title={\"Int\"} value={monster.int} rolledValue={makeSave(\"int\")} />\n          <RollableProp title={\"Wis\"} value={monster.wis} rolledValue={makeSave(\"wis\")} />\n          <RollableProp title={\"Cha\"} value={monster.cha} rolledValue={makeSave(\"cha\")} />\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && <Prop>{monster.dmgVulnerabilitie}</Prop>}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        {webhook !== undefined && monster.pic !== \"\" && (\n          <PropWrapper>\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${monster.name} image`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${monster.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Npc from \"../../../../data/campaign/Npc\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  npc: Npc;\n  onEdit: (value: Npc) => void;\n}\n\nconst NpcEditView = ({ npc, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={npc.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...npc, name: name })}\n        />\n        <StringField\n          value={npc.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...npc, pic: pic })}\n        />\n        <StringField\n          value={npc.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...npc, sources: sources })}\n        />\n        <TextField\n          value={npc.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...npc, description: description })}\n        />\n        <TextField\n          value={npc.traits}\n          label=\"Traits\"\n          icon={faBookOpen}\n          onChange={(traits) => onEdit({ ...npc, traits: traits })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport Npc from \"../../../../data/campaign/Npc\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  npc: Npc;\n}\n\nconst NpcView = ({ npc }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (npc !== undefined) {\n      if (npc.pic === \"\" || npc.pic === null) {\n        return \"\";\n      }\n      return npc.pic;\n    }\n    return \"\";\n  }, [npc]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{npc.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{npc.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={npc.description} />\n          </Text>\n          <Text>\n            <PropTitle>Traits: </PropTitle>\n            <FormatedText text={npc.traits} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${npc.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={npc} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default NpcView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Quest from \"../../../../data/campaign/Quest\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  quest: Quest;\n  onEdit: (value: Quest) => void;\n}\n\nconst QuestEditView = ({ quest, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={quest.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...quest, name: name })}\n        />\n\n        <StringField\n          value={quest.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...quest, pic: pic })}\n        />\n        <StringField\n          value={quest.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...quest, sources: sources })}\n        />\n        <TextField\n          value={quest.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) => onEdit({ ...quest, description: description })}\n        />\n        <TextField\n          value={quest.rewards}\n          label=\"Rewards\"\n          height={\"50px\"}\n          icon={faBookOpen}\n          onChange={(rewards) => onEdit({ ...quest, rewards: rewards })}\n        />\n        <TextField\n          value={quest.followQuest}\n          label=\"Followup\"\n          height={\"30px\"}\n          icon={faBookOpen}\n          onChange={(newQuest) => onEdit({ ...quest, followQuest: newQuest })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Quest from \"../../../../data/campaign/Quest\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\n\ninterface $Props {\n  quest: Quest;\n}\n\nconst QuestView = ({ quest }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: quest.name,\n              icon_url: quest.pic,\n            },\n            fields: [\n              {\n                name: \"Descritption\",\n                value: quest.description ? formatDiscordText(quest.description) : \"-\",\n              },\n              {\n                name: \"Reward\",\n                value: quest.rewards ? formatDiscordText(quest.rewards) : \"-\",\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [quest, webhook]);\n\n  const getPicture = useCallback(() => {\n    if (quest !== undefined) {\n      if (quest.pic === \"\" || quest.pic === null) {\n        return \"\";\n      }\n      return quest.pic;\n    }\n    return \"\";\n  }, [quest]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{quest.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{quest.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Text>\n            <FormatedText text={quest.description} />\n          </Text>\n          <Text>\n            <FormatedText text={quest.rewards} />\n          </Text>\n          <Prop>\n            <FormatedText text={quest.followQuest} />\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Show ${quest.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${quest.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={quest} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default QuestView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/races/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { reciveAllFiltered, createNewWithId } from \"../../../../services/DatabaseService\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      <View>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          );\n        })}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Selection from \"../../../../data/Selection\";\n\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  selection: Selection;\n  onEdit: (value: Selection) => void;\n}\n\nconst SelectionEditView = ({ selection, onEdit }: $Props) => {\n  const onSelectionChange = (\n    oldSelection: { entityName: string; entityText: string; level: number },\n    field: string,\n    value: string | number\n  ) => {\n    let selections = selection.selectionOptions.map(\n      (selection: {\n        entityName: string;\n        entityPrerequsite: string;\n        entityText: string;\n        level: number;\n      }) => {\n        if (selection === oldSelection) {\n          return {\n            ...selection,\n            [field]: value,\n          };\n        } else {\n          return selection;\n        }\n      }\n    );\n    onEdit({ ...selection, selectionOptions: selections });\n  };\n\n  const addNewSelection = () => {\n    onEdit({\n      ...selection,\n      selectionOptions: [\n        ...selection.selectionOptions,\n        { entityName: \"\", entityPrerequsite: \"\", entityText: \"\", level: 0 },\n      ],\n    });\n  };\n\n  const removeSelection = (oldSelection: {\n    entityName: string;\n    entityPrerequsite: string;\n    entityText: string;\n    level: number;\n  }) => {\n    let selections = selection.selectionOptions;\n    const index: number = selections.indexOf(oldSelection);\n    if (index !== -1) {\n      selections.splice(index, 1);\n      onEdit({ ...selection, selectionOptions: selections });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={selection.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...selection, name: name })}\n        />\n        {selection.selectionOptions.map(\n          (\n            selection: {\n              entityName: string;\n              entityPrerequsite: string;\n              entityText: string;\n              level: number;\n            },\n            index: number\n          ) => {\n            return (\n              <SelectionWrapper key={index}>\n                <SelectionName\n                  value={selection.entityName}\n                  label=\"Name\"\n                  onChange={(name) => onSelectionChange(selection, \"entityName\", name)}\n                />\n                <SelectionLevel\n                  value={selection.level}\n                  label=\"Level\"\n                  onChange={(level) => onSelectionChange(selection, \"level\", level)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeSelection(selection)} />\n                <SelectionText\n                  value={selection.entityPrerequsite}\n                  label=\"Prerequsite\"\n                  onChange={(text) => onSelectionChange(selection, \"entityPrerequsite\", text)}\n                />\n                <SelectionText\n                  value={selection.entityText}\n                  label=\"Text\"\n                  onChange={(text) => onSelectionChange(selection, \"entityText\", text)}\n                />\n              </SelectionWrapper>\n            );\n          }\n        )}\n        <SelectionWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewSelection()} />\n        </SelectionWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SelectionWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst SelectionName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst SelectionLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst SelectionText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Selection from \"../../../../data/Selection\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionView = ({ selection }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{selection.name}</b>\n        </Name>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${selection.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={selection} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {selection.selectionOptions.map(\n        (\n          trait: {\n            entityName: string;\n            entityPrerequsite: string;\n            entityText: string;\n            level: number;\n          },\n          index: number\n        ) => {\n          return (\n            <View key={index}>\n              <PropWrapper>\n                <Prop>\n                  <PropTitle>Name:</PropTitle>\n                  {trait.entityName}\n                </Prop>\n                <Prop>\n                  <PropTitle>Level:</PropTitle>\n                  {trait.level}\n                </Prop>\n                {trait.entityPrerequsite !== \"\" && (\n                  <Prop>\n                    <PropTitle>Prerequisite:</PropTitle>\n                    {trait.entityPrerequsite}\n                  </Prop>\n                )}\n                <Text>\n                  <FormatedText text={trait.entityText} />\n                </Text>\n              </PropWrapper>\n            </View>\n          );\n        }\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default SelectionView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 5px 2px 5px 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../data/Spell\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            author: {\n              name: spell.name,\n              icon_url: spell.pic,\n            },\n            fields: [\n              {\n                name: \"Level\",\n                value: spell.level ? spell.level : \"-\",\n                inline: true,\n              },\n              {\n                name: \"School\",\n                value: spell.school ? spell.school : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Range\",\n                value: spell.range ? spell.range : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Duration\",\n                value: spell.duration ? spell.duration : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Time\",\n                value: spell.time ? spell.time : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Text\",\n                value: formatDiscordText(spell.text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [spell, webhook]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${spell.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${spell.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport Subclass from \"../../../../data/classes/Subclass\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Selection from \"../../../../data/Selection\";\nimport Feature, {\n  FeatureType,\n  featureTypeArray,\n  getOptionFromEnum,\n} from \"../../../../data/classes/Feature\";\n\nimport { faLink, faPlus, faTrash, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport NumberArrayField from \"../../../form_elements/NumberArrayField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  subclasse: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclasseEditView = ({ subclasse, onEdit }: $Props) => {\n  const [selections, setSelections] = useState<{ value: string; label: string }[]>([]);\n\n  useEffect(() => {\n    reciveAll(\"selections\", (data: any[]) => {\n      let selectionsData = data as Selection[];\n      let selectionOptions = selectionsData.map((select: Selection) => {\n        return { value: select.name, label: select.name };\n      });\n      setSelections(selectionOptions);\n    });\n  }, []);\n\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const onBoniChange = (oldFeature: FeatureSet, oldBoni: Boni, field: string, value: string) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const onSelectionChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    oldSelection: string,\n    value: string\n  ) => {\n    let featuresets = subclasse.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            let selections = feature.selections.map((select: string) => {\n              if (select === oldSelection) {\n                return value;\n              } else {\n                return select;\n              }\n            });\n            return { ...feature, selections: selections };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclasse, features: featuresets });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclasse, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclasse.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const removeSelection = (oldSelection: string) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections = feature.selections;\n        if (selections !== undefined) {\n          const index: number = selections.indexOf(oldSelection);\n          if (index !== -1) {\n            selections.splice(index, 1);\n          }\n        }\n        return { ...feature, selections: selections };\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(0, featureSet.spellslots.length - 1),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclasse.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          selections: [],\n          type: FeatureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclasse, features: features });\n  };\n  const addNewSelection = (oldFeatureSet: FeatureSet, oldFeature: Feature) => {\n    let featureSets = subclasse.features.map((featureSet) => {\n      let features = featureSet.features.map((feature: Feature) => {\n        let selections: string[] = feature.selections;\n        if (selections === undefined) {\n          selections = [];\n        }\n        if (feature === oldFeature) {\n          selections.push(\"\");\n          return { ...feature, selections: selections };\n        }\n        return feature;\n      });\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclasse, features: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (subclasse.features.length - 1 >= 0) {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclasse.features[subclasse.features.length - 1].bonis,\n            spellslots: subclasse.features[subclasse.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclasse,\n        features: [\n          ...subclasse.features,\n          {\n            level: subclasse.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclasse.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclasse, name: name })}\n        />\n        <StringField\n          value={subclasse.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclasse, type: type })}\n        />\n        <StringField\n          value={subclasse.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclasse, sources: sources })}\n        />\n      </SubclassView>\n      {subclasse.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) => onFeatureSetChange(featureSet, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeFeatureSet(featureSet)} />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) => onSpellslotChange(featureSet, spellslots)}\n              />\n              <IconButton icon={faMinus} onClick={() => removeSpellslot(featureSet)} />\n              <IconButton icon={faPlus} onClick={() => addNewSpellslot(featureSet)} />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) => onBoniChange(featureSet, boni, \"name\", name)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeBoni(boni)} />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) => onBoniChange(featureSet, boni, \"value\", value)}\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) => onFeatureChange(featureSet, feature, \"name\", name)}\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) => onFeatureChange(featureSet, feature, \"type\", type)}\n                      />\n                      <IconButton icon={faTrash} onClick={() => removeFeature(feature)} />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) => onFeatureChange(featureSet, feature, \"text\", text)}\n                      />\n                      {feature.selections &&\n                        feature.selections.map((selection: string, index: number) => {\n                          return (\n                            <FeatureContainer key={index}>\n                              <EnumField\n                                options={selections}\n                                value={{ value: selection, label: selection }}\n                                label=\"Name\"\n                                onChange={(name) =>\n                                  onSelectionChange(featureSet, feature, selection, name)\n                                }\n                              />\n                              <IconButton\n                                icon={faTrash}\n                                onClick={() => removeSelection(selection)}\n                              />\n                            </FeatureContainer>\n                          );\n                        })}\n                      <TextButton\n                        text={\"Add Selection\"}\n                        icon={faPlus}\n                        onClick={() => addNewSelection(featureSet, feature)}\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton text={\"Add new Level\"} icon={faPlus} onClick={() => addNewFeatureSet()} />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclasseEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../data/classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subclasse: Subclass;\n}\n\nconst SubclasseView = ({ subclasse }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    console.log(subclasse);\n  }, [subclasse]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclasse.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclasse.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclasse.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclasse.features !== undefined &&\n          subclasse.features.length !== 0 &&\n          subclasse.features[0].spellslots &&\n          subclasse.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp colSpan={subclasse.features[0].spellslots.length + 1}>\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclasse.features[0].spellslots.length >= 2 && <SpellProp>2nd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 3 && <SpellProp>3rd</SpellProp>}\n                      {subclasse.features[0].spellslots.length >= 4 && (\n                        <>{printSpellslots(subclasse.features[0].spellslots.length)}</>\n                      )}\n                    </FeatureRow>\n                    {subclasse.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map((spellslot, index: number) => {\n                                return (\n                                  <SpellProp key={index}>\n                                    {spellslot === 0 ? \"-\" : spellslot}\n                                  </SpellProp>\n                                );\n                              })}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclasse.features !== undefined && subclasse.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclasse.features[0].bonis &&\n                      subclasse.features[0].bonis.length > 0 &&\n                      subclasse.features[0].bonis?.map((boni, index: number) => {\n                        return <FeatureHeadProp key={index}>{boni.name}</FeatureHeadProp>;\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclasse.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return <FeatureProp key={index}>{boni.value}</FeatureProp>;\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclasse.features !== undefined &&\n            subclasse.features.map((featureSet) => {\n              return featureSet.features.map((feature, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{feature.name}:</PropTitle>\n                    <FormatedText text={feature.text} />\n                  </Text>\n                );\n              });\n            })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclasse.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclasse} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclasseView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../data/races/Subrace\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport ShortTextField from \"../../../form_elements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../data/races/Trait\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport IconButton from \"../../../form_elements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport World from \"../../../../data/world/World\";\n\nimport { faBookOpen, faLink, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldEditView = ({ world, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const removeLocation = (oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations\n        .filter((location: string) => location !== oldLocation)\n        .map((location: string) => {\n          return location;\n        });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const addNewLocation = () => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        return location;\n      });\n      newLocationlList.push(\"\");\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n  const onChangeLocation = (newLocation: string, oldLocation: string) => {\n    if (world !== undefined) {\n      let newLocationlList = world.locations.map((location: string) => {\n        if (location === oldLocation) {\n          return newLocation;\n        } else {\n          return location;\n        }\n      });\n      onEdit({ ...world, locations: newLocationlList });\n    }\n  };\n\n  const removeEvent = (oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events\n        .filter((event: string) => event !== oldEvent)\n        .map((event: string) => {\n          return event;\n        });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const addNewEvent = () => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        return event;\n      });\n      newEventlList.push(\"\");\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n  const onChangeEvent = (newEvent: string, oldEvent: string) => {\n    if (world !== undefined) {\n      let newEventlList = world.events.map((event: string) => {\n        if (event === oldEvent) {\n          return newEvent;\n        } else {\n          return event;\n        }\n      });\n      onEdit({ ...world, events: newEventlList });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <TabBar\n        children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && (\n        <View>\n          <StringField\n            value={world.name}\n            label=\"World Name\"\n            onChange={(name) => onEdit({ ...world, name: name })}\n          />\n          <StringField\n            value={world.sources}\n            label=\"Sources\"\n            icon={faLink}\n            onChange={(sources) => onEdit({ ...world, sources: sources })}\n          />\n          <TextField\n            value={world.description}\n            label=\"Description\"\n            icon={faBookOpen}\n            onChange={(description) => onEdit({ ...world, description: description })}\n          />\n        </View>\n      )}\n      {activeTab === \"Locations\" && (\n        <>\n          {world.locations.map((location: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"locations\"}\n                  value={location}\n                  label=\"Location\"\n                  onChange={(newLocation) => onChangeLocation(newLocation, location)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeLocation(location)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Location\"} icon={faPlus} onClick={() => addNewLocation()} />\n        </>\n      )}\n      {activeTab === \"Events\" && (\n        <>\n          {world.events.map((event: string, index: number) => {\n            return (\n              <Container key={index}>\n                <AutoStringField\n                  optionTable={\"events\"}\n                  value={event}\n                  label=\"Event\"\n                  onChange={(newEvent) => onChangeEvent(newEvent, event)}\n                />\n                <IconButton icon={faTrash} onClick={() => removeEvent(event)} />\n              </Container>\n            );\n          })}\n          <TextButton text={\"Add new Event\"} icon={faPlus} onClick={() => addNewEvent()} />\n        </>\n      )}\n      {activeTab === \"World Map\" && (\n        <Container>\n          <AutoStringField\n            optionTable={\"locations\"}\n            value={world.map}\n            label=\"Map\"\n            onChange={(newMap) => onEdit({ ...world, map: newMap })}\n          />\n        </Container>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default WorldEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import Location from \"./Location\";\nimport Event from \"./Event\";\nimport World from \"./World\";\n\nexport default class BuildWorld {\n  world: World;\n  locations: Location[];\n  events: Event[];\n  map: Location;\n\n  constructor(world?: World, locations?: Location[], events?: Event[], map?: Location) {\n    this.world = world || new World();\n    this.locations = locations || [];\n    this.events = events || [];\n    this.map = map || new Location();\n  }\n}\n","import BuildWorld from \"../data/world/BuildWorld\";\nimport World from \"../data/world/World\";\nimport Location from \"../data/world/Location\";\nimport Event from \"../data/world/Event\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const buildWorld = async (world: World): Promise<BuildWorld> => {\n  console.time(\"t\");\n  let events: Event[];\n  let locations: Location[];\n  let map: Location;\n\n  console.time(\"load\");\n  let eventList: Promise<Event>[] = [];\n  let locationList: Promise<Location>[] = [];\n\n  world.events.forEach((event: string) => {\n    eventList.push(recivePromiseByAttribute(\"events\", \"name\", event));\n  });\n  world.locations.forEach((location: string) => {\n    locationList.push(recivePromiseByAttribute(\"locations\", \"name\", location));\n  });\n  events = await Promise.all(eventList);\n  locations = await Promise.all(locationList);\n  map = await recivePromiseByAttribute(\"locations\", \"name\", world.map);\n  console.timeEnd(\"load\");\n\n  console.timeEnd(\"t\");\n  return new BuildWorld(world, locations, events, map);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport World from \"../../../../data/world/World\";\nimport Location from \"../../../../data/world/Location\";\nimport Event from \"../../../../data/world/Event\";\nimport BuildWorld from \"../../../../data/world/BuildWorld\";\nimport { buildWorld } from \"../../../../services/WorldService\";\n\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport Map from \"../../../general_elements/map/Map\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport LocationTile from \"../../locations/LocationTile\";\nimport EventTile from \"../../events/EventTile\";\n\ninterface $Props {\n  world: World;\n  onEdit: (value: World) => void;\n}\n\nconst WorldView = ({ world, onEdit }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadedWorld, setLoadedWorld] = useState<BuildWorld>(new BuildWorld());\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  useEffect(() => {\n    buildWorld(world).then((buildWorld) => {\n      setLoadedWorld(buildWorld);\n      setLoading(false);\n    });\n  }, [world, setLoadedWorld]);\n\n  const getPicture = useCallback(() => {\n    if (loadedWorld !== undefined) {\n      if (loadedWorld.map.map === \"\" || loadedWorld.map.map === null) {\n        return \"\";\n      }\n      return loadedWorld.map.map;\n    }\n    return \"\";\n  }, [loadedWorld]);\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && loadedWorld && (\n        <CenterWrapper>\n          <Header>\n            <View>\n              {getPicture() !== \"\" ? (\n                <ImageName>\n                  <Image pic={getPicture()}></Image>\n                  <b>{loadedWorld.world.name}</b>\n                </ImageName>\n              ) : (\n                <Name>\n                  <b>{loadedWorld.world.name}</b>\n                </Name>\n              )}\n            </View>\n          </Header>\n          <TabBar\n            children={[\"General\", \"Locations\", \"Events\", \"World Map\"]}\n            onChange={(tab: string) => setTab(tab)}\n            activeTab={activeTab}\n          />\n          {activeTab === \"General\" && (\n            <View>\n              <Text>\n                <PropTitle>Description</PropTitle>\n                <FormatedText text={loadedWorld.world.description} />\n              </Text>\n              <PropWrapper>\n                <Prop>\n                  <Icon icon={faLink} />\n                  {loadedWorld.world.sources}\n                </Prop>\n              </PropWrapper>\n            </View>\n          )}\n          {activeTab === \"Locations\" && (\n            <PropWrapper>\n              {loadedWorld.locations.map((location: Location, index: number) => {\n                return <LocationTile location={location} key={index} />;\n              })}\n            </PropWrapper>\n          )}\n          {activeTab === \"Events\" && (\n            <PropWrapper>\n              {loadedWorld.events\n                .sort((a, b) => a.date.localeCompare(b.date))\n                .map((event: Event, index: number) => {\n                  return <EventTile event={event} key={index} />;\n                })}\n            </PropWrapper>\n          )}\n          {activeTab === \"World Map\" && <Map editable={false} location={loadedWorld.map} />}\n        </CenterWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WorldView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Header = styled.div`\n  position: relative;\n  z-index: 200;\n  width: 100%;\n  height: 70px;\n  margin-bottom: -5px;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport CampaignEditView from \"../../entities/campaigns/details/CampaignEditView\";\nimport CampaignView from \"../../entities/campaigns/details/CampaignView\";\nimport ClasseEditView from \"../../entities/classes/details/ClasseEditView\";\nimport ClasseView from \"../../entities/classes/details/ClasseView\";\nimport EventEditView from \"../../entities/events/details/EventEditView\";\nimport EventView from \"../../entities/events/details/EventView\";\nimport GearEditView from \"../../entities/gear/details/GearEditView\";\nimport GearView from \"../../entities/gear/details/GearView\";\nimport GroupEditView from \"../../entities/groups/details/GroupEditView\";\nimport GroupView from \"../../entities/groups/details/GroupView\";\nimport ItemEditView from \"../../entities/items/details/ItemEditView\";\nimport ItemView from \"../../entities/items/details/ItemView\";\nimport BookEditView from \"../../entities/library/details/BookEditView\";\nimport BookView from \"../../entities/library/details/BookView\";\nimport LocationEditView from \"../../entities/locations/details/LocationEditView\";\nimport LocationView from \"../../entities/locations/details/LocationView\";\nimport MonsterEditView from \"../../entities/monsters/details/MonsterEditView\";\nimport MonsterView from \"../../entities/monsters/details/MonsterView\";\nimport NpcEditView from \"../../entities/npcs/details/NpcEditView\";\nimport NpcView from \"../../entities/npcs/details/NpcView\";\nimport QuestEditView from \"../../entities/quests/details/QuestEditView\";\nimport QuestView from \"../../entities/quests/details/QuestView\";\nimport RaceEditView from \"../../entities/races/details/RaceEditView\";\nimport RaceView from \"../../entities/races/details/RaceView\";\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport SelectionEditView from \"../../entities/selections/details/SelectionEditView\";\nimport SelectionView from \"../../entities/selections/details/SelectionView\";\nimport SpellEditView from \"../../entities/spells/details/SpellEditView\";\nimport SpellView from \"../../entities/spells/details/SpellView\";\nimport SubclasseEditView from \"../../entities/subclasses/details/SubclasseEditView\";\nimport SubclasseView from \"../../entities/subclasses/details/SubclasseView\";\nimport SubraceEditView from \"../../entities/subraces/details/SubraceEditView\";\nimport SubraceView from \"../../entities/subraces/details/SubraceView\";\nimport WorldEditView from \"../../entities/worlds/details/WorldEditView\";\nimport WorldView from \"../../entities/worlds/details/WorldView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  const views = {\n    CampaignView: CampaignView,\n    CampaignEditView: CampaignEditView,\n    ClasseView: ClasseView,\n    ClasseEditView: ClasseEditView,\n    EventView: EventView,\n    EventEditView: EventEditView,\n    GearView: GearView,\n    GearEditView: GearEditView,\n    GroupView: GroupView,\n    GroupEditView: GroupEditView,\n    ItemView: ItemView,\n    ItemEditView: ItemEditView,\n    BookView: BookView,\n    BookEditView: BookEditView,\n    LocationView: LocationView,\n    LocationEditView: LocationEditView,\n    MonsterView: MonsterView,\n    MonsterEditView: MonsterEditView,\n    NpcView: NpcView,\n    NpcEditView: NpcEditView,\n    QuestView: QuestView,\n    QuestEditView: QuestEditView,\n    RaceView: RaceView,\n    RaceEditView: RaceEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n    SelectionView: SelectionView,\n    SelectionEditView: SelectionEditView,\n    SpellView: SpellView,\n    SpellEditView: SpellEditView,\n    SubclasseView: SubclasseView,\n    SubclasseEditView: SubclasseEditView,\n    SubraceView: SubraceView,\n    SubraceEditView: SubraceEditView,\n    WorldView: WorldView,\n    WorldEditView: WorldEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\nimport Book from \"../../../data/Book\";\nimport Group from \"../../../data/campaign/Group\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport Gear from \"../../../data/Gear\";\nimport Item from \"../../../data/Item\";\nimport Monster from \"../../../data/Monster\";\nimport Race from \"../../../data/races/Race\";\nimport Subrace from \"../../../data/races/Subrace\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport Spell from \"../../../data/Spell\";\nimport World from \"../../../data/world/World\";\nimport Class from \"../../../data/classes/Class\";\nimport Subclass from \"../../../data/classes/Subclass\";\nimport Event from \"../../../data/world/Event\";\nimport Selection from \"../../../data/Selection\";\nimport Location from \"../../../data/world/Location\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setEntityName(name);\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  const entities = {\n    campaign: new Campaign(0, match.params.name),\n    classe: new Class(0, match.params.name),\n    event: new Event(0, match.params.name),\n    gear: new Gear(0, match.params.name),\n    group: new Group(0, match.params.name),\n    item: new Item(0, match.params.name),\n    book: new Book(0, match.params.name),\n    location: new Location(0, match.params.name),\n    monster: new Monster(0, match.params.name),\n    npc: new Npc(0, match.params.name),\n    quest: new Quest(0, match.params.name),\n    race: new Race(match.params.name),\n    randomTable: new RandomTable(0, match.params.name),\n    selection: new Selection(0, match.params.name),\n    spell: new Spell(match.params.name),\n    subclasse: new Subclass(0, match.params.name),\n    subrace: new Subrace(match.params.name),\n    world: new World(0, match.params.name),\n  };\n\n  const createNewEntity = () => {\n    let newEntity: IEntity = entities[entityName];\n    delete newEntity.id;\n    createNewWithId(entityName + \"s\", newEntity, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAllByAttrs = (tableName: string, attr: string, attrs: string[]) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).where(attr).anyOf(attrs).delete();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        embeds: [\n          {\n            fields: [\n              {\n                name: \"Text\",\n                value: formatDiscordText(text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div``;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}