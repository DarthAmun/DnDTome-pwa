{"version":3,"sources":["services/PeerIdService.tsx","../node_modules/peerjs/dist sync","components/p2p/P2PEncounter.tsx","components/form_elements/TinyNumberField.tsx","components/general_elements/board/Board.tsx","components/entities/encounters/details/EncounterRoom.tsx","components/form_elements/NumberField.tsx"],"names":["generateBrokerId","min","max","password","characters","i","length","Math","floor","random","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","P2PEncounter","encounter","isHost","onEdit","useState","peerId","setId","peer","setPeer","error","setError","connections","setConn","isChanged","setChanged","useEffect","undefined","brokerId","newPeer","Peer","host","secure","on","conn","con","send","JSON","stringify","errorData","data","parse","filter","connect","forEach","value","label","onChange","style","minWidth","float","Icon","icon","faExclamationCircle","styled","FontAwesomeIcon","theme","main","highlight","TinyNumberField","showMax","Field","Input","type","target","Max","tile","color","backgroundColor","input","span","Board","img","players","showName","dimension","fogBoard","currentPlayerNumber","onChangePlayers","onChangeDimension","onChangeBoard","board","setBoard","dragItem","setDragItem","currentFogBoard","setFogBoard","fog","setFog","makeDrag","useCallback","player","makeDrop","toggleFog","cord","console","log","b","newBoard","makeRow","row","list","j","width","push","PlayerSlot","size","zoom","updatePlayers","makeBoard","height","BoardRow","time","timeEnd","makeFog","f","BoardWrapper","BoardBar","step","onClick","toggle","faFill","BoardContainer","BoardLayer","MapLayer","src","drag","name","dragOver","preventDefault","defineSize","isMonster","Slot","onDrop","changedPlayer","newPlayers","map","drop","onDragOver","a","isVisible","playerIcon","index","Image","pic","isDead","currentHp","isCurrent","Empty","div","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","opacity","border","ImageElm","onDragStart","draggable","Tooltip","faEyeSlash","padding","fontSize","EncounterRoom","history","useHistory","setPlayers","enemies","isEnemy","getMap","mapBase64","CenterWrapper","View","mode","Name","PropWrapper","PropElm","PropTitle","roundCounter","Table","sort","init","isPlaying","localeCompare","Row","current","currentInit","PropField","Prop","PlayerImage","MainLink","table","props","tr","td","backgroundColorLink","NumberField","transform","LabelText"],"mappings":"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","file":"static/js/17.7ebfa159.chunk.js","sourcesContent":["const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 259;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../data/encounter/Encounter\";\n\ninterface $Props {\n  encounter?: Encounter;\n  isHost: boolean;\n  onEdit: (value: Encounter) => void;\n}\n\nconst P2PEncounter = ({ encounter, isHost, onEdit }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n  const [connections, setConn] = useState<any[]>([]);\n  const [isChanged, setChanged] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thorbenkuck.de\",\n        secure: true,\n      });\n      newPeer.on(\"connection\", function (conn) {\n        setConn((con) => [...con, conn]);\n        conn.on(\"open\", function () {\n          conn.send(JSON.stringify(encounter));\n        });\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"data\", function (data) {\n          if (encounter !== data) {\n            onEdit(JSON.parse(data));\n          }\n        });\n        conn.on(\"close\", function () {\n          setConn((con) => con.filter((con) => con !== conn));\n        });\n      });\n      setPeer(newPeer);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (peer !== undefined && peerId !== \"\") {\n      let conn = peer.connect(peerId);\n      conn.on(\"open\", function () {\n        setConn((con) => [...con, conn]);\n      });\n      conn.on(\"data\", function (data) {\n        if (encounter !== data) {\n          setChanged(true);\n          onEdit(JSON.parse(data));\n        }\n      });\n      conn.on(\"close\", function () {\n        setConn((con) => con.filter((con) => con !== conn));\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [peer, peerId, onEdit]);\n\n  useEffect(() => {\n    if (encounter && isHost) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    }\n  }, [encounter, connections, isHost]);\n\n  useEffect(() => {\n    if (encounter && !isHost && !isChanged) {\n      connections.forEach((conn) => {\n        conn.send(JSON.stringify(encounter));\n      });\n    } else if (!isHost && isChanged) {\n      setChanged(false);\n    }\n\n    // eslint-disable-next-line\n  }, [encounter, connections, isHost]);\n\n  return (\n    <>\n      {peer !== undefined && isHost && (\n        <StringField\n          value={peer.id}\n          label={`Your ID:`}\n          onChange={() => {}}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {peer !== undefined && !isHost && (\n        <StringField\n          value={peerId}\n          label={\"ID to recive from\"}\n          onChange={setId}\n          style={{ minWidth: \"250px\", float: \"right\" }}\n        />\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PEncounter;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import { faEyeSlash, faFill } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Player from \"../../../data/encounter/Player\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\n\ninterface $Props {\n  isHost: boolean;\n  img: string;\n  players: Player[];\n  showName: boolean;\n  dimension: { width: number; height: number; size: number; zoom: number };\n  fogBoard: boolean[][];\n  currentPlayerNumber: number;\n  onChangePlayers: (value: Player[]) => void;\n  onChangeDimension: (value: { width: number; height: number; size: number; zoom: number }) => void;\n  onChangeBoard: (fogBoard: boolean[][]) => void;\n}\n\nconst Board = ({\n  isHost,\n  img,\n  players,\n  showName,\n  dimension,\n  fogBoard,\n  currentPlayerNumber,\n  onChangePlayers,\n  onChangeDimension,\n  onChangeBoard,\n}: $Props) => {\n  const [board, setBoard] = useState<JSX.Element>();\n  const [dragItem, setDragItem] = useState<Player>();\n  const [currentFogBoard, setFogBoard] = useState<boolean[][]>(fogBoard);\n  const [fog, setFog] = useState<boolean>(false);\n\n  const makeDrag = useCallback((player: Player) => {\n    setDragItem(player);\n  }, []);\n\n  const makeDrop = useCallback((): Player | undefined => {\n    return dragItem;\n  }, [dragItem]);\n\n  const toggleFog = useCallback(\n    (cord: number[]) => {\n      if (fog) {\n        console.log(\"toggle fog\");\n        setFogBoard((b) => {\n          let newBoard = [...b];\n          newBoard[cord[0]][cord[1]] = !newBoard[cord[0]][cord[1]];\n          return newBoard;\n        });\n      }\n    },\n    [setFogBoard, fog]\n  );\n\n  const makeRow = useCallback(\n    (row: number) => {\n      let list: any = [];\n      for (let j = 0; j < dimension.width; j++) {\n        list.push(\n          <PlayerSlot\n            isHost={isHost}\n            key={\"slot\" + row + \"\" + j}\n            cord={[row, j]}\n            showName={showName}\n            players={players}\n            size={dimension.size}\n            zoom={dimension.zoom / 100}\n            fog={\n              fogBoard && fogBoard.length >= row && fogBoard[row].length >= j\n                ? fogBoard[row][j]\n                : false\n            }\n            makeDrop={makeDrop}\n            makeDrag={makeDrag}\n            toggleFog={toggleFog}\n            updatePlayers={onChangePlayers}\n            currentPlayerNumber={currentPlayerNumber}\n          ></PlayerSlot>\n        );\n      }\n      return list;\n    },\n    [\n      dimension,\n      players,\n      showName,\n      onChangePlayers,\n      currentPlayerNumber,\n      makeDrop,\n      makeDrag,\n      isHost,\n      fogBoard,\n      toggleFog,\n    ]\n  );\n\n  const makeBoard = useCallback(() => {\n    let list: any = [];\n    for (let i = 0; i < dimension.height; i++) {\n      list.push(<BoardRow key={i}>{makeRow(i)}</BoardRow>);\n    }\n    setBoard(list);\n  }, [dimension, makeRow]);\n\n  useEffect(() => {\n    console.time(\"Redo Board\");\n    makeBoard();\n    console.timeEnd(\"Redo Board\");\n    // eslint-disable-next-line\n  }, [img, dimension, players, makeDrop, isHost, fog, currentFogBoard]);\n\n  const makeFog = useCallback(() => {\n    setFog((f) => !f);\n    if (fog) {\n      console.log(\"push board\");\n      onChangeBoard(fogBoard);\n    }\n  }, [fog, fogBoard, onChangeBoard]);\n\n  return (\n    <BoardWrapper>\n      {isHost && (\n        <BoardBar>\n          <NumberField\n            value={dimension.zoom}\n            label=\"Zoom\"\n            step={10}\n            onChange={(zoom) => onChangeDimension({ ...dimension, zoom: zoom })}\n          />\n          <NumberField\n            value={dimension.width}\n            label=\"Horizontal\"\n            onChange={(width) => onChangeDimension({ ...dimension, width: width })}\n          />\n          <NumberField\n            value={dimension.height}\n            label=\"Vertical\"\n            onChange={(height) => onChangeDimension({ ...dimension, height: height })}\n          />\n          <NumberField\n            value={dimension.size}\n            label=\"Size\"\n            onChange={(size) => onChangeDimension({ ...dimension, size: size })}\n          />\n          <IconButton onClick={makeFog} toggle={fog} icon={faFill} />\n        </BoardBar>\n      )}\n      <BoardContainer>\n        <BoardLayer>{board}</BoardLayer>\n        <MapLayer zoom={dimension.zoom / 100} src={img} />\n      </BoardContainer>\n    </BoardWrapper>\n  );\n};\n\nexport default Board;\n\ninterface $PlayerSlotProps {\n  isHost: boolean;\n  size: number;\n  zoom: number;\n  cord: number[];\n  showName: boolean;\n  currentPlayerNumber: number;\n  players: Player[];\n  fog: boolean;\n  makeDrop: () => Player | undefined;\n  makeDrag: (player: Player) => void;\n  toggleFog: (cord: number[]) => void;\n  updatePlayers: (players: Player[]) => void;\n}\nconst PlayerSlot = ({\n  isHost,\n  size,\n  zoom,\n  cord,\n  showName,\n  players,\n  fog,\n  currentPlayerNumber,\n  makeDrop,\n  makeDrag,\n  toggleFog,\n  updatePlayers,\n}: $PlayerSlotProps) => {\n  const drop = (e: any, cord: number[]) => {\n    e.preventDefault();\n    let changedPlayer = makeDrop();\n    let newPlayers: Player[] = players.map((player: Player) => {\n      if (player === changedPlayer) {\n        return { ...player, cord: cord };\n      } else {\n        return player;\n      }\n    });\n    console.log(\"update Players\");\n    updatePlayers(newPlayers);\n  };\n\n  const drag = (e: any, player: Player) => {\n    console.log(\"drag\", player.name, player.cord);\n    makeDrag(player);\n  };\n\n  const dragOver = (e: any) => {\n    e.preventDefault();\n  };\n\n  const defineSize = useCallback(\n    (size: number, player: Player): number => {\n      if (player.isMonster) {\n        switch (player.size) {\n          case \"gargantuan\":\n            return size * 4 * zoom;\n          case \"huge\":\n            return size * 3 * zoom;\n          case \"large\":\n            return size * 2 * zoom;\n        }\n      }\n      return size * zoom;\n    },\n    [zoom]\n  );\n\n  return (\n    <Slot\n      size={size * zoom}\n      fog={false}\n      onDrop={(e) => drop(e, cord)}\n      isHost={isHost}\n      onDragOver={dragOver}\n      onClick={() => toggleFog(cord)}\n    >\n      {players\n        .filter((a) => !a.isVisible || isHost)\n        .map((playerIcon: Player, index: number) => {\n          if (\n            (playerIcon.cord === undefined && cord[0] === 0 && cord[1] === 0) ||\n            (playerIcon.cord !== undefined &&\n              playerIcon.cord[0] === cord[0] &&\n              playerIcon.cord[1] === cord[1])\n          )\n            return (\n              <Image\n                key={\"icon\" + index}\n                index={index}\n                drag={drag}\n                player={playerIcon}\n                isHost={isHost}\n                showName={showName}\n                dragOver={dragOver}\n                pic={playerIcon.pic}\n                size={defineSize(size, playerIcon)}\n                isDead={playerIcon.currentHp <= 0}\n                isCurrent={currentPlayerNumber === index}\n              />\n            );\n          return <Empty key={\"icon\" + index} />;\n        })}\n    </Slot>\n  );\n};\n\nconst BoardWrapper = styled.div`\n  flex: 1 1 min-content;\n  padding: 5px;\n  margin: 5px;\n  // position: relative;\n  max-width: calc(100vw - 120px);\n\n  @media (max-width: 576px) {\n    max-width: 100vw;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst BoardContainer = styled.div`\n  flex: 1 1 100%;\n  position: relative;\n\n  max-width: calc(100% - 10px);\n\n  overflow: scroll;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BoardLayer = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\ntype ZoomProp = {\n  zoom: number;\n};\n\nconst MapLayer = styled.img<ZoomProp>`\n  width: calc(800px * ${({ zoom }) => zoom});\n`;\n\nconst BoardBar = styled.div`\n  flex: 1 1 100%;\n\n  height: 50px;\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst BoardRow = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype SizeProp = {\n  size: number;\n  fog: boolean;\n  isHost: boolean;\n};\n\nconst Slot = styled.div<SizeProp>`\n  flex: 1;\n  min-height: ${({ size }) => size}px;\n  min-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  position: releativ;\n  ${({ fog, isHost }) =>\n    fog ? (isHost ? \"background-color: rgba(0,0,0,0.5);\" : \"background-color: rgba(0,0,0,1);\") : \"\"}\n`;\n\ninterface $ImageProps {\n  index: number;\n  pic: string;\n  size: number;\n  showName: boolean;\n  isDead: boolean;\n  isCurrent: boolean;\n  player: Player;\n  isHost: boolean;\n  drag: (e: any, player: Player) => void;\n  dragOver: any;\n}\n\nconst Image = ({\n  index,\n  dragOver,\n  drag,\n  pic,\n  size,\n  showName,\n  player,\n  isDead,\n  isCurrent,\n  isHost,\n}: $ImageProps) => {\n  if (pic !== \"\") {\n    const style = {\n      backgroundImage: `url(${pic})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {isHost && player.isMonster && <Tooltip>{index}</Tooltip>}\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} style={{ color: \"white\" }} />}\n      </ImageElm>\n    );\n  } else {\n    const style = {\n      height: size - 6 + \"px\",\n      width: size - 6 + \"px\",\n      opacity: isDead ? \"0.5\" : \"1\",\n      border: isCurrent ? \"\" : \"none\",\n      padding: size / 5 + \"px\",\n      fontSize: size / 6 + \"px\",\n    };\n\n    return (\n      <ImageElm onDragStart={(e) => drag(e, player)} onDragOver={dragOver} draggable style={style}>\n        {player.isVisible && <FontAwesomeIcon icon={faEyeSlash} />}\n        {showName ? `${player.name} ${index}` : `??? ${index}`}\n      </ImageElm>\n    );\n  }\n};\n\nconst Tooltip = styled.div`\n  display: none;\n  position: absolute;\n  top: -35px;\n  left: 0;\n  right: 0;\n  text-align: center;\n  white-space: nowrap;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  border-radius: 10px;\n  padding: 5px;\n  transition: 0.3s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.main.highlight} transparent transparent transparent;\n  }\n`;\n\nconst ImageElm = styled.div`\n  margin: 3px;\n  float: left;\n  border-radius: 500px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  box-sizing: border-box;\n  cursor: move;\n  position: absolute;\n  text-align: center;\n\n  &:hover ${Tooltip} {\n    display: inline;\n  }\n`;\n\nconst Empty = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../../data/encounter/Encounter\";\nimport Player from \"../../../../data/encounter/Player\";\nimport TinyNumberField from \"../../../form_elements/TinyNumberField\";\nimport Board from \"../../../general_elements/board/Board\";\nimport P2PEncounter from \"../../../p2p/P2PEncounter\";\n\nconst EncounterRoom = () => {\n  let history = useHistory();\n  const [encounter, onEdit] = useState<Encounter>();\n  const [players, setPlayers] = useState<Player[]>([]);\n\n  useEffect(() => {\n    if (encounter !== undefined) {\n      setPlayers([...encounter.players, ...encounter.enemies]);\n    }\n  }, [encounter]);\n\n  const onChangePlayers = useCallback(\n    (players: Player[]) => {\n      if (encounter !== undefined) {\n        if (players !== encounter?.players) {\n          let newPlayers: Player[] = [];\n          players.forEach((player: Player) => {\n            if (!player.isEnemy) {\n              newPlayers.push(player);\n            }\n          });\n          if (JSON.stringify(encounter.players) !== JSON.stringify(newPlayers))\n            onEdit({\n              ...encounter,\n              players: newPlayers,\n            });\n        }\n      }\n    },\n    [encounter, onEdit]\n  );\n\n  const getMap = useCallback(() => {\n    if (encounter !== undefined) {\n      if (\n        encounter.mapBase64 !== \"\" &&\n        encounter.mapBase64 !== null &&\n        encounter.mapBase64 !== undefined\n      ) {\n        return encounter.mapBase64;\n      } else if (encounter.map !== \"\" && encounter.map !== null && encounter.map !== undefined) {\n        return encounter.map;\n      }\n    }\n    return \"\";\n  }, [encounter]);\n\n  return (\n    <>\n      <P2PEncounter encounter={encounter} onEdit={onEdit} isHost={false} />\n      <CenterWrapper>\n        <View mode={0}>\n          <Name>\n            <b>{encounter?.name}</b>\n          </Name>\n          <PropWrapper>\n            <PropElm>\n              <PropTitle>Round: </PropTitle>\n              {encounter?.roundCounter}\n            </PropElm>\n          </PropWrapper>\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {encounter &&\n                players\n                  .sort((a: Player, b: Player) => {\n                    if (b.init === a.init || !encounter.isPlaying) {\n                      return a.name.localeCompare(b.name);\n                    }\n                    return b.init - a.init;\n                  })\n                  .filter((a) => !a.isVisible)\n                  .map((player: Player, index: number) => {\n                    return (\n                      <Row\n                        current={encounter.currentInit === index && encounter.isPlaying}\n                        isDead={player.currentHp <= 0}\n                        key={index}\n                      >\n                        <PropField>\n                          <TinyNumberField value={player.init} onChange={() => undefined} />\n                        </PropField>\n                        <Prop>\n                          {player.pic !== \"\" && player.pic !== undefined ? (\n                            <PlayerImage player={player}></PlayerImage>\n                          ) : (\n                            <></>\n                          )}\n                          {player.isMonster && <MainLink>{\"???\"}</MainLink>}\n                          {!player.isMonster && (\n                            <MainLink\n                              onClick={() => history.push(`/char-detail/name/${player.name}`)}\n                            >\n                              {player.name}\n                            </MainLink>\n                          )}\n                        </Prop>\n                      </Row>\n                    );\n                  })}\n            </tbody>\n          </Table>\n        </View>\n        {encounter && getMap() !== \"\" && (\n          <Board\n            isHost={false}\n            onChangePlayers={onChangePlayers}\n            players={players}\n            showName={false}\n            dimension={\n              encounter.dimension !== undefined\n                ? encounter.dimension\n                : { width: 20, height: 20, size: 20, zoom: 100 }\n            }\n            fogBoard={encounter.board}\n            currentPlayerNumber={encounter.currentInit}\n            onChangeDimension={() => {}}\n            onChangeBoard={() => {}}\n            img={getMap()}\n          ></Board>\n        )}\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default EncounterRoom;\n\ninterface $PlayerImageProps {\n  player: Player;\n}\n\nconst PlayerImage = ({ player }: $PlayerImageProps) => {\n  return <Image pic={player.pic} />;\n};\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype viewType = {\n  mode?: number;\n};\n\nconst View = styled.div<viewType>`\n  flex: 1 1;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  ${(props) => {\n    if (!props.mode) {\n      return \"min-width: 400px;\";\n    } else {\n      return \"min-width: 500px;\";\n    }\n  }}\n  padding: 5px;\n\n  @media (max-width: 576px) {\n    min-width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return `td:nth-child(1) {background-color: ${props.theme.main.highlight};}`;\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  line-height: 34px;\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin-right: 5px;\n  margin-top: -7px;\n  margin-bottom: -7px;\n  height: 43px;\n  width: 43px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n\n  @media (max-width: 576px) {\n    display: none;\n  }\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}