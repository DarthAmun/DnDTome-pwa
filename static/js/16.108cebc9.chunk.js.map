{"version":3,"sources":["components/general_elements/TabBar.tsx","services/CharacterService.tsx","data/races/Trait.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/CheckField.tsx","data/races/Race.tsx","components/form_elements/DataSelectField.tsx","data/races/Subrace.tsx","components/form_elements/AutoStringField.tsx","data/chars/BuildChar.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","components/form_elements/EnumField.tsx","data/Modifier.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/form_elements/NumberField.tsx"],"names":["TabBar","children","activeTab","onChange","Bar","map","child","index","Tab","onClick","e","isActive","styled","div","theme","tile","color","backgroundColor","input","buttons","props","recalcClasses","char","a","bonis","spellSlots","fullClassList","classList","classes","forEach","classe","push","recivePromiseByAttribute","Promise","all","classSet","name","class","featureSet","featureSets","level","boni","isCurrency","origin","value","max","spellslots","length","slots","currencyBonis","updatedBonis","newBoni","updatedOldBonis","old","undefined","Array","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","calcLevel","calcProf","Math","ceil","buildCharacter","character","console","time","prof","subclasses","classFeatures","raceFeatures","gears","items","monsters","subclassList","itemList","gearList","baseList","monsterList","spellList","subclasse","item","monster","spells","spell","currentItems","base","currentGears","currentBases","filter","q","idx","findIndex","g","race","subrace","classLevel","charClass","subclass","type","features","traits","trait","originItem","toLowerCase","gear","timeEnd","modifiers","concat","extractModifier","description","text","feature","BuildChar","cut","str","cutStart","cutEnd","substr","extractTarget","target","includes","split","newModifiers","indexOf","rawModifier","substring","Modifier","ModifierOperator","EQUAL","parseInt","ADD","SUBSTRACT","applyMods","newChar","sort","b","operator","mod","replacePlaceholder","isArray","modPromises","resolve","reject","replaceAll","then","entity","oldCharacter","rawPlaceholder","replace","floor","eval","Trait","this","isTrait","arg","nameCheck","textCheck","levelCheck","ClassSet","isClassSet","classeCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","Char","id","player","campaign","pic","picBase64","background","activeSelections","ac","hp","currentHp","init","speed","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","playerCheck","campaignCheck","picCheck","picBase64Check","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","CheckField","label","icon","transform","Field","LabelText","Icon","Input","defaultChecked","checked","Checkmark","FontAwesomeIcon","main","highlight","Race","filename","abilityScores","age","size","lang","sources","isRace","abilityScoresCheck","ageCheck","alignmentCheck","sizeCheck","speedCheck","langCheck","traitsCheck","sourcesCheck","DataSelectField","optionTable","filters","useState","optionsTable","options","setOptions","findAllItems","useCallback","entityList","table","reciveAllFilteredPromise","entities","o","useEffect","handleChange","option","StyledSelect","isMulti","classNamePrefix","Select","Subrace","isSubrace","typeCheck","AutoStringField","filteredOptions","setFilteredOptions","reciveAllFiltered","data","onSearch","searchTerm","newOptions","slice","Options","opt","Option","_defineProperties","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","EnumField","op","tar","CharLabGeneral","completed","CenterWrapper","CharView","StringField","IconButton","faCheckCircle","disabled","CharLabClass","setClasses","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","fieldName","results","PropWrapper","NumberField","faTrash","oldClass","newClassList","removeClass","TextButton","faPlus","addNewClass","Text","PropTitle","FormatedText","proficiencies","equipment","span","backgroundColorLink","CharLabRace","setRace","setSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","onChangeItem","newItem","onChangeItemAttribute","Container","attuned","attunment","attribute","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","CharLab","history","useHistory","setTab","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","tab","View","nextTab","Prop","faEdit","saveWithCallback","result","LinkCheck","loading","setLoading","entitiyFound","setEntity","newType","recivePromiseByAttributeCount","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","FormatedTextContainer","webhook","useWebhook","json","setJson","formatedText","setFormatedText","newText","formatDiscordText","newJson","username","content","JSON","stringify","rollDiscord","command","rollCommand","rolls","sendMessage","newCommand","krit","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","entityParts","link","Link","formatTable","textPart","newTable","tableEnd","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","style","float","padding","faDiscord","sendEmbedMessage","th","td","step"],"mappings":"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","file":"static/js/16.108cebc9.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import BuildChar from \"../data/chars/BuildChar\";\nimport Char from \"../data/chars/Char\";\nimport ClassSet from \"../data/chars/ClassSet\";\nimport Boni from \"../data/classes/Boni\";\nimport Class from \"../data/classes/Class\";\nimport FeatureSet from \"../data/classes/FeatureSet\";\nimport Subclass from \"../data/classes/Subclass\";\nimport Gear from \"../data/Gear\";\nimport Item from \"../data/Item\";\nimport Modifier, { ModifierOperator } from \"../data/Modifier\";\nimport Monster from \"../data/Monster\";\nimport Race from \"../data/races/Race\";\nimport Subrace from \"../data/races/Subrace\";\nimport Trait from \"../data/races/Trait\";\nimport Spell from \"../data/Spell\";\nimport { recivePromiseByAttribute } from \"./DatabaseService\";\n\nexport const recalcClasses = async (char: Char) => {\n  let bonis: { origin: string; value: number; max: number }[] = [];\n  let spellSlots: {\n    origin: string;\n    slots: number[];\n    max: number[];\n  }[] = [];\n  let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n  let classList: Promise<Class>[] = [];\n\n  char.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n  });\n  const results = await Promise.all(classList);\n  results.forEach((classe: Class) => {\n    char.classes.forEach((classSet) => {\n      if (classe.name === classSet.classe) {\n        fullClassList.push({ class: classe, classSet: classSet });\n      }\n    });\n  });\n\n  fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n    let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n    if (featureSet.bonis) {\n      featureSet.bonis.forEach((boni: Boni) => {\n        if (boni.isCurrency) {\n          bonis = [\n            ...bonis,\n            {\n              origin: boni.name,\n              value: +boni.value,\n              max: +boni.value,\n            },\n          ];\n        }\n      });\n    }\n    if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n      spellSlots = [\n        ...spellSlots,\n        {\n          origin: classe.class.name,\n          slots: featureSet.spellslots,\n          max: featureSet.spellslots,\n        },\n      ];\n    }\n  });\n\n  if (char.currencyBonis && char.currencyBonis.length > 0) {\n    let updatedBonis = bonis.map((newBoni) => {\n      let updatedOldBonis = char.currencyBonis.map((old) => {\n        if (newBoni.origin === old.origin) {\n          return {\n            origin: newBoni.origin,\n            value: old.value,\n            max: newBoni.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldBonis &&\n        updatedOldBonis.length > 0 &&\n        updatedOldBonis[0] !== undefined &&\n        updatedOldBonis[0] !== null\n      ) {\n        return updatedOldBonis[0];\n      } else {\n        return newBoni;\n      }\n    });\n    if (updatedBonis && updatedBonis.length > 0) {\n      bonis = Array.from(updatedBonis);\n    }\n  }\n\n  if (char.spellSlots && char.spellSlots.length > 0) {\n    let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n      let updatedOldSlots = char.spellSlots.map((old) => {\n        if (newSpellSlots.origin === old.origin) {\n          return {\n            origin: newSpellSlots.origin,\n            slots: old.slots,\n            max: newSpellSlots.max,\n          };\n        } else {\n          return null;\n        }\n      });\n      if (\n        updatedOldSlots &&\n        updatedOldSlots.length > 0 &&\n        updatedOldSlots[0] !== undefined &&\n        updatedOldSlots[0] !== null\n      ) {\n        return updatedOldSlots[0];\n      } else {\n        return newSpellSlots;\n      }\n    });\n    if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n      spellSlots = Array.from(updatedSpellSlots);\n    }\n  }\n\n  let updatedChar = {\n    ...char,\n    spellSlots: spellSlots,\n    currencyBonis: bonis,\n  };\n  return updatedChar;\n};\n\nexport const calcLevel = (char: Char): number => {\n  let level = 0;\n  char.classes.forEach((classe) => {\n    level += classe.level;\n  });\n  return level;\n};\n\nexport const calcProf = (char: Char): number => {\n  let level = calcLevel(char);\n  return Math.ceil(level / 4) + 1;\n};\n\nexport const buildCharacter = async (character: Char): Promise<BuildChar> => {\n  console.time(\"build Character\");\n  let level: number = calcLevel(character);\n  let prof: number = calcProf(character);\n  let classes: Class[] = [];\n  let subclasses: Subclass[] = [];\n  let classFeatures: FeatureSet[] = [];\n  let race: Race;\n  let subrace: Subrace;\n  let raceFeatures: Trait[] = [];\n  let gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[] = [];\n  let spells: Spell[];\n  let monsters: Monster[] = [];\n\n  console.time(\"load\");\n  let classList: Promise<Class>[] = [];\n  let subclassList: Promise<Subclass>[] = [];\n  let itemList: Promise<Item>[] = [];\n  let gearList: Promise<Gear>[] = [];\n  let baseList: Promise<Gear>[] = [];\n  let monsterList: Promise<Monster>[] = [];\n  let spellList: Promise<Spell>[] = [];\n\n  character.classes.forEach((classe) => {\n    classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    subclassList.push(recivePromiseByAttribute(\"subclasses\", \"name\", classe.subclasse));\n  });\n  character.items.forEach((item) => {\n    itemList.push(recivePromiseByAttribute(\"items\", \"name\", item.origin));\n    gearList.push(recivePromiseByAttribute(\"gears\", \"name\", item.origin));\n  });\n  character.monsters.forEach((monster: string) => {\n    monsterList.push(recivePromiseByAttribute(\"monsters\", \"name\", monster));\n  });\n  character.spells.forEach((spell: string) => {\n    spellList.push(recivePromiseByAttribute(\"spells\", \"name\", spell));\n  });\n\n  let currentItems = await Promise.all(itemList);\n  currentItems.forEach((item) => {\n    if (item !== undefined) baseList.push(recivePromiseByAttribute(\"gears\", \"name\", item.base));\n  });\n\n  classes = await Promise.all(classList);\n  subclasses = await Promise.all(subclassList);\n  monsters = await Promise.all(monsterList);\n  spells = await Promise.all(spellList);\n  let currentGears = await Promise.all(gearList);\n  let currentBases = await Promise.all(baseList);\n\n  currentBases = currentBases.filter(\n    (q, idx) => currentBases.findIndex((g) => g.name === q.name) === idx\n  );\n\n  race = await recivePromiseByAttribute(\"races\", \"name\", character.race.race);\n  subrace = await recivePromiseByAttribute(\"subraces\", \"name\", character.race.subrace);\n\n  classes.forEach((classe: Class) => {\n    if (classe !== undefined) {\n      let classLevel = 0;\n      character.classes.forEach((charClass) => {\n        if (charClass !== undefined)\n          if (classe.name === charClass.classe) {\n            classLevel = charClass.level;\n          }\n      });\n      classe.featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet !== undefined) {\n          if (featureSet.level <= classLevel) {\n            classFeatures.push(featureSet);\n          }\n        }\n      });\n      subclasses?.forEach((subclass: Subclass) => {\n        if (subclass !== undefined)\n          if (subclass.type === classe.name) {\n            subclass.features.forEach((featureSet: FeatureSet) => {\n              if (featureSet.level <= classLevel) {\n                classFeatures.push(featureSet);\n              }\n            });\n          }\n      });\n    }\n  });\n  if (race !== undefined) {\n    race.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n    subrace?.traits.forEach((trait: Trait) => {\n      if (trait !== undefined)\n        if (trait.level <= level) {\n          raceFeatures.push(trait);\n        }\n    });\n  }\n  character.items.forEach((originItem) => {\n    if (originItem !== undefined) {\n      currentItems.forEach(async (item: Item) => {\n        if (item !== undefined) {\n          if (originItem.origin.toLowerCase() === item.name.toLowerCase()) {\n            if (item.base !== \"\") {\n              currentBases.forEach((base: Gear) => {\n                if (base !== undefined && base.name.toLowerCase() === item.base.toLowerCase()) {\n                  items.push({ ...originItem, item: item, base: base });\n                }\n              });\n            } else {\n              items.push({ ...originItem, item: item, base: undefined });\n            }\n          }\n        }\n      });\n      currentGears.forEach((gear: Gear) => {\n        if (gear !== undefined)\n          if (originItem.origin.toLowerCase() === gear.name.toLowerCase()) {\n            gears.push({ ...originItem, gear: gear });\n          }\n      });\n    }\n  });\n  console.timeEnd(\"load\");\n\n  console.time(\"modifier\");\n  let modifiers: Modifier[] = [];\n  gears.forEach((gear) => {\n    modifiers = modifiers.concat(extractModifier(gear.gear.description, \"Gear: \" + gear.origin));\n  });\n  items.forEach((item) => {\n    modifiers = modifiers.concat(\n      extractModifier(item.item.description, \"Magic Item: \" + item.origin)\n    );\n  });\n  raceFeatures.forEach((trait) => {\n    modifiers = modifiers.concat(extractModifier(trait.text, \"Race Feature: \" + trait.name));\n  });\n  classFeatures.forEach((featureSet) => {\n    featureSet.features.forEach((feature) => {\n      modifiers = modifiers.concat(extractModifier(feature.text, \"Class Feature: \" + feature.name));\n    });\n  });\n  console.timeEnd(\"modifier\");\n\n  items = items.filter((item) => item !== undefined);\n  gears = gears.filter((gear) => gear !== undefined);\n  spells = spells.filter((spell) => spell !== undefined);\n  monsters = monsters.filter((monster) => monster !== undefined);\n\n  console.timeEnd(\"build Character\");\n  return new BuildChar(\n    character,\n    level,\n    prof,\n    classes,\n    subclasses,\n    classFeatures,\n    race,\n    subrace,\n    raceFeatures,\n    gears,\n    items,\n    spells,\n    monsters,\n    modifiers\n  );\n};\n\nconst cut = (str: string, cutStart: number, cutEnd: number) => {\n  return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n};\n\nconst extractTarget = (target: string): string | string[] => {\n  if (target.includes(\".\")) {\n    return target.split(\".\");\n  }\n  return target;\n};\n\nconst extractModifier = (text: string, origin: string): Modifier[] => {\n  let newModifiers: Modifier[] = [];\n\n  while (text.includes(\"{{\")) {\n    const cutStart = text.indexOf(\"{{\");\n    const cutEnd = text.indexOf(\"}}\");\n    const rawModifier = text.substring(cutStart + 2, cutEnd);\n    text = cut(text, cutStart, cutEnd + 1);\n\n    if (rawModifier.includes(\"=\")) {\n      const split = rawModifier.split(\"=\");\n\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.EQUAL,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"+\")) {\n      const split = rawModifier.split(\"+\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.ADD,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    } else if (rawModifier.includes(\"-\")) {\n      const split = rawModifier.split(\"-\");\n      newModifiers.push(\n        new Modifier(\n          extractTarget(split[0]),\n          ModifierOperator.SUBSTRACT,\n          split[1].includes('\"') ? split[1] : parseInt(split[1]),\n          origin\n        )\n      );\n    }\n  }\n  return newModifiers;\n};\n\nexport const applyMods = async (char: BuildChar, modifiers: boolean): Promise<BuildChar> => {\n  if (modifiers) {\n    let newChar = char;\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (typeof mod.target == \"string\") {\n          const target: string = mod.target;\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: replacePlaceholder(newChar, mod.value),\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: newChar.character[target] + mod.value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) + value,\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [target]: (newChar.character[target] as number) - value,\n              },\n            };\n          }\n        } else if (Array.isArray(mod.target) && mod.target[1] !== \"add\") {\n          if (mod.operator === ModifierOperator.EQUAL) {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: replacePlaceholder(newChar, mod.value),\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"string\") {\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]: newChar.character[mod.target[0]][mod.target[1]] + mod.value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.ADD && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) + value,\n                },\n              },\n            };\n          } else if (mod.operator === ModifierOperator.SUBSTRACT && typeof mod.value == \"number\") {\n            const value: number = mod.value;\n            newChar = {\n              ...newChar,\n              character: {\n                ...newChar.character,\n                [mod.target[0]]: {\n                  ...newChar.character[mod.target[0]],\n                  [mod.target[1]]:\n                    (newChar.character[mod.target[0]][mod.target[1]] as number) - value,\n                },\n              },\n            };\n          }\n        }\n      });\n\n    let modPromises: Promise<boolean>[] = [];\n    char.modifiers\n      .sort((a, b) => a.operator - b.operator)\n      .forEach((mod: Modifier) => {\n        if (mod.target[1] === \"add\" && typeof mod.value == \"string\") {\n          const value: string = mod.value;\n          modPromises.push(\n            new Promise((resolve, reject) => {\n              recivePromiseByAttribute(mod.target[0], \"name\", value.replaceAll('\"', \"\")).then(\n                (entity) => {\n                  newChar = { ...newChar, [mod.target[0]]: [...newChar[mod.target[0]], entity] };\n                  resolve(true);\n                }\n              );\n            })\n          );\n        }\n      });\n    await Promise.all(modPromises);\n    return newChar;\n  } else {\n    return { ...char, character: char.oldCharacter };\n  }\n};\n\nexport const replacePlaceholder = (char: BuildChar, text: string | number) => {\n  if (typeof text == \"string\" && text.includes(\"[\") && text.includes(\"]\")) {\n    text = text.replaceAll('\"', \"\");\n    while (text.includes(\"[\") && text.includes(\"]\")) {\n      const cutStart = text.indexOf(\"[\");\n      const cutEnd = text.indexOf(\"]\");\n      const rawPlaceholder = text.substring(cutStart + 1, cutEnd);\n      text = text.replace(text.substring(cutStart, cutEnd + 1), char.character[rawPlaceholder]);\n    }\n    // eslint-disable-next-line\n    return Math.floor(eval(text));\n  }\n  return text;\n};\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  picBase64: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    picBase64?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    picBase64Check &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n  picBase64: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    picBase64?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.picBase64 = picBase64 || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const picBase64Check = arg.picBase64 !== undefined && typeof arg.picBase64 == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    picBase64Check &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck = arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined && Array.isArray(arg.traits) && isTrait(arg.traits[0]);\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFilteredPromise } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst DataSelectField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string[]>(optionTable);\n  const [options, setOptions] = useState<\n    {\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let entityList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        entityList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(entityList);\n      results.forEach((entities: IEntity[]) => {\n        entities.forEach((entity: IEntity) => {\n          setOptions((o) =>\n            o.concat({\n              value: entity.name,\n              label: entity.name,\n            })\n          );\n        });\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (optionsTable !== undefined && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti={false}\n        classNamePrefix=\"react-select\"\n        value={{\n          value: value,\n          label: value,\n        }}\n        options={options}\n        onChange={(option: { value: string; label: string }) => handleChange(option)}\n      />\n    </Field>\n  );\n};\n\nexport default DataSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      if (searchTerm.length > 2) {\n        let newOptions = options\n          .filter((option) => {\n            return option.name.includes(searchTerm);\n          })\n          .slice(0, 5);\n        setFilteredOptions(newOptions);\n      } else {\n        setFilteredOptions([]);\n      }\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import Class from \"../classes/Class\";\nimport FeatureSet from \"../classes/FeatureSet\";\nimport Subclass from \"../classes/Subclass\";\nimport Gear from \"../Gear\";\nimport Item from \"../Item\";\nimport Modifier from \"../Modifier\";\nimport Monster from \"../Monster\";\nimport Race from \"../races/Race\";\nimport Subrace from \"../races/Subrace\";\nimport Trait from \"../races/Trait\";\nimport Spell from \"../Spell\";\nimport Char from \"./Char\";\n\nexport default class BuildChar {\n  character: Char;\n  oldCharacter: Char;\n  level: number;\n  prof: number;\n  classes: Class[];\n  subclasses: Subclass[];\n  classFeatures: FeatureSet[];\n  race: Race;\n  subrace: Subrace;\n  raceFeatures: Trait[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  items: {\n    item: Item;\n    base: Gear | undefined;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  spells: Spell[];\n  monsters: Monster[];\n  modifiers: Modifier[];\n\n  constructor(\n    character?: Char,\n    level?: number,\n    prof?: number,\n    classes?: Class[],\n    subclasses?: Subclass[],\n    classFeatures?: FeatureSet[],\n    race?: Race,\n    subrace?: Subrace,\n    raceFeatures?: Trait[],\n    gears?: {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    items?: {\n      item: Item;\n      base: Gear | undefined;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    spells?: Spell[],\n    monsters?: Monster[],\n    modifiers?: Modifier[]\n  ) {\n    this.character = character || new Char();\n    this.oldCharacter = character || new Char();\n    this.level = level || 0;\n    this.prof = prof || 0;\n    this.classes = classes || [];\n    this.subclasses = subclasses || [];\n    this.classFeatures = classFeatures || [];\n    this.race = race || new Race();\n    this.subrace = subrace || new Subrace();\n    this.raceFeatures = raceFeatures || [];\n    this.gears = gears || [];\n    this.items = items || [];\n    this.spells = spells || [];\n    this.monsters = monsters || [];\n    this.modifiers = modifiers || [];\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","export enum ModifierOperator {\n  EQUAL,\n  ADD,\n  SUBSTRACT,\n}\n\nexport default class Modifier {\n  target: string | string[];\n  operator: ModifierOperator;\n  value: string | number;\n  origin: string;\n\n  constructor(\n    target: string | string[],\n    operator: ModifierOperator,\n    value: string | number,\n    origin: string\n  ) {\n    this.target = target;\n    this.operator = operator;\n    this.value = value;\n    this.origin = origin;\n  }\n\n  makeString(): string {\n    let op = \"\";\n    if (this.operator === ModifierOperator.ADD) {\n      op = \"+\";\n    } else if (this.operator === ModifierOperator.SUBSTRACT) {\n      op = \"-\";\n    } else if (this.operator === ModifierOperator.EQUAL) {\n      op = \"=\";\n    }\n\n    let tar = \"\";\n    if (Array.isArray(this.target)) {\n      tar = `${this.target[0]}.${this.target[1]}`;\n    } else {\n      tar = this.target;\n    }\n\n    return `${tar} ${op} ${this.value}`;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <DataSelectField\n          optionTable={[\"campaigns\"]}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <DataSelectField\n                optionTable={[\"classes\"]}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <DataSelectField\n                optionTable={[\"subclasses\"]}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport DataSelectField from \"../../../form_elements/DataSelectField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <DataSelectField\n            optionTable={[\"races\"]}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) => onChange({ ...char, race: { ...char.race, race: race } })}\n          />\n          <DataSelectField\n            optionTable={[\"subraces\"]}\n            filters={[{ fieldName: \"type\", value: char.race.race, sort: 0 }]}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) => onChange({ ...char, race: { ...char.race, subrace: subrace } })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport { calcProf } from \"../../../../services/CharacterService\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * calcProf(char) + formatScore(stat);\n    },\n    [formatScore, char]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter((item) => item.origin !== oldItem.origin);\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) => onChangeItemAttribute({ ...item, prof: prof }, index)}\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label: item.attribute.charAt(0).toUpperCase() + item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) => onChangeItemAttribute({ ...item, attribute: type }, index)}\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton text={\"Add new Item\"} icon={faPlus} onClick={() => addNewItem()} />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(recivePromiseByAttribute(\"classes\", \"name\", classe.classe));\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet !== undefined) {\n        if (featureSet.bonis) {\n          featureSet.bonis?.forEach((boni: Boni) => {\n            if (boni.isCurrency) {\n              bonis = [\n                ...bonis,\n                {\n                  origin: boni.name,\n                  value: +boni.value,\n                  max: +boni.value,\n                },\n              ];\n            }\n          });\n        }\n        if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n          spellSlots = [\n            ...spellSlots,\n            {\n              origin: classe.class.name,\n              slots: featureSet.spellslots,\n              max: featureSet.spellslots,\n            },\n          ];\n        }\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Class\", \"Race\", \"Abilities\", \"Equipment\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass char={newChar} onChange={updateChar} completed={updateClass} />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace char={newChar} onChange={updateChar} completed={updateRace} />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setAbilities(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setEquipment(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20\" + rolls + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \" \" + rolls + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string, index: number): JSX.Element => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={\"TextPart\" + index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                if (linkParts[1].includes(\"|\")) {\n                  const entityParts = linkParts[1].split(\"|\");\n                  const link: string =\n                    \"/\" +\n                    linkEntity +\n                    \"-detail/name/\" +\n                    entityParts[0] +\n                    \"?source=\" +\n                    entityParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={entityParts[0]} /> {entityParts[0]} (\n                        {entityParts[1]})\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                } else {\n                  const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                }\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else if (text.length > 0) {\n          return <TextPart key={\"TextPart\" + index}>{text}</TextPart>;\n        }\n      }\n      return <></>;\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string): JSX.Element[] => {\n      if (textPart.includes(\"||tableStart||\")) {\n        let newTable: JSX.Element[] = [];\n        const table: string[] = text.split(\"||tableStart||\");\n\n        table.forEach((textPart: string, index: number) => {\n          if (textPart.includes(\"||tableEnd||\")) {\n            const tableEnd = textPart.split(\"||tableEnd||\");\n            const tableRows: string[] = tableEnd[0].split(\"||\");\n            let isHead = true;\n            newTable.push(\n              <table key={\"table\" + index}>\n                <tbody key={\"tbody\" + index}>\n                  {tableRows.map((row: string, index: number) => {\n                    if (row.includes(\"|\")) {\n                      if (isHead) {\n                        isHead = false;\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                            })}\n                          </tr>\n                        );\n                      } else {\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableProp key={index}>{formatLink(cell, index)}</TableProp>;\n                            })}\n                          </tr>\n                        );\n                      }\n                    } else {\n                      return <></>;\n                    }\n                  })}\n                </tbody>\n              </table>\n            );\n            newTable.push(formatLink(tableEnd[1], index));\n          } else {\n            newTable.push(formatLink(table[0], index));\n          }\n        });\n        return newTable;\n      }\n      return [formatLink(textPart, 0)];\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n"],"sourceRoot":""}