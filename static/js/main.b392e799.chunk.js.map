{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Data/Encounter/Encounter.tsx","Services/OptionService.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Loading.tsx","components/FormElements/StringField.tsx","components/FormElements/TextButton.tsx","components/P2P/P2PReciver.tsx","components/Entities/Classes/ClassTile.tsx","components/Encounters/EncounterTile.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Spells/SpellTile.tsx","components/Options/GeneralOptions.tsx","components/P2P/P2PSender.tsx","Services/peerIdService.tsx","components/Options/SpellsOptions.tsx","components/Options/GearsOptions.tsx","components/Options/ItemsOptions.tsx","components/Options/MonstersOptions.tsx","components/Options/RacesOptions.tsx","components/Options/ClassesOptions.tsx","components/Options/CharsOptions.tsx","components/Options/EncountersOptions.tsx","components/Options/Options.tsx","Services/5eToolService.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringSearchField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","components/Encounters/EncounterSearchBar.tsx","components/Encounters/EncounterOverview.tsx","Data/Encounter/Player.tsx","Services/EncounterService.tsx","components/Encounters/Detail/EncounterEditView.tsx","Services/DiceService.tsx","components/FormElements/TinyNumberField.tsx","components/Encounters/Detail/EncounterView.tsx","components/Encounters/Detail/EncounterDetail.tsx","components/Encounters/Detail/LinkWrapper/NameToEncounter.tsx","components/Encounters/Detail/LinkWrapper/IdToEncounter.tsx","components/Statistics/Gear/CostRatioChart.tsx","components/Statistics/Gear/DamageRatioChart.tsx","components/Statistics/Gear/GearTypeRatioChart.tsx","components/Statistics/Gear/WeightRatioChart.tsx","components/Statistics/General/AmountOfEntitiesChart.tsx","components/Statistics/Items/AttunmentRatioChart.tsx","components/Statistics/Items/BaseRatioChart.tsx","components/Statistics/Items/ItemTypeRatioChart.tsx","components/Statistics/Items/MagicBonusRatioChart.tsx","components/Statistics/Items/RarityRatioChart.tsx","components/Statistics/Monsters/CrRatioChart.tsx","components/Statistics/Monsters/LegendaryRatioChart.tsx","components/Statistics/Monsters/MonsterTypeRatioChart.tsx","components/Statistics/Spells/ActionsRatioChart.tsx","components/Statistics/Spells/LevelRatioChart.tsx","components/Statistics/Spells/RitualRatioChart.tsx","components/Statistics/Spells/SchoolsRatioChart.tsx","components/Statistics/Statistics.tsx","components/Library/BookTile.tsx","Data/Book.tsx","components/Library/LibrarySearchBar.tsx","components/Library/Library.tsx","components/Library/Detail/BookView.tsx","components/Library/Detail/BookEditView.tsx","components/Library/Detail/BookDetail.tsx","components/Library/Detail/LinkWrapper/IdToBook.tsx","components/Library/Detail/LinkWrapper/NameToBook.tsx","App.tsx","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","lightTheme","buttons","color","backgroundColor","disabled","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","result","finally","close","saveNew","entity","filename","a","put","prom","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","name","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","isArray","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","Encounter","enemies","players","isPlaying","currentInit","roundCounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","scanImportFileTest","json","fileName","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","errors","item","gear","spell","monster","class","subclass","JSON","stringify","failedObject","Errors","exportAllFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","tableList","results","list","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faMeteor","faDragon","faIdCard","faCog","faChartPie","primaryHover","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","map","child","index","Tab","key","FileField","accept","isMulti","transform","Field","LabelText","Icon","Input","files","multiple","FontAwesomeIcon","IconButton","SimpleButton","DisabledSimpleButton","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","LocalLoadingSpinner","Wrapper","LocalSpinner","StringField","TextButton","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","console","log","faExclamationCircle","faCheck","ClassTile","getPicture","useCallback","Tile","fallback","PropWrapper","Prop","faLink","Link","Image","ImageElm","src","Empty","img","EncounterTile","encounter","faUser","PropTitle","span","CharTile","char","calcLevel","PropRowWrapper","RowProp","classSet","ImgContainer","props","GearTile","ImageName","faCoins","faWeightHanging","WideProp","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ItemTile","hasAttunment","Rarity","Flag","trim","MonsterTile","isLegendary","formatCr","Type","CR","faRunning","RaceTile","SpellTile","formatTime","split","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","School","Level","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","GeneralOptions","General","OptionSection","SelectionTitle","ExternalLink","rel","faPatreon","faDiscord","P2PSender","mode","setName","setPeer","brokerId","min","max","password","characters","i","Math","floor","random","generateBrokerId","newPeer","errorData","send","disconnected","destroyed","reconnect","SpellsOptions","amount","triggerDeleteAll","setSend","OptionTab","SectionRow","SectionText","faFileExport","faTrashAlt","faPaperPlane","GearsOptions","ItemsOptions","MonstersOptions","RacesOptions","amounts","sendRaces","setSendRaces","sendSubraces","setSendSubraces","ClassesOptions","sendClasses","setSendClasses","sendSubclasses","setSendSubclasses","CharsOptions","EncountersOptions","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","isReload","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","setData","triggerImportFiles","fileList","from","file","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","setTimeout","clear","deleteAll","returnTile","Message","faFileImport","tab","fromClassList","number","unit","condition","distance","typ","v","s","m","concentration","textPart","entryTextPart","listItem","colLabels","rows","cel","convertText","newSpell","source","meta","_copy","tags","align","save","skill","sense","langs","languages","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conditionImmune","trait","tra","entry","action","lactions","legendary","newMonster","average","OptionSectionLarge","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","classNamePrefix","Select","StringSearchField","field","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","setSort","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","slice","filterArray","SpellContainer","dataLength","next","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","first","FormatedText","formatedText","setFormatedText","formatTable","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","th","td","SpellView","CenterWrapper","View","Text","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","SpellDetail","editMode","setMode","spellObj","editSpell","unsavedChanges","setUnsavedChanges","TopBar","faArrowLeft","goBack","EditToggle","ToggleLeft","ToggleRight","faExclamationTriangle","updateSpell","faSave","spellId","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","gearId","NameToGear","IdToGear","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","faShieldAlt","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","monsterId","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","raceId","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","subraceId","NameToSubrace","IdToSubrace","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","itemId","NameToItem","IdToItem","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","newItem","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","classeId","NameToClass","IdToClass","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","subclassId","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","deathSaves","setDeathSaves","prof","setProf","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","f1","f2","b","baseitem","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","charId","NameToChar","IdToChar","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","EncounterSearchBar","newEncounter","createNewEncounter","EncounterOverview","allEncounters","setAllEncounters","setEncounters","EncounterContainer","Player","tempHp","initBonus","tag","crExpTable","exp","expTable","easy","hard","deadly","calcDifficulty","calcExp","enemyExp","enemy","crExp","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","newEnemy","oldEnemy","onChangePlayerField","newPlayer","oldPlayer","onChangeEnemy","newEnemyList","removeEnemy","addNewEnemy","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","rollDie","round","TinyNumberField","EncounterView","setPlayers","newPlayers","newField","finishEncounter","newEnemies","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Table","Row","isDead","PropField","faSkullCrossbones","EncounterDetail","encounterObj","editEncounter","updateEncounter","encounterId","editAndSaveEncounter","NameToEncounter","IdToEncounter","CostRatioChart","setLoading","generalCounts","setGeneralCounts","makeSchoolsData","costs","names","counts","colors","labels","datasets","paddingBottom","DamageRatioChart","GearTypeRatioChart","WeightRatioChart","weights","AmountOfEntitiesChart","makeGeneralCountsData","AttunmentRatioChart","attunments","BaseRatioChart","ItemTypeRatioChart","MagicBonusRatioChart","magicBoni","RarityRatioChart","CrRatioChart","crs","LegendaryRatioChart","leg","noleg","MonsterTypeRatioChart","ActionsRatioChart","times","newTimes","startsWith","LevelRatioChart","RitualRatioChart","rituals","SchoolsRatioChart","Statistics","BookTile","book","cover","pages","faTags","Tag","Book","LibrarySearchBar","setTags","setPages","newBook","createNewBook","Library","allBooks","setAllBooks","setBooks","LibraryContainer","pdfjs","GlobalWorkerOptions","workerSrc","BookView","numPages","setNumPages","pageNumber","setPageNumber","reader","readAsDataURL","base64data","changePage","prevPageNumber","DocumentWrapper","faArrowRight","onLoadSuccess","onItemClick","itemPageNumber","appVersion","msSaveBlob","url","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","TagWrapper","faTag","BookEditView","TagView","oldTag","onTagChange","removeTag","BookDetail","bookObj","editBook","updateBook","bookId","IdToBook","NameToBook","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","getElementById","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b392e799.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 274;","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    }\n  }\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size\n    }\n  }\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\nimport Encounter from \"../Data/Encounter/Encounter\";\nimport Book from \"../Data/Book\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n  }\n}\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nconst applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if(hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName]\n            .toLowerCase()\n            .includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName]\n              .toLowerCase()\n              .includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (\n  tableName: string,\n  attribute: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves  || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\nimport IEntity from \"../Data/IEntity\";\nimport Encounter, { isEncounter } from \"../Data/Encounter/Encounter\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file.name, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  let failCount = 0;\n  let failedObj: string[] = [];\n  let promList: Promise<any>[] = [];\n\n  if (Array.isArray(json)) {\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, fileName));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, fileName));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, fileName));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, fileName));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, fileName));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, fileName));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, fileName));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, fileName));\n      } else if (isEncounter(obj)) {\n        promList.push(saveNew(\"encounters\", obj as Encounter, fileName));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, fileName));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  } else {\n    if (isClass(json)) {\n      promList.push(saveNew(\"classes\", json as Class, fileName));\n    } else if (isSubclass(json)) {\n      promList.push(saveNew(\"subclasses\", json as Subclass, fileName));\n    } else if (isRace(json)) {\n      promList.push(saveNew(\"races\", json as Race, fileName));\n    } else if (isSubrace(json)) {\n      promList.push(saveNew(\"subraces\", json as Subrace, fileName));\n    } else if (isMonster(json)) {\n      promList.push(saveNew(\"monsters\", json as Monster, fileName));\n    } else if (isSpell(json)) {\n      promList.push(saveNew(\"spells\", json as Spell, fileName));\n    } else if (isGear(json)) {\n      promList.push(saveNew(\"gears\", json as Gear, fileName));\n    } else if (isItem(json)) {\n      promList.push(saveNew(\"items\", json as Item, fileName));\n    } else if (isEncounter(json)) {\n      promList.push(saveNew(\"encounters\", json as Encounter, fileName));\n    } else if (isChar(json)) {\n      saveNew(\"chars\", json as Char, fileName);\n    } else {\n      failCount++;\n      failedObj.push(\n        scanForFormatErrors(json)\n          .replaceAll(\"true\", \"success!\")\n          .replaceAll(\"false\", \"fail!\")\n      );\n    }\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  tableList.push(reciveAllPromise(\"encounters\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      <Link\n        to=\"/encounter-overview\"\n        className={location.pathname === \"/encounters\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiSwordClash />\n        Encounters\n      </Link>\n      <Link\n        to=\"/library\"\n        className={location.pathname === \"/library\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiBookmarklet />\n        Library\n      </Link>\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n      <Link\n        to=\"/statistics\"\n        className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faChartPie} />\n        Statistics\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e:any) => void);\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../Services/OptionService\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport TextButton from \"../FormElements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDragon, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterTile = ({ encounter }: $Props) => {\n  return (\n    <Tile to={\"/encounter-detail/id/\" + encounter.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faUser} />\n            {encounter.players.length}\n          </Prop>\n          <Prop>\n            <Icon icon={faDragon} />\n            {encounter.enemies.length}\n          </Prop>\n          {encounter.isPlaying && (\n            <>\n              <Prop>Aktiv playing</Prop>\n              <Prop>\n                <PropTitle>Round: </PropTitle>\n                {encounter.roundCounter}\n              </Prop>\n            </>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EncounterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\n\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Want to support me?</SelectionTitle>\n        <ExternalLink\n          href=\"https://www.patreon.com/bePatron?u=25310394\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"patreon\"\n        >\n          <FontAwesomeIcon icon={faPatreon} /> Become a patron\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Found some bugs? Or have some feedback?</SelectionTitle>\n        <ExternalLink\n          href=\"https://discord.gg/2KB3tzG\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"discord\"\n        >\n          <FontAwesomeIcon icon={faDiscord} /> Join the discord\n        </ExternalLink>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport { generateBrokerId } from \"../../Services/peerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../FormElements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField\n            value={peer.id}\n            label={`Your ${name} ID:`}\n            onChange={() => {}}\n          />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"DnDTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst GearsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Gear?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Gear?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"gears\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all gears`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"gears\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default GearsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ItemsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Items?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"items\", \"DnDTome_items.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Items?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"items\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all items`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"items\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ItemsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst MonstersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Monsters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Monsters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"monsters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all monsters`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"monsters\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default MonstersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendRaces, setSendRaces] = useState<boolean>(false);\n  const [sendSubraces, setSendSubraces] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"DnDTome_races.json\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subraces?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subraces?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subraces\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendRaces && (\n          <TextButton\n            text={`Send all races`}\n            icon={faPaperPlane}\n            onClick={() => setSendRaces(true)}\n          />\n        )}\n        {!!sendRaces && <P2PSender data={\"races\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubraces && (\n          <TextButton\n            text={`Send all subraces`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubraces(true)}\n          />\n        )}\n        {!!sendSubraces && <P2PSender data={\"subraces\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amounts: number[];\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst ClassesOptions = ({ amounts, triggerDeleteAll }: $Props) => {\n  const [sendClasses, setSendClasses] = useState<boolean>(false);\n  const [sendSubclasses, setSendSubclasses] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Classes?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n            }\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Export all Subclasses?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amounts[0]} Classes?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"classes\")}\n          />\n        </SectionRow>\n        <SectionRow>\n          <SectionText>Delete all {amounts[1]} Subclasses?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"subclasses\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!sendClasses && (\n          <TextButton\n            text={`Send all classes`}\n            icon={faPaperPlane}\n            onClick={() => setSendClasses(true)}\n          />\n        )}\n        {!!sendClasses && <P2PSender data={\"classes\"} mode={\"ALL\"} />}\n      </OptionSection>\n      <OptionSection>\n        {!sendSubclasses && (\n          <TextButton\n            text={`Send all subclasses`}\n            icon={faPaperPlane}\n            onClick={() => setSendSubclasses(true)}\n          />\n        )}\n        {!!sendSubclasses && <P2PSender data={\"subclasses\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default ClassesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  faFileExport,\n  faPaperPlane,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\nimport P2PSender from \"../P2P/P2PSender\";\nimport TextButton from \"../FormElements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst CharsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Chars?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"chars\", \"DnDTome_chars.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Chars?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"chars\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all chars`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"chars\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default CharsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../Services/OptionService\";\nimport IconButton from \"../FormElements/IconButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst EncountersOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Encounters?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() =>\n              exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n            }\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Encounters?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"encounters\")}\n          />\n        </SectionRow>\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default EncountersOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { importFiles, exportAll } from \"../../Services/OptionService\";\nimport {\n  import5eToolsMonstersFiles,\n  import5eToolsSpellsFiles,\n} from \"../../Services/5eToolService\";\nimport {\n  deleteAll,\n  reciveCount,\n  reciveAllPromise,\n} from \"../../Services/DatabaseService\";\nimport IEntity from \"../../Data/IEntity\";\nimport { isChar } from \"../../Data/Chars/Char\";\nimport { isClass } from \"../../Data/Classes/Class\";\nimport { isSubclass } from \"../../Data/Classes/Subclass\";\nimport { isEncounter } from \"../../Data/Encounter/Encounter\";\nimport { isGear } from \"../../Data/Gear\";\nimport { isItem } from \"../../Data/Item\";\nimport { isMonster } from \"../../Data/Monster\";\nimport { isRace } from \"../../Data/Races/Race\";\nimport { isSubrace } from \"../../Data/Races/Subrace\";\nimport { isSpell } from \"../../Data/Spell\";\n\nimport { faFileImport, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport P2PReciver from \"../P2P/P2PReciver\";\nimport ClassTile from \"../Entities/Classes/ClassTile\";\nimport EncounterTile from \"../Encounters/EncounterTile\";\nimport CharTile from \"../Entities/Chars/CharTile\";\nimport GearTile from \"../Entities/Gear/GearTile\";\nimport ItemTile from \"../Entities/Item/ItemTile\";\nimport MonsterTile from \"../Entities/Monster/MonsterTile\";\nimport RaceTile from \"../Entities/Races/RaceTile\";\nimport SpellTile from \"../Entities/Spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport GearsOptions from \"./GearsOptions\";\nimport ItemsOptions from \"./ItemsOptions\";\nimport MonstersOptions from \"./MonstersOptions\";\nimport RacesOptions from \"./RacesOptions\";\nimport ClassesOptions from \"./ClassesOptions\";\nimport CharsOptions from \"./CharsOptions\";\nimport EncountersOptions from \"./EncountersOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      reciveAllPromise(\"chars\").then((result: any[]) => {\n        return result;\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \" of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isClass(entity)) {\n      return <ClassTile key={index} classe={entity} />;\n    } else if (isSubclass(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isRace(entity)) {\n      return <RaceTile key={index} race={entity} />;\n    } else if (isSubrace(entity)) {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    } else if (isMonster(entity)) {\n      return <MonsterTile key={index} monster={entity} />;\n    } else if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else if (isGear(entity)) {\n      return <GearTile key={index} gear={entity} />;\n    } else if (isItem(entity)) {\n      return <ItemTile key={index} item={entity} />;\n    } else if (isEncounter(entity)) {\n      return <EncounterTile key={index} encounter={entity} />;\n    } else if (isChar(entity)) {\n      return <CharTile key={index} char={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"DnDTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n          \"Encounters\",\n          \"Others\",\n          \"Recive\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Gears\" && (\n        <GearsOptions amount={gearAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Magic Items\" && (\n        <ItemsOptions amount={itemAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Monsters\" && (\n        <MonstersOptions\n          amount={monsterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions\n          amounts={[raceAmount, subraceAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <ClassesOptions\n          amounts={[classAmount, subclassAmount]}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Chars\" && (\n        <CharsOptions amount={charAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Encounters\" && (\n        <EncountersOptions\n          amount={encounterAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Others\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Spells</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => import5eToolsSpellsFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Monsters</SelectionTitle>\n            <FileField\n              label=\"\"\n              accept={\".json\"}\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => import5eToolsMonstersFiles(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Recive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import Monster from \"../Data/Monster\";\nimport Spell from \"../Data/Spell\";\nimport { saveNew } from \"./DatabaseService\";\n\nexport const import5eToolsSpellsFiles = (fileList: FileList | null) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.spell.forEach((obj: any) => {\n            let classes = \"\";\n            if (\n              obj.classes !== undefined &&\n              obj.classes.fromClassList !== undefined\n            ) {\n              obj.classes.fromClassList.forEach(\n                (classe: { name: string; source: string }) => {\n                  classes += classe.name + \", \";\n                }\n              );\n            }\n\n            let school = \"\";\n            if (obj.school === \"V\") school = \"Evocation\";\n            if (obj.school === \"D\") school = \"Divination\";\n            if (obj.school === \"N\") school = \"Necromancy\";\n            if (obj.school === \"T\") school = \"Transmutation\";\n            if (obj.school === \"I\") school = \"Illusion\";\n            if (obj.school === \"C\") school = \"Conjuration\";\n            if (obj.school === \"A\") school = \"Abjuration\";\n            if (obj.school === \"E\") school = \"Enchantment\";\n\n            let time = \"\";\n            if (obj.time !== undefined) {\n              time =\n                obj.time[0].number +\n                \" \" +\n                obj.time[0].unit +\n                \" \" +\n                (obj.time[0].condition ? obj.time[0].condition : \"\");\n            }\n\n            let range = \"\";\n            if (obj.range !== undefined) {\n              range =\n                obj.range.type +\n                \" \" +\n                (obj.distance\n                  ? obj.range.distance.typ +\n                    \" \" +\n                    (obj.range.distance.amount ? obj.range.distance.amount : \"\")\n                  : \"\");\n            }\n\n            let components = \"\";\n            if (obj.components !== undefined) {\n              components =\n                (obj.components.v ? \"V, \" : \"\") +\n                (obj.components.s ? \"S, \" : \"\");\n              if (obj.components.m !== undefined) {\n                if (obj.components.m.text !== undefined) {\n                  components = \"M (\" + obj.components.m.text + \")\";\n                } else {\n                  components = \"M (\" + obj.components.m + \")\";\n                }\n              }\n            }\n\n            let duration = \"\";\n            if (obj.duration !== undefined) {\n              let concentration = obj.duration[0].concentration;\n              duration =\n                (concentration ? \"Concentration, \" : \"\") +\n                obj.duration[0].type +\n                \" \" +\n                (obj.duration[0].duration !== undefined\n                  ? obj.duration[0].duration.type +\n                    \" \" +\n                    obj.duration[0].duration.amount\n                  : \"\");\n            }\n\n            let text = \"\";\n            obj.entries.forEach((textPart: string | any) => {\n              if (typeof textPart === \"string\") {\n                text += textPart + \"\\n\";\n              } else {\n                if (\n                  textPart.name !== undefined &&\n                  textPart.entries !== undefined\n                ) {\n                  text += \"\\n\" + textPart.name + \". \";\n                  textPart.entries.forEach((entryTextPart: string) => {\n                    text += entryTextPart + \"\\n\";\n                  });\n                } else if (textPart.items !== undefined) {\n                  textPart.items.forEach((listItem: string) => {\n                    text += \"• \" + listItem + \"\\n\";\n                  });\n                } else if (\n                  textPart.type !== undefined &&\n                  textPart.type === \"table\"\n                ) {\n                  text += \"||table||\\n\";\n                  if (textPart.colLabels !== undefined) {\n                    text += \"||\";\n                    textPart.colLabels.forEach((listItem: string) => {\n                      text += listItem + \"|\";\n                    });\n                    text += \"|\\n\";\n                  }\n                  textPart.rows.forEach((rows: string[]) => {\n                    text += \"||\";\n                    rows.forEach((cel: string) => {\n                      text += cel + \"|\";\n                    });\n                    text += \"|\\n\";\n                  });\n                  text += \"||table||\\n\";\n                } else {\n                  let convertText = JSON.stringify(textPart);\n                  convertText = convertText\n                    .replaceAll(\"},\", \"\\n\")\n                    .replaceAll(\"[\", \"\")\n                    .replaceAll(\"]\", \"\")\n                    .replaceAll(\"}\", \"\")\n                    .replaceAll(\"{@\", \"\")\n                    .replaceAll(\"{\", \"\");\n                  convertText = convertText.trim();\n                  text += convertText;\n                }\n              }\n            });\n            text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n            text = text.trim();\n\n            let newSpell = new Spell(\n              obj.name,\n              classes,\n              obj.source,\n              obj.level,\n              school,\n              time,\n              range,\n              components,\n              duration,\n              obj.meta && obj.meta.ritual ? 1 : 0,\n              text,\n              0,\n              file.name,\n              \"\"\n            );\n            promList.push(saveNew(\"spells\", newSpell, file.name));\n          });\n          await Promise.all(promList);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsMonstersFiles = (fileList: FileList | null) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.monster.forEach((obj: any) => {\n            if (obj._copy === undefined) {\n              let type = \"\";\n              let subtype = \"\";\n              if (typeof obj.type === \"string\") {\n                type = obj.type;\n              } else {\n                type = obj.type.type;\n                if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n              }\n\n              let cr = 0;\n              if (obj.cr !== undefined) {\n                if (typeof obj.cr === \"string\") {\n                  if (obj.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr;\n                  }\n                } else {\n                  if (obj.cr.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr.cr;\n                  }\n                }\n              }\n\n              let alignment = \"\";\n              if (obj.alignment !== undefined) {\n                obj.alignment.forEach((align: string) => {\n                  if (align === \"L\") alignment += \"lawfull \";\n                  if (align === \"N\") alignment += \"neutral \";\n                  if (align === \"C\") alignment += \"chaotic \";\n                  if (align === \"G\") alignment += \"good \";\n                  if (align === \"E\") alignment += \"evil \";\n                });\n              }\n              alignment = alignment.trim();\n\n              let size = \"\";\n              if (obj.size !== undefined) {\n                if (obj.size === \"L\") size += \"large \";\n                else if (obj.size === \"H\") size += \"huge \";\n                else if (obj.size === \"T\") size += \"tiny \";\n                else if (obj.size === \"M\") size += \"medium \";\n                else if (obj.size === \"S\") size += \"small \";\n                else if (obj.size === \"G\") size += \"gargantuan \";\n              }\n              size = size.trim();\n\n              let ac = 0;\n              if (typeof obj.ac[0] === \"number\") {\n                ac = obj.ac[0];\n              } else {\n                ac = obj.ac[0].ac;\n              }\n\n              let speed = \"\";\n              for (const [key, value] of Object.entries(obj.speed)) {\n                if (typeof value === \"string\") {\n                  speed += key + \" \" + value + \"ft, \";\n                } else {\n                  speed += key + \" \";\n                  for (const [key2, value2] of Object.entries(\n                    value as Object\n                  )) {\n                    speed += key2 + \" (\" + value2 + \")\";\n                  }\n                  speed += key + \", \";\n                }\n              }\n              speed.trim();\n\n              let saves = \"\";\n              if (obj.save !== undefined)\n                for (const [key, value] of Object.entries(obj.save)) {\n                  saves += key + \" \" + value + \", \";\n                }\n              saves.trim();\n\n              let skills = \"\";\n              if (obj.skill !== undefined)\n                for (const [key, value] of Object.entries(obj.skill)) {\n                  skills += key + \" \" + value + \", \";\n                }\n              skills.trim();\n\n              let senses = \"\";\n              obj.senses &&\n                obj.senses.forEach((sense: string) => {\n                  senses += sense + \", \";\n                });\n              senses.trim();\n\n              let langs = \"\";\n              obj.languages &&\n                obj.languages.forEach((lang: string) => {\n                  langs += lang + \", \";\n                });\n              langs.trim();\n\n              let vulnerabilities = \"\";\n              obj.vulnerable &&\n                obj.vulnerable.forEach((vul: string) => {\n                  vulnerabilities += vul + \", \";\n                });\n              vulnerabilities.trim();\n\n              let resistencies = \"\";\n              obj.resist &&\n                obj.resist.forEach((res: string) => {\n                  resistencies += res + \", \";\n                });\n              resistencies.trim();\n\n              let immunities = \"\";\n              obj.immune &&\n                obj.immune.forEach((imu: string) => {\n                  immunities += imu + \", \";\n                });\n              immunities.trim();\n\n              let conImmunities = \"\";\n              obj.conditionImmune &&\n                obj.conditionImmune.forEach((imu: string) => {\n                  conImmunities += imu + \", \";\n                });\n              conImmunities.trim();\n\n              let traits = \"\";\n              obj.trait &&\n                obj.trait.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    traits += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        traits += entry + \" \\n\";\n                      });\n                      traits += \"\\n\";\n                    }\n                  }\n                );\n              traits = traits\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              traits = traits.trim();\n\n              let actions = \"\";\n              obj.action &&\n                obj.action.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    actions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        actions += entry + \" \\n\";\n                      });\n                      actions += \" \\n\";\n                    }\n                  }\n                );\n              actions = actions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              actions = actions.trim();\n\n              let lactions = \"\";\n              obj.legendary &&\n                obj.legendary.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    lactions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        lactions += entry + \" \\n\";\n                      });\n                      lactions += \" \\n\";\n                    }\n                  }\n                );\n              lactions = lactions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              lactions = lactions.trim();\n\n              let newMonster = new Monster(\n                0,\n                obj.name,\n                obj.source,\n                \"\",\n                size,\n                type,\n                subtype,\n                alignment,\n                ac,\n                obj.hp.average,\n                speed,\n                cr,\n                obj.str,\n                obj.dex,\n                obj.con,\n                obj.int,\n                obj.wis,\n                obj.cha,\n                saves,\n                skills,\n                senses,\n                langs,\n                vulnerabilities,\n                resistencies,\n                immunities,\n                conImmunities,\n                traits,\n                actions,\n                lactions\n              );\n              promList.push(saveNew(\"monsters\", newMonster, file.name));\n            }\n          });\n          await Promise.all(promList);\n        }\n      };\n      fileReader.readAsText(file);\n      console.log(\"Done\");\n    });\n  }\n};\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (\n    value: string,\n    sort: { name: string; label: string; sort: number }\n  ) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value, sort)}\n      ></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />\n          )}\n          {sort.sort === 2 && (\n            <IconButton\n              onClick={() => changeSort()}\n              icon={faChevronCircleDown}\n            />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringSearchField\n        value={time}\n        sort={sort}\n        field={\"time\"}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(\n          time: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTime(time);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={range}\n        sort={sort}\n        field={\"range\"}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setRange(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={duration}\n        sort={sort}\n        field={\"duration\"}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDuration(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={components}\n        sort={sort}\n        field={\"components\"}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setComponents(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={classes}\n        sort={sort}\n        field={\"classes\"}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setClasses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={text}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setText(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div\n        id=\"scrollable\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <SpellContainer\n          dataLength={spells.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {spells!.map((spell: Spell, index: number) => {\n            return <SpellTile key={index} spell={spell}></SpellTile>;\n          })}\n        </SpellContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n      console.time(\"filtered get all\");\n        table\n          .filter((obj: T) => {\n            let test: boolean[] = [];\n            filters.forEach((filter) => {\n              if (typeof filter.value === \"string\") {\n                test.push(\n                  // @ts-ignore\n                  obj[filter.fieldName]\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                );\n              } else if (typeof filter.value === \"number\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (typeof filter.value === \"boolean\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (filter.value instanceof Array) {\n                let arrayTest: boolean = false;\n                filter.value.forEach(\n                  (filterPart: string | boolean | number) => {\n                    if (typeof filterPart === \"string\") {\n                      if (\n                        // @ts-ignore\n                        obj[filter.fieldName]\n                          .toLowerCase()\n                          .includes(filterPart.toLowerCase())\n                      )\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"number\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"boolean\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    }\n                  }\n                );\n                test.push(arrayTest);\n              }\n            });\n\n            let result = true;\n            test.forEach((val) => {\n              if (!val) result = false;\n            });\n            return result;\n          })\n          .sortBy(\"name\")\n          .then((data) => {\n            console.timeEnd(\"filtered get all\");\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport P2PSender from \"../../../P2P/P2PSender\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${spell.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellDetail = ({ spell }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = (spellId: number | undefined) => {\n    remove(\"spells\", spellId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj,spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSpell(spellObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback, useState } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${gear.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={gear} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearDetail = ({ gear }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = (gearId: number | undefined) => {\n    remove(\"gears\", gearId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteGear(gearObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={cost}\n        sort={sort}\n        field={\"cost\"}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setCost(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={weight}\n        sort={sort}\n        field={\"weight\"}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setWeight(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={damage}\n        sort={sort}\n        field={\"damage\"}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDamage(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={properties}\n        sort={sort}\n        field={\"properties\"}\n        label=\"Properties\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setProperties(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <GearContainer\n          dataLength={gears.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {gears!.map((gear: Gear, index: number) => {\n            return <GearTile key={index} gear={gear}></GearTile>;\n          })}\n        </GearContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\nimport NumberField from \"../../FormElements/NumberField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringSearchField\n        value={alignment}\n        sort={sort}\n        field={\"alignment\"}\n        label=\"Alignment\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAlignment(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={speed}\n        sort={sort}\n        field={\"speed\"}\n        label=\"Speed\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSpeed(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={skills}\n        sort={sort}\n        field={\"skills\"}\n        label=\"Skills\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSkills(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={senses}\n        sort={sort}\n        field={\"senses\"}\n        label=\"Senses\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSenses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lang}\n        sort={sort}\n        field={\"lang\"}\n        label=\"Languages\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLang(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgVulnerabilitie}\n        sort={sort}\n        field={\"dmgVulnerabilitie\"}\n        label=\"Vulnerabilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgVulnerabilitie(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgResistance}\n        sort={sort}\n        field={\"dmgResistance\"}\n        label=\"Resistances\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgResistance(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgImmunities}\n        sort={sort}\n        field={\"dmgImmunities\"}\n        label=\"Immunities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={conImmunities}\n        sort={sort}\n        field={\"conImmunities\"}\n        label=\"Con. Immun.\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setConImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={ablt}\n        sort={sort}\n        field={\"ablt\"}\n        label=\"Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sAblt}\n        sort={sort}\n        field={\"sAblt\"}\n        label=\"Spezial Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lAblt}\n        sort={sort}\n        field={\"lAblt\"}\n        label=\"Legendary Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <MonsterContainer\n          dataLength={monsters.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {monsters!.map((monster: Monster, index: number) => {\n            return <MonsterTile key={index} monster={monster}></MonsterTile>;\n          })}\n        </MonsterContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterDetail = ({ monster }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = (monsterId: number | undefined) => {\n    remove(\"monsters\", monsterId);\n    history.goBack();\n  };\n  \n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj,monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteMonster(monsterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View key={index}>\n            <TraitWrapper>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceDetail = ({ race }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = (raceId: number | undefined) => {\n    remove(\"races\", raceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj,race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteRace(raceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React, { useState } from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${subrace.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={subrace} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceDetail = ({ subrace }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = (subraceId: number | undefined) => {\n    remove(\"subraces\", subraceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj,subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubrace(subraceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={abilityScores}\n        sort={sort}\n        field={\"abilityScores\"}\n        label=\"Ability Scores\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <RaceContainer\n          dataLength={races.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {races!.map((race: Race, index: number) => {\n            return <RaceTile key={index} race={race}></RaceTile>;\n          })}\n        </RaceContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n        <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${item.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={item} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemDetail = ({ item }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = (itemId: number | undefined) => {\n    remove(\"items\", itemId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj,item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n  \n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteItem(itemObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ItemContainer\n          dataLength={items.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {items!.map((item: Item, index: number) => {\n            return <ItemTile key={index} item={item}></ItemTile>;\n          })}\n        </ItemContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${classe.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={classe} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassDetail = ({ classe }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = (classeId: number | undefined) => {\n    remove(\"classes\", classeId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteClass(classObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses] = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ClassContainer\n          dataLength={classes.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n        </ClassContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          <PropWrapper>\n            {!send && (\n              <TextButton\n                text={`Send ${subclass.name}`}\n                icon={faPaperPlane}\n                onClick={() => setSend(true)}\n              />\n            )}\n            {!!send && <P2PSender data={subclass} mode={\"THIS\"} />}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassDetail = ({ subclass }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = (subclassId: number | undefined) => {\n    remove(\"subclasses\", subclassId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj,subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubclass(subclassObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport P2PSender from \"../../../P2P/P2PSender\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n      <View>\n        <PropWrapper>\n          {!send && (\n            <TextButton\n              text={`Send ${char.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={char} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharDetail = ({ char }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = (charId: number | undefined) => {\n    remove(\"chars\", charId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar(charObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <CharContainer\n          dataLength={chars.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {chars!.map((char: Char, index: number) => {\n            return <CharTile key={index} char={char}></CharTile>;\n          })}\n        </CharContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport StringField from \"../FormElements/StringField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst EncounterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Encounter\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default EncounterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 120px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../Loading\";\nimport EncounterTile from \"./EncounterTile\";\nimport EncounterSearchBar from \"./EncounterSearchBar\";\n\nconst EncounterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEncounters, setAllEncounters] = useState<Encounter[]>([]);\n  const [encounters, setEncounters] = useState<Encounter[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"encounters\", filters, (results: any[]) => {\n      setAllEncounters(results);\n      setEncounters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (encounters.length === allEncounters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEncounters((s) =>\n      s.concat(allEncounters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <EncounterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <EncounterContainer\n        dataLength={encounters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {encounters!.map((encounter: Encounter, index: number) => {\n          return <EncounterTile key={index} encounter={encounter}></EncounterTile>;\n        })}\n      </EncounterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default EncounterOverview;\n\nconst EncounterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import Encounter from \"../Data/Encounter/Encounter\";\nimport Player from \"../Data/Encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport IEntity from \"../../../Data/IEntity\";\nimport { isMonster } from \"../../../Data/Monster\";\nimport { reciveByAttribute } from \"../../../Services/DatabaseService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport AutoStringField from \"../../FormElements/AutoStringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport TextButton from \"../../FormElements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport { rollDie } from \"../../../Services/DiceService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport TinyNumberField from \"../../FormElements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterDetail = ({ encounter }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteEncounter(encounterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView\n          encounter={encounterObj}\n          onEdit={(value) => editEncounter(value)}\n        />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          onEdit={(value) => editAndSaveEncounter(value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(\n    db.encounters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItem(db.encounters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToEncounter;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CostRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const costs = await reciveAttributeSelectionPromise(\"gears\", \"cost\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cost of costs) {\n      if (cost !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"cost\",\n          cost.toString()\n        );\n        promList.push({\n          name: cost.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cost Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CostRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst DamageRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"damage\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"damage\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Damage Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default DamageRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst GearTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"type\",\n          type as number\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default GearTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst WeightRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const weights = await reciveAttributeSelectionPromise(\"gears\", \"weight\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const weight of weights) {\n      if (weight !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"weight\",\n          weight.toString()\n        );\n        promList.push({\n          name: weight.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Weight Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default WeightRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reciveCountPromise } from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AmountOfEntitiesChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeGeneralCountsData();\n  }, []);\n\n  const makeGeneralCountsData = async () => {\n    let promList: { name: string; count: number }[] = [];\n    promList.push({\n      name: \"spells\",\n      count: await reciveCountPromise(\"spells\"),\n    });\n    promList.push({ name: \"gears\", count: await reciveCountPromise(\"gears\") });\n    promList.push({ name: \"items\", count: await reciveCountPromise(\"items\") });\n    promList.push({\n      name: \"monsters\",\n      count: await reciveCountPromise(\"monsters\"),\n    });\n    promList.push({ name: \"races\", count: await reciveCountPromise(\"races\") });\n    promList.push({\n      name: \"subraces\",\n      count: await reciveCountPromise(\"subraces\"),\n    });\n    promList.push({\n      name: \"classes\",\n      count: await reciveCountPromise(\"classes\"),\n    });\n    promList.push({\n      name: \"subclasses\",\n      count: await reciveCountPromise(\"subclasses\"),\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Amount of Entities</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AmountOfEntitiesChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 20em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AttunmentRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const attunments = await reciveAttributeSelectionPromise(\"items\", \"attunment\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const attunment of attunments) {\n      if (attunment !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"attunment\",\n          attunment as number\n        );\n        promList.push({\n          name: attunment.toString() === \"0\" ? \"no attunment\" : \"attunment\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Attunment Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AttunmentRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst BaseRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const bases = await reciveAttributeSelectionPromise(\"items\", \"base\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const base of bases) {\n      if (base !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"base\",\n          base.toString()\n        );\n        promList.push({\n          name: base.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Base Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default BaseRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ItemTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"items\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ItemTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MagicBonusRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const magicBoni = await reciveAttributeSelectionPromise(\n      \"items\",\n      \"magicBonus\"\n    );\n\n    let promList: { name: string; count: number }[] = [];\n    for (const magicBonus of magicBoni) {\n      if (magicBonus !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"magicBonus\",\n          magicBonus as number\n        );\n        promList.push({\n          name: \"+\" + magicBonus.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MagicBonusRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RarityRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\"items\", \"rarity\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"rarity\",\n          rarity.toString()\n        );\n        promList.push({\n          name: rarity.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RarityRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CrRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const crs = await reciveAttributeSelectionPromise(\"monsters\", \"cr\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cr of crs) {\n      if (cr !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"cr\",\n          cr as number\n        );\n        promList.push({\n          name: cr.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cr Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CrRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LegendaryRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\n      \"monsters\",\n      \"lAblt\"\n    );\n\n    let leg = 0;\n    let noleg = 0;\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        leg += count;\n      } else {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        noleg += count;\n      }\n    }\n\n    promList.push({\n      name: \"Legendary\",\n      count: leg,\n    });\n    promList.push({\n      name: \"no Legendary\",\n      count: noleg,\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Legendary Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LegendaryRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MonsterTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"monsters\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MonsterTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ActionsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    let times = await reciveAttributeSelectionPromise(\"spells\", \"time\");\n    console.log(times);\n\n    let newTimes:string[] = [];\n    times.forEach((time) => {\n      if(!time.toString().startsWith(\"1 reaction\")) {\n        newTimes.push(time.toString());\n      }\n    })\n\n    let promList: { name: string; count: number }[] = [];\n    for (const time of newTimes) {\n      if (time !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"time\",\n          time.toString()\n        );\n        promList.push({\n          name: time.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Time Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ActionsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800em;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LevelRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const levels = await reciveAttributeSelectionPromise(\"spells\", \"level\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const level of levels) {\n      if (level !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"level\",\n          level as number\n        );\n        promList.push({\n          name: \"Level \" + level.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Level Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LevelRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RitualRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rituals = await reciveAttributeSelectionPromise(\"spells\", \"ritual\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const ritual of rituals) {\n      if (ritual !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"ritual\",\n          ritual as number\n        );\n        promList.push({\n          name: ritual.toString() === \"0\" ? \"no Ritual\" : \"Ritual\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Ritual Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RitualRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst SchoolsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const schools = await reciveAttributeSelectionPromise(\"spells\", \"school\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const school of schools) {\n      if (school !== \"\")\n        promList.push({\n          name: school.toString(),\n          count: await recivePromiseByAttributeCount(\n            \"spells\",\n            \"school\",\n            school.toString()\n          ),\n        });\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>School Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default SchoolsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport CostRatioChart from \"./Gear/CostRatioChart\";\nimport DamageRatioChart from \"./Gear/DamageRatioChart\";\nimport GearTypeRatioChart from \"./Gear/GearTypeRatioChart\";\nimport WeightRatioChart from \"./Gear/WeightRatioChart\";\nimport AmountOfEntitiesChart from \"./General/AmountOfEntitiesChart\";\nimport AttunmentRatioChart from \"./Items/AttunmentRatioChart\";\nimport BaseRatioChart from \"./Items/BaseRatioChart\";\nimport ItemTypeRatioChart from \"./Items/ItemTypeRatioChart\";\nimport MagicBonusRatioChart from \"./Items/MagicBonusRatioChart\";\nimport RarityRatioChart from \"./Items/RarityRatioChart\";\nimport CrRatioChart from \"./Monsters/CrRatioChart\";\nimport LegendaryRatioChart from \"./Monsters/LegendaryRatioChart\";\nimport MonsterTypeRatioChart from \"./Monsters/MonsterTypeRatioChart\";\nimport ActionsRatioChart from \"./Spells/ActionsRatioChart\";\nimport LevelRatioChart from \"./Spells/LevelRatioChart\";\nimport RitualRatioChart from \"./Spells/RitualRatioChart\";\nimport SchoolsRatioChart from \"./Spells/SchoolsRatioChart\";\n\nconst Statistics = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Gears\", \"Magic Items\", \"Monsters\"]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <OptionTab>\n          <AmountOfEntitiesChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <SchoolsRatioChart />\n          <LevelRatioChart />\n          <RitualRatioChart />\n          <ActionsRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <GearTypeRatioChart />\n          <DamageRatioChart />\n          <CostRatioChart />\n          <WeightRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <RarityRatioChart />\n          <AttunmentRatioChart />\n          <MagicBonusRatioChart />\n          <BaseRatioChart />\n          <ItemTypeRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <LegendaryRatioChart />\n          <MonsterTypeRatioChart />\n          <CrRatioChart />\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Statistics;\n\nconst OptionTab = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{book.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              {book.pages}\n            </RowProp>\n            <RowProp>\n              <FontAwesomeIcon icon={faTags} />\n              {book.tags &&\n                book.tags.map((tag: string, index: number) => (\n                  <Tag key={index}>{tag}</Tag>\n                ))}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","export default class Book {\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\nimport Filter from \"../../Data/Filter\";\nimport Book from \"../../Data/Book\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport NumberField from \"../FormElements/NumberField\";\nimport StringSearchField from \"../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst LibrarySearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={tags}\n        sort={sort}\n        field={\"tags\"}\n        label=\"Tags\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTags(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField\n        value={pages}\n        label=\"Pages\"\n        onChange={(pages: number) => setPages(pages)}\n      />\n\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Book\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default LibrarySearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport { LoadingSpinner } from \"../Loading\";\nimport BookTile from \"./BookTile\";\nimport LibrarySearchBar from \"./LibrarySearchBar\";\n\nconst Library = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allBooks, setAllBooks] = useState<Book[]>([]);\n  const [books, setBooks] = useState<Book[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"books\", filters, (results: any[]) => {\n      setAllBooks(results);\n      setBooks(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (books.length === allBooks.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setBooks((s) =>\n      s.concat(allBooks.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <LibrarySearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={books.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {books!.map((book: Book, index: number) => {\n            return <BookTile key={index} book={book}></BookTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default Library;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport FileField from \"../../FormElements/FileField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          accept=\".pdf\"\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookDetail = ({ book }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = (bookId: number | undefined) => {\n    remove(\"books\", bookId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj,book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateBook(\"books\", bookObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteBook(bookObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { id: string };\n\nconst IdToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItem(db.books, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && book !== undefined ? (\n        <BookDetail book={book} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToBook;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined ? (\n        <BookDetail book={book} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToBook;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\nimport EncounterOverview from \"./components/Encounters/EncounterOverview\";\nimport NameToEncounter from \"./components/Encounters/Detail/LinkWrapper/NameToEncounter\";\nimport IdToEncounter from \"./components/Encounters/Detail/LinkWrapper/IdToEncounter\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Library from \"./components/Library/Library\";\nimport IdToBook from \"./components/Library/Detail/LinkWrapper/IdToBook\";\nimport NameToBook from \"./components/Library/Detail/LinkWrapper/NameToBook\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Options}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n          <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n          <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n          <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n          <Route path=\"/statistics\" component={Statistics}></Route>\n          <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n          <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n          <Route path=\"/library\" component={Library}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}