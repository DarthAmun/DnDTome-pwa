{"version":3,"sources":["data/Filter.tsx","components/form_elements/CheckField.tsx","hooks/QueryHook.tsx","data/Book.tsx","data/Feat.tsx","data/Background.tsx","../../node_modules/tslib/tslib.es6.js","../../node_modules/throttle-debounce/dist/index.esm.js","components/entities/campaigns/CampaignSearchBar.tsx","components/form_elements/StringSearchField.tsx","components/entities/chars/CharSearchBar.tsx","components/entities/encounters/EncounterSearchBar.tsx","components/entities/events/EventSearchBar.tsx","components/entities/gear/GearSearchBar.tsx","components/entities/groups/GroupSearchBar.tsx","components/entities/items/ItemSearchBar.tsx","components/entities/locations/LocationSearchBar.tsx","components/entities/monsters/MonsterSearchBar.tsx","components/entities/npcs/NpcSearchBar.tsx","components/entities/quests/QuestSearchBar.tsx","components/entities/races/RaceSearchBar.tsx","components/entities/random_tables/RandomTableSearchBar.tsx","components/entities/selections/SelectionSearchBar.tsx","components/entities/spells/SpellSearchBar.tsx","components/entities/worlds/WorldSearchBar.tsx","components/entities/classes/ClassSearchBar.tsx","components/entities/library/BookSearchBar.tsx","components/entities/library/BookTile.tsx","components/entities/selections/SelectionTile.tsx","components/entities/backgrounds/BackgroundSearchBar.tsx","components/entities/backgrounds/BackgroundTile.tsx","components/entities/feats/FeatSearchBar.tsx","components/entities/feats/FeatTile.tsx","components/general_elements/EntityOverview.tsx"],"names":["Filter","filedName","value","sort","fieldName","this","CheckField","label","icon","transform","onChange","Field","LabelText","Icon","Input","type","defaultChecked","e","target","checked","Checkmark","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","buttons","useQuery","URLSearchParams","useLocation","search","Book","id","name","cover","data","pages","tags","Blob","Feat","sources","prerequisite","description","Background","proficiencies","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","assign","t","s","i","n","arguments","length","prototype","call","apply","delay","noTrailing","callback","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","self","elapsed","Date","now","args","exec","clear","undefined","setTimeout","cancel","__","constructor","create","CampaignSearchBar","useState","open","setOpen","filters","setFilters","history","useHistory","setName","StringField","IconButton","onClick","newFilters","push","JSON","stringify","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","newCampaign","Campaign","createNewWithId","createNewCampaign","faPlusCircle","exportFilteredFromTable","faFileExport","StringSearchField","field","mobile","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CharSearchBar","campaign","setCampaign","setSources","setSort","faLink","map","filter","EncounterSearchBar","newEncounter","Encounter","createNewEncounter","EventSearchBar","date","setDate","rotation","newEvent","Event","createNewEvent","GearSearchBar","cost","setCost","weight","setWeight","setType","typeList","setTypeList","properties","setProperties","damage","setDamage","setDescription","useEffect","reciveAttributeSelection","result","types","toString","faCoins","faWeightHanging","faCrosshairs","MultipleSelectField","options","faBook","newGear","Gear","createNewGear","GroupSearchBar","onSend","newGroup","Group","createNewGroup","ItemSearchBar","rarity","setRarity","rarityList","setRarityList","base","setBase","baseList","setBaseList","attunment","setAttunment","rarities","bases","newItem","Item","createNewItem","LocationSearchBar","newLocation","Location","createNewLocation","MonsterSearchBar","cr","setCr","subtype","setSubType","subtypeList","setSubTypeList","alignment","setAlignment","speed","setSpeed","senses","setSenses","lang","setLang","skills","setSkills","dmgVulnerabilitie","setDmgVulnerabilitie","dmgResistance","setDmgResistance","dmgImmunities","setDmgImmunities","conImmunities","setConImmunities","ablt","setAblt","sAblt","setSAblt","lAblt","setLAblt","subtypes","NumberField","newMonster","Monster","createNewMonster","NpcSearchBar","newNpc","Npc","createNewNpc","QuestSearchBar","newQuest","Quest","createNewQuest","RaceSearchBar","abilityScores","setAbilityScores","newRace","Race","createNewRace","RandomTableSearchBar","newRandomTable","RandomTable","createNewRandomTable","SelectionSearchBar","newSelection","Selection","createNewSelection","SpellSearchBar","school","setSchool","schoolList","setSchoolList","level","setLevel","levelList","setLevelList","ritual","setRitual","time","setTime","range","setRange","duration","setDuration","components","setComponents","text","setText","classes","setClasses","schools","levels","faHistory","faPowerOff","rotate","faHourglassHalf","faMortarPestle","faUser","faBookOpen","newSpell","Spell","createNewSpell","WorldSearchBar","newWorld","World","createNewWorld","ClassSearchBar","newClass","Class","createNewClass","BookSearchBar","setTags","setPages","newBook","createNewBook","BookTile","book","getPicture","useCallback","Tile","to","pic","PropWrapper","Name","PropRowWrapper","RowProp","faTags","tag","index","Tag","Link","boxShadow","headerColor","Image","ImgContainer","ImageElm","src","Empty","img","span","backgroundColorLink","SelectionTile","selection","WideProp","selectionOptions","Prop","BackgroundSearchBar","newBackground","createNewBackground","BackgroundTile","background","FeatSearchBar","newFeat","createNewFeat","FeatTile","feat","EntityContainer","EntityOverview","match","rawFilters","get","entityName","setEntityName","setFilter","allEntitys","setAllEntitys","entitys","setEntitys","start","end","hasMore","scrollParam","setParam","parse","newMatch","path","split","includes","replaceAll","reciveAllFiltered","results","slice","searchbars","classe","event","gear","group","item","location","monster","npc","quest","race","randomTable","spell","world","char","encounter","tiles","CampaignTile","ClassTile","EventTile","GearTile","GroupTile","ItemTile","LocationTile","MonsterTile","NpcTile","QuestTile","RaceTile","RandomTableTile","SpellTile","WorldTile","CharTile","EncounterTile","React","createElement","style","width","dataLength","next","concat","loader","Loading","entity","key","InfiniteScroll"],"mappings":"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","file":"static/js/16.4d9be8f2.chunk.js","sourcesContent":["export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Feat implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  prerequisite: string;\n  description: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    prerequisite?: string,\n    description?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.prerequisite = prerequisite || \"\";\n    this.sources = sources || \"\";\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Background implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  proficiencies: string;\n  description: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    proficiencies?: string,\n    description?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.description = description || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.sources = sources || \"\";\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nfunction throttle (delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    var args = arguments;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, args);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\n\nfunction debounce (delay, atBegin, callback) {\n  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n}\n\nexport { throttle, debounce };\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst CampaignSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/campaign-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/campaign-overview}`);\n  };\n\n  const createNewCampaign = () => {\n    let newCampaign = new Campaign();\n    delete newCampaign.id;\n    createNewWithId(\"campaigns\", newCampaign, (id) => {\n      history.push(`/campaign-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"campaigns\", filters, \"DnDTome_filtered_campaigns.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewCampaign()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CampaignSearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  mobile?: boolean;\n  onChange: (value: string, sort: { name: string; label: string; sort: number }) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  mobile,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field mobile={mobile === undefined ? true : mobile}>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onChange(e.target.value, sort)}></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />}\n          {sort.sort === 2 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleDown} />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\ntype MobileType = {\n  mobile?: boolean;\n};\n\nconst Field = styled.label<MobileType>`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ mobile }) => (!mobile ? \"@media (max-width: 576px) {display: none;}\" : \"\")}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst CharSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [campaign, setCampaign] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (campaign !== \"\") {\n      newFilters = [...newFilters, new Filter(\"campaign\", campaign)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/char-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCampaign(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/char-overview}`);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"chars\", filters, \"DnDTome_filtered_chars.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={campaign}\n          sort={sort}\n          field={\"campaign\"}\n          label=\"Campaign\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setCampaign(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CharSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../../data/encounter/Encounter\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport {\n  FixedBar,\n  SearchBar,\n  CreateButton,\n  ExportButton,\n  LeftTooltip,\n  JoinButton,\n} from \"../../SearchbarStyle\";\nimport { MdGroupAdd } from \"react-icons/md\";\n\nconst EncounterSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/encounter-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/encounter-overview}`);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const joinRoom = () => {\n    history.push(`/encounter-room`);\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"encounters\", filters, \"DnDTome_filtered_encounters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n      <JoinButton onClick={() => joinRoom()}>\n        <MdGroupAdd />\n        <LeftTooltip>Join Encounter</LeftTooltip>\n      </JoinButton>\n    </>\n  );\n};\n\nexport default EncounterSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Event from \"../../../data/world/Event\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst EventSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [date, setDate] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (date !== \"\") {\n      newFilters = [...newFilters, new Filter(\"date\", date)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/event-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDate(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/event-overview}`);\n  };\n\n  const createNewEvent = () => {\n    let newEvent = new Event();\n    delete newEvent.id;\n    createNewWithId(\"events\", newEvent, (id) => {\n      history.push(`/event-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"events\", filters, \"DnDTome_filtered_events.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={date}\n          sort={sort}\n          field={\"date\"}\n          label=\"Date\"\n          onChange={(date: string, sort: { name: string; label: string; sort: number }) => {\n            setDate(date);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} rotation={90} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewEvent()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default EventSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Gear from \"../../../data/Gear\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst GearSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/gear-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/gear-overview}`);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"gears\", filters, \"DnDTome_filtered_gears.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={cost}\n          sort={sort}\n          field={\"cost\"}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setCost(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={weight}\n          sort={sort}\n          field={\"weight\"}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setWeight(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={damage}\n          sort={sort}\n          field={\"damage\"}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDamage(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={properties}\n          sort={sort}\n          field={\"properties\"}\n          label=\"Properties\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setProperties(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default GearSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Group from \"../../../data/campaign/Group\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GroupSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/group-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/group-overview}`);\n  };\n\n  const createNewGroup = () => {\n    let newGroup = new Group();\n    delete newGroup.id;\n    createNewWithId(\"groups\", newGroup, (id) => {\n      history.push(`/group-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"groups\", filters, \"DnDTome_filtered_groups.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewGroup()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default GroupSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport Item from \"../../../data/Item\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst ItemSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>([]);\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/item-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/item-overview`);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"items\", filters, \"DnDTome_filtered_items.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={rarityList}\n          label=\"Rarities\"\n          onChange={(rarities: string[]) => setRarity(rarities)}\n        />\n        <MultipleSelectField\n          options={baseList}\n          label=\"Bases\"\n          onChange={(bases: string[]) => setBase(bases)}\n        />\n        <CheckField\n          value={!!attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ItemSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Location from \"../../../data/world/Location\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst LocationSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/location-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/location-overview}`);\n  };\n\n  const createNewLocation = () => {\n    let newLocation = new Location();\n    delete newLocation.id;\n    createNewWithId(\"locations\", newLocation, (id) => {\n      history.push(`/location-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"locations\", filters, \"DnDTome_filtered_locations.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewLocation()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default LocationSearchBar;\n","import {\n  faFileExport,\n  faLink,\n  faPlusCircle,\n  faRedoAlt,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport Monster from \"../../../data/Monster\";\nimport {\n  createNewWithId,\n  exportFilteredFromTable,\n  reciveAttributeSelection,\n} from \"../../../services/DatabaseService\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { CreateButton, ExportButton, FixedBar, LeftTooltip, SearchBar } from \"../../SearchbarStyle\";\n\nconst MonsterSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/monster-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/monster-overview`);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"monsters\", filters, \"DnDTome_filtered_monsters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Type\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={subtypeList}\n          label=\"Subtype\"\n          onChange={(subtypes: string[]) => setSubType(subtypes)}\n        />\n        <StringSearchField\n          value={alignment}\n          sort={sort}\n          field={\"alignment\"}\n          label=\"Alignment\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAlignment(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={speed}\n          sort={sort}\n          field={\"speed\"}\n          label=\"Speed\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSpeed(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={skills}\n          sort={sort}\n          field={\"skills\"}\n          label=\"Skills\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSkills(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={senses}\n          sort={sort}\n          field={\"senses\"}\n          label=\"Senses\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSenses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={lang}\n          sort={sort}\n          field={\"lang\"}\n          label=\"Languages\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLang(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgVulnerabilitie}\n          sort={sort}\n          field={\"dmgVulnerabilitie\"}\n          label=\"Vulnerabilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgVulnerabilitie(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgResistance}\n          sort={sort}\n          field={\"dmgResistance\"}\n          label=\"Resistances\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgResistance(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgImmunities}\n          sort={sort}\n          field={\"dmgImmunities\"}\n          label=\"Immunities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={conImmunities}\n          sort={sort}\n          field={\"conImmunities\"}\n          label=\"Con. Immun.\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setConImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={ablt}\n          sort={sort}\n          field={\"ablt\"}\n          label=\"Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={sAblt}\n          sort={sort}\n          field={\"sAblt\"}\n          label=\"Spezial Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={lAblt}\n          sort={sort}\n          field={\"lAblt\"}\n          label=\"Legendary Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default MonsterSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst NpcSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/npc-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/npc-overview}`);\n  };\n\n  const createNewNpc = () => {\n    let newNpc = new Npc();\n    delete newNpc.id;\n    createNewWithId(\"npcs\", newNpc, (id) => {\n      history.push(`/npc-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"npcs\", filters, \"DnDTome_filtered_npcs.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewNpc()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default NpcSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst QuestSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/quest-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/quest-overview}`);\n  };\n\n  const createNewQuest = () => {\n    let newQuest = new Quest();\n    delete newQuest.id;\n    createNewWithId(\"quests\", newQuest, (id) => {\n      history.push(`/quest-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"quests\", filters, \"DnDTome_filtered_quests.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewQuest()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default QuestSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Race from \"../../../data/races/Race\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst RaceSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/race-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/race-overview)}`);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"races\", filters, \"DnDTome_filtered_races.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={abilityScores}\n          sort={sort}\n          field={\"abilityScores\"}\n          label=\"Ability Scores\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => setSources(sources)}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RaceSearchBar;\n","import { faFileExport, faPlusCircle, faRedoAlt, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { CreateButton, ExportButton, FixedBar, LeftTooltip, SearchBar } from \"../../SearchbarStyle\";\n\nconst RandomTableSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/randomTable-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/randomTable-overview}`);\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable(0, \"New\");\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"randomTables\", filters, \"DnDTome_filtered_randomTables.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRandomTable()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RandomTableSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Selection from \"../../../data/Selection\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst SelectionSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/selection-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/selection-overview}`);\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"selections\", filters, \"DnDTome_filtered_selections.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSelection()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SelectionSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Spell from \"../../../data/Spell\";\nimport {\n  FixedBar,\n  FieldGroup,\n  SearchBar,\n  CreateButton,\n  ExportButton,\n  LeftTooltip,\n} from \"../../SearchbarStyle\";\n\nconst SpellSearchBar = () => {\n  let history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<{ value: string; label: string }[]>([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<{ value: string; label: string }[]>([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/spell-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/spell-overview`);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"spells\", filters, \"DnDTome_filtered_spells.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={schoolList}\n          label=\"School\"\n          onChange={(schools: string[]) => setSchool(schools)}\n        />\n        <FieldGroup>\n          <MultipleSelectField\n            options={levelList}\n            label=\"Level\"\n            onChange={(levels: string[]) =>\n              setLevel(\n                levels.map((level) => {\n                  return +level;\n                })\n              )\n            }\n          />\n          <CheckField\n            value={!!ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n          />\n        </FieldGroup>\n        <StringSearchField\n          value={time}\n          sort={sort}\n          field={\"time\"}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time: string, sort: { name: string; label: string; sort: number }) => {\n            setTime(time);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={range}\n          sort={sort}\n          field={\"range\"}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setRange(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={duration}\n          sort={sort}\n          field={\"duration\"}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDuration(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={components}\n          sort={sort}\n          field={\"components\"}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setComponents(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={classes}\n          sort={sort}\n          field={\"classes\"}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setClasses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={text}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setText(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} rotation={90} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SpellSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport World from \"../../../data/world/World\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst WorldSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/world-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/world-overview}`);\n  };\n\n  const createNewWorld = () => {\n    let newWorld = new World();\n    delete newWorld.id;\n    createNewWithId(\"worlds\", newWorld, (id) => {\n      history.push(`/world-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"worlds\", filters, \"DnDTome_filtered_worlds.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewWorld()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default WorldSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Class from \"../../../data/classes/Class\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst ClassSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/classe-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/classe-overview}`);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/classe-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"classes\", filters, \"DnDTome_filtered_classes.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ClassSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../../services/DatabaseService\";\nimport Filter from \"../../../data/Filter\";\nimport Book from \"../../../data/Book\";\n\nimport { faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst BookSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    history.push(`/book-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/book-overview}`);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={tags}\n          sort={sort}\n          field={\"tags\"}\n          label=\"Tags\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setTags(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={pages} label=\"Pages\" onChange={(pages: number) => setPages(pages)} />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n    </>\n  );\n};\n\nexport default BookSearchBar;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../../data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n\n        <PropRowWrapper>\n          <RowProp>\n            <GiResize />\n            {book.pages}\n          </RowProp>\n          <RowProp>\n            <FontAwesomeIcon icon={faTags} />\n            {book.tags &&\n              book.tags.map((tag: string, index: number) => <Tag key={index}>{tag}</Tag>)}\n          </RowProp>\n        </PropRowWrapper>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Selection from \"../../../data/Selection\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionTile = ({ selection }: $Props) => {\n  return (\n    <Tile to={\"/selection-detail/id/\" + selection.id}>\n      <Name>\n        <b>{selection.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>Options: {selection.selectionOptions.length}</WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default SelectionTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Background from \"../../../data/Background\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst BackgroundSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/background-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/background-overview}`);\n  };\n\n  const createNewBackground = () => {\n    let newBackground = new Background();\n    delete newBackground.id;\n    createNewWithId(\"backgrounds\", newBackground, (id) => {\n      history.push(`/background-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"backgrounds\", filters, \"DnDTome_filtered_backgrounds.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewBackground()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default BackgroundSearchBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Background from \"../../../data/Background\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  background: Background;\n}\n\nconst BackgroundTile = ({ background }: $Props) => {\n  return (\n    <Tile to={\"/background-detail/id/\" + background.id}>\n      <Name>\n        <b>{background.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {background.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default BackgroundTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Feat from \"../../../data/Feat\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst FeatSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/feat-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/feat-overview}`);\n  };\n\n  const createNewFeat = () => {\n    let newFeat = new Feat();\n    delete newFeat.id;\n    createNewWithId(\"feats\", newFeat, (id) => {\n      history.push(`/feat-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"feats\", filters, \"DnDTome_filtered_feats.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewFeat()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default FeatSearchBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Feat from \"../../../data/Feat\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  feat: Feat;\n}\n\nconst FeatTile = ({ feat }: $Props) => {\n  return (\n    <Tile to={\"/feat-detail/id/\" + feat.id}>\n      <Name>\n        <b>{feat.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>\n          <Icon icon={faLink} />\n          {feat.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default FeatTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFiltered } from \"../../services/DatabaseService\";\n\nimport { LoadingSpinner } from \"../Loading\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport CampaignSearchBar from \"../entities/campaigns/CampaignSearchBar\";\nimport CharSearchBar from \"../entities/chars/CharSearchBar\";\nimport EncounterSearchBar from \"../entities/encounters/EncounterSearchBar\";\nimport EventSearchBar from \"../entities/events/EventSearchBar\";\nimport GearSearchBar from \"../entities/gear/GearSearchBar\";\nimport GroupSearchBar from \"../entities/groups/GroupSearchBar\";\nimport ItemSearchBar from \"../entities/items/ItemSearchBar\";\nimport LocationSearchBar from \"../entities/locations/LocationSearchBar\";\nimport MonsterSearchBar from \"../entities/monsters/MonsterSearchBar\";\nimport NpcSearchBar from \"../entities/npcs/NpcSearchBar\";\nimport QuestSearchBar from \"../entities/quests/QuestSearchBar\";\nimport RaceSearchBar from \"../entities/races/RaceSearchBar\";\nimport RandomTableSearchBar from \"../entities/random_tables/RandomTableSearchBar\";\nimport SelectionSearchBar from \"../entities/selections/SelectionSearchBar\";\nimport SpellSearchBar from \"../entities/spells/SpellSearchBar\";\nimport WorldSearchBar from \"../entities/worlds/WorldSearchBar\";\nimport ClassSearchBar from \"../entities/classes/ClassSearchBar\";\nimport BookSearchBar from \"../entities/library/BookSearchBar\";\n\nimport CampaignTile from \"../entities/campaigns/CampaignTile\";\nimport CharTile from \"../entities/chars/CharTile\";\nimport ClassTile from \"../entities/classes/ClassTile\";\nimport EncounterTile from \"../entities/encounters/EncounterTile\";\nimport EventTile from \"../entities/events/EventTile\";\nimport GearTile from \"../entities/gear/GearTile\";\nimport GroupTile from \"../entities/groups/GroupTile\";\nimport ItemTile from \"../entities/items/ItemTile\";\nimport BookTile from \"../entities/library/BookTile\";\nimport LocationTile from \"../entities/locations/LocationTile\";\nimport MonsterTile from \"../entities/monsters/MonsterTile\";\nimport NpcTile from \"../entities/npcs/NpcTile\";\nimport QuestTile from \"../entities/quests/QuestTile\";\nimport RaceTile from \"../entities/races/RaceTile\";\nimport RandomTableTile from \"../entities/random_tables/RandomTableTile\";\nimport SelectionTile from \"../entities/selections/SelectionTile\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport WorldTile from \"../entities/worlds/WorldTile\";\nimport { useQuery } from \"../../hooks/QueryHook\";\nimport BackgroundSearchBar from \"../entities/backgrounds/BackgroundSearchBar\";\nimport BackgroundTile from \"../entities/backgrounds/BackgroundTile\";\nimport FeatSearchBar from \"../entities/feats/FeatSearchBar\";\nimport FeatTile from \"../entities/feats/FeatTile\";\n\nconst EntityOverview = ({ match }: RouteComponentProps) => {\n  const rawFilters = useQuery().get(\"filter\");\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEntitys, setAllEntitys] = useState<IEntity[]>([]);\n  const [entitys, setEntitys] = useState<IEntity[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    if (rawFilters !== null) setFilter(JSON.parse(rawFilters));\n    else setFilter([]);\n    setAllEntitys([]);\n    setEntitys([]);\n    setParam({\n      start: 100,\n      end: 120,\n      hasMore: true,\n    });\n    let newMatch: string = match.path\n      .split(\"/\")\n      .filter((match: string) => match.includes(\"-overview\"))[0]\n      .replaceAll(\"-overview\", \"\");\n    setEntityName(newMatch);\n  }, [match, rawFilters]);\n\n  useEffect(() => {\n    if (entityName !== \"\")\n      reciveAllFiltered(entityName + \"s\", filters, (results: any[]) => {\n        setAllEntitys(results);\n        setEntitys(results.slice(0, 100));\n        if (results.length === 0) {\n          setParam({\n            start: 0,\n            end: 0,\n            hasMore: false,\n          });\n        }\n      });\n  }, [filters, entityName]);\n\n  const fetchMoreData = () => {\n    if (entitys.length === allEntitys.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEntitys((s) => s.concat(allEntitys.slice(scrollParam.start, scrollParam.end)));\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  const searchbars = {\n    campaign: CampaignSearchBar,\n    classe: ClassSearchBar,\n    event: EventSearchBar,\n    gear: GearSearchBar,\n    group: GroupSearchBar,\n    item: ItemSearchBar,\n    book: BookSearchBar,\n    location: LocationSearchBar,\n    monster: MonsterSearchBar,\n    npc: NpcSearchBar,\n    quest: QuestSearchBar,\n    race: RaceSearchBar,\n    randomTable: RandomTableSearchBar,\n    selection: SelectionSearchBar,\n    spell: SpellSearchBar,\n    world: WorldSearchBar,\n    char: CharSearchBar,\n    encounter: EncounterSearchBar,\n    feat: FeatSearchBar,\n    background: BackgroundSearchBar,\n  };\n\n  const tiles = {\n    campaign: CampaignTile,\n    classe: ClassTile,\n    event: EventTile,\n    gear: GearTile,\n    group: GroupTile,\n    item: ItemTile,\n    book: BookTile,\n    location: LocationTile,\n    monster: MonsterTile,\n    npc: NpcTile,\n    quest: QuestTile,\n    race: RaceTile,\n    randomTable: RandomTableTile,\n    selection: SelectionTile,\n    spell: SpellTile,\n    world: WorldTile,\n    char: CharTile,\n    encounter: EncounterTile,\n    feat: FeatTile,\n    background: BackgroundTile,\n  };\n\n  return (\n    <>\n      {entityName !== \"\" && React.createElement(searchbars[entityName], {})}\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <EntityContainer\n          dataLength={entitys.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {entityName !== \"\" &&\n            entitys.length > 0 &&\n            entitys!.map((entity: IEntity, index: number) => {\n              return React.createElement(tiles[entityName], {\n                key: index,\n                [entityName]: entity,\n              });\n            })}\n        </EntityContainer>\n      </div>\n    </>\n  );\n};\n\nexport default EntityOverview;\n\nconst EntityContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n"],"sourceRoot":""}