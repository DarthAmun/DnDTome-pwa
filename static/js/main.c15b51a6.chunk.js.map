{"version":3,"sources":["components/Theme/Theme.tsx","components/Theme/MyThemeProvider.tsx","Database/MyDatabase.tsx","Services/DatabaseService.tsx","Data/Spell.tsx","Data/Gear.tsx","Data/Monster.tsx","Data/Races/Trait.tsx","Data/Races/Race.tsx","Data/Races/Subrace.tsx","Data/Item.tsx","Data/Classes/Feature.tsx","Data/Classes/FeatureSet.tsx","Data/Classes/Class.tsx","Data/Classes/Subclass.tsx","Data/Chars/Skills.tsx","Data/Chars/Saves.tsx","Data/Chars/Money.tsx","Data/Chars/RaceSet.tsx","Data/Chars/Char.tsx","Data/Chars/ClassSet.tsx","Data/Encounter/Encounter.tsx","Services/OptionService.tsx","components/Navigation/Header.tsx","components/Navigation/NavButton.tsx","components/Navigation/NavMenu.tsx","components/Navigation/Navigation.tsx","Hooks/MenuCloseHook.js","components/AppWrapper.tsx","components/GeneralElements/TabBar.tsx","components/FormElements/FileField.tsx","components/FormElements/IconButton.tsx","components/Loading.tsx","components/Options/Options.tsx","Services/5eToolService.tsx","components/Entities/Spells/SpellTile.tsx","Data/Filter.tsx","components/FormElements/MultipleSelectField.tsx","components/FormElements/StringSearchField.tsx","components/FormElements/CheckField.tsx","components/Entities/Spells/SpellSearchBar.tsx","components/Entities/Spells/SpellOverview.tsx","Hooks/DexieHooks.tsx","components/GeneralElements/FormatedText.tsx","components/Entities/Spells/Detail/SpellView.tsx","components/FormElements/StringField.tsx","components/FormElements/NumberField.tsx","components/FormElements/TextField.tsx","components/Entities/Spells/Detail/SpellEditView.tsx","components/FormElements/BackButton.tsx","components/Entities/Spells/Detail/SpellDetail.tsx","components/Entities/Spells/Detail/LinkWrapper/IdToSpell.tsx","components/Entities/Spells/Detail/LinkWrapper/NameToSpell.tsx","components/Entities/Gear/Detail/GearView.tsx","components/Entities/Gear/Detail/GearEditView.tsx","components/Entities/Gear/Detail/GearDetail.tsx","components/Entities/Gear/Detail/LinkWrapper/NameToGear.tsx","components/Entities/Gear/Detail/LinkWrapper/IdToGear.tsx","components/Entities/Gear/GearTile.tsx","components/Entities/Gear/GearSearchBar.tsx","components/Entities/Gear/GearOverview.tsx","components/Entities/Monster/MonsterTile.tsx","components/Entities/Monster/MonsterSearchBar.tsx","components/Entities/Monster/MonsterOverview.tsx","components/Entities/Monster/Detail/MonsterView.tsx","components/Entities/Monster/Detail/MonsterEditView.tsx","components/Entities/Monster/Detail/MonsterDetail.tsx","components/Entities/Monster/Detail/LinkWrapper/NameToMonster.tsx","components/Entities/Monster/Detail/LinkWrapper/IdToMonster.tsx","components/Entities/Races/Detail/RaceView.tsx","components/FormElements/ShortTextField.tsx","components/Entities/Races/Detail/RaceEditView.tsx","components/Entities/Races/Detail/RaceDetail.tsx","components/Entities/Races/Detail/LinkWrapper/NameToRace.tsx","components/Entities/Races/Detail/LinkWrapper/IdToRace.tsx","components/Entities/Subraces/Detail/SubraceView.tsx","components/Entities/Subraces/Detail/SubraceEditView.tsx","components/Entities/Subraces/Detail/SubraceDetail.tsx","components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace.tsx","components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace.tsx","components/Entities/Races/RaceTile.tsx","components/Entities/Races/RaceSearchBar.tsx","components/Entities/Races/RaceOverview.tsx","components/Entities/Item/Detail/ItemView.tsx","components/FormElements/AutoStringField.tsx","components/Entities/Item/Detail/ItemEditView.tsx","components/Entities/Item/Detail/ItemDetail.tsx","components/Entities/Item/Detail/LinkWrapper/NameToItem.tsx","components/Entities/Item/Detail/LinkWrapper/IdToItem.tsx","components/Entities/Item/ItemTile.tsx","components/Entities/Item/ItemSearchBar.tsx","components/Entities/Item/ItemOverview.tsx","components/Entities/Classes/Detail/ClassView.tsx","components/FormElements/NumberArrayField.tsx","components/FormElements/TextButton.tsx","components/FormElements/EnumField.tsx","components/Entities/Classes/Detail/ClassEditView.tsx","components/Entities/Classes/Detail/ClassDetail.tsx","components/Entities/Classes/Detail/LinkWrapper/NameToClass.tsx","components/Entities/Classes/Detail/LinkWrapper/IdToClass.tsx","components/Entities/Classes/ClassTile.tsx","components/Entities/Classes/ClassSearchBar.tsx","components/Entities/Classes/ClassOverview.tsx","components/Entities/Subclasses/Detail/SubclassView.tsx","components/Entities/Subclasses/Detail/SubclassEditView.tsx","components/Entities/Subclasses/Detail/SubclassDetail.tsx","components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass.tsx","components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass.tsx","components/FormElements/SmallNumberField.tsx","components/Entities/Chars/Detail/DetailComponents/CharGeneral.tsx","components/Entities/Chars/Detail/DetailComponents/CharHeader.tsx","components/Entities/Chars/Detail/DetailComponents/CharCombat.tsx","components/FormElements/SmallNumberArrayField.tsx","components/Entities/Chars/Detail/DetailComponents/CharSpells.tsx","components/Entities/Chars/Detail/CharView.tsx","components/Entities/Chars/Detail/CharEditView.tsx","components/Entities/Chars/Detail/CharDetail.tsx","components/Entities/Chars/Detail/LinkWrapper/NameToChar.tsx","components/Entities/Chars/Detail/LinkWrapper/IdToChar.tsx","components/Entities/Chars/CharTile.tsx","components/Entities/Chars/CharSearchBar.tsx","components/Entities/Chars/CharOverview.tsx","components/Entities/Chars/Lab/CharLabGeneral.tsx","components/Entities/Chars/Lab/CharLabClass.tsx","components/Entities/Chars/Lab/CharLabRace.tsx","components/Entities/Chars/Lab/CharLabAbilities.tsx","components/Entities/Chars/Lab/CharLabEquipment.tsx","components/Entities/Chars/Lab/CharLab.tsx","components/Encounters/EncounterTile.tsx","components/Encounters/EncounterSearchBar.tsx","components/Encounters/EncounterOverview.tsx","Data/Encounter/Player.tsx","Services/EncounterService.tsx","components/Encounters/Detail/EncounterEditView.tsx","Services/DiceService.tsx","components/FormElements/TinyNumberField.tsx","components/Encounters/Detail/EncounterView.tsx","components/Encounters/Detail/EncounterDetail.tsx","components/Encounters/Detail/LinkWrapper/NameToEncounter.tsx","components/Encounters/Detail/LinkWrapper/IdToEncounter.tsx","components/Statistics/Gear/CostRatioChart.tsx","components/Statistics/Gear/DamageRatioChart.tsx","components/Statistics/Gear/GearTypeRatioChart.tsx","components/Statistics/Gear/WeightRatioChart.tsx","components/Statistics/General/AmountOfEntitiesChart.tsx","components/Statistics/Items/AttunmentRatioChart.tsx","components/Statistics/Items/BaseRatioChart.tsx","components/Statistics/Items/ItemTypeRatioChart.tsx","components/Statistics/Items/MagicBonusRatioChart.tsx","components/Statistics/Items/RarityRatioChart.tsx","components/Statistics/Monsters/CrRatioChart.tsx","components/Statistics/Monsters/LegendaryRatioChart.tsx","components/Statistics/Monsters/MonsterTypeRatioChart.tsx","components/Statistics/Spells/ActionsRatioChart.tsx","components/Statistics/Spells/LevelRatioChart.tsx","components/Statistics/Spells/RitualRatioChart.tsx","components/Statistics/Spells/SchoolsRatioChart.tsx","components/Statistics/Statistics.tsx","components/Library/BookTile.tsx","Data/Book.tsx","components/Library/LibrarySearchBar.tsx","components/Library/Library.tsx","components/Library/Detail/BookView.tsx","components/Library/Detail/BookEditView.tsx","components/Library/Detail/BookDetail.tsx","components/Library/Detail/LinkWrapper/IdToBook.tsx","components/Library/Detail/LinkWrapper/NameToBook.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","buttons","color","backgroundColor","disabled","height","input","main","highlight","tile","backgroundColorLink","boxShadow","nav","size","small","width","medium","large","darkTheme","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","theme","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","MyAppDatabase","spells","items","gears","monsters","races","subraces","classes","subclasses","chars","encounters","books","version","stores","chars_spells","chars_monsters","chars_items","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","id","result","finally","close","saveNew","entity","filename","a","put","prom","remove","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","reciveByAttribute","name","where","equalsIgnoreCase","recivePromiseByAttribute","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelection","attribute","orderBy","uniqueKeys","reciveAttributeSelectionPromise","createNewWithId","Spell","sources","level","school","time","range","components","duration","ritual","text","pic","this","isSpell","arg","nameCheck","classesCheck","sourcesCheck","levelCheck","schoolCheck","timeCheck","rangeCheck","compCheck","durationCheck","ritualCheck","textCheck","picCheck","Gear","description","cost","damage","weight","properties","type","isGear","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","Monster","subtype","alignment","ac","hp","speed","cr","str","dex","con","int","wis","cha","savingThrows","skills","senses","lang","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","sAblt","ablt","lAblt","isMonster","sizeCheck","subtypeCheck","alignmentCheck","acCheck","hpCheck","speedCheck","crCheck","strCheck","dexCheck","conCheck","intCheck","wisCheck","chaCheck","savingThrowsCheck","skillsCheck","sensesCheck","langCheck","dmgVulnerabilitieCheck","dmgResistanceCheck","dmgImmunitiesCheck","conImmunitiesCheck","sAbltCheck","abltCheck","lAbltCheck","isTrait","Race","abilityScores","age","traits","isRace","abilityScoresCheck","ageCheck","traitsCheck","isArray","Subrace","isSubrace","Item","rarity","magicBonus","attunment","base","isItem","magicBonusCheck","attunmentCheck","rarityCheck","baseCheck","featureType","featureTypeArray","label","getOptionFromEnum","opt","option","toString","isFeatureSet","profBonusCheck","profBonus","featuresCheck","features","isFeature","Class","featureSets","hitDices","proficiencies","equipment","isClass","featureSetsCheck","hitDicesCheck","proficienciesCheck","equipmentCheck","Subclass","isSubclass","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","player","background","spellSlots","currencyBonis","currentHp","init","saves","actions","profsLangs","money","spellNotes","inspiration","castingHit","castingDC","isChar","playerCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","currentHpCheck","initCheck","classeCheck","classe","subclasseCheck","subclasse","isClassSet","Encounter","enemies","players","isPlaying","currentInit","roundCounter","isEncounter","enemiesCheck","playersCheck","isPlayingCheck","scanImportFileTest","json","file","failCount","failedObj","promList","scanForFormatErrors","replaceAll","Promise","all","length","itemFormatErrors","itemFailCount","Object","entries","gearFormatErrors","findGearFormattError","gearFailCount","spellFormatErrors","findSpellFormattError","spellFailCount","monsterFormatErrors","findMonsterFormattError","monsterFailCount","raceFormatErrors","findRaceFormattError","raceFailCount","subraceFormatErrors","findSubraceFormattError","subraceFailCount","classFormatErrors","findClassFormattError","classFailCount","subclassFormatErrors","formattSubclassFromattError","subclassFailCount","errors","item","gear","spell","monster","class","subclass","JSON","stringify","failedObject","Errors","exportAllFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","tableList","results","list","Header","Bar","Name","HomeCredits","packageJson","styled","div","NavButton","setOpen","Button","onClick","button","NavMenu","location","useLocation","Menu","to","className","pathname","icon","faMeteor","faDragon","faIdCard","faCog","faChartPie","primaryHover","Navigation","ref","handler","node","useRef","listener","event","current","contains","addEventListener","removeEventListener","Nav","AppWrapper","App","TabBar","onChange","map","child","index","Tab","key","e","FileField","isMulti","transform","Field","LabelText","Icon","Input","files","multiple","FontAwesomeIcon","IconButton","SimpleButton","DisabledSimpleButton","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","LocalLoadingSpinner","Wrapper","LocalSpinner","Options","activeTab","setTab","spellAmount","setSpellAmount","gearAmount","setGearAmount","itemAmount","setItemAmount","monsterAmount","setMonsterAmount","raceAmount","setRaceAmount","subraceAmount","setSubraceAmount","classAmount","setClassAmount","subclassAmount","setSubclassAmount","charAmount","setCharAmount","encounterAmount","setEncounterAmount","reload","isReload","loading","isLoading","showAlert","setAlert","message","setMessage","failedObjs","setFailedObjs","triggerImportFiles","fileList","from","i","fileReader","FileReader","onloadend","content","parse","readAsText","importFiles","failed","max","setTimeout","triggerDeleteAll","clear","deleteAll","Message","OptionSection","SelectionTitle","faFileImport","SectionRow","SectionText","faFileExport","tab","General","ExternalLink","rel","faPatreon","faDiscord","OptionTab","faTrashAlt","fromClassList","number","unit","condition","distance","typ","amount","v","s","m","concentration","textPart","entryTextPart","listItem","colLabels","rows","cel","convertText","trim","newSpell","source","meta","_copy","tags","align","save","skill","sense","langs","languages","vulnerabilities","vulnerable","vul","resistencies","resist","res","immunities","immune","imu","conditionImmune","trait","tra","entry","action","lactions","legendary","newMonster","average","console","log","SpellTile","formatTime","useCallback","split","formatLevel","hasRitual","hasConcentration","formatComponents","words","formatDuration","search","replace","getPicture","Tile","fallback","School","Flag","Level","ImageName","PropWrapper","Prop","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","WideProp","faUser","faLink","Link","props","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","Filter","filedName","MultipleSelectField","options","handleChange","StyledSelect","classNamePrefix","Select","StringSearchField","field","changeSort","Sort","faChevronCircleUp","faChevronCircleDown","CheckField","defaultChecked","checked","Checkmark","SpellSearchBar","onSend","history","useHistory","setName","setSchool","schoolList","setSchoolList","setLevel","levelList","setLevelList","setRitual","setTime","setRange","setDuration","setComponents","setText","setClasses","setSources","setSort","schools","levels","FieldGroup","faBookOpen","newFilters","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","SearchBarButton","CreateButton","createNewSpell","faPlusCircle","SpellOverview","setFilter","allSpells","setAllSpells","setSpells","start","end","hasMore","scrollParam","setParam","slice","filterArray","SpellContainer","dataLength","next","concat","loader","InfiniteScroll","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","first","FormatedText","formatedText","setFormatedText","formatTable","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","part","codePart","linkParts","link","TextPart","textElm","span","th","td","SpellView","CenterWrapper","View","Text","StringField","NumberField","TextField","textarea","SpellEditView","onEdit","faImage","BackButton","Back","SpellDetail","editMode","setMode","spellObj","editSpell","unsavedChanges","setUnsavedChanges","TopBar","faArrowLeft","goBack","EditToggle","mode","ToggleLeft","ToggleRight","faExclamationTriangle","updateSpell","faSave","spellId","faTrash","IdToSpell","match","params","NameToSpell","GearView","faCoins","faWeightHanging","faCrosshairs","GearEditView","GearDetail","gearObj","editGear","updateGear","gearId","NameToGear","IdToGear","GearTile","GearSearchBar","setCost","setWeight","setType","typeList","setTypeList","setProperties","setDamage","setDescription","types","faBook","newGear","createNewGear","GearOverview","allGears","setAllGears","setGears","GearContainer","MonsterTile","isLegendary","formatCr","Type","CR","faRunning","MonsterSearchBar","setCr","setSubType","subtypeList","setSubTypeList","setAlignment","setSpeed","setSenses","setLang","setSkills","setDmgVulnerabilitie","setDmgResistance","setDmgImmunities","setConImmunities","setAblt","setSAblt","setLAblt","subtypes","createNewMonster","MonsterOverview","allMonsters","setAllMonsters","setMonsters","MonsterContainer","MonsterView","ImageView","PropTitle","faShieldAlt","src","img","MonsterEditView","MonsterDetail","monsterObj","editMonster","updateMonster","monsterId","NameToMonster","IdToMonster","RaceView","setSubraces","SubraceLink","newSubrace","createNewSubrace","TraitWrapper","TraitName","TraitLevel","TraitText","ShortTextField","RaceEditView","onTraitChange","oldTrait","TraitView","indexOf","splice","removeTrait","faPlus","RaceDetail","raceObj","editRace","updateRace","raceId","NameToRace","IdToRace","SubraceView","SubraceEditView","SubraceDetail","subraceObj","editSubrace","updateSubclass","subraceId","NameToSubrace","IdToSubrace","RaceTile","ImgContainer","RaceSearchBar","setAbilityScores","newRace","createNewRace","RaceOverview","allRaces","setAllRaces","setRaces","RaceContainer","ItemView","itemBase","setItemBase","hasAttunment","Rarity","AutoStringField","optionTable","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","o","onSearch","searchTerm","newOptions","Option","ItemEditView","ItemDetail","itemObj","editItem","updateItem","itemId","NameToItem","IdToItem","ItemTile","ItemSearchBar","setRarity","rarityList","setRarityList","setBase","baseList","setBaseList","setAttunment","rarities","bases","newItem","createNewItem","ItemOverview","allItems","setAllItems","setItems","ItemContainer","ClassView","setSubclasses","SubclasseLink","newSubclass","createNewSubclass","spellslots","FeatureWrapper","FeatureRow","FeatureHeadProp","colSpan","SpellProp","printSpellslots","featureSet","spellslot","bonis","boni","FeatureProp","feature","tr","NumberArrayField","values","setArray","handleValueChange","TextButton","EnumField","ClassEditView","onFeatureSetChange","oldFeature","onBoniChange","oldBoni","onFeatureChange","oldFeatureSet","FeatureView","FeatureNumber","removeFeatureSet","FeatureNumberArray","onSpellslotChange","faMinus","removeSpellslot","addNewSpellslot","BoniContainer","BoniName","removeBoni","FeatureString","isCurrency","addNewBoni","FeatureContainer","FeatureName","removeFeature","FeatureText","normal","addNewFeature","ClassDetail","classObj","editClass","updateClass","classeId","NameToClass","IdToClass","ClassTile","ClassSearchBar","newClass","createNewClass","ClassOverview","allClasses","setAllClasses","ClassContainer","SubclassView","SubclassEditView","SubclassDetail","subclassObj","editSubclass","subclassId","NameToSubclass","IdToSubclass","SmallNumberField","showMax","Max","CharGeneral","char","deathSaves","setDeathSaves","prof","setProf","calcLevel","formatProf","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeMoney","newChar","changeHp","changeDeathIcon","faHeartBroken","changeLifeIcon","faHeartbeat","changeDeathSave","newDeathSaves","MinView","PropColumnWrapper","PropWithProf","PropText","PropProf","classesClass","DeathSaveRow","DeathSaveRowHeader","CharHeader","mod","MainLink","classSet","StatProp","outerRadius","subject","A","fullMark","dataKey","tick","fill","angle","domain","axisLine","stroke","fillOpacity","CharCombat","classesFeatures","baseItems","setBaseItems","setActions","bonusActions","setBonusActions","reactions","setReactions","newActions","newBonusActions","newReactions","f1","f2","b","baseitem","toLocaleLowerCase","bonus","origin","strBonus","dexBonus","SmallNumberArrayField","CharSpell","saveChar","oldSlots","newSpellSlots","slots","oldSlotValues","onCurrencyBoniChange","newBonis","boniChange","classSlots","CharView","character","setChar","setClassesFeatures","raceFeatures","setRaceFeatures","tabs","setTabs","classLevel","charClass","subclassLevel","t","SmallText","CharEditView","onChangeItemAttribute","changeClassLevel","oldClassSet","changeClass","changeClassSubclass","changeProf","profName","profValue","changeSaveProf","notes","oldClass","newClassList","removeClass","addNewClass","Container","oldSpell","onChangeSpell","newSpellList","removeSpell","addNewSpell","onChangeItem","attuned","charAt","toUpperCase","oldItem","newItemList","removeItem","addNewItem","oldMonster","onChangeMonster","newMonsterList","removeMonster","addNewMonster","CharDetail","charObj","editChar","recalcClasses","fullClassList","classList","updatedBonis","newBoni","updatedOldBonis","old","updatedSpellSlots","updatedOldSlots","updatedChar","updateChar","charId","NameToChar","IdToChar","CharTile","PropRowWrapper","RowProp","CharSearchBar","CharOverview","allChars","setAllChars","setChars","CharContainer","CharLabGeneral","completed","faCheckCircle","CharLabClass","CharLabRace","setRace","setSubrace","CharLabAbilities","CharLabEquipment","CharLab","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","add","saveWithCallback","nextTab","faEdit","EncounterTile","encounter","EncounterSearchBar","newEncounter","createNewEncounter","EncounterOverview","allEncounters","setAllEncounters","setEncounters","EncounterContainer","Player","tempHp","initBonus","tag","crExpTable","exp","expTable","easy","hard","deadly","calcDifficulty","calcExp","enemyExp","enemy","crExp","difficulty","EncounterEditView","setDifficulty","expArray","setExpArray","onChangeEnemyField","newEnemy","oldEnemy","onChangePlayerField","newPlayer","oldPlayer","onChangeEnemy","newEnemyList","removeEnemy","addNewEnemy","onChangePlayer","newPlayerList","removePlayer","addNewPlayer","rollDie","round","random","TinyNumberField","EncounterView","setPlayers","newPlayers","newField","finishEncounter","newEnemies","PropElm","faPlayCircle","roll","startEncounter","faStepForward","nextInit","counter","nextPlayer","faStopCircle","Table","Row","isDead","PropField","faSkullCrossbones","EncounterDetail","encounterObj","editEncounter","updateEncounter","encounterId","editAndSaveEncounter","NameToEncounter","IdToEncounter","CostRatioChart","setLoading","generalCounts","setGeneralCounts","makeSchoolsData","costs","names","counts","colors","labels","datasets","paddingBottom","DamageRatioChart","GearTypeRatioChart","WeightRatioChart","weights","AmountOfEntitiesChart","makeGeneralCountsData","AttunmentRatioChart","attunments","BaseRatioChart","ItemTypeRatioChart","MagicBonusRatioChart","magicBoni","RarityRatioChart","CrRatioChart","crs","LegendaryRatioChart","leg","noleg","MonsterTypeRatioChart","ActionsRatioChart","times","newTimes","startsWith","LevelRatioChart","RitualRatioChart","rituals","SchoolsRatioChart","Statistics","BookTile","book","cover","pages","faTags","Tag","Book","LibrarySearchBar","setTags","setPages","newBook","createNewBook","Library","allBooks","setAllBooks","setBooks","LibraryContainer","pdfjs","GlobalWorkerOptions","workerSrc","BookView","numPages","setNumPages","pageNumber","setPageNumber","reader","readAsDataURL","base64data","changePage","prevPageNumber","DocumentWrapper","faArrowRight","onLoadSuccess","onItemClick","itemPageNumber","appVersion","msSaveBlob","url","URL","createObjectURL","showPdf","faExternalLinkAlt","pdfURL","downloadFile","faFileDownload","TagWrapper","faTag","BookEditView","TagView","oldTag","onTagChange","removeTag","BookDetail","bookObj","editBook","updateBook","bookId","IdToBook","NameToBook","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","getElementById","process","fetch","response","contentType","headers","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c15b51a6.chunk.js","sourcesContent":["interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    }\n  }\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#8000ff\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"rgb(248, 248, 248)\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#cfc8d8\",\n    backgroundColor: \"#522a82\",\n    disabled: \"#E1D0E5\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"lightgrey\",\n    backgroundColor: \"#475062\",\n  },\n  main: {\n    backgroundColor: \"#1f2532\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"#333d51\",\n    backgroundColorLink: \"#8CA7DE\",\n    color: \"lightslategray\",\n    boxShadow: \"0px 0px 5px 0px rgba(0,0,0,0.75);\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size\n    }\n  }\n};\n\nexport default Theme;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import Dexie from \"dexie\";\nimport Spell from \"../Data/Spell\";\nimport Gear from \"../Data/Gear\";\nimport Item from \"../Data/Item\";\nimport Monster from \"../Data/Monster\";\nimport Race from \"../Data/Races/Race\";\nimport Subrace from \"../Data/Races/Subrace\";\nimport Class from \"../Data/Classes/Class\";\nimport Subclass from \"../Data/Classes/Subclass\";\nimport Char from \"../Data/Chars/Char\";\nimport Encounter from \"../Data/Encounter/Encounter\";\nimport Book from \"../Data/Book\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>; // number = type of the primkey\n  items: Dexie.Table<Item, number>; // number = type of the primkey\n  gears: Dexie.Table<Gear, number>; // number = type of the primkey\n  monsters: Dexie.Table<Monster, number>; // number = type of the primkey\n  races: Dexie.Table<Race, number>; // number = type of the primkey\n  subraces: Dexie.Table<Subrace, number>; // number = type of the primkey\n  classes: Dexie.Table<Class, number>; // number = type of the primkey\n  subclasses: Dexie.Table<Subclass, number>; // number = type of the primkey\n  chars: Dexie.Table<Char, number>; // number = type of the primkey\n  encounters: Dexie.Table<Encounter, number>; // number = type of the primkey\n  books: Dexie.Table<Book, number>; // number = type of the primkey\n\n  constructor() {\n    super(\"DnDTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n    this.version(2).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n    });\n    this.version(3).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n    });\n    this.version(4).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n    });\n    this.version(5).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(6).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items: \"++id, name, sources, pic, description, type, rarity, attunment\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      chars:\n        \"++id, name, player, prof, level, pic, classes, race, background, ac, hp, currentHp, hitDice, init, speed, str, dex, con, int, wis, cha, strSave, dexSave, conSave, intSave, wisSave, chaSave, strSaveProf, dexSaveProf, conSaveProf, intSaveProf, wisSaveProf, chaSaveProf, actions, bonusActions, reactions, features, classFeatures, racialFeatures, profsLangs, senses, passivPerception, passivInsight, passivInvestigation, notesOne, notesTwo, notesThree, acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation, medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival, acrobaticsProf, animalHandlingProf, arcanaProf, athleticsProf, deceptionProf, historyProf, insightProf, intimidationProf, investigationProf, medicineProf, natureProf, perceptionProf, performanceProf, persuasionProf, religionProf, sleightOfHandProf, stealthProf, survivalProf, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      chars_spells: \"++id, char_id, spell_id, prepared\",\n      chars_monsters: \"++id, char_id, monster_id\",\n      chars_items:\n        \"++id, char_id, item_id, gear_id, amount, equiped, attuned, damage, hit, range, properties\",\n    });\n    this.version(7).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n    });\n    this.version(8).stores({\n      chars_spells: null,\n      chars_monsters: null,\n      chars_items: null,\n\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n    });\n    this.version(9).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n      items:\n        \"++id, name, sources, pic, description, type, rarity, attunment, magicBonus, base, filename\",\n      gears:\n        \"++id, name, sources, pic, description, type, cost, damage, weight, properties, filename\",\n      monsters:\n        \"++id, name, type, subtype, cr, ac, hp, str, dex, con, int, wis, cha, senses, lang, speed, source, skills, savingThrows, dmgImmunities, dmgResistance, dmgVulnerabilitie, conImmunities, sAblt, ablt, lAblt, pic, size, alignment\",\n      races:\n        \"++id, name, abilityScores, age, alignment, size, speed, lang, traits, sources, pic, filename\",\n      subraces: \"++id, name, type, abilityScores, traits, sources, filename\",\n      classes:\n        \"++id, name, featureSets, hitDice, proficiencies, equipment, sources, pic, filename\",\n      subclasses: \"++id, name, type, features, sources, filename\",\n      chars:\n        \"++id, name, player, pic, classes, race, background, spells, spellSlots, items, monsters, ac, hp, currentHp, init, speed, str, dex, con, int, wis, cha, saves, actions, bonusActions, reactions, profsLangs, senses, money, skills, spellNotes, alignment, inspiration, castingHit, castingDC\",\n      encounters: \"++id, name, monsters, players\",\n      books: \"++id, name, cover, data, pages, tags\",\n    });\n\n    this.spells = this.table(\"spells\");\n    this.items = this.table(\"items\");\n    this.gears = this.table(\"gears\");\n    this.monsters = this.table(\"monsters\");\n    this.races = this.table(\"races\");\n    this.subraces = this.table(\"subraces\");\n    this.classes = this.table(\"classes\");\n    this.subclasses = this.table(\"subclasses\");\n    this.chars = this.table(\"chars\");\n    this.encounters = this.table(\"encounters\");\n    this.books = this.table(\"books\");\n  }\n}\n","import { MyAppDatabase } from \"../Database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../Data/IEntity\";\nimport Filter from \"../Data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (\n  tableName: string,\n  entity: IEntity,\n  filename: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db\n        .table(tableName)\n        .put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (\n  tableName: string,\n  entities: IEntity[],\n  filename: string,\n  callback: () => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      db.table(tableName)\n        .bulkPut(refinedEntities)\n        .then(() => {\n          callback();\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (\n  tableName: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (\n  tableName: string,\n  callback: (value: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (\n  tableName: string,\n  name: string,\n  value: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db\n        .table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nconst applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if(hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName]\n            .toLowerCase()\n            .includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName]\n              .toLowerCase()\n              .includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (\n  tableName: string,\n  attribute: string\n) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","export default class Gear {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Monster implements IEntity {\n  id?: number;\n  filename: string;\n  name: string;\n  pic: string;\n  sources: string;\n  size: string;\n  type: string;\n  subtype: string;\n  alignment: string;\n  ac: number;\n  hp: number;\n  speed: string;\n  cr: number;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  savingThrows: string;\n  skills: string;\n  senses: string;\n  lang: string;\n  dmgVulnerabilitie: string;\n  dmgResistance: string;\n  dmgImmunities: string;\n  conImmunities: string;\n  sAblt: string;\n  ablt: string;\n  lAblt: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    pic?: string,\n    size?: string,\n    type?: string,\n    subtype?: string,\n    alignment?: string,\n    ac?: number,\n    hp?: number,\n    speed?: string,\n    cr?: number,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    savingThrows?: string,\n    skills?: string,\n    senses?: string,\n    lang?: string,\n    dmgVulnerabilitie?: string,\n    dmgResistance?: string,\n    dmgImmunities?: string,\n    conImmunities?: string,\n    sAblt?: string,\n    ablt?: string,\n    lAblt?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.id = id;\n    this.pic = pic || \"\";\n    this.size = size || \"\";\n    this.type = type || \"\";\n    this.subtype = subtype || \"\";\n    this.alignment = alignment || \"\";\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.speed = speed || \"\";\n    this.cr = cr || 0;\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.savingThrows = savingThrows || \"\";\n    this.skills = skills || \"\";\n    this.senses = senses || \"\";\n    this.lang = lang || \"\";\n    this.dmgVulnerabilitie = dmgVulnerabilitie || \"\";\n    this.dmgResistance = dmgResistance || \"\";\n    this.dmgImmunities = dmgImmunities || \"\";\n    this.conImmunities = conImmunities || \"\";\n    this.sAblt = sAblt || \"\";\n    this.ablt = ablt || \"\";\n    this.lAblt = lAblt || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isMonster(arg: any): arg is Monster {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    sourcesCheck &&\n    sizeCheck &&\n    typeCheck &&\n    subtypeCheck &&\n    alignmentCheck &&\n    acCheck &&\n    hpCheck &&\n    speedCheck &&\n    crCheck &&\n    strCheck &&\n    dexCheck &&\n    conCheck &&\n    intCheck &&\n    wisCheck &&\n    chaCheck &&\n    savingThrowsCheck &&\n    skillsCheck &&\n    sensesCheck &&\n    langCheck &&\n    dmgVulnerabilitieCheck &&\n    dmgResistanceCheck &&\n    dmgImmunitiesCheck &&\n    conImmunitiesCheck &&\n    sAbltCheck &&\n    abltCheck &&\n    lAbltCheck\n  );\n}\n\nexport function findMonsterFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  sourcesCheck: boolean;\n  sizeCheck: boolean;\n  typeCheck: boolean;\n  subtypeCheck: boolean;\n  alignmentCheck: boolean;\n  acCheck: boolean;\n  hpCheck: boolean;\n  speedCheck: boolean;\n  crCheck: boolean;\n  strCheck: boolean;\n  dexCheck: boolean;\n  conCheck: boolean;\n  intCheck: boolean;\n  wisCheck: boolean;\n  chaCheck: boolean;\n  savingThrowsCheck: boolean;\n  skillsCheck: boolean;\n  sensesCheck: boolean;\n  langCheck: boolean;\n  dmgVulnerabilitieCheck: boolean;\n  dmgResistanceCheck: boolean;\n  dmgImmunitiesCheck: boolean;\n  conImmunitiesCheck: boolean;\n  sAbltCheck: boolean;\n  abltCheck: boolean;\n  lAbltCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const subtypeCheck =\n    arg.subtype !== undefined && typeof arg.subtype == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const crCheck = arg.cr !== undefined && typeof arg.cr == \"number\";\n  const strCheck = arg.str !== undefined && typeof arg.str == \"number\";\n  const dexCheck = arg.dex !== undefined && typeof arg.dex == \"number\";\n  const conCheck = arg.con !== undefined && typeof arg.con == \"number\";\n  const intCheck = arg.int !== undefined && typeof arg.int == \"number\";\n  const wisCheck = arg.wis !== undefined && typeof arg.wis == \"number\";\n  const chaCheck = arg.cha !== undefined && typeof arg.cha == \"number\";\n  const savingThrowsCheck =\n    arg.savingThrows !== undefined && typeof arg.savingThrows == \"string\";\n  const skillsCheck = arg.skills !== undefined && typeof arg.skills == \"string\";\n  const sensesCheck = arg.senses !== undefined && typeof arg.senses == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const dmgVulnerabilitieCheck =\n    arg.dmgVulnerabilitie !== undefined &&\n    typeof arg.dmgVulnerabilitie == \"string\";\n  const dmgResistanceCheck =\n    arg.dmgResistance !== undefined && typeof arg.dmgResistance == \"string\";\n  const dmgImmunitiesCheck =\n    arg.dmgImmunities !== undefined && typeof arg.dmgImmunities == \"string\";\n  const conImmunitiesCheck =\n    arg.conImmunities !== undefined && typeof arg.conImmunities == \"string\";\n  const sAbltCheck = arg.sAblt !== undefined && typeof arg.sAblt == \"string\";\n  const abltCheck = arg.ablt !== undefined && typeof arg.ablt == \"string\";\n  const lAbltCheck = arg.lAblt !== undefined && typeof arg.lAblt == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    sourcesCheck: sourcesCheck,\n    sizeCheck: sizeCheck,\n    typeCheck: typeCheck,\n    subtypeCheck: subtypeCheck,\n    alignmentCheck: alignmentCheck,\n    acCheck: acCheck,\n    hpCheck: hpCheck,\n    speedCheck: speedCheck,\n    crCheck: crCheck,\n    strCheck: strCheck,\n    dexCheck: dexCheck,\n    conCheck: conCheck,\n    intCheck: intCheck,\n    wisCheck: wisCheck,\n    chaCheck: chaCheck,\n    savingThrowsCheck: savingThrowsCheck,\n    skillsCheck: skillsCheck,\n    sensesCheck: sensesCheck,\n    langCheck: langCheck,\n    dmgVulnerabilitieCheck: dmgVulnerabilitieCheck,\n    dmgResistanceCheck: dmgResistanceCheck,\n    dmgImmunitiesCheck: dmgImmunitiesCheck,\n    conImmunitiesCheck: conImmunitiesCheck,\n    sAbltCheck: sAbltCheck,\n    abltCheck: abltCheck,\n    lAbltCheck: lAbltCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport default class Trait implements IEntity {\n  name: string;\n  text: string;\n  level: number;\n  constructor(name: string, text: string, level: number) {\n    this.name = name;\n    this.text = text;\n    this.level = level;\n  }\n}\n\nexport function isTrait(arg: any): arg is Trait {\n  if (arg !== undefined) {\n    const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n    const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    return arg && nameCheck && textCheck && levelCheck;\n  } else {\n    return true;\n  }\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  abilityScores: string;\n  age: string;\n  alignment: string;\n  size: string;\n  speed: string;\n  lang: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    filename?: string,\n    pic?: string,\n    abilityScores?: string,\n    age?: string,\n    alignment?: string,\n    size?: string,\n    speed?: string,\n    lang?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.age = age || \"\";\n    this.alignment = alignment || \"\";\n    this.size = size || \"\";\n    this.speed = speed || \"\";\n    this.lang = lang || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    abilityScoresCheck &&\n    ageCheck &&\n    alignmentCheck &&\n    sizeCheck &&\n    speedCheck &&\n    langCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findRaceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  picCheck: boolean;\n  abilityScoresCheck: boolean;\n  ageCheck: boolean;\n  alignmentCheck: boolean;\n  sizeCheck: boolean;\n  speedCheck: boolean;\n  langCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const ageCheck = arg.age !== undefined && typeof arg.age == \"string\";\n  const alignmentCheck =\n    arg.alignment !== undefined && typeof arg.alignment == \"string\";\n  const sizeCheck = arg.size !== undefined && typeof arg.size == \"string\";\n  const speedCheck = arg.speed !== undefined && typeof arg.speed == \"string\";\n  const langCheck = arg.lang !== undefined && typeof arg.lang == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    picCheck: picCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    ageCheck: ageCheck,\n    alignmentCheck: alignmentCheck,\n    sizeCheck: sizeCheck,\n    speedCheck: speedCheck,\n    langCheck: langCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport Trait, { isTrait } from \"./Trait\";\n\nexport default class Subrace implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  abilityScores: string;\n  traits: Trait[];\n  sources: string;\n  filename: string;\n\n  constructor(\n    name?: string,\n    id?: number,\n    type?: string,\n    filename?: string,\n    abilityScores?: string,\n    traits?: Trait[],\n    sources?: string\n  ) {\n    this.name = name || \"\";\n    this.id = id;\n    this.type = type || \"\";\n    this.filename = filename || \"\";\n    this.abilityScores = abilityScores || \"\";\n    this.traits = traits || [];\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubrace(arg: any): arg is Subrace {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    typeCheck &&\n    abilityScoresCheck &&\n    traitsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findSubraceFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  abilityScoresCheck: boolean;\n  traitsCheck: boolean;\n  sourcesCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const abilityScoresCheck =\n    arg.abilityScores !== undefined && typeof arg.abilityScores == \"string\";\n  const traitsCheck =\n    arg.traits !== undefined &&\n    Array.isArray(arg.traits) &&\n    isTrait(arg.traits[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    abilityScoresCheck: abilityScoresCheck,\n    traitsCheck: traitsCheck,\n    sourcesCheck: sourcesCheck,\n  };\n}\n","export default class Item {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  rarity: string;\n  magicBonus: number;\n  attunment: number;\n  base: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    rarity?: string,\n    magicBonus?: number,\n    attunment?: number,\n    base?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.rarity = rarity || \"\";\n    this.magicBonus = magicBonus || 0;\n    this.attunment = attunment || 0;\n    this.base = base || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isItem(arg: any): arg is Item {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    magicBonusCheck &&\n    attunmentCheck &&\n    rarityCheck &&\n    baseCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findItemFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  magicBonusCheck: boolean;\n  attunmentCheck: boolean;\n  rarityCheck: boolean;\n  baseCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const magicBonusCheck =\n    arg.magicBonus !== undefined && typeof arg.magicBonus == \"number\";\n  const attunmentCheck =\n    arg.attunment !== undefined && typeof arg.attunment == \"number\";\n  const rarityCheck = arg.rarity !== undefined && typeof arg.rarity == \"string\";\n  const baseCheck = arg.base !== undefined && typeof arg.base == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    magicBonusCheck: magicBonusCheck,\n    attunmentCheck: attunmentCheck,\n    rarityCheck: rarityCheck,\n    baseCheck: baseCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\n\nexport const featureTypeArray: { value: string; label: string }[] = [\n  { value: \"normal\", label: \"Normal\" },\n  { value: \"action\", label: \"Action\" },\n  { value: \"bonusAction\", label: \"Bonus Action\" },\n  { value: \"reaction\", label: \"Reaction\" },\n];\nexport enum featureType {\n  normal,\n  action,\n  bonusAction,\n  reaction,\n}\nexport function getOptionFromEnum(\n  value: featureType\n): { value: string; label: string } {\n  let opt = undefined;\n  featureTypeArray.forEach((option) => {\n    if (option.value === value.toString()) opt = option;\n  });\n  if (opt !== undefined) {\n    return opt;\n  }\n  return { value: \"\", label: \"\" };\n}\n\nexport default class Feature implements IEntity {\n  name: string;\n  text: string;\n  type: featureType;\n  constructor(name: string, text: string, type?: featureType) {\n    this.name = name;\n    this.text = text;\n    this.type = type || featureType.normal;\n  }\n}\n\nexport function isFeature(arg: any): arg is Feature {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  return arg && nameCheck && textCheck;\n}\n","import Feature, { isFeature } from \"./Feature\";\nimport Boni from \"./Boni\";\n\nexport default class FeatureSet {\n  level: number;\n  profBonus: number;\n  features: Feature[];\n  bonis?: Boni[];\n  spellslots?: number[];\n\n  constructor(\n    level: number,\n    profBonus: number,\n    features: Feature[],\n    bonis?: Boni[],\n    spellslots?: number[]\n  ) {\n    this.level = level;\n    this.profBonus = profBonus;\n    this.features = features;\n    this.bonis = bonis;\n    this.spellslots = spellslots;\n  }\n}\n\nexport function isFeatureSet(arg: any): arg is FeatureSet {\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const profBonusCheck =\n    arg.profBonus !== undefined && typeof arg.profBonus == \"number\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeature(arg.features[0]);\n  return arg && levelCheck && profBonusCheck && featuresCheck;\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Class implements IEntity {\n  id?: number;\n  name: string;\n  featureSets: FeatureSet[];\n  hitDices: string;\n  proficiencies: string;\n  equipment: string;\n  sources: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    featureSets?: FeatureSet[],\n    hitDices?: string,\n    proficiencies?: string,\n    equipment?: string,\n    filename?: string,\n    sources?: string,\n    pic?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.featureSets = featureSets || [];\n    this.hitDices = hitDices || \"\";\n    this.proficiencies = proficiencies || \"\";\n    this.equipment = equipment || \"\";\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isClass(arg: any): arg is Class {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    featureSetsCheck &&\n    hitDicesCheck &&\n    proficienciesCheck &&\n    equipmentCheck\n  );\n}\n\nexport function findClassFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  featureSetsCheck: boolean;\n  hitDicesCheck: boolean;\n  proficienciesCheck: boolean;\n  equipmentCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const featureSetsCheck =\n    arg.featureSets !== undefined &&\n    Array.isArray(arg.featureSets) &&\n    isFeatureSet(arg.featureSets[0]);\n  const hitDicesCheck =\n    arg.hitDices !== undefined && typeof arg.hitDices == \"string\";\n  const proficienciesCheck =\n    arg.proficiencies !== undefined && typeof arg.proficiencies == \"string\";\n  const equipmentCheck =\n    arg.equipment !== undefined && typeof arg.equipment == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    featureSetsCheck: featureSetsCheck,\n    hitDicesCheck: hitDicesCheck,\n    proficienciesCheck: proficienciesCheck,\n    equipmentCheck: equipmentCheck,\n  };\n}\n","import IEntity from \"../IEntity\";\nimport FeatureSet, { isFeatureSet } from \"./FeatureSet\";\n\nexport default class Subclass implements IEntity {\n  id?: number;\n  name: string;\n  type: string;\n  features: FeatureSet[];\n  sources: string;\n  filename: string;\n\n  constructor();\n  constructor(\n    id?: number,\n    name?: string,\n    type?: string,\n    features?: FeatureSet[],\n    filename?: string,\n    sources?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.type = type || \"\";\n    this.features = features || [];\n    this.filename = filename || \"\";\n    this.sources = sources || \"\";\n  }\n}\n\nexport function isSubclass(arg: any): arg is Subclass {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return arg && nameCheck && typeCheck && sourcesCheck && featuresCheck;\n}\n\nexport function formattSubclassFromattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  typeCheck: boolean;\n  sourcesCheck: boolean;\n  featuresCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const featuresCheck =\n    arg.features !== undefined &&\n    Array.isArray(arg.features) &&\n    isFeatureSet(arg.features[0]);\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  return {\n    nameCheck: nameCheck,\n    typeCheck: typeCheck,\n    sourcesCheck: sourcesCheck,\n    featuresCheck: featuresCheck,\n  };\n}\n","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves  || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck =\n    arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck =\n    arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined &&\n    Array.isArray(arg.classes) &&\n    isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","import IEntity from \"../IEntity\";\nimport Player from \"./Player\";\n\nexport default class Encounter implements IEntity {\n  id?: number;\n  name: string;\n  enemies: Player[];\n  players: Player[];\n  isPlaying: boolean;\n  currentInit: number;\n  roundCounter: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    enemies?: Player[],\n    players?: Player[],\n    isPlaying?: boolean,\n    currentInit?: number,\n    roundCounter?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.enemies = enemies || [];\n    this.players = players || [];\n    this.isPlaying = isPlaying || false;\n    this.currentInit = currentInit || 0;\n    this.roundCounter = roundCounter || 0;\n  }\n}\n\nexport function isEncounter(arg: any): arg is Encounter {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const enemiesCheck = arg.enemies !== undefined && Array.isArray(arg.enemies);\n  const playersCheck = arg.players !== undefined && Array.isArray(arg.players);\n  const isPlayingCheck =\n    arg.isPlaying !== undefined && typeof arg.isPlaying == \"boolean\";\n  return arg && nameCheck && enemiesCheck && playersCheck && isPlayingCheck;\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { findSpellFormattError, isSpell } from \"../Data/Spell\";\nimport Gear, { findGearFormattError, isGear } from \"../Data/Gear\";\nimport Monster, { findMonsterFormattError, isMonster } from \"../Data/Monster\";\nimport Race, { findRaceFormattError, isRace } from \"../Data/Races/Race\";\nimport Subrace, {\n  findSubraceFormattError,\n  isSubrace,\n} from \"../Data/Races/Subrace\";\nimport Item, { findItemFromattError, isItem } from \"../Data/Item\";\nimport Class, { findClassFormattError, isClass } from \"../Data/Classes/Class\";\nimport Subclass, {\n  formattSubclassFromattError,\n  isSubclass,\n} from \"../Data/Classes/Subclass\";\nimport Char, { isChar } from \"../Data/Chars/Char\";\nimport IEntity from \"../Data/IEntity\";\nimport Encounter, { isEncounter } from \"../Data/Encounter/Encounter\";\n\nexport const importFiles = (\n  fileList: FileList | null,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n          scanImportFileTest(json, file, callback);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nconst scanImportFileTest = async (\n  json: any,\n  file: File,\n  callback: (failed: number, failedObj: string[], max: number) => void\n) => {\n  if (Array.isArray(json)) {\n    let failCount = 0;\n    let failedObj: string[] = [];\n    let promList: Promise<any>[] = [];\n\n    json.forEach((obj: any) => {\n      if (isClass(obj)) {\n        promList.push(saveNew(\"classes\", obj as Class, file.name));\n      } else if (isSubclass(obj)) {\n        promList.push(saveNew(\"subclasses\", obj as Subclass, file.name));\n      } else if (isRace(obj)) {\n        promList.push(saveNew(\"races\", obj as Race, file.name));\n      } else if (isSubrace(obj)) {\n        promList.push(saveNew(\"subraces\", obj as Subrace, file.name));\n      } else if (isMonster(obj)) {\n        promList.push(saveNew(\"monsters\", obj as Monster, file.name));\n      } else if (isSpell(obj)) {\n        promList.push(saveNew(\"spells\", obj as Spell, file.name));\n      } else if (isGear(obj)) {\n        promList.push(saveNew(\"gears\", obj as Gear, file.name));\n      } else if (isItem(obj)) {\n        promList.push(saveNew(\"items\", obj as Item, file.name));\n      } else if (isEncounter(obj)) {\n        promList.push(saveNew(\"encounters\", obj as Encounter, file.name));\n      } else if (isChar(obj)) {\n        promList.push(saveNew(\"chars\", obj as Char, file.name));\n      } else {\n        failCount++;\n        failedObj.push(\n          scanForFormatErrors(obj)\n            .replaceAll(\"true\", \"success!\")\n            .replaceAll(\"false\", \"fail!\")\n        );\n      }\n    });\n    await Promise.all(promList);\n    callback(failCount, failedObj, json.length);\n  }\n};\n\nconst scanForFormatErrors = (obj: any) => {\n  const itemFormatErrors = findItemFromattError(obj);\n  let itemFailCount: number = 0;\n  for (const value of Object.entries(itemFormatErrors)) {\n    if (!value[1]) itemFailCount++;\n  }\n  const gearFormatErrors = findGearFormattError(obj);\n  let gearFailCount: number = 0;\n  for (const value of Object.entries(gearFormatErrors)) {\n    if (!value[1]) gearFailCount++;\n  }\n  const spellFormatErrors = findSpellFormattError(obj);\n  let spellFailCount: number = 0;\n  for (const value of Object.entries(spellFormatErrors)) {\n    if (!value[1]) spellFailCount++;\n  }\n  const monsterFormatErrors = findMonsterFormattError(obj);\n  let monsterFailCount: number = 0;\n  for (const value of Object.entries(monsterFormatErrors)) {\n    if (!value[1]) monsterFailCount++;\n  }\n  const raceFormatErrors = findRaceFormattError(obj);\n  let raceFailCount: number = 0;\n  for (const value of Object.entries(raceFormatErrors)) {\n    if (!value[1]) raceFailCount++;\n  }\n  const subraceFormatErrors = findSubraceFormattError(obj);\n  let subraceFailCount: number = 0;\n  for (const value of Object.entries(subraceFormatErrors)) {\n    if (!value[1]) subraceFailCount++;\n  }\n  const classFormatErrors = findClassFormattError(obj);\n  let classFailCount: number = 0;\n  for (const value of Object.entries(classFormatErrors)) {\n    if (!value[1]) classFailCount++;\n  }\n  const subclassFormatErrors = formattSubclassFromattError(obj);\n  let subclassFailCount: number = 0;\n  for (const value of Object.entries(subclassFormatErrors)) {\n    if (!value[1]) subclassFailCount++;\n  }\n\n  let errors: any[] = [];\n  if (\n    itemFailCount <= gearFailCount &&\n    itemFailCount <= spellFailCount &&\n    itemFailCount <= raceFailCount &&\n    itemFailCount <= subraceFailCount &&\n    itemFailCount <= classFailCount &&\n    itemFailCount <= subclassFailCount &&\n    itemFailCount <= monsterFailCount\n  ) {\n    errors.push({ item: itemFormatErrors });\n  }\n  if (\n    gearFailCount <= itemFailCount &&\n    gearFailCount <= spellFailCount &&\n    gearFailCount <= raceFailCount &&\n    gearFailCount <= subraceFailCount &&\n    gearFailCount <= classFailCount &&\n    gearFailCount <= subclassFailCount &&\n    gearFailCount <= monsterFailCount\n  ) {\n    errors.push({ gear: gearFormatErrors });\n  }\n  if (\n    spellFailCount <= itemFailCount &&\n    spellFailCount <= gearFailCount &&\n    spellFailCount <= raceFailCount &&\n    spellFailCount <= subraceFailCount &&\n    spellFailCount <= classFailCount &&\n    spellFailCount <= subclassFailCount &&\n    spellFailCount <= monsterFailCount\n  ) {\n    errors.push({ spell: spellFormatErrors });\n  }\n  if (\n    monsterFailCount <= itemFailCount &&\n    monsterFailCount <= gearFailCount &&\n    monsterFailCount <= raceFailCount &&\n    monsterFailCount <= subraceFailCount &&\n    monsterFailCount <= classFailCount &&\n    monsterFailCount <= subclassFailCount &&\n    monsterFailCount <= spellFailCount\n  ) {\n    errors.push({ monster: monsterFormatErrors });\n  }\n  if (\n    raceFailCount <= itemFailCount &&\n    raceFailCount <= gearFailCount &&\n    raceFailCount <= monsterFailCount &&\n    raceFailCount <= subraceFailCount &&\n    raceFailCount <= classFailCount &&\n    raceFailCount <= subclassFailCount &&\n    raceFailCount <= spellFailCount\n  ) {\n    errors.push({ race: raceFormatErrors });\n  }\n  if (\n    subraceFailCount <= itemFailCount &&\n    subraceFailCount <= gearFailCount &&\n    subraceFailCount <= monsterFailCount &&\n    subraceFailCount <= raceFailCount &&\n    subraceFailCount <= classFailCount &&\n    subraceFailCount <= subclassFailCount &&\n    subraceFailCount <= spellFailCount\n  ) {\n    errors.push({ subrace: subraceFormatErrors });\n  }\n  if (\n    classFailCount <= itemFailCount &&\n    classFailCount <= gearFailCount &&\n    classFailCount <= monsterFailCount &&\n    classFailCount <= raceFailCount &&\n    classFailCount <= subraceFailCount &&\n    classFailCount <= subclassFailCount &&\n    classFailCount <= spellFailCount\n  ) {\n    errors.push({ class: classFormatErrors });\n  }\n  if (\n    subclassFailCount <= itemFailCount &&\n    subclassFailCount <= gearFailCount &&\n    subclassFailCount <= monsterFailCount &&\n    subclassFailCount <= raceFailCount &&\n    subclassFailCount <= subraceFailCount &&\n    subclassFailCount <= classFailCount &&\n    subclassFailCount <= spellFailCount\n  ) {\n    errors.push({ subclass: subclassFormatErrors });\n  }\n  return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n};\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob(\n        [decodeURIComponent(encodeURI(JSON.stringify(all)))],\n        { type: contentType }\n      );\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href =\n        \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  let tableList: Promise<IEntity[]>[] = [];\n  tableList.push(reciveAllPromise(\"spells\"));\n  tableList.push(reciveAllPromise(\"items\"));\n  tableList.push(reciveAllPromise(\"gears\"));\n  tableList.push(reciveAllPromise(\"monsters\"));\n  tableList.push(reciveAllPromise(\"races\"));\n  tableList.push(reciveAllPromise(\"subraces\"));\n  tableList.push(reciveAllPromise(\"classes\"));\n  tableList.push(reciveAllPromise(\"subclasses\"));\n  tableList.push(reciveAllPromise(\"chars\"));\n  tableList.push(reciveAllPromise(\"encounters\"));\n  const results = await Promise.all(tableList);\n  let all: IEntity[] = [];\n  results.forEach((list: IEntity[]) => {\n    list.forEach((entity: IEntity) => {\n      all.push(entity);\n    });\n  });\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <Name>DnDTome</Name>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\nwidth: calc(100% - 60px);\nheight: 30px;\nline-height: 30px;\npadding: 10px 10px 10px 50px;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n`;\n\nconst Name = styled.div`\n  width: 80px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMeteor,\n  faCog,\n  faDragon,\n  faIdCard,\n  faChartPie,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  GiBackpack,\n  GiWomanElfFace,\n  GiCrystalWand,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <Link\n        to=\"/spell-overview\"\n        className={\n          location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faMeteor} />\n        Spells\n      </Link>\n      <Link\n        to=\"/item-overview\"\n        className={\n          location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiCrystalWand />\n        Magic Items\n      </Link>\n      <Link\n        to=\"/gear-overview\"\n        className={\n          location.pathname === \"/gear-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiBackpack />\n        Gear\n      </Link>\n      <Link\n        to=\"/race-overview\"\n        className={\n          location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiWomanElfFace />\n        Races\n      </Link>\n      <Link\n        to=\"/class-overview\"\n        className={\n          location.pathname === \"/class-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <GiPlagueDoctorProfile />\n        Classes\n      </Link>\n      <Link\n        to=\"/monster-overview\"\n        className={\n          location.pathname === \"/monster-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faDragon} />\n        Monsters\n      </Link>\n      <Link\n        to=\"/char-overview\"\n        className={\n          location.pathname === \"/char-overview\" ? \"menuItemActiv\" : \"\"\n        }\n      >\n        <FontAwesomeIcon icon={faIdCard} />\n        Chars\n      </Link>\n      <Link\n        to=\"/encounter-overview\"\n        className={location.pathname === \"/encounters\" ? \"menuItemActiv\" : \"\"}\n      >\n        <GiSwordClash />\n        Encounters\n      </Link>\n      <Link\n        to=\"/options\"\n        className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faCog} />\n        Options\n      </Link>\n      <Link\n        to=\"/statistics\"\n        className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n      >\n        <FontAwesomeIcon icon={faChartPie} />\n        Statistics\n      </Link>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 4em);\n  text-align: left;\n  padding: 2rem;\n  position: fixed;\n  z-index: 950;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n\n  svg {\n    margin-right: 5px;\n  }\n\n  @media (max-width: 576px) {\n    width: calc(100% - 4rem);\n  }\n\n  a {\n    font-size: 20px;\n    padding: 1rem 0;\n    color: ${({ theme }) => theme.main.highlight};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 16px;\n      text-align: center;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\nimport { useOnClickOutside } from \"../../Hooks/MenuCloseHook\";\n\nconst Navigation = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef<HTMLDivElement>(null);\n  useOnClickOutside(node, () => setOpen(false));\n\n  return (\n    <Nav ref={node}>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  width: ${({ theme }) => theme.nav.width};\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, handler]);\n};\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Navigation/Header\";\nimport Navigation from \"./Navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  return (\n    <App>\n      <Header />\n      <Navigation />\n      {children}\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst Tab = styled.div`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst IconButton = ({ icon, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\nconst SimpleButton = styled.div`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../Theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../Theme/Theme\";\nimport {\n  importFiles,\n  exportAllFromTable,\n  exportAll,\n} from \"../../Services/OptionService\";\nimport { import5eToolsMonstersFiles, import5eToolsSpellsFiles } from \"../../Services/5eToolService\";\nimport { deleteAll, reciveCount } from \"../../Services/DatabaseService\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFileImport,\n  faTrashAlt,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faPatreon, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport FileField from \"../FormElements/FileField\";\nimport IconButton from \"../FormElements/IconButton\";\nimport { LoadingSpinner } from \"../Loading\";\n\nconst Options = () => {\n  const { theme, setTheme } = useTheme();\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [gearAmount, setGearAmount] = useState<number>(0);\n  const [itemAmount, setItemAmount] = useState<number>(0);\n  const [monsterAmount, setMonsterAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n  const [subraceAmount, setSubraceAmount] = useState<number>(0);\n  const [classAmount, setClassAmount] = useState<number>(0);\n  const [subclassAmount, setSubclassAmount] = useState<number>(0);\n  const [charAmount, setCharAmount] = useState<number>(0);\n  const [encounterAmount, setEncounterAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n\n  const [loading, isLoading] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [failedObjs, setFailedObjs] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      reciveCount(\"gears\", (result: number) => {\n        setGearAmount(result);\n      });\n      reciveCount(\"items\", (result: number) => {\n        setItemAmount(result);\n      });\n      reciveCount(\"monsters\", (result: number) => {\n        setMonsterAmount(result);\n      });\n      reciveCount(\"races\", (result: number) => {\n        setRaceAmount(result);\n      });\n      reciveCount(\"subraces\", (result: number) => {\n        setSubraceAmount(result);\n      });\n      reciveCount(\"classes\", (result: number) => {\n        setClassAmount(result);\n      });\n      reciveCount(\"subclasses\", (result: number) => {\n        setSubclassAmount(result);\n      });\n      reciveCount(\"chars\", (result: number) => {\n        setCharAmount(result);\n      });\n      reciveCount(\"encounters\", (result: number) => {\n        setEncounterAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  const triggerImportFiles = (fileList: FileList | null) => {\n    isLoading(true);\n    importFiles(\n      fileList,\n      (failed: number, failedObj: string[], max: number) => {\n        setFailedObjs(failedObj);\n        isReload(true);\n        isLoading(false);\n\n        if (failed > 0) {\n          setMessage(failed + \" of \" + max + \" failed!\");\n        } else {\n          setMessage(max + \" imported successfully!\");\n        }\n        setAlert(true);\n\n        setTimeout(() => {\n          setAlert(false);\n        }, 5000);\n      }\n    );\n  };\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  return (\n    <AppWrapper>\n      {message && showAlert && <Message>{message}</Message>}\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"DnDTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Gears\",\n          \"Magic Items\",\n          \"Monsters\",\n          \"Races\",\n          \"Classes\",\n          \"Chars\",\n          \"Encounters\",\n          \"Others\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <General>\n          <OptionSection>\n            <SelectionTitle>Want to support me?</SelectionTitle>\n            <ExternalLink\n              href=\"https://www.patreon.com/bePatron?u=25310394\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"patreon\"\n            >\n              <FontAwesomeIcon icon={faPatreon} /> Become a patron\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>\n              Found some bugs? Or have some feedback?\n            </SelectionTitle>\n            <ExternalLink\n              href=\"https://discord.gg/2KB3tzG\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"discord\"\n            >\n              <FontAwesomeIcon icon={faDiscord} /> Join the discord\n            </ExternalLink>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Theme</SelectionTitle>\n            <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n          </OptionSection>\n        </General>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Spells?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"spells\", \"DnDTome_spells.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {spellAmount} Spells?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"spells\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Gear?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() => exportAllFromTable(\"gears\", \"DnDTome_gear.json\")}\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {gearAmount} Gear?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"gears\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Items?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"items\", \"DnDTome_items.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {itemAmount} Items?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"items\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Monsters?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"monsters\", \"DnDTome_monsters.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {monsterAmount} Monsters?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"monsters\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Races\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Races?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"races\", \"DnDTome_races.json\")\n                }\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subraces?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"subraces\", \"DnDTome_subraces.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {raceAmount} Races?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"races\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subraceAmount} Subraces?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subraces\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Classes\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Classes?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"classes\", \"DnDTome_classes.json\")\n                }\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Export all Subclasses?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"subclasses\", \"DnDTome_subclasses.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {classAmount} Classes?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"classes\")}\n              />\n            </SectionRow>\n            <SectionRow>\n              <SectionText>Delete all {subclassAmount} Subclasses?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"subclasses\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Chars\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Chars?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"chars\", \"DnDTome_chars.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>Delete all {charAmount} Chars?</SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"chars\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Encounters\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Export</SelectionTitle>\n            <SectionRow>\n              <SectionText>Export all Encounters?</SectionText>\n              <IconButton\n                icon={faFileExport}\n                onClick={() =>\n                  exportAllFromTable(\"encounters\", \"DnDTome_encounters.json\")\n                }\n              />\n            </SectionRow>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Delete</SelectionTitle>\n            <SectionRow>\n              <SectionText>\n                Delete all {encounterAmount} Encounters?\n              </SectionText>\n              <IconButton\n                icon={faTrashAlt}\n                onClick={() => triggerDeleteAll(\"encounters\")}\n              />\n            </SectionRow>\n          </OptionSection>\n        </OptionTab>\n      )}\n      {activeTab === \"Others\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Spells</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => import5eToolsSpellsFiles(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import 5eTools Monsters</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              icon={faFileImport}\n              onChange={(file) => import5eToolsMonstersFiles(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {loading && <LoadingSpinner />}\n      {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })}\n    </AppWrapper>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Message = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import Monster from \"../Data/Monster\";\nimport Spell from \"../Data/Spell\";\nimport { saveNew } from \"./DatabaseService\";\n\nexport const import5eToolsSpellsFiles = (fileList: FileList | null) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.spell.forEach((obj: any) => {\n            let classes = \"\";\n            if (\n              obj.classes !== undefined &&\n              obj.classes.fromClassList !== undefined\n            ) {\n              obj.classes.fromClassList.forEach(\n                (classe: { name: string; source: string }) => {\n                  classes += classe.name + \", \";\n                }\n              );\n            }\n\n            let school = \"\";\n            if (obj.school === \"V\") school = \"Evocation\";\n            if (obj.school === \"D\") school = \"Divination\";\n            if (obj.school === \"N\") school = \"Necromancy\";\n            if (obj.school === \"T\") school = \"Transmutation\";\n            if (obj.school === \"I\") school = \"Illusion\";\n            if (obj.school === \"C\") school = \"Conjuration\";\n            if (obj.school === \"A\") school = \"Abjuration\";\n            if (obj.school === \"E\") school = \"Enchantment\";\n\n            let time = \"\";\n            if (obj.time !== undefined) {\n              time =\n                obj.time[0].number +\n                \" \" +\n                obj.time[0].unit +\n                \" \" +\n                (obj.time[0].condition ? obj.time[0].condition : \"\");\n            }\n\n            let range = \"\";\n            if (obj.range !== undefined) {\n              range =\n                obj.range.type +\n                \" \" +\n                (obj.distance\n                  ? obj.range.distance.typ +\n                    \" \" +\n                    (obj.range.distance.amount ? obj.range.distance.amount : \"\")\n                  : \"\");\n            }\n\n            let components = \"\";\n            if (obj.components !== undefined) {\n              components =\n                (obj.components.v ? \"V, \" : \"\") +\n                (obj.components.s ? \"S, \" : \"\");\n              if (obj.components.m !== undefined) {\n                if (obj.components.m.text !== undefined) {\n                  components = \"M (\" + obj.components.m.text + \")\";\n                } else {\n                  components = \"M (\" + obj.components.m + \")\";\n                }\n              }\n            }\n\n            let duration = \"\";\n            if (obj.duration !== undefined) {\n              let concentration = obj.duration[0].concentration;\n              duration =\n                (concentration ? \"Concentration, \" : \"\") +\n                obj.duration[0].type +\n                \" \" +\n                (obj.duration[0].duration !== undefined\n                  ? obj.duration[0].duration.type +\n                    \" \" +\n                    obj.duration[0].duration.amount\n                  : \"\");\n            }\n\n            let text = \"\";\n            obj.entries.forEach((textPart: string | any) => {\n              if (typeof textPart === \"string\") {\n                text += textPart + \"\\n\";\n              } else {\n                if (\n                  textPart.name !== undefined &&\n                  textPart.entries !== undefined\n                ) {\n                  text += \"\\n\" + textPart.name + \". \";\n                  textPart.entries.forEach((entryTextPart: string) => {\n                    text += entryTextPart + \"\\n\";\n                  });\n                } else if (textPart.items !== undefined) {\n                  textPart.items.forEach((listItem: string) => {\n                    text += \"• \" + listItem + \"\\n\";\n                  });\n                } else if (\n                  textPart.type !== undefined &&\n                  textPart.type === \"table\"\n                ) {\n                  text += \"||table||\\n\";\n                  if (textPart.colLabels !== undefined) {\n                    text += \"||\";\n                    textPart.colLabels.forEach((listItem: string) => {\n                      text += listItem + \"|\";\n                    });\n                    text += \"|\\n\";\n                  }\n                  textPart.rows.forEach((rows: string[]) => {\n                    text += \"||\";\n                    rows.forEach((cel: string) => {\n                      text += cel + \"|\";\n                    });\n                    text += \"|\\n\";\n                  });\n                  text += \"||table||\\n\";\n                } else {\n                  let convertText = JSON.stringify(textPart);\n                  convertText = convertText\n                    .replaceAll(\"},\", \"\\n\")\n                    .replaceAll(\"[\", \"\")\n                    .replaceAll(\"]\", \"\")\n                    .replaceAll(\"}\", \"\")\n                    .replaceAll(\"{@\", \"\")\n                    .replaceAll(\"{\", \"\");\n                  convertText = convertText.trim();\n                  text += convertText;\n                }\n              }\n            });\n            text = text.replaceAll(\"}\", \"\").replaceAll(\"{@\", \"\");\n            text = text.trim();\n\n            let newSpell = new Spell(\n              obj.name,\n              classes,\n              obj.source,\n              obj.level,\n              school,\n              time,\n              range,\n              components,\n              duration,\n              obj.meta && obj.meta.ritual ? 1 : 0,\n              text,\n              0,\n              file.name,\n              \"\"\n            );\n            promList.push(saveNew(\"spells\", newSpell, file.name));\n          });\n          await Promise.all(promList);\n        }\n      };\n      fileReader.readAsText(file);\n    });\n  }\n};\n\nexport const import5eToolsMonstersFiles = (fileList: FileList | null) => {\n  if (fileList !== null) {\n    const files = Array.from(fileList);\n\n    files.forEach((file, i) => {\n      let fileReader = new FileReader();\n      fileReader.onloadend = async function () {\n        const content = fileReader.result;\n        if (content !== null) {\n          let json = JSON.parse(content.toString());\n\n          let promList: Promise<any>[] = [];\n          json.monster.forEach((obj: any) => {\n            if (obj._copy === undefined) {\n              let type = \"\";\n              let subtype = \"\";\n              if (typeof obj.type === \"string\") {\n                type = obj.type;\n              } else {\n                type = obj.type.type;\n                if (obj.type.tags !== undefined) subtype = obj.type.tags[0];\n              }\n\n              let cr = 0;\n              if (obj.cr !== undefined) {\n                if (typeof obj.cr === \"string\") {\n                  if (obj.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr;\n                  }\n                } else {\n                  if (obj.cr.cr === \"1/8\") {\n                    cr = 0.125;\n                  } else if (obj.cr.cr === \"1/4\") {\n                    cr = 0.25;\n                  } else if (obj.cr.cr === \"1/2\") {\n                    cr = 0.5;\n                  } else {\n                    cr = +obj.cr.cr;\n                  }\n                }\n              }\n\n              let alignment = \"\";\n              if (obj.alignment !== undefined) {\n                obj.alignment.forEach((align: string) => {\n                  if (align === \"L\") alignment += \"lawfull \";\n                  if (align === \"N\") alignment += \"neutral \";\n                  if (align === \"C\") alignment += \"chaotic \";\n                  if (align === \"G\") alignment += \"good \";\n                  if (align === \"E\") alignment += \"evil \";\n                });\n              }\n              alignment = alignment.trim();\n\n              let size = \"\";\n              if (obj.size !== undefined) {\n                if (obj.size === \"L\") size += \"large \";\n                else if (obj.size === \"H\") size += \"huge \";\n                else if (obj.size === \"T\") size += \"tiny \";\n                else if (obj.size === \"M\") size += \"medium \";\n                else if (obj.size === \"S\") size += \"small \";\n                else if (obj.size === \"G\") size += \"gargantuan \";\n              }\n              size = size.trim();\n\n              let ac = 0;\n              if (typeof obj.ac[0] === \"number\") {\n                ac = obj.ac[0];\n              } else {\n                ac = obj.ac[0].ac;\n              }\n\n              let speed = \"\";\n              for (const [key, value] of Object.entries(obj.speed)) {\n                if (typeof value === \"string\") {\n                  speed += key + \" \" + value + \"ft, \";\n                } else {\n                  speed += key + \" \";\n                  for (const [key2, value2] of Object.entries(\n                    value as Object\n                  )) {\n                    speed += key2 + \" (\" + value2 + \")\";\n                  }\n                  speed += key + \", \";\n                }\n              }\n              speed.trim();\n\n              let saves = \"\";\n              if (obj.save !== undefined)\n                for (const [key, value] of Object.entries(obj.save)) {\n                  saves += key + \" \" + value + \", \";\n                }\n              saves.trim();\n\n              let skills = \"\";\n              if (obj.skill !== undefined)\n                for (const [key, value] of Object.entries(obj.skill)) {\n                  skills += key + \" \" + value + \", \";\n                }\n              skills.trim();\n\n              let senses = \"\";\n              obj.senses &&\n                obj.senses.forEach((sense: string) => {\n                  senses += sense + \", \";\n                });\n              senses.trim();\n\n              let langs = \"\";\n              obj.languages &&\n                obj.languages.forEach((lang: string) => {\n                  langs += lang + \", \";\n                });\n              langs.trim();\n\n              let vulnerabilities = \"\";\n              obj.vulnerable &&\n                obj.vulnerable.forEach((vul: string) => {\n                  vulnerabilities += vul + \", \";\n                });\n              vulnerabilities.trim();\n\n              let resistencies = \"\";\n              obj.resist &&\n                obj.resist.forEach((res: string) => {\n                  resistencies += res + \", \";\n                });\n              resistencies.trim();\n\n              let immunities = \"\";\n              obj.immune &&\n                obj.immune.forEach((imu: string) => {\n                  immunities += imu + \", \";\n                });\n              immunities.trim();\n\n              let conImmunities = \"\";\n              obj.conditionImmune &&\n                obj.conditionImmune.forEach((imu: string) => {\n                  conImmunities += imu + \", \";\n                });\n              conImmunities.trim();\n\n              let traits = \"\";\n              obj.trait &&\n                obj.trait.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    traits += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        traits += entry + \" \\n\";\n                      });\n                      traits += \"\\n\";\n                    }\n                  }\n                );\n              traits = traits\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              traits = traits.trim();\n\n              let actions = \"\";\n              obj.action &&\n                obj.action.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    actions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        actions += entry + \" \\n\";\n                      });\n                      actions += \" \\n\";\n                    }\n                  }\n                );\n              actions = actions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              actions = actions.trim();\n\n              let lactions = \"\";\n              obj.legendary &&\n                obj.legendary.forEach(\n                  (tra: { name: string; entries: string[] }) => {\n                    lactions += tra.name + \". \\n\";\n                    if (tra.entries !== undefined) {\n                      tra.entries.forEach((entry: string) => {\n                        lactions += entry + \" \\n\";\n                      });\n                      lactions += \" \\n\";\n                    }\n                  }\n                );\n              lactions = lactions\n                .replaceAll(\"}\", \"\")\n                .replaceAll(\"{@damage \", \"\")\n                .replaceAll(\"{@recharge\", \"(Recharge 6)\")\n                .replaceAll(\"{@atk mw\", \"Melee Weapon Attack: \")\n                .replaceAll(\"{@atk mw\", \"Ranged Weapon Attack: \")\n                .replaceAll(\"{@atk ms\", \"Melee Spell Attack: \")\n                .replaceAll(\"{@atk rs\", \"Ranged Spell Attack: \")\n                .replaceAll(\"{@h\", \"Hit: \")\n                .replaceAll(\"{@dc\", \"DC\")\n                .replaceAll(\"{@hit\", \"+\")\n                .replaceAll(\"{@\", \"\");\n              lactions = lactions.trim();\n\n              let newMonster = new Monster(\n                0,\n                obj.name,\n                obj.source,\n                \"\",\n                size,\n                type,\n                subtype,\n                alignment,\n                ac,\n                obj.hp.average,\n                speed,\n                cr,\n                obj.str,\n                obj.dex,\n                obj.con,\n                obj.int,\n                obj.wis,\n                obj.cha,\n                saves,\n                skills,\n                senses,\n                langs,\n                vulnerabilities,\n                resistencies,\n                immunities,\n                conImmunities,\n                traits,\n                actions,\n                lactions\n              );\n              promList.push(saveNew(\"monsters\", newMonster, file.name));\n            }\n          });\n          await Promise.all(promList);\n        }\n      };\n      fileReader.readAsText(file);\n      console.log(\"Done\");\n    });\n  }\n};\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../Data/Spell\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {formatTime()}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {formatDuration()}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {formatComponents()}\n          </Prop>\n          <WideProp>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (\n    value: string,\n    sort: { name: string; label: string; sort: number }\n  ) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value, sort)}\n      ></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />\n          )}\n          {sort.sort === 2 && (\n            <IconButton\n              onClick={() => changeSort()}\n              icon={faChevronCircleDown}\n            />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Spell from \"../../../Data/Spell\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst SpellSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={schoolList}\n        label=\"School\"\n        onChange={(schools: string[]) => setSchool(schools)}\n      />\n      <FieldGroup>\n        <MultipleSelectField\n          options={levelList}\n          label=\"Level\"\n          onChange={(levels: string[]) =>\n            setLevel(\n              levels.map((level) => {\n                return +level;\n              })\n            )\n          }\n        />\n        <CheckField\n          value={!!ritual}\n          label=\"Ritual\"\n          onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n        />\n      </FieldGroup>\n      <StringSearchField\n        value={time}\n        sort={sort}\n        field={\"time\"}\n        label=\"Time\"\n        icon={faHistory}\n        onChange={(\n          time: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTime(time);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={range}\n        sort={sort}\n        field={\"range\"}\n        label=\"Range\"\n        icon={faPowerOff}\n        transform={{ rotate: 42 }}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setRange(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={duration}\n        sort={sort}\n        field={\"duration\"}\n        label=\"Duration\"\n        icon={faHourglassHalf}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDuration(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={components}\n        sort={sort}\n        field={\"components\"}\n        label=\"Comp.\"\n        icon={faMortarPestle}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setComponents(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={classes}\n        sort={sort}\n        field={\"classes\"}\n        label=\"Classes\"\n        icon={faUser}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setClasses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={text}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBookOpen}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setText(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Spell\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default SpellSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Spell from \"../../../Data/Spell\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport SpellTile from \"./SpellTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport SpellSearchBar from \"./SpellSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst SpellOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allSpells, setAllSpells] = useState<Spell[]>([]);\n  const [spells, setSpells] = useState<Spell[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"spells\", filters, (results: any[]) => {\n      setAllSpells(results);\n      setSpells(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (spells.length === allSpells.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setSpells((s) =>\n      s.concat(allSpells.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <SpellSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div\n        id=\"scrollable\"\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <SpellContainer\n          dataLength={spells.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {spells!.map((spell: Spell, index: number) => {\n            return <SpellTile key={index} spell={spell}></SpellTile>;\n          })}\n        </SpellContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default SpellOverview;\n\nconst SpellContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback(\n    (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        case \"reset\":\n          return [undefined, true, undefined];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n      console.time(\"filtered get all\");\n        table\n          .filter((obj: T) => {\n            let test: boolean[] = [];\n            filters.forEach((filter) => {\n              if (typeof filter.value === \"string\") {\n                test.push(\n                  // @ts-ignore\n                  obj[filter.fieldName]\n                    .toLowerCase()\n                    .includes(filter.value.toLowerCase())\n                );\n              } else if (typeof filter.value === \"number\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (typeof filter.value === \"boolean\") {\n                // @ts-ignore\n                test.push(obj[filter.fieldName] === filter.value);\n              } else if (filter.value instanceof Array) {\n                let arrayTest: boolean = false;\n                filter.value.forEach(\n                  (filterPart: string | boolean | number) => {\n                    if (typeof filterPart === \"string\") {\n                      if (\n                        // @ts-ignore\n                        obj[filter.fieldName]\n                          .toLowerCase()\n                          .includes(filterPart.toLowerCase())\n                      )\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"number\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    } else if (typeof filterPart === \"boolean\") {\n                      // @ts-ignore\n                      if (obj[filter.fieldName] === filterPart)\n                        arrayTest = true;\n                    }\n                  }\n                );\n                test.push(arrayTest);\n              }\n            });\n\n            let result = true;\n            test.forEach((val) => {\n              if (!val) result = false;\n            });\n            return result;\n          })\n          .sortBy(\"name\")\n          .then((data) => {\n            console.timeEnd(\"filtered get all\");\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(\n  table: Dexie.Table<T, U>,\n  attr: string,\n  attrValue: string\n) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback(\n    (state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n      switch (action.type) {\n        case \"resolved\":\n          return [action.data, false, undefined];\n        case \"error\":\n          return [undefined, false, action.error];\n        default:\n          return [undefined, true, undefined];\n      }\n    },\n    []\n  );\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined)\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {table[0]}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return (\n                              <TableHeadProp key={index}>{cell}</TableHeadProp>\n                            );\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{cell}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return \"\";\n                  }\n                })}\n              </tbody>\n            </table>\n            {table[2]}\n          </>\n        );\n      } else {\n        return textPart;\n      }\n    },\n    [text]\n  );\n\n  useEffect(() => {\n    const parts: string[] = text.split(\"[[\");\n    let formatedText = parts.map((part: string, index: number) => {\n      if (part.includes(\"]]\")) {\n        const codePart: string[] = part.split(\"]]\");\n        const linkParts: string[] = codePart[0].split(\".\");\n        const link: string =\n          \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n        return (\n          <TextPart key={index}>\n            <Link onClick={() => history.push(link)}>{linkParts[1]}</Link>\n            {formatTable(codePart[1])}\n          </TextPart>\n        );\n      } else {\n        return <TextPart key={index}>{formatTable(part)}</TextPart>;\n      }\n    });\n    setFormatedText(formatedText);\n  }, [text, history, formatTable]);\n\n  return (\n    <>\n      {formatedText?.map((textElm) => {\n        return textElm;\n      })}\n    </>\n  );\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../Data/Spell\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Flag>\n          <b>{hasConcentration()}</b>\n        </Flag>\n        <Flag>\n          <b>{hasRitual()}</b>\n        </Flag>\n\n        <Level>\n          <b>{formatLevel()}</b>\n        </Level>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{spell.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{spell.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faHistory} />\n            {spell.time}\n          </Prop>\n          <Prop>\n            <Icon icon={faHourglassHalf} />\n            {spell.duration}\n          </Prop>\n          <Prop>\n            <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n            {spell.range}\n          </Prop>\n          <Prop>\n            <Icon icon={faMortarPestle} />\n            {spell.components}\n          </Prop>\n          <Prop>\n            <Icon icon={faUser} />\n            {spell.classes}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {spell.sources}\n          </Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.text} />\n        </Text>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      ></Input>\n    </Field>\n  );\n};\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 100%;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 22vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Spell from \"../../../../Data/Spell\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <StringField\n          value={spell.school}\n          label=\"School\"\n          onChange={(school) => onEdit({ ...spell, school: school })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={spell.level}\n            label=\"Level\"\n            onChange={(level) => onEdit({ ...spell, level: level })}\n          />\n          <CheckField\n            value={!!spell.ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => onEdit({ ...spell, ritual: ritual ? 1 : 0 })}\n          />\n        </FieldGroup>\n        <StringField\n          value={spell.time}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time) => onEdit({ ...spell, time: time })}\n        />\n        <StringField\n          value={spell.range}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(range) => onEdit({ ...spell, range: range })}\n        />\n        <StringField\n          value={spell.duration}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(duration) => onEdit({ ...spell, duration: duration })}\n        />\n        <StringField\n          value={spell.components}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(components) =>\n            onEdit({ ...spell, components: components })\n          }\n        />\n        <StringField\n          value={spell.classes}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(classes) => onEdit({ ...spell, classes: classes })}\n        />\n        <StringField\n          value={spell.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...spell, sources: sources })}\n        />\n        <StringField\n          value={spell.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...spell, pic: pic })}\n        />\n        <TextField\n          value={spell.text}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(text) => onEdit({ ...spell, text: text })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SpellView from \"./SpellView\";\nimport SpellEditView from \"./SpellEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Spell from \"../../../../Data/Spell\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellDetail = ({ spell }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [spellObj, editSpell] = useState<Spell>(spell);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSpell = (spellId: number | undefined) => {\n    remove(\"spells\", spellId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (spellObj !== spell) {\n      setUnsavedChanges(true);\n    }\n  }, [spellObj,spell]);\n\n  const updateSpell = (tableName: string, spellObj: Spell) => {\n    updateWithCallback(tableName, spellObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSpell(\"spells\", spellObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSpell(spellObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SpellEditView spell={spellObj} onEdit={(value) => editSpell(value)} />\n      ) : (\n        <SpellView spell={spellObj} />\n      )}\n    </>\n  );\n};\n\nexport default SpellDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItem(db.spells, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSpell;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SpellDetail from \"../SpellDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSpell = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [spell, loading, error] = useItemByAttr(\n    db.spells,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && spell !== undefined ? (\n        <SpellDetail spell={spell} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSpell;\n","import React, { useCallback } from \"react\";\nimport Gear from \"../../../../Data/Gear\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearView = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <Prop>{gear.type}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </Prop>\n          {gear.damage && (\n            <Prop>\n              <Icon icon={faCrosshairs} />\n              {gear.damage}\n            </Prop>\n          )}\n          {gear.properties && <Prop>{gear.properties}</Prop>}\n          <Text>\n            <FormatedText text={gear.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Gear from \"../../../../Data/Gear\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n  onEdit: (value: Gear) => void;\n}\n\nconst GearEditView = ({ gear, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={gear.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...gear, name: name })}\n        />\n        <StringField\n          value={gear.cost}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(cost) => onEdit({ ...gear, cost: cost })}\n        />\n        <StringField\n          value={gear.weight}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(weight) => onEdit({ ...gear, weight: weight })}\n        />\n        <StringField\n          value={gear.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...gear, type: type })}\n        />\n        <StringField\n          value={gear.damage}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(damage) => onEdit({ ...gear, damage: damage })}\n        />\n        <StringField\n          value={gear.properties}\n          label=\"Properties\"\n          onChange={(properties) => onEdit({ ...gear, properties: properties })}\n        />\n        <StringField\n          value={gear.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...gear, pic: pic })}\n        />\n        <StringField\n          value={gear.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...gear, sources: sources })}\n        />\n        <TextField\n          value={gear.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...gear, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default GearEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GearView from \"./GearView\";\nimport GearEditView from \"./GearEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Gear from \"../../../../Data/Gear\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearDetail = ({ gear }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [gearObj, editGear] = useState<Gear>(gear);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteGear = (gearId: number | undefined) => {\n    remove(\"gears\", gearId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (gearObj !== gear) {\n      setUnsavedChanges(true);\n    }\n  }, [gearObj, gear]);\n\n  const updateGear = (tableName: string, gearObj: Gear) => {\n    updateWithCallback(tableName, gearObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateGear(\"gears\", gearObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteGear(gearObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <GearEditView gear={gearObj} onEdit={(value) => editGear(value)} />\n      ) : (\n        <GearView gear={gearObj} />\n      )}\n    </>\n  );\n};\n\nexport default GearDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(\n    db.gears,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport GearDetail from \"../GearDetail\";\n\ntype TParams = { id: string };\n\nconst IdToGear = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItem(db.gears, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && gear !== undefined ? (\n        <GearDetail gear={gear} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToGear;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Gear from \"../../../Data/Gear\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faCoins,\n  faWeightHanging,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  gear: Gear;\n}\n\nconst GearTile = ({ gear }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (gear !== undefined) {\n      if (gear.pic === \"\" || gear.pic === null) {\n        return \"\";\n      }\n      return gear.pic;\n    }\n    return \"\";\n  }, [gear]);\n\n  return (\n    <Tile to={\"/gear-detail/id/\" + gear.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{gear.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{gear.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faCoins} />\n            {gear.cost}\n          </Prop>\n          <Prop>\n            <Icon icon={faWeightHanging} />\n            {gear.weight}\n          </Prop>\n          <WideProp>{gear.type}</WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {gear.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default GearTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Gear from \"../../../Data/Gear\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GearSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={cost}\n        sort={sort}\n        field={\"cost\"}\n        label=\"Cost\"\n        icon={faCoins}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setCost(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={weight}\n        sort={sort}\n        field={\"weight\"}\n        label=\"Weight\"\n        icon={faWeightHanging}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setWeight(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={damage}\n        sort={sort}\n        field={\"damage\"}\n        label=\"Damage\"\n        icon={faCrosshairs}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDamage(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={properties}\n        sort={sort}\n        field={\"properties\"}\n        label=\"Properties\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setProperties(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Gear\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default GearSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Gear from \"../../../Data/Gear\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport GearTile from \"./GearTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport GearSearchBar from \"./GearSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst GearOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allGears, setAllGears] = useState<Gear[]>([]);\n  const [gears, setGears] = useState<Gear[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"gears\", filters, (results: any[]) => {\n      setAllGears(results);\n      setGears(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (gears.length === allGears.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setGears((s) =>\n      s.concat(allGears.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <GearSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <GearContainer\n          dataLength={gears.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {gears!.map((gear: Gear, index: number) => {\n            return <GearTile key={index} gear={gear}></GearTile>;\n          })}\n        </GearContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default GearOverview;\n\nconst GearContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Monster from \"../../../Data/Monster\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit } from \"react-icons/gi\";\nimport { MdRecordVoiceOver } from \"react-icons/md\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterTile = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <Tile to={\"/monster-detail/id/\" + monster.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{monster.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{monster.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <WideProp>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </WideProp>\n          <WideProp>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </WideProp>\n          <WideProp>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </WideProp>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default MonsterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst CR = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  box-shadow: inset 0px 0px 10px -2px rgba(0, 0, 0, 0.4);\n  border-radius: 30px;\n  margin: 5px;\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 25px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(50% - 20px);\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n    width: calc(100% - 20px);\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { reciveAttributeSelection, createNewWithId } from \"../../../Services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Monster from \"../../../Data/Monster\";\nimport NumberField from \"../../FormElements/NumberField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst MonsterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Type\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={subtypeList}\n        label=\"Subtype\"\n        onChange={(subtypes: string[]) => setSubType(subtypes)}\n      />\n      <StringSearchField\n        value={alignment}\n        sort={sort}\n        field={\"alignment\"}\n        label=\"Alignment\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAlignment(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={speed}\n        sort={sort}\n        field={\"speed\"}\n        label=\"Speed\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSpeed(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={skills}\n        sort={sort}\n        field={\"skills\"}\n        label=\"Skills\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSkills(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={senses}\n        sort={sort}\n        field={\"senses\"}\n        label=\"Senses\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSenses(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lang}\n        sort={sort}\n        field={\"lang\"}\n        label=\"Languages\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLang(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgVulnerabilitie}\n        sort={sort}\n        field={\"dmgVulnerabilitie\"}\n        label=\"Vulnerabilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgVulnerabilitie(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgResistance}\n        sort={sort}\n        field={\"dmgResistance\"}\n        label=\"Resistances\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgResistance(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={dmgImmunities}\n        sort={sort}\n        field={\"dmgImmunities\"}\n        label=\"Immunities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDmgImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={conImmunities}\n        sort={sort}\n        field={\"conImmunities\"}\n        label=\"Con. Immun.\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setConImmunities(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={ablt}\n        sort={sort}\n        field={\"ablt\"}\n        label=\"Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sAblt}\n        sort={sort}\n        field={\"sAblt\"}\n        label=\"Spezial Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={lAblt}\n        sort={sort}\n        field={\"lAblt\"}\n        label=\"Legendary Abilities\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setLAblt(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Monster\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default MonsterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Monster from \"../../../Data/Monster\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport MonsterTile from \"./MonsterTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport MonsterSearchBar from \"./MonsterSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst MonsterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allMonsters, setAllMonsters] = useState<Monster[]>([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"monsters\", filters, (results: any[]) => {\n      setAllMonsters(results);\n      setMonsters(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (monsters.length === allMonsters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setMonsters((s) =>\n      s.concat(allMonsters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <MonsterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <MonsterContainer\n          dataLength={monsters.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {monsters!.map((monster: Monster, index: number) => {\n            return <MonsterTile key={index} monster={monster}></MonsterTile>;\n          })}\n        </MonsterContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default MonsterOverview;\n\nconst MonsterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../Data/Monster\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Monster from \"../../../../Data/Monster\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterDetail = ({ monster }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = (monsterId: number | undefined) => {\n    remove(\"monsters\", monsterId);\n    history.goBack();\n  };\n  \n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj,monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateMonster(\"monsters\", monsterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteMonster(monsterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItemByAttr(\n    db.monsters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToMonster;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport MonsterDetail from \"../MonsterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToMonster = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [monster, loading, error] = useItem(db.monsters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && monster !== undefined ? (\n        <MonsterDetail monster={monster} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToMonster;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  const [subraces, setSubraces] = useState<Subrace[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"type\", value: race.name, sort: 0 }],\n      (results: any[]) => {\n        setSubraces(results);\n      }\n    );\n  }, [race]);\n\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  const createNewSubrace = () => {\n    let newSubrace = new Subrace();\n    delete newSubrace.id;\n    newSubrace.type = race.name;\n    createNewWithId(\"subraces\", newSubrace, (id) => {\n      history.push(`/subrace-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Text>\n            <PropTitle>Age:</PropTitle>\n            <FormatedText text={race.age} />\n          </Text>\n          <Text>\n            <PropTitle>Alignment:</PropTitle>\n            <FormatedText text={race.alignment} />\n          </Text>\n          <Text>\n            <PropTitle>Size:</PropTitle>\n            <FormatedText text={race.size} />\n          </Text>\n          <Text>\n            <PropTitle>Speed:</PropTitle>\n            <FormatedText text={race.speed} />\n          </Text>\n          <Text>\n            <PropTitle>Language:</PropTitle>\n            <FormatedText text={race.lang} />\n          </Text>\n          <Text>\n            <PropTitle>Subraces:</PropTitle>\n            {subraces.length !== 0 &&\n              subraces.map((subrace: Subrace, index: number) => {\n                const link: string = \"/subrace-detail/id/\" + subrace.id;\n                return (\n                  <SubraceLink key={index} onClick={() => history.push(link)}>\n                    {subrace.name}\n                  </SubraceLink>\n                );\n              })}\n            <CreateButton onClick={() => createNewSubrace()}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </CreateButton>\n          </Text>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      {race.traits.map((trait: Trait, index: number) => {\n        return (\n          <View>\n            <TraitWrapper key={index}>\n              <TraitName>{trait.name}</TraitName>\n              <TraitLevel>{trait.level}</TraitLevel>\n              <TraitText>\n                <FormatedText text={trait.text} />\n              </TraitText>\n            </TraitWrapper>\n          </View>\n        );\n      })}\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst SubraceLink = styled(Link)`\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst ShortTextField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default ShortTextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\nconst Input = styled.textarea`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  min-height: 8vh;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../Data/Races/Race\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = race.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...race, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...race,\n      traits: [...race.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = race.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...race, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RaceView>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <StringField\n          value={race.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...race, abilityScores: abilityScores })\n          }\n        />\n        <ShortTextField\n          value={race.age}\n          label=\"Age\"\n          onChange={(age) => onEdit({ ...race, age: age })}\n        />\n        <ShortTextField\n          value={race.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...race, alignment: alignment })}\n        />\n        <ShortTextField\n          value={race.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...race, size: size })}\n        />\n        <ShortTextField\n          value={race.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...race, speed: speed })}\n        />\n        <ShortTextField\n          value={race.lang}\n          label=\"Language\"\n          onChange={(lang) => onEdit({ ...race, lang: lang })}\n        />\n        <StringField\n          value={race.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...race, pic: pic })}\n        />\n        <StringField\n          value={race.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...race, sources: sources })}\n        />\n      </RaceView>\n      <TraitView>\n        {race.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RaceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(RaceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RaceView from \"./RaceView\";\nimport RaceEditView from \"./RaceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Race from \"../../../../Data/Races/Race\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceDetail = ({ race }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [raceObj, editRace] = useState<Race>(race);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteRace = (raceId: number | undefined) => {\n    remove(\"races\", raceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (raceObj !== race) {\n      setUnsavedChanges(true);\n    }\n  }, [raceObj,race]);\n\n  const updateRace = (tableName: string, raceObj: Race) => {\n    updateWithCallback(tableName, raceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateRace(\"races\", raceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteRace(raceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <RaceEditView race={raceObj} onEdit={(value) => editRace(value)} />\n      ) : (\n        <RaceView race={raceObj} />\n      )}\n    </>\n  );\n};\n\nexport default RaceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItemByAttr(\n    db.races,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToRace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport RaceDetail from \"../RaceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToRace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [race, loading, error] = useItem(db.races, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && race !== undefined ? (\n        <RaceDetail race={race} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToRace;\n","import React from \"react\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceView = ({ subrace }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{subrace.name}</b>\n        </Name>\n        <PropWrapper>\n          <Prop>\n            <GiUpgrade />\n            {subrace.abilityScores}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            {subrace.type}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {subrace.sources}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <View>\n        <PropWrapper>\n          {subrace.traits.map((trait: Trait, index: number) => {\n            return (\n              <TraitWrapper key={index}>\n                <TraitName>{trait.name}</TraitName>\n                <TraitLevel>{trait.level}</TraitLevel>\n                <TraitText>\n                  <FormatedText text={trait.text} />\n                </TraitText>\n              </TraitWrapper>\n            );\n          })}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  subrace: Subrace;\n  onEdit: (value: Subrace) => void;\n}\n\nconst SubraceEditView = ({ subrace, onEdit }: $Props) => {\n  const onTraitChange = (\n    oldTrait: Trait,\n    field: string,\n    value: string | number\n  ) => {\n    let traits = subrace.traits.map((trait: Trait) => {\n      if (trait === oldTrait) {\n        return {\n          ...trait,\n          [field]: value,\n        };\n      } else {\n        return trait;\n      }\n    });\n    onEdit({ ...subrace, traits: traits });\n  };\n\n  const addNewTrait = () => {\n    onEdit({\n      ...subrace,\n      traits: [...subrace.traits, { name: \"New Trait\", level: 1, text: \"\" }],\n    });\n  };\n\n  const removeTrait = (oldTrait: Trait) => {\n    let traits = subrace.traits;\n    const index: number = traits.indexOf(oldTrait);\n    if (index !== -1) {\n      traits.splice(index, 1);\n      onEdit({ ...subrace, traits: traits });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubraceView>\n        <StringField\n          value={subrace.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subrace, name: name })}\n        />\n        <StringField\n          value={subrace.abilityScores}\n          label=\"Ability Scores\"\n          onChange={(abilityScores) =>\n            onEdit({ ...subrace, abilityScores: abilityScores })\n          }\n        />\n        <StringField\n          value={subrace.type}\n          label=\"Race\"\n          onChange={(type) =>\n            onEdit({ ...subrace, type: type })\n          }\n        />\n        <StringField\n          value={subrace.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subrace, sources: sources })}\n        />\n      </SubraceView>\n      <TraitView>\n        {subrace.traits.map((trait: Trait, index: number) => {\n          return (\n            <TraitWrapper key={index}>\n              <TraitName\n                value={trait.name}\n                label=\"Name\"\n                onChange={(name) => onTraitChange(trait, \"name\", name)}\n              />\n              <TraitLevel\n                value={trait.level}\n                label=\"Level\"\n                onChange={(level) => onTraitChange(trait, \"level\", level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTrait(trait)} />\n              <TraitText\n                value={trait.text}\n                label=\"Text\"\n                onChange={(text) => onTraitChange(trait, \"text\", text)}\n              />\n            </TraitWrapper>\n          );\n        })}\n        <TraitWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTrait()} />\n        </TraitWrapper>\n      </TraitView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubraceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubraceView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TraitView = styled(SubraceView)``;\n\nconst TraitWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst TraitName = styled(StringField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(NumberField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(ShortTextField)`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 4 4 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubraceView from \"./SubraceView\";\nimport SubraceEditView from \"./SubraceEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subrace: Subrace;\n}\n\nconst SubraceDetail = ({ subrace }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subraceObj, editSubrace] = useState<Subrace>(subrace);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubrace = (subraceId: number | undefined) => {\n    remove(\"subraces\", subraceId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subraceObj !== subrace) {\n      setUnsavedChanges(true);\n    }\n  }, [subraceObj,subrace]);\n\n  const updateSubclass = (tableName: string, subraceObj: Subrace) => {\n    updateWithCallback(tableName, subraceObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subraces\", subraceObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubrace(subraceObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubraceEditView subrace={subraceObj} onEdit={(value) => editSubrace(value)} />\n      ) : (\n        <SubraceView subrace={subraceObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubraceDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItemByAttr(\n    db.subraces,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubrace;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubraceDetail from \"../SubraceDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubrace = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subrace, loading, error] = useItem(db.subraces, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subrace !== undefined ? (\n        <SubraceDetail subrace={subrace} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubrace;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Race from \"../../../Data/Races/Race\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiUpgrade } from \"react-icons/gi\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceTile = ({ race }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (race !== undefined) {\n      if (race.pic === \"\" || race.pic === null) {\n        return \"\";\n      }\n      return race.pic;\n    }\n    return \"\";\n  }, [race]);\n\n  return (\n    <Tile to={\"/race-detail/id/\" + race.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{race.name}</b>\n          </Name>\n\n          <Prop>\n            <GiUpgrade />\n            {race.abilityScores}\n          </Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {race.sources}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default RaceTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  margin: 0 0 5px 0;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Race from \"../../../Data/Races/Race\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst RaceSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={abilityScores}\n        sort={sort}\n        field={\"abilityScores\"}\n        label=\"Ability Scores\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(sources) => setSources(sources)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Race\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default RaceSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Race from \"../../../Data/Races/Race\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport RaceTile from \"./RaceTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport RaceSearchBar from \"./RaceSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst RaceOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [races, setRaces] = useState<Race[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"races\", filters, (results: any[]) => {\n      setAllRaces(results);\n      setRaces(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (races.length === allRaces.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setRaces((s) =>\n      s.concat(allRaces.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <RaceSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <RaceContainer\n          dataLength={races.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {races!.map((race: Race, index: number) => {\n            return <RaceTile key={index} race={race}></RaceTile>;\n          })}\n        </RaceContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default RaceOverview;\n\nconst RaceContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Item from \"../../../../Data/Item\";\nimport Gear from \"../../../../Data/Gear\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemView = ({ item }: $Props) => {\n  const [itemBase, setItemBase] = useState<Gear>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"gears\",\n      [{ fieldName: \"name\", value: item.base, sort: 0 }],\n      (results: any[]) => {\n        setItemBase(results[0]);\n      }\n    );\n  }, [item]);\n\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          <Prop>+{item.magicBonus}</Prop>\n          <Prop>\n            <Icon icon={faLink} />\n            {item.sources}\n          </Prop>\n          {item.base && itemBase && (\n            <>\n              <Prop>{item.base}</Prop>\n              <Prop>{itemBase.damage}</Prop>\n              <Prop>{itemBase.properties}</Prop>\n            </>\n          )}\n          <Text>\n            <FormatedText text={item.description} />\n          </Text>\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../Data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAll, reciveAllPromise } from \"../../Services/DatabaseService\";\n\ninterface $Props {\n  optionTable: string | string[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = async (optionsTable: string[]) => {\n    let itemList: Promise<IEntity[]>[] = [];\n    optionsTable.forEach((table) => {\n      itemList.push(reciveAllPromise(table));\n    });\n    const results = await Promise.all(itemList);\n    results.forEach((items: IEntity[]) => {\n      setOptions((o) => o.concat(items));\n    });\n  };\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAll(optionsTable, (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onSearch(e.target.value)}\n      ></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Item from \"../../../../Data/Item\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport NumberField from \"../../../FormElements/NumberField\";\n\nimport {\n  faLink,\n  faBookOpen,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\n\ninterface $Props {\n  item: Item;\n  onEdit: (value: Item) => void;\n}\n\nconst ItemEditView = ({ item, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={item.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...item, name: name })}\n        />\n        <AutoStringField\n          optionTable={\"gears\"}\n          value={item.base}\n          label=\"Base Gear\"\n          onChange={(base) => onEdit({ ...item, base: base })}\n        />\n        <CheckField\n          value={!!item.attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => onEdit({ ...item, attunment: attunment ? 1 : 0 })}\n        />\n        <StringField\n          value={item.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...item, type: type })}\n        />\n        <NumberField\n          value={item.magicBonus}\n          label=\"Magic Bonus\"\n          onChange={(magicBonus) => onEdit({ ...item, magicBonus: magicBonus })}\n        />\n        <StringField\n          value={item.rarity}\n          label=\"Rarity\"\n          onChange={(rarity) => onEdit({ ...item, rarity: rarity })}\n        />\n        <StringField\n          value={item.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...item, pic: pic })}\n        />\n        <StringField\n          value={item.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...item, sources: sources })}\n        />\n        <TextField\n          value={item.description}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(description) =>\n            onEdit({ ...item, description: description })\n          }\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default ItemEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ItemView from \"./ItemView\";\nimport ItemEditView from \"./ItemEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Item from \"../../../../Data/Item\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemDetail = ({ item }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [itemObj, editItem] = useState<Item>(item);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteItem = (itemId: number | undefined) => {\n    remove(\"items\", itemId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (itemObj !== item) {\n      setUnsavedChanges(true);\n    }\n  }, [itemObj,item]);\n\n  const updateItem = (tableName: string, itemObj: Item) => {\n    updateWithCallback(tableName, itemObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n  \n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateItem(\"items\", itemObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteItem(itemObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ItemEditView item={itemObj} onEdit={(value) => editItem(value)} />\n      ) : (\n        <ItemView item={itemObj} />\n      )}\n    </>\n  );\n};\n\nexport default ItemDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { name: string };\n\nconst NameToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItemByAttr(\n    db.items,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToItem;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ItemDetail from \"../ItemDetail\";\n\ntype TParams = { id: string };\n\nconst IdToItem = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [item, loading, error] = useItem(db.items, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && item !== undefined ? (\n        <ItemDetail item={item} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToItem;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Item from \"../../../Data/Item\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  item: Item;\n}\n\nconst ItemTile = ({ item }: $Props) => {\n  const hasAttunment = useCallback(() => {\n    if (item !== undefined) {\n      if (!!item.attunment) {\n        return <div className=\"icon\">A</div>;\n      }\n    }\n    return \"\";\n  }, [item]);\n\n  const getPicture = useCallback(() => {\n    if (item !== undefined) {\n      if (item.pic === \"\" || item.pic === null) {\n        return \"\";\n      }\n      return item.pic;\n    }\n    return \"\";\n  }, [item]);\n\n  return (\n    <Tile to={\"/item-detail/id/\" + item.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Rarity rarity={item.rarity}>{item.rarity}</Rarity>\n\n        <Flag>\n          <b>{hasAttunment()}</b>\n        </Flag>\n\n        {getPicture() !== \"\" ? (\n          <ImageName>\n            <Image pic={getPicture()}></Image>\n            <b>{item.name}</b>\n          </ImageName>\n        ) : (\n          <Name>\n            <b>{item.name}</b>\n          </Name>\n        )}\n\n        <PropWrapper>\n          <Prop>{item.type}</Prop>\n          {item.base && (\n            <>\n              <Prop>{item.base}</Prop>\n              <WideProp>\n                <Icon icon={faLink} />\n                {item.sources}\n              </WideProp>\n            </>\n          )}\n          {!item.base && (\n            <Prop>\n              <Icon icon={faLink} />\n              {item.sources}\n            </Prop>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ItemTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype RarityType = {\n  rarity?: string;\n};\n\nconst Rarity = styled.div<RarityType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    const rarity = props.rarity?.toLowerCase().trim();\n    if (rarity === \"artifact\") {\n      return \"#f74646\";\n    } else if (rarity === \"legendary\") {\n      return \"#f7ce46\";\n    } else if (rarity === \"very rare\") {\n      return \"#8000ff\";\n    } else if (rarity === \"rare\") {\n      return \"#4675f7\";\n    } else if (rarity === \"uncommon\") {\n      return \"#4dbd56\";\n    } else {\n      return \"inherit\";\n    }\n  }};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst ImageName = styled.div`\n  height: 40px;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 57px;\n  width: 57px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n} from \"../../../Services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../FormElements/MultipleSelectField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport CheckField from \"../../FormElements/CheckField\";\nimport Item from \"../../../Data/Item\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ItemSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<\n    { value: string; label: string }[]\n  >([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>(\n    []\n  );\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <MultipleSelectField\n        options={typeList}\n        label=\"Types\"\n        onChange={(types: string[]) => setType(types)}\n      />\n      <MultipleSelectField\n        options={rarityList}\n        label=\"Rarities\"\n        onChange={(rarities: string[]) => setRarity(rarities)}\n      />\n      <MultipleSelectField\n        options={baseList}\n        label=\"Bases\"\n        onChange={(bases: string[]) => setBase(bases)}\n      />\n      <CheckField\n        value={!!attunment}\n        label=\"Attunment\"\n        onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n      />\n      <StringSearchField\n        value={description}\n        sort={sort}\n        field={\"text\"}\n        label=\"Text\"\n        icon={faBook}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setDescription(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Item\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ItemSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Item from \"../../../Data/Item\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ItemTile from \"./ItemTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ItemSearchBar from \"./ItemSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ItemOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allItems, setAllItems] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"items\", filters, (results: any[]) => {\n      setAllItems(results);\n      setItems(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (items.length === allItems.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setItems((s) =>\n      s.concat(allItems.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n  return (\n    <AppWrapper>\n      <ItemSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ItemContainer\n          dataLength={items.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {items!.map((item: Item, index: number) => {\n            return <ItemTile key={index} item={item}></ItemTile>;\n          })}\n        </ItemContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ItemOverview;\n\nconst ItemContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  reciveAllFiltered,\n  createNewWithId,\n} from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassView = ({ classe }: $Props) => {\n  const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [{ fieldName: \"type\", value: classe.name, sort: 0 }],\n      (results: any[]) => {\n        setSubclasses(results);\n      }\n    );\n  }, [classe]);\n\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  const createNewSubclass = () => {\n    let newSubclass = new Subclass();\n    delete newSubclass.id;\n    newSubclass.type = classe.name;\n    createNewWithId(\"subclasses\", newSubclass, (id) => {\n      history.push(`/subclass-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        {getPicture() !== \"\" ? (\n          <ImageView>\n            <Image pic={getPicture()}></Image>\n          </ImageView>\n        ) : (\n          \"\"\n        )}\n        <View>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <GiDiceEightFacesEight />\n              {classe.hitDices}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {classe.sources}\n            </Prop>\n            <Text>\n              <PropTitle>Proficiencies:</PropTitle>\n              <FormatedText text={classe.proficiencies} />\n            </Text>\n            <Text>\n              <PropTitle>Equipment:</PropTitle>\n              <FormatedText text={classe.equipment} />\n            </Text>\n            <Text>\n              <PropTitle>Subclasses:</PropTitle>\n              {subclasses.length !== 0 &&\n                subclasses.map((subclass: Subclass, index: number) => {\n                  const link: string = \"/subclass-detail/id/\" + subclass.id;\n                  return (\n                    <SubclasseLink\n                      key={index}\n                      onClick={() => history.push(link)}\n                    >\n                      {subclass.name}\n                    </SubclasseLink>\n                  );\n                })}\n              <CreateButton onClick={() => createNewSubclass()}>\n                <FontAwesomeIcon icon={faPlusCircle} />\n              </CreateButton>\n            </Text>\n          </PropWrapper>\n        </View>\n        {classe.featureSets.length !== 0 &&\n          classe.featureSets[0].spellslots &&\n          classe.featureSets[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={classe.featureSets[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {classe.featureSets[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {classe.featureSets[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            classe.featureSets[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {classe.featureSets.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {classe.featureSets.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Prof. Bonus</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {classe.featureSets[0].bonis &&\n                      classe.featureSets[0].bonis.length > 0 &&\n                      classe.featureSets[0].bonis?.map(\n                        (boni, index: number) => {\n                          return (\n                            <FeatureHeadProp key={index}>\n                              {boni.name}\n                            </FeatureHeadProp>\n                          );\n                        }\n                      )}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {classe.featureSets.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>{featureSet.profBonus}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {classe.featureSets.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default ClassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SubclasseLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 60vh;\n`;\nconst Empty = styled.div``;\n\nconst CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  margin: 5px;\n  border: none;\n  box-sizing: content-box;\n  height: 28px;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number[]) => void;\n}\n\nconst NumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n  const [array, setArray] = useState<number[]>(values);\n\n  const handleValueChange = (index: number, value: number) => {\n    let values = array;\n    values[index] = value;\n    setArray(values);\n    onChange(values);\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => handleValueChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default NumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px 5px 5px 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Class from \"../../../../Data/Classes/Class\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\n\nimport {\n  faLink,\n  faImage,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextField from \"../../../FormElements/TextField\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  classe: Class;\n  onEdit: (value: Class) => void;\n}\n\nconst ClassEditView = ({ classe, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string | boolean\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = classe.featureSets.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...classe, featureSets: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets;\n    const index: number = featureSets.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      featureSets.splice(index, 1);\n      onEdit({ ...classe, featureSets: featureSets });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let featureSets = classe.featureSets.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...classe, featureSets: featureSets });\n  };\n  const addNewFeatureSet = () => {\n    if (classe.featureSets.length - 1 >= 0) {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus:\n              classe.featureSets[classe.featureSets.length - 1].profBonus,\n            features: [],\n            bonis: classe.featureSets[classe.featureSets.length - 1].bonis,\n            spellslots:\n              classe.featureSets[classe.featureSets.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...classe,\n        featureSets: [\n          ...classe.featureSets,\n          {\n            level: classe.featureSets.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <ClassView>\n        <StringField\n          value={classe.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...classe, name: name })}\n        />\n        <StringField\n          value={classe.hitDices}\n          label=\"Hit Dice\"\n          onChange={(hitDices) => onEdit({ ...classe, hitDices: hitDices })}\n        />\n        <StringField\n          value={classe.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...classe, pic: pic })}\n        />\n        <StringField\n          value={classe.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...classe, sources: sources })}\n        />\n        <TextField\n          value={classe.proficiencies}\n          label=\"Proficiencies\"\n          onChange={(proficiencies) =>\n            onEdit({ ...classe, proficiencies: proficiencies })\n          }\n        />\n        <TextField\n          value={classe.equipment}\n          label=\"Equipment\"\n          onChange={(equipment) => onEdit({ ...classe, equipment: equipment })}\n        />\n      </ClassView>\n      {classe.featureSets.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <FeatureNumber\n                value={featureSet.profBonus}\n                label=\"Prof. Bonus\"\n                onChange={(profBonus) =>\n                  onFeatureSetChange(featureSet, \"profBonus\", profBonus)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                      <CheckField\n                        value={boni.isCurrency}\n                        label=\"is Currency?\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"isCurrency\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default ClassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ClassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst FeatureView = styled(ClassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ClassView from \"./ClassView\";\nimport ClassEditView from \"./ClassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassDetail = ({ classe }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [classObj, editClass] = useState<Class>(classe);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteClass = (classeId: number | undefined) => {\n    remove(\"classes\", classeId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (classObj !== classe) {\n      setUnsavedChanges(true);\n    }\n  }, [classObj, classe]);\n\n  const updateClass = (tableName: string, classObj: Class) => {\n    updateWithCallback(tableName, classObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateClass(\"classes\", classObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteClass(classObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <ClassEditView classe={classObj} onEdit={(value) => editClass(value)} />\n      ) : (\n        <ClassView classe={classObj} />\n      )}\n    </>\n  );\n};\n\nexport default ClassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItemByAttr(\n    db.classes,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToClass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport ClassDetail from \"../ClassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToClass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [classe, loading, error] = useItem(db.classes, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && classe !== undefined ? (\n        <ClassDetail classe={classe} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToClass;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Class from \"../../../Data/Classes/Class\";\nimport { LoadingSpinner } from \"../../Loading\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { GiDiceEightFacesEight } from \"react-icons/gi\";\n\ninterface $Props {\n  classe: Class;\n}\n\nconst ClassTile = ({ classe }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (classe !== undefined) {\n      if (classe.pic === \"\" || classe.pic === null) {\n        return \"\";\n      }\n      return classe.pic;\n    }\n    return \"\";\n  }, [classe]);\n\n  return (\n    <Tile to={\"/class-detail/id/\" + classe.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{classe.name}</b>\n          </Name>\n\n          <Prop>\n            <Icon icon={faLink} />\n            {classe.sources}\n          </Prop>\n          <Prop>\n            <GiDiceEightFacesEight />\n            {classe.hitDices}\n          </Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default ClassTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  width: 100%;\n  padding: 10px;\n  margin: 5px 0 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  flex: 1 1 auto;\n  margin: 0 0 5px 0px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 5px;\n  }\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-width: 200px;\n  max-height: 300px;\n  float: left;\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport Class from \"../../../Data/Classes/Class\";\nimport { createNewWithId } from \"../../../Services/DatabaseService\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst ClassSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/class-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Class\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default ClassSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Class from \"../../../Data/Classes/Class\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ClassTile from \"./ClassTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst ClassOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allClasses, setAllClasses] = useState<Class[]>([]);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"classes\", filters, (results: any[]) => {\n      setAllClasses(results);\n      setClasses(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (classes.length === allClasses.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setClasses((s) =>\n      s.concat(allClasses.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <ClassSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <ClassContainer\n          dataLength={classes.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {classes!.map((classe: Class, index: number) => {\n            return <ClassTile key={index} classe={classe}></ClassTile>;\n          })}\n        </ClassContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default ClassOverview;\n\nconst ClassContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassView = ({ subclass }: $Props) => {\n  const printSpellslots = (length: number) => {\n    let count = length - 3;\n    let levels = [];\n    for (let i = 0; i < count; i++) {\n      levels.push(i + 4);\n    }\n    return levels.map((level: number, index: number) => {\n      return <SpellProp key={index}>{level}th</SpellProp>;\n    });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <View>\n          <Name>\n            <b>{subclass.name}</b>\n          </Name>\n          <PropWrapper>\n            <Prop>\n              <PropTitle>Class:</PropTitle>\n              {subclass.type}\n            </Prop>\n            <Prop>\n              <Icon icon={faLink} />\n              {subclass.sources}\n            </Prop>\n          </PropWrapper>\n        </View>\n        {subclass.features.length !== 0 &&\n          subclass.features[0].spellslots &&\n          subclass.features[0].spellslots.length > 0 && (\n            <View>\n              <PropWrapper>\n                <FeatureWrapper>\n                  <thead>\n                    <FeatureRow>\n                      <FeatureHeadProp\n                        colSpan={subclass.features[0].spellslots.length + 1}\n                      >\n                        Spellslots\n                      </FeatureHeadProp>\n                    </FeatureRow>\n                  </thead>\n                  <tbody>\n                    <FeatureRow>\n                      <SpellProp>Level</SpellProp>\n                      <SpellProp>1st</SpellProp>\n                      {subclass.features[0].spellslots.length >= 2 && (\n                        <SpellProp>2nd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 3 && (\n                        <SpellProp>3rd</SpellProp>\n                      )}\n                      {subclass.features[0].spellslots.length >= 4 && (\n                        <>\n                          {printSpellslots(\n                            subclass.features[0].spellslots.length\n                          )}\n                        </>\n                      )}\n                    </FeatureRow>\n                    {subclass.features.map((featureSet, index: number) => {\n                      return (\n                        <FeatureRow key={index}>\n                          {featureSet.spellslots && (\n                            <>\n                              <SpellProp>{featureSet.level}</SpellProp>\n                              {featureSet.spellslots.map(\n                                (spellslot, index: number) => {\n                                  return (\n                                    <SpellProp key={index}>\n                                      {spellslot === 0 ? \"-\" : spellslot}\n                                    </SpellProp>\n                                  );\n                                }\n                              )}\n                            </>\n                          )}\n                        </FeatureRow>\n                      );\n                    })}\n                  </tbody>\n                </FeatureWrapper>\n              </PropWrapper>\n            </View>\n          )}\n        <View>\n          <PropWrapper>\n            {subclass.features.length !== 0 && (\n              <FeatureWrapper>\n                <thead>\n                  <FeatureRow>\n                    <FeatureHeadProp>Level</FeatureHeadProp>\n                    <FeatureHeadProp>Features</FeatureHeadProp>\n                    {subclass.features[0].bonis &&\n                      subclass.features[0].bonis.length > 0 &&\n                      subclass.features[0].bonis?.map((boni, index: number) => {\n                        return (\n                          <FeatureHeadProp key={index}>\n                            {boni.name}\n                          </FeatureHeadProp>\n                        );\n                      })}\n                  </FeatureRow>\n                </thead>\n                <tbody>\n                  {subclass.features.map((featureSet, index: number) => {\n                    return (\n                      <FeatureRow key={index}>\n                        <FeatureProp>{featureSet.level}</FeatureProp>\n                        <FeatureProp>\n                          {featureSet.features.map((feature) => {\n                            return feature.name + \", \";\n                          })}\n                        </FeatureProp>\n                        {featureSet.bonis?.map((boni, index: number) => {\n                          return (\n                            <FeatureProp key={index}>{boni.value}</FeatureProp>\n                          );\n                        })}\n                      </FeatureRow>\n                    );\n                  })}\n                </tbody>\n              </FeatureWrapper>\n            )}\n          </PropWrapper>\n        </View>\n      </CenterWrapper>\n      <CenterWrapper>\n        <View>\n          {subclass.features.map((featureSet) => {\n            return featureSet.features.map((feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{feature.name}:</PropTitle>\n                  <FormatedText text={feature.text} />\n                </Text>\n              );\n            });\n          })}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default SubclassView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 24px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureWrapper = styled.table`\n  width: 100%;\n  padding: 0px;\n  margin: 2px 0px 2px 0px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst FeatureRow = styled.tr``;\n\nconst FeatureHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n\nconst FeatureProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n\nconst SpellProp = styled(FeatureProp)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Feature, { featureType, featureTypeArray, getOptionFromEnum } from \"../../../../Data/Classes/Feature\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport ShortTextField from \"../../../FormElements/ShortTextField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport NumberArrayField from \"../../../FormElements/NumberArrayField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\nimport {\n  faLink,\n  faPlus,\n  faTrash,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  subclass: Subclass;\n  onEdit: (value: Subclass) => void;\n}\n\nconst SubclassEditView = ({ subclass, onEdit }: $Props) => {\n  const onFeatureSetChange = (\n    oldFeature: FeatureSet,\n    field: string,\n    value: string | number | any[]\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature) {\n        return {\n          ...featureSet,\n          [field]: value,\n        };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const onBoniChange = (\n    oldFeature: FeatureSet,\n    oldBoni: Boni,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.bonis !== undefined) {\n        let bonis = featureSet.bonis.map((boni: Boni) => {\n          if (boni === oldBoni) {\n            return {\n              ...boni,\n              [field]: value,\n            };\n          } else {\n            return boni;\n          }\n        });\n        return { ...featureSet, bonis: bonis };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onSpellslotChange = (oldFeature: FeatureSet, value: number[]) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeature && featureSet.spellslots !== undefined) {\n        return { ...featureSet, spellslots: value } as FeatureSet;\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const onFeatureChange = (\n    oldFeatureSet: FeatureSet,\n    oldFeature: Feature,\n    field: string,\n    value: string\n  ) => {\n    let features = subclass.features.map((featureSet: FeatureSet) => {\n      if (featureSet === oldFeatureSet && featureSet.features !== undefined) {\n        let features = featureSet.features.map((feature: Feature) => {\n          if (feature === oldFeature) {\n            return {\n              ...feature,\n              [field]: value,\n            };\n          } else {\n            return feature;\n          }\n        });\n        return { ...featureSet, features: features };\n      } else {\n        return featureSet;\n      }\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const removeFeatureSet = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features;\n    const index: number = features.indexOf(oldFeatureSet);\n    if (index !== -1) {\n      features.splice(index, 1);\n      onEdit({ ...subclass, features: features });\n    }\n  };\n  const removeBoni = (oldBoni: Boni) => {\n    let features = subclass.features.map((featureSet) => {\n      let bonis = featureSet.bonis;\n      if (bonis !== undefined) {\n        const index: number = bonis.indexOf(oldBoni);\n        if (index !== -1) {\n          bonis.splice(index, 1);\n        }\n        return { ...featureSet, bonis: bonis };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeFeature = (oldFeature: Feature) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      const index: number = features.indexOf(oldFeature);\n      if (index !== -1) {\n        features.splice(index, 1);\n      }\n      return { ...featureSet, features: features };\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const removeSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return {\n          ...featureSet,\n          spellslots: [...featureSet.spellslots].slice(\n            0,\n            featureSet.spellslots.length - 1\n          ),\n        };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n\n  const addNewSpellslot = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.spellslots !== undefined && featureSet === oldFeatureSet) {\n        return { ...featureSet, spellslots: [...featureSet.spellslots, 0] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewBoni = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      if (featureSet.bonis !== undefined && featureSet === oldFeatureSet) {\n        const newBoni = {\n          name: \"\",\n          value: \"\",\n          isCurrency: false,\n        };\n        return { ...featureSet, bonis: [...featureSet.bonis, newBoni] };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeature = (oldFeatureSet: FeatureSet) => {\n    let features = subclass.features.map((featureSet) => {\n      let features = featureSet.features;\n      if (features !== undefined && featureSet === oldFeatureSet) {\n        features.push({\n          name: \"\",\n          text: \"\",\n          type: featureType.normal,\n        });\n        return { ...featureSet, features: features };\n      }\n      return featureSet;\n    });\n    onEdit({ ...subclass, features: features });\n  };\n  const addNewFeatureSet = () => {\n    if (subclass.features.length - 1 >= 0) {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: subclass.features[subclass.features.length - 1].bonis,\n            spellslots:\n              subclass.features[subclass.features.length - 1].spellslots,\n          },\n        ],\n      });\n    } else {\n      onEdit({\n        ...subclass,\n        features: [\n          ...subclass.features,\n          {\n            level: subclass.features.length + 1,\n            profBonus: 0,\n            features: [],\n            bonis: [],\n            spellslots: [],\n          },\n        ],\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <SubclassView>\n        <StringField\n          value={subclass.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...subclass, name: name })}\n        />\n        <StringField\n          value={subclass.type}\n          label=\"Class\"\n          onChange={(type) => onEdit({ ...subclass, type: type })}\n        />\n        <StringField\n          value={subclass.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...subclass, sources: sources })}\n        />\n      </SubclassView>\n      {subclass.features.map((featureSet: FeatureSet, index: number) => {\n        return (\n          <FeatureView key={index}>\n            <FeatureWrapper>\n              <FeatureNumber\n                value={featureSet.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onFeatureSetChange(featureSet, \"level\", level)\n                }\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeFeatureSet(featureSet)}\n              />\n              <FeatureNumberArray\n                values={featureSet.spellslots ? featureSet.spellslots : []}\n                label=\"Spellslots\"\n                onChange={(spellslots: number[]) =>\n                  onSpellslotChange(featureSet, spellslots)\n                }\n              />\n              <IconButton\n                icon={faMinus}\n                onClick={() => removeSpellslot(featureSet)}\n              />\n              <IconButton\n                icon={faPlus}\n                onClick={() => addNewSpellslot(featureSet)}\n              />\n              {featureSet.bonis &&\n                featureSet.bonis.map((boni: Boni, index: number) => {\n                  return (\n                    <BoniContainer key={index}>\n                      <BoniName\n                        value={boni.name}\n                        label=\"Boni\"\n                        onChange={(name) =>\n                          onBoniChange(featureSet, boni, \"name\", name)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeBoni(boni)}\n                      />\n                      <FeatureString\n                        value={boni.value}\n                        label=\"Boni Value\"\n                        onChange={(value) =>\n                          onBoniChange(featureSet, boni, \"value\", value)\n                        }\n                      />\n                    </BoniContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Boni\"}\n                icon={faPlus}\n                onClick={() => addNewBoni(featureSet)}\n              />\n            </FeatureWrapper>\n            <FeatureWrapper>\n              {featureSet.features &&\n                featureSet.features.map((feature: Feature, index: number) => {\n                  return (\n                    <FeatureContainer key={index}>\n                      <FeatureName\n                        value={feature.name}\n                        label=\"Feature\"\n                        onChange={(name) =>\n                          onFeatureChange(featureSet, feature, \"name\", name)\n                        }\n                      />\n                      <EnumField\n                        options={featureTypeArray}\n                        value={getOptionFromEnum(feature.type)}\n                        label=\"Types\"\n                        onChange={(type) =>\n                          onFeatureChange(featureSet, feature, \"type\", type)\n                        }\n                      />\n                      <IconButton\n                        icon={faTrash}\n                        onClick={() => removeFeature(feature)}\n                      />\n                      <FeatureText\n                        value={feature.text}\n                        label=\"Feature Text\"\n                        onChange={(text) =>\n                          onFeatureChange(featureSet, feature, \"text\", text)\n                        }\n                      />\n                    </FeatureContainer>\n                  );\n                })}\n            </FeatureWrapper>\n            <FeatureWrapper>\n              <TextButton\n                text={\"Add new Feature\"}\n                icon={faPlus}\n                onClick={() => addNewFeature(featureSet)}\n              />\n            </FeatureWrapper>\n          </FeatureView>\n        );\n      })}\n      <FeatureView>\n        <TextButton\n          text={\"Add new Level\"}\n          icon={faPlus}\n          onClick={() => addNewFeatureSet()}\n        />\n      </FeatureView>\n    </CenterWrapper>\n  );\n};\n\nexport default SubclassEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst SubclassView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\nconst FeatureView = styled(SubclassView)``;\n\nconst FeatureWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  label {\n    margin: 2px;\n  }\n`;\nconst FeatureString = styled(StringField)``;\nconst FeatureNumber = styled(NumberField)``;\nconst FeatureText = styled(ShortTextField)``;\nconst FeatureNumberArray = styled(NumberArrayField)``;\n\nconst FeatureContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n  border-top: none;\n  border-bottom: 2px solid ${({ theme }) => theme.input.backgroundColor};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst FeatureName = styled(StringField)``;\n\nconst BoniContainer = styled(FeatureContainer)``;\nconst BoniName = styled(FeatureString)``;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SubclassView from \"./SubclassView\";\nimport SubclassEditView from \"./SubclassEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport Subclass from \"../../../../Data/Classes/Subclass\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../Services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  subclass: Subclass;\n}\n\nconst SubclassDetail = ({ subclass }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [subclassObj, editSubclass] = useState<Subclass>(subclass);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteSubclass = (subclassId: number | undefined) => {\n    remove(\"subclasses\", subclassId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (subclassObj !== subclass) {\n      setUnsavedChanges(true);\n    }\n  }, [subclassObj,subclass]);\n\n  const updateSubclass = (tableName: string, subclassObj: Subclass) => {\n    updateWithCallback(tableName, subclassObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateSubclass(\"subclasses\", subclassObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteSubclass(subclassObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <SubclassEditView subclass={subclassObj} onEdit={(value) => editSubclass(value)} />\n      ) : (\n        <SubclassView subclass={subclassObj} />\n      )}\n    </>\n  );\n};\n\nexport default SubclassDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { name: string };\n\nconst NameToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItemByAttr(\n    db.subclasses,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToSubclass;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport SubclassDetail from \"../SubclassDetail\";\n\ntype TParams = { id: string };\n\nconst IdToSubclass = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [subclass, loading, error] = useItem(db.subclasses, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && subclass !== undefined ? (\n        <SubclassDetail subclass={subclass} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToSubclass;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst SmallNumberField = ({\n  value,\n  max,\n  showMax,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SmallNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Class from \"../../../../../Data/Classes/Class\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n  faHeartBroken,\n  faHeartbeat,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  classes: Class[];\n}\n\nconst CharGeneral = ({ char, classes, onChange }: $Props) => {\n  const [deathSaves, setDeathSaves] = useState<number[]>([0, 0, 0, 0, 0, 0]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback((skillProf: number, stat: number) => {\n    return (skillProf * prof) + formatScore(stat);\n  }, [formatScore, prof]);\n\n  const changeMoney = (field: string, value: number) => {\n    const newChar = { ...char, money: { ...char.money, [field]: value } };\n    onChange(newChar);\n  };\n\n  const changeHp = (field: string, value: number) => {\n    const newChar = { ...char, [field]: value };\n    onChange(newChar);\n  };\n\n  const changeDeathIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartBroken;\n    }\n  };\n  const changeLifeIcon = (value: number) => {\n    if (value === undefined || value === 0) {\n      return faMinus;\n    } else {\n      return faHeartbeat;\n    }\n  };\n  const changeDeathSave = (index: number) => {\n    let newDeathSaves = [...deathSaves];\n    newDeathSaves[index] = (deathSaves[index] + 1) % 2;\n    setDeathSaves(newDeathSaves);\n  };\n\n  return (\n    <>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str Save:</PropTitle>\n              {calcSkill(char.saves.strSaveProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.strSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex Save:</PropTitle>\n              {calcSkill(char.saves.dexSaveProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.dexSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con Save:</PropTitle>\n              {calcSkill(char.saves.conSaveProf, char.con)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.conSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int Save:</PropTitle>\n              {calcSkill(char.saves.intSaveProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.intSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis Save:</PropTitle>\n              {calcSkill(char.saves.wisSaveProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.wisSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha Save:</PropTitle>\n              {calcSkill(char.saves.chaSaveProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.saves.chaSaveProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Acrobatics:</PropTitle>\n              {calcSkill(char.skills.acrobaticsProf, char.str)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Animal Handling:</PropTitle>\n              {calcSkill(char.skills.animalHandlingProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Arcana:</PropTitle>\n              {calcSkill(char.skills.arcanaProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.arcanaProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Athletics:</PropTitle>\n              {calcSkill(char.skills.athleticsProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.athleticsProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Deception:</PropTitle>\n              {calcSkill(char.skills.deceptionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.deceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>History:</PropTitle>\n              {calcSkill(char.skills.historyProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.historyProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Insight:</PropTitle>\n              {calcSkill(char.skills.insightProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.insightProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Intimidation:</PropTitle>\n              {calcSkill(char.skills.intimidationProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.intimidationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Investigation:</PropTitle>\n              {calcSkill(char.skills.investigationProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.investigationProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Medicine:</PropTitle>\n              {calcSkill(char.skills.medicineProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.medicineProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Nature:</PropTitle>\n              {calcSkill(char.skills.natureProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.natureProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Perception:</PropTitle>\n              {calcSkill(char.skills.perceptionProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.perceptionProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Performance:</PropTitle>\n              {calcSkill(char.skills.performanceProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.performanceProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Persuasion:</PropTitle>\n              {calcSkill(char.skills.persuasionProf, char.cha)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.persuasionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Religion:</PropTitle>\n              {calcSkill(char.skills.religionProf, char.int)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.religionProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Sleight Of Hand:</PropTitle>\n              {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Stealth:</PropTitle>\n              {calcSkill(char.skills.stealthProf, char.dex)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.stealthProf)} />\n            </PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Survival:</PropTitle>\n              {calcSkill(char.skills.survivalProf, char.wis)}\n            </PropText>\n            <PropProf>\n              <Icon icon={formatProf(char.skills.survivalProf)} />\n            </PropProf>\n          </PropWithProf>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Proficiencies Bonus:</PropTitle>+{prof}\n          </Prop>\n          <Prop>\n            <PropTitle>Initiative:</PropTitle>\n            {char.init}\n          </Prop>\n          <Prop>\n            <PropTitle>Armor Class:</PropTitle>\n            {char.ac}\n          </Prop>\n          <Prop>\n            <PropTitle>Hit Points:</PropTitle>\n            {char.hp}\n          </Prop>\n          <SmallNumberField\n            value={char.currentHp}\n            label=\"Current Hp\"\n            onChange={(currentHp) => changeHp(\"currentHp\", currentHp)}\n          />\n          <Prop>\n            <PropTitle>Hit Die:</PropTitle>\n            {char.classes.map((classe) => {\n              return classes.map((classesClass) => {\n                if (classe.classe === classesClass.name) {\n                  return classe.level + classesClass.hitDices + \" \";\n                } else {\n                  return \"\";\n                }\n              });\n            })}\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Passiv Perception:</PropTitle>\n            {calcSkill(char.skills.perceptionProf, char.wis) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Investigation:</PropTitle>\n            {calcSkill(char.skills.investigationProf, char.int) + 10}\n          </Prop>\n          <Prop>\n            <PropTitle>Passiv Insight:</PropTitle>\n            {calcSkill(char.skills.insightProf, char.wis) + 10}\n          </Prop>\n          <Text>\n            <PropTitle>Senses:</PropTitle>\n            <FormatedText text={char.senses} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Text>\n            <PropTitle>Proficiencies:</PropTitle>\n            <FormatedText text={char.profsLangs} />\n          </Text>\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <SmallNumberField\n            value={char.money.copper}\n            label=\"Copper\"\n            onChange={(copper) => changeMoney(\"copper\", copper)}\n          />\n          <SmallNumberField\n            value={char.money.silver}\n            label=\"Silver\"\n            onChange={(silver) => changeMoney(\"silver\", silver)}\n          />\n          <SmallNumberField\n            value={char.money.gold}\n            label=\"Gold\"\n            onChange={(gold) => changeMoney(\"gold\", gold)}\n          />\n          <SmallNumberField\n            value={char.money.platinum}\n            label=\"Platinum\"\n            onChange={(platinum) => changeMoney(\"platinum\", platinum)}\n          />\n          <SmallNumberField\n            value={char.money.electrum}\n            label=\"Electrum\"\n            onChange={(electrum) => changeMoney(\"electrum\", electrum)}\n          />\n        </PropColumnWrapper>\n      </MinView>\n      <MinView>\n        <PropColumnWrapper>\n          <Prop>\n            <PropTitle>Death Saves:</PropTitle>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Sucesses:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(0)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[0])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(1)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[1])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(2)}>\n                <FontAwesomeIcon icon={changeLifeIcon(deathSaves[2])} />\n              </span>\n            </DeathSaveRow>\n            <DeathSaveRow>\n              <DeathSaveRowHeader>Failures:</DeathSaveRowHeader>\n              <span onClick={(e) => changeDeathSave(3)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[3])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(4)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[4])} />\n              </span>\n              <span onClick={(e) => changeDeathSave(5)}>\n                <FontAwesomeIcon icon={changeDeathIcon(deathSaves[5])} />\n              </span>\n            </DeathSaveRow>\n          </Prop>\n        </PropColumnWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharGeneral;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropColumnWrapper = styled(PropWrapper)`\n  flex-direction: column;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst DeathSaveRow = styled.div`\n  width: calc(100% - 10px);\n  padding: 5px;\n\n  & span svg {\n    margin-left: 5px;\n  }\n`;\n\nconst DeathSaveRowHeader = styled.div`\n  width: 80px;\n  float: left;\n`;\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport ClassSet from \"../../../../../Data/Chars/ClassSet\";\n\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharHeader = ({ char }: $Props) => {\n  let history = useHistory();\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    if (mod >= 0) {\n      return \"+\" + mod;\n    } else {\n      return mod;\n    }\n  }, []);\n\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char.classes]);\n\n  return (\n    <>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n          \"\"\n        )}\n      <View>\n        <Name>\n          <b>{char.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Level:</PropTitle>\n            {calcLevel()}\n          </Prop>\n          <Prop>\n            <PropTitle>Player:</PropTitle>\n            {char.player}\n          </Prop>\n          <Prop>\n            <PropTitle>Race:</PropTitle>\n            <MainLink\n              onClick={() =>\n                history.push(`/race-detail/name/${char.race.race}`)\n              }\n            >\n              {char.race.race}\n            </MainLink>\n          </Prop>\n          {char.race.subrace && (\n            <Prop>\n              <PropTitle>Subrace:</PropTitle>\n              <MainLink\n                onClick={() =>\n                  history.push(`/subrace-detail/name/${char.race.subrace}`)\n                }\n              >\n                {char.race.subrace}\n              </MainLink>\n            </Prop>\n          )}\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <PropTitle>Class Level:</PropTitle>\n                    {classSet.level}\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(`/class-detail/name/${classSet.classe}`)\n                      }\n                    >\n                      {classSet.classe}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/subclass-detail/name/${classSet.subclasse}`\n                        )\n                      }\n                    >\n                      {classSet.subclasse}\n                    </MainLink>\n                  </Prop>\n                </PropWrapper>\n              );\n            })}\n          <Prop>\n            <PropTitle>Background:</PropTitle>\n            {char.background}\n          </Prop>\n          <Prop>\n            <PropTitle>Alignment:</PropTitle>\n            {char.alignment}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Str:</PropTitle>\n              {char.str}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.str)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Dex:</PropTitle>\n              {char.dex}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.dex)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Con:</PropTitle>\n              {char.con}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.con)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Int:</PropTitle>\n              {char.int}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.int)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Wis:</PropTitle>\n              {char.wis}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.wis)}</PropProf>\n          </PropWithProf>\n          <PropWithProf>\n            <PropText>\n              <PropTitle>Cha:</PropTitle>\n              {char.cha}{\" \"}\n            </PropText>\n            <PropProf>{formatScore(char.cha)}</PropProf>\n          </PropWithProf>\n        </PropWrapper>\n      </View>\n      <MinView>\n        <StatProp>\n          <RadarChart\n            cx={120}\n            cy={120}\n            outerRadius={80}\n            width={240}\n            height={240}\n            data={[\n              {\n                subject: \"Str\",\n                A: char.str,\n                fullMark: 40,\n              },\n              {\n                subject: \"Dex\",\n                A: char.dex,\n                fullMark: 40,\n              },\n              {\n                subject: \"Con\",\n                A: char.con,\n                fullMark: 40,\n              },\n              {\n                subject: \"Int\",\n                A: char.int,\n                fullMark: 40,\n              },\n              {\n                subject: \"Wis\",\n                A: char.wis,\n                fullMark: 40,\n              },\n              {\n                subject: \"Cha\",\n                A: char.cha,\n                fullMark: 40,\n              },\n            ]}\n          >\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" tick={{ fill: \"#8000ff\" }} />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, \"dataMax\"]}\n              axisLine={false}\n              tick={false}\n            />\n            <Radar\n              name=\"Mike\"\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            />\n          </RadarChart>\n        </StatProp>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharHeader;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  min-width: max-content;\n  max-width: max-content;\n`;\n\nconst ImageView = styled(MinView)`\n  justify-content: center;\n  flex: 1 1 100px;\n  min-width: max-content;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst StatProp = styled(Prop)`\n  max-width: max-content;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 20px !important;\n    height: 20px !important;\n    margin: 0;\n  }\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst MainLink = styled(Link)`\n  font-size: 16px;\n  cursor: pointer;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 250px;\n`;\nconst Empty = styled.div``;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Item from \"../../../../../Data/Item\";\nimport Gear from \"../../../../../Data/Gear\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\nimport Class from \"../../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../../Data/Classes/FeatureSet\";\nimport FormatedText from \"../../../../GeneralElements/FormatedText\";\nimport Feature from \"../../../../../Data/Classes/Feature\";\n\ninterface $Props {\n  char: Char;\n  classes: Class[];\n  classesFeatures: FeatureSet[];\n  items: {\n    item: Item;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  gears: {\n    gear: Gear;\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n}\n\nconst CharCombat = ({\n  char,\n  items,\n  gears,\n  classes,\n  classesFeatures,\n}: $Props) => {\n  let history = useHistory();\n  const [baseItems, setBaseItems] = useState<\n    {\n      base: Gear;\n      item: {\n        item: Item;\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      };\n    }[]\n  >([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const [actions, setActions] = useState<Feature[]>([]);\n  const [bonusActions, setBonusActions] = useState<Feature[]>([]);\n  const [reactions, setReactions] = useState<Feature[]>([]);\n\n  useEffect(() => {\n    if (classesFeatures && classesFeatures.length > 0) {\n      let newActions: Feature[] = [];\n      let newBonusActions: Feature[] = [];\n      let newReactions: Feature[] = [];\n      classesFeatures\n        .sort((f1, f2) => f1.level - f2.level)\n        .forEach((featureSet) => {\n          featureSet.features.forEach((feature: Feature) => {\n            if (feature.type.toString() === \"action\") {\n              newActions.push(feature);\n            } else if (feature.type.toString() === \"bonusAction\") {\n              newBonusActions.push(feature);\n            } else if (feature.type.toString() === \"reaction\") {\n              newReactions.push(feature);\n            }\n          });\n        });\n      setActions(newActions);\n      setBonusActions(newBonusActions);\n      setReactions(newReactions);\n    }\n  }, [classesFeatures]);\n\n  useEffect(() => {\n    items.forEach((item) => {\n      if (item.item.base !== \"\") {\n        reciveByAttribute(\"gears\", \"name\", item.item.base, (result) => {\n          setBaseItems((b) => [...b, { item: item, base: result as Gear }]);\n        });\n      }\n    });\n  }, [items]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [char, classes, calcLevel]);\n\n  return (\n    <>\n      <MinView>\n        {baseItems &&\n          baseItems.length > 0 &&\n          baseItems.map((baseitem, index: number) => {\n            if (\n              baseitem.item.item.type.toLocaleLowerCase().includes(\"weapon\")\n            ) {\n              const bonus = Math.floor(\n                (char[baseitem.item.attribute] - 10) / 2\n              );\n              return (\n                <PropWrapper key={index}>\n                  <Prop>\n                    <MainLink\n                      onClick={() =>\n                        history.push(\n                          `/item-detail/name/${baseitem.item.origin}`\n                        )\n                      }\n                    >\n                      {baseitem.item.item.name}\n                    </MainLink>\n                  </Prop>\n                  <Prop>\n                    +\n                    {bonus +\n                      (baseitem.item.prof ? prof : 0) +\n                      baseitem.item.item.magicBonus}\n                  </Prop>\n                  <Prop>\n                    {`${baseitem.base.damage} +${\n                      baseitem.item.item.magicBonus + bonus\n                    }`}\n                  </Prop>\n                  <Prop>{baseitem.base.properties}</Prop>\n                </PropWrapper>\n              );\n            } else {\n              return \"\";\n            }\n          })}\n        {gears &&\n          gears.length > 0 &&\n          gears.map((gear, index: number) => {\n            if (gear.gear.type.toLocaleLowerCase().includes(\"weapon\")) {\n              const strBonus = Math.floor((char.str - 10) / 2);\n              const dexBonus = Math.floor((char.dex - 10) / 2);\n              if (\n                gear.gear.properties.toLocaleLowerCase().includes(\"finesse\")\n              ) {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>\n                      {strBonus > dexBonus ? <>+{strBonus + prof}</> : \"\"}\n                      {dexBonus > strBonus ? <>+{dexBonus + prof}</> : \"\"}\n                    </Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              } else {\n                return (\n                  <PropWrapper key={index}>\n                    <Prop>{gear.gear.name}</Prop>\n                    <Prop>+{strBonus + prof}</Prop>\n                    <Prop>{gear.gear.damage}</Prop>\n                    <Prop>{gear.gear.properties}</Prop>\n                  </PropWrapper>\n                );\n              }\n            } else {\n              return \"\";\n            }\n          })}\n      </MinView>\n      {actions && actions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {actions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {bonusActions && bonusActions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {bonusActions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      {reactions && reactions.length > 0 && (\n        <MinView>\n          <PropWrapper>\n            {reactions.map((action: Feature, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{action.name}:</PropTitle>\n                  <FormatedText text={action.text} />\n                </Text>\n              );\n            })}\n          </PropWrapper>\n        </MinView>\n      )}\n      <MinView>\n        <PropWrapper>\n          <Text>\n            <PropTitle>Action Notes:</PropTitle>\n            <FormatedText text={char.actions} />\n          </Text>\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharCombat;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 2px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  values: number[];\n  max?: number[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (index: number, value: number) => void;\n}\n\nconst SmallNumberArrayField = ({\n  values,\n  label,\n  icon,\n  transform,\n  max,\n  onChange,\n}: $Props) => {\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {values.map((value: number, index: number) => {\n        if (max !== undefined) {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              max={max[index]}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        } else {\n          return (\n            <Input\n              type=\"number\"\n              key={index}\n              value={value}\n              onChange={(e) => onChange(index, +e.target.value)}\n            ></Input>\n          );\n        }\n      })}\n    </Field>\n  );\n};\n\nexport default SmallNumberArrayField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  max-width: max-content;\n  padding: 2px 5px 2px 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  margin-right: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 1rem;\n  max-width: 2em;\n  height: 34px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  margin: 2px;\n  -moz-appearance: textfield;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../../Data/Chars/Char\";\nimport Spell, { isSpell } from \"../../../../../Data/Spell\";\nimport { reciveByAttribute } from \"../../../../../Services/DatabaseService\";\n\nimport SmallNumberArrayField from \"../../../../FormElements/SmallNumberArrayField\";\nimport SpellTile from \"../../../Spells/SpellTile\";\nimport SmallNumberField from \"../../../../FormElements/SmallNumberField\";\n\ninterface $Props {\n  char: Char;\n  saveChar: (char: Char) => void;\n}\n\nconst CharSpell = ({ char, saveChar }: $Props) => {\n  const [spells, setSpells] = useState<Spell[]>([]);\n\n  useEffect(() => {\n    char.spells.forEach((spell) => {\n      reciveByAttribute(\"spells\", \"name\", spell, (result) => {\n        if (result && isSpell(result)) {\n          setSpells((s) => [...s, result]);\n        }\n      });\n    });\n  }, [char.spells]);\n\n  const onSpellslotChange = useCallback(\n    (\n      oldSlots: { origin: string; slots: number[]; max: number[] },\n      index: number,\n      value: number\n    ) => {\n      let newSpellSlots = char.spellSlots.map(\n        (slots: { origin: string; slots: number[]; max: number[] }) => {\n          if (slots.origin === oldSlots.origin) {\n            let oldSlotValues = Array.from(oldSlots.slots);\n            oldSlotValues[index] = value;\n            return {\n              origin: oldSlots.origin,\n              slots: oldSlotValues,\n              max: oldSlots.max,\n            };\n          } else {\n            return slots;\n          }\n        }\n      );\n      saveChar({ ...char, spellSlots: newSpellSlots });\n    },\n    [char, saveChar]\n  );\n\n  const onCurrencyBoniChange = useCallback(\n    (\n      oldBoni: { origin: string; value: number; max: number },\n      value: number\n    ) => {\n      let newBonis = char.currencyBonis.map(\n        (boni: { origin: string; value: number; max: number }) => {\n          if (boni === oldBoni) {\n            return { ...boni, value: value };\n          } else {\n            return boni;\n          }\n        }\n      );\n      saveChar({ ...char, currencyBonis: newBonis });\n    },\n    [char, saveChar]\n  );\n\n  return (\n    <>\n      <MinView>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Casting Hit:</PropTitle>\n            {char.castingHit}\n          </Prop>\n          <Prop>\n            <PropTitle>Casting Dc:</PropTitle>\n            {char.castingDC}\n          </Prop>\n          {char.currencyBonis &&\n            char.currencyBonis.map(\n              (\n                boni: { origin: string; value: number; max: number },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberField\n                    key={index}\n                    max={boni.max}\n                    showMax={true}\n                    value={boni.value}\n                    label={boni.origin}\n                    onChange={(boniChange) =>\n                      onCurrencyBoniChange(boni, boniChange)\n                    }\n                  />\n                );\n              }\n            )}\n          {char.spellSlots &&\n            char.spellSlots.map(\n              (\n                classSlots: {\n                  origin: string;\n                  slots: number[];\n                  max: number[];\n                },\n                index: number\n              ) => {\n                return (\n                  <SmallNumberArrayField\n                    key={index}\n                    values={classSlots.slots}\n                    max={classSlots.max}\n                    label={classSlots.origin}\n                    onChange={(i, value) =>\n                      onSpellslotChange(classSlots, i, value)\n                    }\n                  />\n                );\n              }\n            )}\n        </PropWrapper>\n        <PropWrapper>\n          {spells &&\n            spells.map((spell, index: number) => {\n              return <SpellTile key={index} spell={spell} />;\n            })}\n        </PropWrapper>\n      </MinView>\n    </>\n  );\n};\n\nexport default CharSpell;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst MinView = styled(View)`\n  max-width: max-content;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  reciveAllFiltered,\n  reciveByAttribute,\n  update,\n} from \"../../../../Services/DatabaseService\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\n// import Subclass from \"../../../../Data/Classes/Subclass\";\nimport Feature from \"../../../../Data/Classes/Feature\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\n// import Race from \"../../../../Data/Races/Race\";\n// import Subrace from \"../../../../Data/Races/Subrace\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Item, { isItem } from \"../../../../Data/Item\";\nimport Gear, { isGear } from \"../../../../Data/Gear\";\nimport Monster, { isMonster } from \"../../../../Data/Monster\";\n\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharGeneral from \"./DetailComponents/CharGeneral\";\nimport CharHeader from \"./DetailComponents/CharHeader\";\nimport ItemTile from \"../../Item/ItemTile\";\nimport GearTile from \"../../Gear/GearTile\";\nimport CharCombat from \"./DetailComponents/CharCombat\";\nimport MonsterTile from \"../../Monster/MonsterTile\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CharSpell from \"./DetailComponents/CharSpells\";\n\ninterface $Props {\n  character: Char;\n}\n\nconst CharView = ({ character }: $Props) => {\n  const [char, setChar] = useState<Char>(character);\n\n  const [classes, setClasses] = useState<Class[]>([]);\n  // const [subclasses, setSubclasses] = useState<Subclass[]>([]);\n  const [classesFeatures, setClassesFeatures] = useState<FeatureSet[]>([]);\n\n  // const [race, setRace] = useState<Race>();\n  // const [subrace, setSubrace] = useState<Subrace>();\n  const [raceFeatures, setRaceFeatures] = useState<Trait[]>([]);\n\n  const [gears, setGears] = useState<\n    {\n      gear: Gear;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [items, setItems] = useState<\n    {\n      item: Item;\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[]\n  >([]);\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [tabs, setTabs] = useState<string[]>([\n    \"General\",\n    \"Combat\",\n    \"Race\",\n    \"Classes\",\n    \"Notes\",\n  ]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n        results.forEach((classe) => {\n          let classLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (classe.name === charClass.classe) {\n              classLevel = charClass.level;\n            }\n          });\n          classe.featureSets.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= classLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subclasses\",\n      [\n        {\n          fieldName: \"name\",\n          value: character.classes.map((classe) => {\n            return classe.subclasse;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        // setSubclasses(results);\n        results.forEach((subclass) => {\n          let subclassLevel = 0;\n          character.classes.forEach((charClass) => {\n            if (subclass.name === charClass.subclasse) {\n              subclassLevel = charClass.level;\n            }\n          });\n          subclass.features.forEach((featureSet: FeatureSet) => {\n            if (featureSet.level <= subclassLevel) {\n              setClassesFeatures((c) => [...c, featureSet]);\n            }\n          });\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"races\",\n      [{ fieldName: \"name\", value: character.race.race, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"subraces\",\n      [{ fieldName: \"name\", value: character.race.subrace, sort: 0 }],\n      (results: any[]) => {\n        // setRace(results[0]);\n        if (results.length > 0) {\n          results[0].traits.forEach((trait: Trait) => {\n            if (trait.level <= calcLevel()) {\n              setRaceFeatures((c) => [...c, trait]);\n            }\n          });\n        }\n      }\n    );\n  }, [character, calcLevel]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"items\", \"name\", item.origin, (result) => {\n          if (result && isItem(result)) {\n            setItems((s) => [...s, { ...item, item: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.items.forEach(\n      (item: {\n        origin: string;\n        attuned: boolean;\n        prof: boolean;\n        attribute: string;\n      }) => {\n        reciveByAttribute(\"gears\", \"name\", item.origin, (result) => {\n          if (result && isGear(result)) {\n            setGears((s) => [...s, { ...item, gear: result }]);\n          }\n        });\n      }\n    );\n  }, [character]);\n\n  useEffect(() => {\n    character.monsters.forEach((monster) => {\n      reciveByAttribute(\"monsters\", \"name\", monster, (result) => {\n        if (result && isMonster(result)) {\n          setMonsters((s) => [...s, result]);\n        }\n      });\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (!tabs.includes(\"Monster\") && character.monsters.length > 0)\n      setTabs((t) => [...t, \"Monster\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Items\") && character.items.length > 0)\n      setTabs((t) => [...t, \"Items\"]);\n  }, [character, tabs]);\n  useEffect(() => {\n    if (!tabs.includes(\"Spells\") && character.spells.length > 0)\n      setTabs((t) => [...t, \"Spells\"]);\n  }, [character, tabs]);\n\n  const saveChar = (char: Char) => {\n    setChar(char);\n    update(\"chars\", char);\n  };\n\n  return (\n    <CenterWrapper>\n      <CharHeader char={char} />\n      <TabBar children={tabs} onChange={(tab: string) => setTab(tab)} />\n      {activeTab === \"General\" && (\n        <CharGeneral char={char} onChange={saveChar} classes={classes} />\n      )}\n      {activeTab === \"Combat\" && (\n        <CharCombat\n          char={char}\n          items={items}\n          gears={gears}\n          classes={classes}\n          classesFeatures={classesFeatures}\n        />\n      )}\n      {activeTab === \"Classes\" && (\n        <View>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <SmallText key={index}>\n                    <PropTitle>{classe.name} Proficiencies:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </SmallText>\n                );\n              })}\n          </PropWrapper>\n          <PropWrapper>\n            {classesFeatures &&\n              classesFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((featureSet: FeatureSet) => {\n                  return featureSet.features.map(\n                    (feature: Feature, index: number) => {\n                      return (\n                        <Text key={index}>\n                          <PropTitle>{feature.name}:</PropTitle>\n                          <FormatedText text={feature.text} />\n                        </Text>\n                      );\n                    }\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Race\" && (\n        <View>\n          <PropWrapper>\n            {raceFeatures &&\n              raceFeatures\n                .sort((f1, f2) => f1.level - f2.level)\n                .map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>{trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Spells\" && <CharSpell char={char} saveChar={saveChar} />}\n      {activeTab === \"Items\" && (\n        <View>\n          <PropWrapper>\n            {items &&\n              items.map((item, index: number) => {\n                return <ItemTile key={index} item={item.item} />;\n              })}\n            {gears &&\n              gears.map((gear, index: number) => {\n                return <GearTile key={index} gear={gear.gear} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Monster\" && (\n        <View>\n          <PropWrapper>\n            {monsters &&\n              monsters.map((monster, index: number) => {\n                return <MonsterTile key={index} monster={monster} />;\n              })}\n          </PropWrapper>\n        </View>\n      )}\n      {activeTab === \"Notes\" && (\n        <View>\n          <PropWrapper>\n            <Text>\n              <PropTitle>Notes:</PropTitle>\n              <FormatedText text={char.spellNotes} />\n            </Text>\n          </PropWrapper>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default CharView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst SmallText = styled(Text)`\n  max-width: max-content;\n`;\n\nconst TraitWrapper = styled(PropWrapper)``;\nconst TraitName = styled.div`\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 2px;\n  flex: 3 3 auto;\n`;\nconst TraitLevel = styled(TraitName)`\n  flex: 1 1 auto;\n`;\nconst TraitText = styled(TraitName)`\n  flex: 4 4 auto;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport StringField from \"../../../FormElements/StringField\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextField from \"../../../FormElements/TextField\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport {\n  faTrash,\n  faPlus,\n  faMinus,\n  faAngleUp,\n  faAngleDoubleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\n\ninterface $Props {\n  char: Char;\n  onEdit: (value: Char) => void;\n}\n\nconst CharEditView = ({ char, onEdit }: $Props) => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [prof, setProf] = useState<number>(0);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  const removeSpell = (oldSpell: string) => {\n    let newSpellList = char.spells.filter((spell) => spell !== oldSpell);\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const addNewSpell = () => {\n    let newSpellList = char.spells;\n    newSpellList.push(\"\");\n    onEdit({ ...char, spells: newSpellList });\n  };\n  const onChangeSpell = (newSpell: string, oldSpell: string) => {\n    let spells = char.spells.map((spell) => {\n      if (spell === oldSpell) {\n        return newSpell;\n      } else {\n        return spell;\n      }\n    });\n    onEdit({ ...char, spells: spells });\n  };\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onEdit({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onEdit({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onEdit({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onEdit({ ...char, items: items });\n  };\n\n  const removeMonster = (oldMonster: string) => {\n    let newMonsterList = char.monsters.filter(\n      (monster) => monster !== oldMonster\n    );\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const addNewMonster = () => {\n    let newMonsterList = char.monsters;\n    newMonsterList.push(\"\");\n    onEdit({ ...char, monsters: newMonsterList });\n  };\n  const onChangeMonster = (newMonster: string, oldMonster: string) => {\n    let monsters = char.monsters.map((monster) => {\n      if (monster === oldMonster) {\n        return newMonster;\n      } else {\n        return monster;\n      }\n    });\n    onEdit({ ...char, monsters: monsters });\n  };\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onEdit({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onEdit({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onEdit({ ...char, classes: classes });\n    },\n    [char, onEdit]\n  );\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n      // return `${skill} = ${skillProf * prof} (Prof) + ${formatScore(stat)} (Stat Bonus)`;\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onEdit({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onEdit({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onEdit]\n  );\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player\"\n          onChange={(player) => onEdit({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onEdit({ ...char, pic: pic })}\n        />\n        <StringField\n          value={char.background}\n          label=\"Background\"\n          onChange={(background) => onEdit({ ...char, background: background })}\n        />\n        <StringField\n          value={char.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...char, alignment: alignment })}\n        />\n        <NumberField\n          value={char.ac}\n          label=\"Armor Class\"\n          onChange={(ac) => onEdit({ ...char, ac: ac })}\n        />\n        <NumberField\n          value={char.hp}\n          label=\"Hit Points\"\n          onChange={(hp) => onEdit({ ...char, hp: hp })}\n        />\n        <NumberField\n          value={char.init}\n          label=\"Initiative\"\n          onChange={(init) => onEdit({ ...char, init: init })}\n        />\n        <NumberField\n          value={char.str}\n          label=\"Strength\"\n          onChange={(str) => onEdit({ ...char, str: str })}\n        />\n        <NumberField\n          value={char.dex}\n          label=\"Dexterity\"\n          onChange={(dex) => onEdit({ ...char, dex: dex })}\n        />\n        <NumberField\n          value={char.con}\n          label=\"Constitution\"\n          onChange={(con) => onEdit({ ...char, con: con })}\n        />\n        <NumberField\n          value={char.int}\n          label=\"Intelligence\"\n          onChange={(int) => onEdit({ ...char, int: int })}\n        />\n        <NumberField\n          value={char.wis}\n          label=\"Wisdome\"\n          onChange={(wis) => onEdit({ ...char, wis: wis })}\n        />\n        <NumberField\n          value={char.cha}\n          label=\"Charisma\"\n          onChange={(cha) => onEdit({ ...char, cha: cha })}\n        />\n        <TextField\n          value={char.spellNotes}\n          label=\"Notes\"\n          onChange={(notes) => onEdit({ ...char, spellNotes: notes })}\n        />\n      </CharView>\n      <CharView>\n        <TabBar\n          children={[\n            \"General\",\n            \"Abilities\",\n            \"Classes\",\n            \"Races\",\n            \"Spells\",\n            \"Items\",\n            \"Monster\",\n          ]}\n          onChange={(tab: string) => setTab(tab)}\n        />\n        {activeTab === \"General\" && (\n          <>\n            <TextField\n              value={char.speed}\n              label=\"Speed\"\n              onChange={(speed) => onEdit({ ...char, speed: speed })}\n            />\n            <TextField\n              value={char.profsLangs}\n              label=\"Languages\"\n              onChange={(profsLangs) =>\n                onEdit({ ...char, profsLangs: profsLangs })\n              }\n            />\n            <TextField\n              value={char.senses}\n              label=\"Senses\"\n              onChange={(senses) => onEdit({ ...char, senses: senses })}\n            />\n          </>\n        )}\n        {activeTab === \"Classes\" && (\n          <>\n            {char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropWrapper key={index}>\n                  <NumberField\n                    value={classSet.level}\n                    label=\"Level\"\n                    onChange={(level) => changeClassLevel(classSet, level)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeClass(classSet)}\n                  />\n                  <AutoStringField\n                    optionTable={\"classes\"}\n                    value={classSet.classe}\n                    label=\"Class\"\n                    onChange={(classe) => changeClass(classSet, classe)}\n                  />\n                  <StringField\n                    value={classSet.subclasse}\n                    label=\"Subclass\"\n                    onChange={(subclasse) =>\n                      changeClassSubclass(classSet, subclasse)\n                    }\n                  />\n                </PropWrapper>\n              );\n            })}\n            <TextButton\n              text={\"Add new Class\"}\n              icon={faPlus}\n              onClick={() => addNewClass()}\n            />\n          </>\n        )}\n        {activeTab === \"Races\" && (\n          <PropWrapper>\n            <AutoStringField\n              optionTable={\"races\"}\n              value={char.race.race}\n              label=\"Race\"\n              onChange={(race) =>\n                onEdit({ ...char, race: { ...char.race, race: race } })\n              }\n            />\n            <StringField\n              value={char.race.subrace}\n              label=\"Subrace\"\n              onChange={(subrace) =>\n                onEdit({ ...char, race: { ...char.race, subrace: subrace } })\n              }\n            />\n          </PropWrapper>\n        )}\n        {activeTab === \"Abilities\" && (\n          <>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Str Save:</PropTitle>\n                  {calcSkill(char.saves.strSaveProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.strSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Dex Save:</PropTitle>\n                  {calcSkill(char.saves.dexSaveProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.dexSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Con Save:</PropTitle>\n                  {calcSkill(char.saves.conSaveProf, char.con)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.conSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Int Save:</PropTitle>\n                  {calcSkill(char.saves.intSaveProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.intSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Wis Save:</PropTitle>\n                  {calcSkill(char.saves.wisSaveProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.wisSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Cha Save:</PropTitle>\n                  {calcSkill(char.saves.chaSaveProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                  <Icon icon={formatProf(char.saves.chaSaveProf)} />\n                </PropProf>\n              </PropWithProf>\n            </PropWrapper>\n            <PropWrapper>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Acrobatics:</PropTitle>\n                  {calcSkill(char.skills.acrobaticsProf, char.str)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                  <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Animal Handling:</PropTitle>\n                  {calcSkill(char.skills.animalHandlingProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                  <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Arcana:</PropTitle>\n                  {calcSkill(char.skills.arcanaProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                  <Icon icon={formatProf(char.skills.arcanaProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Athletics:</PropTitle>\n                  {calcSkill(char.skills.athleticsProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                  <Icon icon={formatProf(char.skills.athleticsProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Deception:</PropTitle>\n                  {calcSkill(char.skills.deceptionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.deceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>History:</PropTitle>\n                  {calcSkill(char.skills.historyProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                  <Icon icon={formatProf(char.skills.historyProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Insight:</PropTitle>\n                  {calcSkill(char.skills.insightProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                  <Icon icon={formatProf(char.skills.insightProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Intimidation:</PropTitle>\n                  {calcSkill(char.skills.intimidationProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                  <Icon icon={formatProf(char.skills.intimidationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Investigation:</PropTitle>\n                  {calcSkill(char.skills.investigationProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                  <Icon icon={formatProf(char.skills.investigationProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Medicine:</PropTitle>\n                  {calcSkill(char.skills.medicineProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                  <Icon icon={formatProf(char.skills.medicineProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Nature:</PropTitle>\n                  {calcSkill(char.skills.natureProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                  <Icon icon={formatProf(char.skills.natureProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Perception:</PropTitle>\n                  {calcSkill(char.skills.perceptionProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                  <Icon icon={formatProf(char.skills.perceptionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Performance:</PropTitle>\n                  {calcSkill(char.skills.performanceProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                  <Icon icon={formatProf(char.skills.performanceProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Persuasion:</PropTitle>\n                  {calcSkill(char.skills.persuasionProf, char.cha)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                  <Icon icon={formatProf(char.skills.persuasionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Religion:</PropTitle>\n                  {calcSkill(char.skills.religionProf, char.int)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                  <Icon icon={formatProf(char.skills.religionProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Sleight Of Hand:</PropTitle>\n                  {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                  <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Stealth:</PropTitle>\n                  {calcSkill(char.skills.stealthProf, char.dex)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                  <Icon icon={formatProf(char.skills.stealthProf)} />\n                </PropProf>\n              </PropWithProf>\n              <PropWithProf>\n                <PropText>\n                  <PropTitle>Survival:</PropTitle>\n                  {calcSkill(char.skills.survivalProf, char.wis)}\n                </PropText>\n                <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                  <Icon icon={formatProf(char.skills.survivalProf)} />\n                </PropProf>\n              </PropWithProf>\n              <TextField\n                value={char.actions}\n                label=\"Actions\"\n                onChange={(actions) => onEdit({ ...char, actions: actions })}\n              />\n            </PropWrapper>\n          </>\n        )}\n        {activeTab === \"Spells\" && (\n          <>\n            <NumberField\n              value={char.castingHit}\n              label=\"Casting Hit\"\n              onChange={(castingHit) =>\n                onEdit({ ...char, castingHit: castingHit })\n              }\n            />\n            <NumberField\n              value={char.castingDC}\n              label=\"Casting DC\"\n              onChange={(castingDC) =>\n                onEdit({ ...char, castingDC: castingDC })\n              }\n            />\n            {char.spells.map((spell: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"spells\"}\n                    value={spell}\n                    label=\"Spell\"\n                    onChange={(newSpell) => onChangeSpell(newSpell, spell)}\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeSpell(spell)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Spell\"}\n              icon={faPlus}\n              onClick={() => addNewSpell()}\n            />\n          </>\n        )}\n        {activeTab === \"Items\" && (\n          <>\n            {char.items.map(\n              (\n                item: {\n                  origin: string;\n                  attuned: boolean;\n                  prof: boolean;\n                  attribute: string;\n                },\n                index: number\n              ) => {\n                return (\n                  <Container key={index}>\n                    <AutoStringField\n                      optionTable={[\"items\", \"gears\"]}\n                      value={item.origin}\n                      label=\"Item\"\n                      onChange={(newItem) => onChangeItem(newItem, index)}\n                    />\n                    <CheckField\n                      value={!!item.attuned}\n                      label=\"Attunment\"\n                      onChange={(attunment) =>\n                        onChangeItemAttribute(\n                          {\n                            ...item,\n                            attuned: attunment,\n                          },\n                          index\n                        )\n                      }\n                    />\n                    <CheckField\n                      value={!!item.prof}\n                      label=\"Prof\"\n                      onChange={(prof) =>\n                        onChangeItemAttribute({ ...item, prof: prof }, index)\n                      }\n                    />\n                    <EnumField\n                      options={[\n                        { value: \"str\", label: \"Str\" },\n                        { value: \"dex\", label: \"Dex\" },\n                        { value: \"con\", label: \"Con\" },\n                        { value: \"int\", label: \"Int\" },\n                        { value: \"wis\", label: \"Wis\" },\n                        { value: \"cha\", label: \"Cha\" },\n                      ]}\n                      value={{\n                        value: item.attribute,\n                        label:\n                          item.attribute.charAt(0).toUpperCase() +\n                          item.attribute.slice(1),\n                      }}\n                      label=\"Attribute\"\n                      onChange={(type) =>\n                        onChangeItemAttribute(\n                          { ...item, attribute: type },\n                          index\n                        )\n                      }\n                    />\n                    <IconButton\n                      icon={faTrash}\n                      onClick={() => removeItem(item)}\n                    />\n                  </Container>\n                );\n              }\n            )}\n            <TextButton\n              text={\"Add new Item\"}\n              icon={faPlus}\n              onClick={() => addNewItem()}\n            />\n          </>\n        )}\n        {activeTab === \"Monster\" && (\n          <>\n            {char.monsters.map((monster: string, index: number) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={\"monsters\"}\n                    value={monster}\n                    label=\"Monster\"\n                    onChange={(newMonster) =>\n                      onChangeMonster(newMonster, monster)\n                    }\n                  />\n                  <IconButton\n                    icon={faTrash}\n                    onClick={() => removeMonster(monster)}\n                  />\n                </Container>\n              );\n            })}\n            <TextButton\n              text={\"Add new Monster\"}\n              icon={faPlus}\n              onClick={() => addNewMonster()}\n            />\n          </>\n        )}\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport {\n  remove,\n  updateWithCallback,\n  recivePromiseByAttribute,\n} from \"../../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CharView from \"./CharView\";\nimport CharEditView from \"./CharEditView\";\nimport BackButton from \"../../../FormElements/BackButton\";\nimport IconButton from \"../../../FormElements/IconButton\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharDetail = ({ char }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [charObj, editChar] = useState<Char>(char);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteChar = (charId: number | undefined) => {\n    remove(\"chars\", charId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (charObj !== char) {\n      setUnsavedChanges(true);\n    }\n  }, [charObj, char]);\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    editChar(updatedChar);\n    return updatedChar;\n  };\n\n  const updateChar = (tableName: string, charObj: Char) => {\n    recalcClasses(charObj)\n      .then((updatedChar) => {\n        updateWithCallback(tableName, updatedChar, (result) => {\n          if (result > 0) {\n            setUnsavedChanges(false);\n            setMessage(\"Saved successful!\");\n            setAlert(true);\n          } else {\n            setMessage(\"Something went wrong!\");\n            setAlert(true);\n          }\n          setTimeout(() => {\n            setAlert(false);\n          }, 3000);\n        });\n      })\n      .catch((error) => {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n        setTimeout(() => {\n          setAlert(false);\n        }, 3000);\n      });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateChar(\"chars\", charObj)}\n              icon={faSave}\n            />\n            <IconButton onClick={() => deleteChar(charObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <CharEditView char={charObj} onEdit={(value) => editChar(value)} />\n      ) : (\n        <CharView character={charObj} />\n      )}\n    </>\n  );\n};\n\nexport default CharDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { name: string };\n\nconst NameToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItemByAttr(\n    db.chars,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToChar;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../../Hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport AppWrapper from \"../../../../AppWrapper\";\nimport CharDetail from \"../CharDetail\";\n\ntype TParams = { id: string };\n\nconst IdToChar = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [char, loading, error] = useItem(db.chars, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && char !== undefined ? (\n        <CharDetail char={char} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToChar;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Char from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\n\nimport { LoadingSpinner } from \"../../Loading\";\n\ninterface $Props {\n  char: Char;\n}\n\nconst CharTile = ({ char }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (char !== undefined) {\n      if (char.pic === \"\" || char.pic === null) {\n        return \"\";\n      }\n      return char.pic;\n    }\n    return \"\";\n  }, [char]);\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  return (\n    <Tile to={\"/char-detail/id/\" + char.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{char.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>{calcLevel()}</RowProp>\n            <RowProp>{char.player}</RowProp>\n            <RowProp>{char.race.race}</RowProp>\n            <RowProp>{char.race.subrace}</RowProp>\n          </PropRowWrapper>\n          {char.classes &&\n            char.classes.map((classSet: ClassSet, index: number) => {\n              return (\n                <PropRowWrapper key={index}>\n                  <RowProp>{classSet.level}</RowProp>\n                  <RowProp>{classSet.classe}</RowProp>\n                  <RowProp>{classSet.subclasse}</RowProp>\n                </PropRowWrapper>\n              );\n            })}\n          <Prop>{char.background}</Prop>\n          <Prop>{char.alignment}</Prop>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default CharTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\nconst Prop = styled(RowProp)`\n  &:nth-child(odd) {\n    margin: 0 5px 5px 0;\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer pic={pic}>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div<{ pic: string }>`\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  border: 2px double ${({ theme }) => theme.main.highlight};\n  transform: rotate(45deg);\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    width: 200%;\n    height: 200%;\n    top: -50%;\n    left: -50%;\n    z-index: -1;\n    background: url(${props => props.pic}) 0 0 no-repeat;\n    background-size: cover;\n    transform: rotate(-45deg);\n  }\n`;\nconst Empty = styled.div``;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport StringSearchField from \"../../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst CharSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={sources}\n        sort={sort}\n        field={\"sources\"}\n        label=\"Sources\"\n        icon={faLink}\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setSources(name);\n          setSort(sort);\n        }}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Char\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default CharSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 90px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Filter from \"../../../Data/Filter\";\nimport Char from \"../../../Data/Chars/Char\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport CharTile from \"./CharTile\";\nimport AppWrapper from \"../../AppWrapper\";\nimport CharSearchBar from \"./CharSearchBar\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { reciveAllFiltered } from \"../../../Services/DatabaseService\";\n\nconst CharOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allChars, setAllChars] = useState<Char[]>([]);\n  const [chars, setChars] = useState<Char[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"chars\", filters, (results: any[]) => {\n      setAllChars(results);\n      setChars(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (chars.length === allChars.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setChars((s) =>\n      s.concat(allChars.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <CharSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <CharContainer\n          dataLength={chars.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {chars!.map((char: Char, index: number) => {\n            return <CharTile key={index} char={char}></CharTile>;\n          })}\n        </CharContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default CharOverview;\n\nconst CharContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport StringField from \"../../../FormElements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport TextButton from \"../../../FormElements/TextButton\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton\n                icon={faTrash}\n                onClick={() => removeClass(classSet)}\n              />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) =>\n                  changeClassSubclass(classSet, subclasse)\n                }\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton\n          text={\"Add new Class\"}\n          icon={faPlus}\n          onClick={() => addNewClass()}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Trait from \"../../../../Data/Races/Trait\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Saves from \"../../../../Data/Chars/Saves\";\nimport Skills from \"../../../../Data/Chars/Skills\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport FeatureSet from \"../../../../Data/Classes/FeatureSet\";\nimport Race from \"../../../../Data/Races/Race\";\nimport Subrace from \"../../../../Data/Races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../FormElements/NumberField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdome\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../Data/Chars/Char\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport { reciveAllFiltered } from \"../../../../Services/DatabaseService\";\n\nimport IconButton from \"../../../FormElements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../FormElements/AutoStringField\";\nimport FormatedText from \"../../../GeneralElements/FormatedText\";\nimport CheckField from \"../../../FormElements/CheckField\";\nimport EnumField from \"../../../FormElements/EnumField\";\nimport TextButton from \"../../../FormElements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../Services/DatabaseService\";\nimport ClassSet from \"../../../../Data/Chars/ClassSet\";\nimport Boni from \"../../../../Data/Classes/Boni\";\nimport Class from \"../../../../Data/Classes/Class\";\nimport Char from \"../../../../Data/Chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport IconButton from \"../../../FormElements/IconButton\";\nimport TabBar from \"../../../GeneralElements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </AppWrapper>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDragon, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../Loading\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterTile = ({ encounter }: $Props) => {\n  return (\n    <Tile to={\"/encounter-detail/id/\" + encounter.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <Icon icon={faUser} />\n            {encounter.players.length}\n          </Prop>\n          <Prop>\n            <Icon icon={faDragon} />\n            {encounter.enemies.length}\n          </Prop>\n          {encounter.isPlaying && (\n            <>\n              <Prop>Aktiv playing</Prop>\n              <Prop>\n                <PropTitle>Round: </PropTitle>\n                {encounter.roundCounter}\n              </Prop>\n            </>\n          )}\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default EncounterTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport StringField from \"../FormElements/StringField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst EncounterSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    onSend([]);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringField\n        value={name}\n        label=\"Name\"\n        onChange={(name: string) => setName(name)}\n      />\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Encounter\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default EncounterSearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 120px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../Data/Encounter/Encounter\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { LoadingSpinner } from \"../Loading\";\nimport EncounterTile from \"./EncounterTile\";\nimport EncounterSearchBar from \"./EncounterSearchBar\";\n\nconst EncounterOverview = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEncounters, setAllEncounters] = useState<Encounter[]>([]);\n  const [encounters, setEncounters] = useState<Encounter[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"encounters\", filters, (results: any[]) => {\n      setAllEncounters(results);\n      setEncounters(results.slice(0, 100));\n      if(results.length === 0){\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (encounters.length === allEncounters.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEncounters((s) =>\n      s.concat(allEncounters.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <EncounterSearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <EncounterContainer\n        dataLength={encounters.length}\n        next={fetchMoreData}\n        hasMore={scrollParam.hasMore}\n        loader={<LoadingSpinner />}\n      >\n        {encounters!.map((encounter: Encounter, index: number) => {\n          return <EncounterTile key={index} encounter={encounter}></EncounterTile>;\n        })}\n      </EncounterContainer>\n    </AppWrapper>\n  );\n};\n\nexport default EncounterOverview;\n\nconst EncounterContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","export default class Player {\n  name: string;\n  hp: number;\n  currentHp: number;\n  initBonus: number;\n  init: number;\n  ac: number;\n  tag: string;\n  isMonster: boolean;\n  level: number;\n\n  constructor(\n    name?: string,\n    hp?: number,\n    tempHp?: number,\n    init?: number,\n    initBonus?: number,\n    ac?: number,\n    tag?: string,\n    isMonster?: boolean,\n    level?: number\n  ) {\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.currentHp = tempHp || 0;\n    this.initBonus = initBonus || 0;\n    this.init = init || -1;\n    this.ac = ac || 0;\n    this.tag = tag || \"\";\n    this.isMonster = isMonster || false;\n    this.level = level || 0;\n  }\n}\n\nexport function isPlayer(arg: any): arg is Player {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const tempHpCheck = arg.tempHp !== undefined && typeof arg.tempHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const initBonusCheck =\n    arg.initBonus !== undefined && typeof arg.initBonus == \"number\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const tagCheck = arg.tag !== undefined && typeof arg.tag == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    tempHpCheck &&\n    initCheck &&\n    initBonusCheck &&\n    acCheck &&\n    tagCheck &&\n    levelCheck\n  );\n}\n","import Encounter from \"../Data/Encounter/Encounter\";\nimport Player from \"../Data/Encounter/Player\";\n\nconst crExpTable: { cr: number; exp: number }[] = [\n  { cr: 0, exp: 0 },\n  { cr: 0.125, exp: 25 },\n  { cr: 0.25, exp: 50 },\n  { cr: 0.5, exp: 100 },\n  { cr: 1, exp: 200 },\n  { cr: 2, exp: 450 },\n  { cr: 3, exp: 700 },\n  { cr: 4, exp: 1100 },\n  { cr: 5, exp: 1800 },\n  { cr: 6, exp: 2300 },\n  { cr: 7, exp: 2900 },\n  { cr: 8, exp: 3900 },\n  { cr: 9, exp: 5000 },\n  { cr: 10, exp: 5900 },\n  { cr: 11, exp: 7200 },\n  { cr: 12, exp: 8400 },\n  { cr: 13, exp: 10000 },\n  { cr: 14, exp: 11500 },\n  { cr: 15, exp: 13000 },\n  { cr: 16, exp: 15000 },\n  { cr: 17, exp: 18000 },\n  { cr: 18, exp: 20000 },\n  { cr: 19, exp: 22000 },\n  { cr: 20, exp: 25000 },\n  { cr: 21, exp: 33000 },\n  { cr: 22, exp: 41000 },\n  { cr: 23, exp: 50000 },\n  { cr: 24, exp: 62000 },\n  { cr: 25, exp: 75000 },\n  { cr: 26, exp: 90000 },\n  { cr: 27, exp: 105000 },\n  { cr: 28, exp: 120000 },\n  { cr: 29, exp: 135000 },\n  { cr: 30, exp: 155000 },\n];\n\nconst expTable: {\n  level: number;\n  easy: number;\n  medium: number;\n  hard: number;\n  deadly: number;\n}[] = [\n  { level: 1, easy: 25, medium: 50, hard: 75, deadly: 100 },\n  { level: 2, easy: 50, medium: 100, hard: 150, deadly: 200 },\n  { level: 3, easy: 75, medium: 150, hard: 225, deadly: 400 },\n  { level: 4, easy: 125, medium: 250, hard: 375, deadly: 500 },\n  { level: 5, easy: 250, medium: 500, hard: 750, deadly: 1100 },\n  { level: 6, easy: 300, medium: 600, hard: 900, deadly: 1400 },\n  { level: 7, easy: 350, medium: 750, hard: 1100, deadly: 1700 },\n  { level: 8, easy: 450, medium: 900, hard: 1400, deadly: 2100 },\n  { level: 9, easy: 550, medium: 1100, hard: 1600, deadly: 2400 },\n  { level: 10, easy: 600, medium: 1200, hard: 1900, deadly: 2800 },\n  { level: 11, easy: 800, medium: 1600, hard: 2400, deadly: 3600 },\n  { level: 12, easy: 1000, medium: 2000, hard: 3000, deadly: 4500 },\n  { level: 13, easy: 1100, medium: 2200, hard: 3400, deadly: 5100 },\n  { level: 14, easy: 1250, medium: 2500, hard: 3800, deadly: 5700 },\n  { level: 15, easy: 1400, medium: 2800, hard: 4300, deadly: 6400 },\n  { level: 16, easy: 1600, medium: 3200, hard: 4800, deadly: 7200 },\n  { level: 17, easy: 2000, medium: 3900, hard: 5900, deadly: 8800 },\n  { level: 18, easy: 2100, medium: 4200, hard: 6300, deadly: 9500 },\n  { level: 19, easy: 2400, medium: 4900, hard: 7300, deadly: 10900 },\n  { level: 20, easy: 2800, medium: 5700, hard: 8500, deadly: 12700 },\n];\n\nexport const calcDifficulty = (encounter: Encounter) => {\n  let calcExp: {\n    easy: number;\n    medium: number;\n    hard: number;\n    deadly: number;\n  } = { easy: 0, medium: 0, hard: 0, deadly: 0 };\n  encounter.players.forEach((player: Player) => {\n    if (expTable.length >= player.level) {\n      calcExp.easy += expTable[player.level].easy;\n      calcExp.medium += expTable[player.level].medium;\n      calcExp.hard += expTable[player.level].hard;\n      calcExp.deadly += expTable[player.level].deadly;\n    }\n  });\n\n  let enemyExp: number = 0;\n  encounter.enemies.forEach((enemy: Player) => {\n    crExpTable.forEach((crExp: { cr: number; exp: number }) => {\n      if (enemy.level === crExp.cr) {\n        enemyExp += crExp.exp;\n      }\n    });\n  });\n\n  if (encounter.enemies.length === 1) {\n    enemyExp = enemyExp * 1;\n  } else if (encounter.enemies.length <= 3) {\n    enemyExp = enemyExp * 1.5;\n  } else if (encounter.enemies.length <= 6) {\n    enemyExp = enemyExp * 2;\n  } else if (encounter.enemies.length <= 10) {\n    enemyExp = enemyExp * 2.5;\n  } else if (encounter.enemies.length <= 14) {\n    enemyExp = enemyExp * 3;\n  } else if (encounter.enemies.length > 14) {\n    enemyExp = enemyExp * 4;\n  }\n\n  let difficulty = \"\";\n  if (calcExp.easy + (calcExp.medium - calcExp.easy) / 2 > enemyExp) {\n    difficulty = \"Easy (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.medium + (calcExp.hard - calcExp.medium) / 2 > enemyExp) {\n    difficulty = \"Medium (\" + enemyExp + \" Exp)\";\n  } else if (calcExp.hard + (calcExp.deadly - calcExp.hard) / 2 > enemyExp) {\n    difficulty = \"Hard (\" + enemyExp + \" Exp)\";\n  } else {\n    difficulty = \"Deadly (\" + enemyExp + \" Exp)\";\n  }\n\n  return { difficulty: difficulty, calcExp: calcExp };\n};\n","import { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { isChar } from \"../../../Data/Chars/Char\";\nimport ClassSet from \"../../../Data/Chars/ClassSet\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport IEntity from \"../../../Data/IEntity\";\nimport { isMonster } from \"../../../Data/Monster\";\nimport { reciveByAttribute } from \"../../../Services/DatabaseService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport AutoStringField from \"../../FormElements/AutoStringField\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport TextButton from \"../../FormElements/TextButton\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterEditView = ({ encounter, onEdit }: $Props) => {\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n  const [expArray, setExpArray] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty, calcExp } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n    setExpArray(\n      \"Easy: \" +\n        calcExp.easy +\n        \" | Medium: \" +\n        calcExp.medium +\n        \" | Hard: \" +\n        calcExp.hard +\n        \" | Deadly: \" +\n        calcExp.deadly\n    );\n  }, [encounter]);\n\n  const removeEnemy = (i: number) => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.splice(i, 1);\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const addNewEnemy = () => {\n    let newEnemyList = encounter.enemies;\n    newEnemyList.push(new Player());\n    onEdit({ ...encounter, enemies: newEnemyList });\n  };\n  const onChangeEnemyField = (\n    field: string,\n    newEnemy: string | number,\n    oldEnemy: Player,\n    i: number\n  ) => {\n    let enemies = encounter.enemies;\n    enemies[i] = { ...oldEnemy, [field]: newEnemy };\n    onEdit({ ...encounter, enemies: enemies });\n  };\n  const onChangeEnemy = (newEnemy: string, oldEnemy: Player, i: number) => {\n    let enemies = encounter.enemies;\n\n    reciveByAttribute(\"monsters\", \"name\", newEnemy, (result: IEntity) => {\n      if (result && isMonster(result)) {\n        enemies[i] = {\n          ...oldEnemy,\n          name: newEnemy,\n          hp: result.hp,\n          currentHp: result.hp,\n          ac: result.ac,\n          isMonster: true,\n          level: result.cr,\n        };\n        onEdit({ ...encounter, enemies: enemies });\n      } else {\n        enemies[i] = { ...oldEnemy, name: newEnemy };\n        onEdit({ ...encounter, enemies: enemies });\n      }\n    });\n  };\n\n  const removePlayer = (i: number) => {\n    let newPlayerList = encounter.players;\n    newPlayerList.splice(i, 1);\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const addNewPlayer = () => {\n    let newPlayerList = encounter.players;\n    newPlayerList.push(new Player());\n    onEdit({ ...encounter, players: newPlayerList });\n  };\n  const onChangePlayerField = (\n    field: string,\n    newPlayer: string | number,\n    oldPlayer: Player,\n    i: number\n  ) => {\n    let players = encounter.players;\n    players[i] = { ...oldPlayer, [field]: newPlayer };\n    onEdit({ ...encounter, players: players });\n  };\n  const onChangePlayer = (newPlayer: string, oldPlayer: Player, i: number) => {\n    let players = encounter.players;\n\n    reciveByAttribute(\"chars\", \"name\", newPlayer, (result: IEntity) => {\n      if (result && isChar(result)) {\n        let level = 0;\n        result.classes.forEach((classSet: ClassSet) => {\n          level += classSet.level;\n        });\n        players[i] = {\n          ...oldPlayer,\n          name: newPlayer,\n          hp: result.hp,\n          currentHp: result.currentHp,\n          initBonus: result.init,\n          ac: result.ac,\n          isMonster: false,\n          level: level,\n        };\n        onEdit({ ...encounter, players: players });\n      } else {\n        players[i] = { ...oldPlayer, name: newPlayer };\n        onEdit({ ...encounter, players: players });\n      }\n    });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={encounter.name}\n          label=\"Encounter Name\"\n          onChange={(name) => onEdit({ ...encounter, name: name })}\n        />\n      </View>\n      <View>\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </Prop>\n          <Prop>\n            <PropTitle>Exp: </PropTitle>\n            {expArray}\n          </Prop>\n        </PropWrapper>\n      </View>\n      <CharView>\n        {encounter.enemies.map((enemy: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={[\"monsters\", \"chars\"]}\n                value={enemy.name}\n                label=\"Monster\"\n                onChange={(newMonster) =>\n                  onChangeEnemy(newMonster, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangeEnemyField(\"currentHp\", currentHp, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangeEnemyField(\"hp\", hp, enemy, index)}\n              />\n              <NumberField\n                value={enemy.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangeEnemyField(\"ac\", ac, enemy, index)}\n              />\n              <NumberField\n                value={enemy.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangeEnemyField(\"initBonus\", initBonus, enemy, index)\n                }\n              />\n              <NumberField\n                value={enemy.level}\n                label=\"Cr\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, enemy, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removeEnemy(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Monster\"}\n            icon={faPlus}\n            onClick={() => addNewEnemy()}\n          />\n        </Container>\n      </CharView>\n      <CharView>\n        {encounter.players.map((player: Player, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"chars\"}\n                value={player.name}\n                label=\"Character\"\n                onChange={(newPlayer) =>\n                  onChangePlayer(newPlayer, player, index)\n                }\n              />\n              <NumberField\n                value={player.currentHp}\n                label=\"Current Hp\"\n                onChange={(currentHp) =>\n                  onChangePlayerField(\"currentHp\", currentHp, player, index)\n                }\n              />\n              <NumberField\n                value={player.hp}\n                label=\"Hp\"\n                onChange={(hp) => onChangePlayerField(\"hp\", hp, player, index)}\n              />\n              <NumberField\n                value={player.ac}\n                label=\"AC\"\n                onChange={(ac) => onChangePlayerField(\"ac\", ac, player, index)}\n              />\n              <NumberField\n                value={player.initBonus}\n                label=\"Init Bonus\"\n                onChange={(initBonus) =>\n                  onChangePlayerField(\"initBonus\", initBonus, player, index)\n                }\n              />\n              <NumberField\n                value={player.level}\n                label=\"Level\"\n                onChange={(level) =>\n                  onChangePlayerField(\"level\", level, player, index)\n                }\n              />\n              <IconButton icon={faTrash} onClick={() => removePlayer(index)} />\n            </Container>\n          );\n        })}\n        <Container>\n          <TextButton\n            text={\"Add new Character\"}\n            icon={faPlus}\n            onClick={() => addNewPlayer()}\n          />\n        </Container>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterEditView;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  flex: 1 1;\n  min-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","export const rollDie = (size: number) => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  value: number;\n  max?: number;\n  showMax?: boolean;\n  onChange: (value: number) => void;\n}\n\nconst TinyNumberField = ({\n  value,\n  max,\n  showMax,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      {max !== undefined && (\n        <>\n          <Input\n            type=\"number\"\n            max={max}\n            value={value}\n            onChange={(e) => onChange(+e.target.value)}\n          />\n          {showMax && (\n            <Max>\n              {\"/ \"}\n              {max}\n            </Max>\n          )}\n        </>\n      )}\n      {max === undefined && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default TinyNumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 30px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 2px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 4em;\n  height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n\nconst Max = styled.span`\n  margin-left: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport Player from \"../../../Data/Encounter/Player\";\nimport { rollDie } from \"../../../Services/DiceService\";\nimport { calcDifficulty } from \"../../../Services/EncounterService\";\n\nimport {\n  faPlayCircle,\n  faSkullCrossbones,\n  faStepForward,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { LoadingSpinner } from \"../../Loading\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport TinyNumberField from \"../../FormElements/TinyNumberField\";\n\ninterface $Props {\n  encounter: Encounter;\n  onEdit: (value: Encounter) => void;\n}\n\nconst EncounterView = ({ encounter, onEdit }: $Props) => {\n  let history = useHistory();\n  const [loading, isLoading] = useState<boolean>(true);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [difficulty, setDifficulty] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { difficulty } = calcDifficulty(encounter);\n    setDifficulty(difficulty);\n  }, [encounter]);\n\n  useEffect(() => {\n    let newPlayers = [...encounter.enemies, ...encounter.players];\n    if (encounter.isPlaying) {\n      newPlayers = newPlayers.sort((a, b) => (a.init < b.init ? 1 : -1));\n    }\n    setPlayers(newPlayers);\n    isLoading(false);\n  }, [encounter]);\n\n  const onChangePlayerField = (\n    field: string,\n    newField: string | number,\n    oldPlayer: Player\n  ) => {\n    if (oldPlayer.isMonster) {\n      let newPlayers = encounter.enemies.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, enemies: newPlayers });\n    } else {\n      let newPlayers = encounter.players.map((newPlayer: Player) => {\n        if (oldPlayer === newPlayer) {\n          return { ...newPlayer, [field]: newField };\n        } else {\n          return newPlayer;\n        }\n      });\n      onEdit({ ...encounter, players: newPlayers });\n    }\n  };\n\n  const killEnemy = (enemy: Player) => {\n    onChangePlayerField(\"currentHp\", 0, enemy);\n  };\n\n  const startEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      if (player.init < 0) {\n        let roll = rollDie(20);\n        roll += player.initBonus || 0;\n        return { ...player, init: roll };\n      } else {\n        return player;\n      }\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      if (enemy.init < 0) {\n        let roll = rollDie(20);\n        roll += enemy.initBonus || 0;\n        return { ...enemy, init: roll };\n      } else {\n        return enemy;\n      }\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: true,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const finishEncounter = () => {\n    let newPlayers = encounter.players.map((player: Player) => {\n      return { ...player, init: -1 };\n    });\n    let newEnemies = encounter.enemies.map((enemy: Player) => {\n      return { ...enemy, init: -1 };\n    });\n    onEdit({\n      ...encounter,\n      enemies: newEnemies,\n      players: newPlayers,\n      isPlaying: false,\n      currentInit: 0,\n      roundCounter: 0,\n    });\n  };\n\n  const nextPlayer = () => {\n    let nextInit = (encounter.currentInit + 1) % players.length;\n    let roundCounter = encounter.roundCounter;\n    if ((encounter.currentInit + 1) % players.length === 0) {\n      roundCounter++;\n    }\n\n    let counter = 0;\n    while (players[nextInit].currentHp <= 0) {\n      if ((nextInit + 1) % players.length === 0) {\n        roundCounter++;\n      }\n      nextInit = (nextInit + 1) % players.length;\n      counter++;\n      if (counter > players.length) {\n        break;\n      }\n    }\n    if (counter > players.length) {\n      finishEncounter();\n    } else {\n      onEdit({\n        ...encounter,\n        currentInit: nextInit,\n        roundCounter: roundCounter,\n      });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{encounter.name}</b>\n        </Name>\n        <PropWrapper>\n          <PropElm>\n            <PropTitle>Difficulty: </PropTitle>\n            {difficulty}\n          </PropElm>\n          <PropElm>\n            <PropTitle>Round: </PropTitle>\n            {encounter.roundCounter}\n          </PropElm>\n          {encounter && !encounter.isPlaying && (\n            <TextButton\n              text={\"Start Encounter\"}\n              icon={faPlayCircle}\n              onClick={() => startEncounter()}\n            />\n          )}\n          {encounter && encounter.isPlaying && (\n            <>\n              <TextButton\n                text={\"Next\"}\n                icon={faStepForward}\n                onClick={() => nextPlayer()}\n              />\n              <TextButton\n                text={\"End Encounter\"}\n                icon={faStopCircle}\n                onClick={() => finishEncounter()}\n              />\n            </>\n          )}\n        </PropWrapper>\n        {loading && <LoadingSpinner />}\n        {!loading && (\n          <Table>\n            <thead>\n              <tr>\n                <th>Init</th>\n                <th>Name</th>\n                <th>Current Hp</th>\n                <th>Hp</th>\n                <th>AC</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {players.map((player: Player, index: number) => {\n                return (\n                  <Row\n                    current={\n                      encounter.currentInit === index && encounter.isPlaying\n                    }\n                    isDead={player.currentHp <= 0}\n                    key={index}\n                  >\n                    <PropField>\n                      <TinyNumberField\n                        value={player.init}\n                        onChange={(init) =>\n                          onChangePlayerField(\"init\", init, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>\n                      {player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/monster-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                      {!player.isMonster && (\n                        <MainLink\n                          onClick={() =>\n                            history.push(`/char-detail/name/${player.name}`)\n                          }\n                        >\n                          {player.name}\n                        </MainLink>\n                      )}\n                    </Prop>\n                    <PropField>\n                      <TinyNumberField\n                        value={player.currentHp}\n                        max={player.hp}\n                        onChange={(currentHp) =>\n                          onChangePlayerField(\"currentHp\", currentHp, player)\n                        }\n                      />\n                    </PropField>\n                    <Prop>{player.hp}</Prop>\n                    <Prop>{player.ac}</Prop>\n                    {/* <Prop>{player.tag}</Prop> */}\n                    <td>\n                      {player.currentHp > 0 && (\n                        <IconButton\n                          icon={faSkullCrossbones}\n                          onClick={() => killEnemy(player)}\n                        />\n                      )}\n                    </td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default EncounterView;\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype Type = {\n  current?: boolean;\n  isDead?: boolean;\n};\n\nconst Row = styled.tr<Type>`\n  ${(props) => {\n    if (props.isDead) {\n      return \"opacity: 0.5;\";\n    }\n    if (props.current) {\n      return \"td:nth-child(1) {background-color: #8000ff;}\";\n    }\n    return \"\";\n  }}\n  margin: 2px;\n`;\n\nconst Prop = styled.td`\n  margin: 2px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropElm = styled.div`\n  margin: 5px;\n  padding: 10px;\n  height: 20px;\n  flex: 1 1 auto;\n  line-height: 20px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst PropField = styled(Prop)`\n  padding: 0px;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst MainLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Encounter from \"../../../Data/Encounter/Encounter\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\nimport EncounterEditView from \"./EncounterEditView\";\nimport EncounterView from \"./EncounterView\";\n\ninterface $Props {\n  encounter: Encounter;\n}\n\nconst EncounterDetail = ({ encounter }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [encounterObj, editEncounter] = useState<Encounter>(encounter);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEncounter = (encounterId: number | undefined) => {\n    remove(\"encounters\", encounterId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (encounterObj !== encounter) {\n      setUnsavedChanges(true);\n    }\n  }, [encounterObj, encounter]);\n\n  const updateEncounter = (tableName: string, encounterObj: Encounter) => {\n    updateWithCallback(tableName, encounterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const editAndSaveEncounter = (encounter: Encounter) => {\n    editEncounter(encounter);\n    updateEncounter(\"encounters\", encounter);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEncounter(\"encounters\", encounterObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteEncounter(encounterObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <EncounterEditView\n          encounter={encounterObj}\n          onEdit={(value) => editEncounter(value)}\n        />\n      ) : (\n        <EncounterView\n          encounter={encounterObj}\n          onEdit={(value) => editAndSaveEncounter(value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EncounterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { name: string };\n\nconst NameToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItemByAttr(\n    db.encounters,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToEncounter;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\n\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport EncounterDetail from \"../EncounterDetail\";\n\ntype TParams = { id: string };\n\nconst IdToEncounter = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [encounter, loading, error] = useItem(db.encounters, +match.params.id);\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && encounter !== undefined ? (\n        <EncounterDetail encounter={encounter} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToEncounter;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CostRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const costs = await reciveAttributeSelectionPromise(\"gears\", \"cost\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cost of costs) {\n      if (cost !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"cost\",\n          cost.toString()\n        );\n        promList.push({\n          name: cost.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cost Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CostRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst DamageRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"damage\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"damage\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Damage Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default DamageRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst GearTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"gears\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"type\",\n          type as number\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default GearTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst WeightRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const weights = await reciveAttributeSelectionPromise(\"gears\", \"weight\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const weight of weights) {\n      if (weight !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"gears\",\n          \"weight\",\n          weight.toString()\n        );\n        promList.push({\n          name: weight.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Weight Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default WeightRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reciveCountPromise } from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AmountOfEntitiesChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeGeneralCountsData();\n  }, []);\n\n  const makeGeneralCountsData = async () => {\n    let promList: { name: string; count: number }[] = [];\n    promList.push({\n      name: \"spells\",\n      count: await reciveCountPromise(\"spells\"),\n    });\n    promList.push({ name: \"gears\", count: await reciveCountPromise(\"gears\") });\n    promList.push({ name: \"items\", count: await reciveCountPromise(\"items\") });\n    promList.push({\n      name: \"monsters\",\n      count: await reciveCountPromise(\"monsters\"),\n    });\n    promList.push({ name: \"races\", count: await reciveCountPromise(\"races\") });\n    promList.push({\n      name: \"subraces\",\n      count: await reciveCountPromise(\"subraces\"),\n    });\n    promList.push({\n      name: \"classes\",\n      count: await reciveCountPromise(\"classes\"),\n    });\n    promList.push({\n      name: \"subclasses\",\n      count: await reciveCountPromise(\"subclasses\"),\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Amount of Entities</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AmountOfEntitiesChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 20em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst AttunmentRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const attunments = await reciveAttributeSelectionPromise(\"items\", \"attunment\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const attunment of attunments) {\n      if (attunment !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"attunment\",\n          attunment as number\n        );\n        promList.push({\n          name: attunment.toString() === \"0\" ? \"no attunment\" : \"attunment\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Attunment Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default AttunmentRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst BaseRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const bases = await reciveAttributeSelectionPromise(\"items\", \"base\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const base of bases) {\n      if (base !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"base\",\n          base.toString()\n        );\n        promList.push({\n          name: base.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Base Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default BaseRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ItemTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"items\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ItemTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MagicBonusRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const magicBoni = await reciveAttributeSelectionPromise(\n      \"items\",\n      \"magicBonus\"\n    );\n\n    let promList: { name: string; count: number }[] = [];\n    for (const magicBonus of magicBoni) {\n      if (magicBonus !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"magicBonus\",\n          magicBonus as number\n        );\n        promList.push({\n          name: \"+\" + magicBonus.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MagicBonusRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RarityRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\"items\", \"rarity\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"items\",\n          \"rarity\",\n          rarity.toString()\n        );\n        promList.push({\n          name: rarity.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Rarity Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RarityRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst CrRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const crs = await reciveAttributeSelectionPromise(\"monsters\", \"cr\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const cr of crs) {\n      if (cr !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"cr\",\n          cr as number\n        );\n        promList.push({\n          name: cr.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Cr Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default CrRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LegendaryRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rarities = await reciveAttributeSelectionPromise(\n      \"monsters\",\n      \"lAblt\"\n    );\n\n    let leg = 0;\n    let noleg = 0;\n\n    let promList: { name: string; count: number }[] = [];\n    for (const rarity of rarities) {\n      if (rarity !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        leg += count;\n      } else {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"lAblt\",\n          rarity.toString()\n        );\n        noleg += count;\n      }\n    }\n\n    promList.push({\n      name: \"Legendary\",\n      count: leg,\n    });\n    promList.push({\n      name: \"no Legendary\",\n      count: noleg,\n    });\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Legendary Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LegendaryRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst MonsterTypeRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const types = await reciveAttributeSelectionPromise(\"monsters\", \"type\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const type of types) {\n      if (type !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"monsters\",\n          \"type\",\n          type.toString()\n        );\n        promList.push({\n          name: type.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Type Graph</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default MonsterTypeRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800px;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst ActionsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    let times = await reciveAttributeSelectionPromise(\"spells\", \"time\");\n    console.log(times);\n\n    let newTimes:string[] = [];\n    times.forEach((time) => {\n      if(!time.toString().startsWith(\"1 reaction\")) {\n        newTimes.push(time.toString());\n      }\n    })\n\n    let promList: { name: string; count: number }[] = [];\n    for (const time of newTimes) {\n      if (time !== \"\") {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"time\",\n          time.toString()\n        );\n        promList.push({\n          name: time.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Time Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Bar data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default ActionsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 800em;\n  width: calc(100% - 1em);\n  max-width: 800px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst LevelRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const levels = await reciveAttributeSelectionPromise(\"spells\", \"level\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const level of levels) {\n      if (level !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"level\",\n          level as number\n        );\n        promList.push({\n          name: \"Level \" + level.toString(),\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Level Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default LevelRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst RitualRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const rituals = await reciveAttributeSelectionPromise(\"spells\", \"ritual\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const ritual of rituals) {\n      if (ritual !== undefined) {\n        const count = await recivePromiseByAttributeCount(\n          \"spells\",\n          \"ritual\",\n          ritual as number\n        );\n        promList.push({\n          name: ritual.toString() === \"0\" ? \"no Ritual\" : \"Ritual\",\n          count: count,\n        });\n      }\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>Ritual Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default RitualRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  reciveAttributeSelectionPromise,\n  recivePromiseByAttributeCount,\n} from \"../../../Services/DatabaseService\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\nconst SchoolsRatioChart = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [generalCounts, setGeneralCounts] = useState<{\n    labels: string[];\n    datasets: { data: number[]; backgroundColor: string[] }[];\n  }>();\n\n  useEffect(() => {\n    makeSchoolsData();\n  }, []);\n\n  const makeSchoolsData = async () => {\n    const schools = await reciveAttributeSelectionPromise(\"spells\", \"school\");\n\n    let promList: { name: string; count: number }[] = [];\n    for (const school of schools) {\n      if (school !== \"\")\n        promList.push({\n          name: school.toString(),\n          count: await recivePromiseByAttributeCount(\n            \"spells\",\n            \"school\",\n            school.toString()\n          ),\n        });\n    }\n\n    let names: string[] = [];\n    let counts: number[] = [];\n    let colors: string[] = [];\n    promList.forEach((count) => {\n      names.push(count.name);\n      counts.push(count.count);\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    });\n    setGeneralCounts({\n      labels: names,\n      datasets: [\n        {\n          data: counts,\n          backgroundColor: colors,\n        },\n      ],\n    });\n    setLoading(false);\n  };\n\n  return (\n    <OptionSection>\n      <SelectionTitle>School Ratio</SelectionTitle>\n      {!loading && (\n        <div style={{ width: \"100%\", paddingBottom: \"10px\" }}>\n          <Doughnut data={generalCounts} />\n        </div>\n      )}\n      {loading && <LocalLoadingSpinner />}\n    </OptionSection>\n  );\n};\n\nexport default SchoolsRatioChart;\n\nconst OptionSection = styled.div`\n  flex: 1 1 15em;\n  width: calc(100% - 1em);\n  max-width: 400px;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport TabBar from \"../GeneralElements/TabBar\";\nimport CostRatioChart from \"./Gear/CostRatioChart\";\nimport DamageRatioChart from \"./Gear/DamageRatioChart\";\nimport GearTypeRatioChart from \"./Gear/GearTypeRatioChart\";\nimport WeightRatioChart from \"./Gear/WeightRatioChart\";\nimport AmountOfEntitiesChart from \"./General/AmountOfEntitiesChart\";\nimport AttunmentRatioChart from \"./Items/AttunmentRatioChart\";\nimport BaseRatioChart from \"./Items/BaseRatioChart\";\nimport ItemTypeRatioChart from \"./Items/ItemTypeRatioChart\";\nimport MagicBonusRatioChart from \"./Items/MagicBonusRatioChart\";\nimport RarityRatioChart from \"./Items/RarityRatioChart\";\nimport CrRatioChart from \"./Monsters/CrRatioChart\";\nimport LegendaryRatioChart from \"./Monsters/LegendaryRatioChart\";\nimport MonsterTypeRatioChart from \"./Monsters/MonsterTypeRatioChart\";\nimport ActionsRatioChart from \"./Spells/ActionsRatioChart\";\nimport LevelRatioChart from \"./Spells/LevelRatioChart\";\nimport RitualRatioChart from \"./Spells/RitualRatioChart\";\nimport SchoolsRatioChart from \"./Spells/SchoolsRatioChart\";\n\nconst Statistics = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  return (\n    <AppWrapper>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Gears\", \"Magic Items\", \"Monsters\"]}\n        onChange={(tab: string) => setTab(tab)}\n      />\n      {activeTab === \"General\" && (\n        <OptionTab>\n          <AmountOfEntitiesChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Spells\" && (\n        <OptionTab>\n          <SchoolsRatioChart />\n          <LevelRatioChart />\n          <RitualRatioChart />\n          <ActionsRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Gears\" && (\n        <OptionTab>\n          <GearTypeRatioChart />\n          <DamageRatioChart />\n          <CostRatioChart />\n          <WeightRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Magic Items\" && (\n        <OptionTab>\n          <RarityRatioChart />\n          <AttunmentRatioChart />\n          <MagicBonusRatioChart />\n          <BaseRatioChart />\n          <ItemTypeRatioChart />\n        </OptionTab>\n      )}\n      {activeTab === \"Monsters\" && (\n        <OptionTab>\n          <LegendaryRatioChart />\n          <MonsterTypeRatioChart />\n          <CrRatioChart />\n        </OptionTab>\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default Statistics;\n\nconst OptionTab = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useCallback, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      <Suspense fallback={<LoadingSpinner />}>\n        {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n        <PropWrapper>\n          <Name>\n            <b>{book.name}</b>\n          </Name>\n\n          <PropRowWrapper>\n            <RowProp>\n              <GiResize />\n              {book.pages}\n            </RowProp>\n            <RowProp>\n              <FontAwesomeIcon icon={faTags} />\n              {book.tags &&\n                book.tags.map((tag: string, index: number) => (\n                  <Tag key={index}>{tag}</Tag>\n                ))}\n            </RowProp>\n          </PropRowWrapper>\n        </PropWrapper>\n      </Suspense>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n  box-shadow: inset 0 0 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","export default class Book {\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../Services/DatabaseService\";\nimport Filter from \"../../Data/Filter\";\nimport Book from \"../../Data/Book\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../FormElements/IconButton\";\nimport NumberField from \"../FormElements/NumberField\";\nimport StringSearchField from \"../FormElements/StringSearchField\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst LibrarySearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    onSend(newFilters);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    onSend([]);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <Bar open={open}>\n      <StringSearchField\n        value={name}\n        sort={sort}\n        field={\"name\"}\n        label=\"Name\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setName(name);\n          setSort(sort);\n        }}\n      />\n      <StringSearchField\n        value={tags}\n        sort={sort}\n        field={\"tags\"}\n        label=\"Tags\"\n        onChange={(\n          name: string,\n          sort: { name: string; label: string; sort: number }\n        ) => {\n          setTags(name);\n          setSort(sort);\n        }}\n      />\n      <NumberField\n        value={pages}\n        label=\"Pages\"\n        onChange={(pages: number) => setPages(pages)}\n      />\n\n      <IconButton onClick={() => search()} icon={faSearch} />\n      <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n      <SearchBarButton onClick={() => setOpen(!open)}>\n        <FontAwesomeIcon icon={faSearch} /> Search\n      </SearchBarButton>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} /> Add Book\n      </CreateButton>\n    </Bar>\n  );\n};\n\nexport default LibrarySearchBar;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nconst Bar = styled.div<SearchMode>`\n  position: absolute;\n  top: 50px;\n  left: 0px;\n  z-index: 900;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 20px);\n  padding: 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  flex: 1 1;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SearchBarButton = styled.button`\n  position: absolute;\n  bottom: -50px;\n  left: calc(50% - 130px);\n\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n  border: none;\n  border-radius: 5px;\n  padding 10px;\n  box-sizing:content-box;\n  width: 80px;\n  height: 20px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst CreateButton = styled(SearchBarButton)`\n  left: 50%;\n  width: 110px;\n  text-decoration: none;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport Book from \"../../Data/Book\";\nimport Filter from \"../../Data/Filter\";\nimport { reciveAllFiltered } from \"../../Services/DatabaseService\";\n\nimport AppWrapper from \"../AppWrapper\";\nimport { LoadingSpinner } from \"../Loading\";\nimport BookTile from \"./BookTile\";\nimport LibrarySearchBar from \"./LibrarySearchBar\";\n\nconst Library = () => {\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allBooks, setAllBooks] = useState<Book[]>([]);\n  const [books, setBooks] = useState<Book[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    reciveAllFiltered(\"books\", filters, (results: any[]) => {\n      setAllBooks(results);\n      setBooks(results.slice(0, 100));\n      if (results.length === 0) {\n        setParam({\n          start: 0,\n          end: 0,\n          hasMore: false,\n        });\n      }\n    });\n  }, [filters]);\n\n  const fetchMoreData = () => {\n    if (books.length === allBooks.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setBooks((s) =>\n      s.concat(allBooks.slice(scrollParam.start, scrollParam.end))\n    );\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  return (\n    <AppWrapper>\n      <LibrarySearchBar onSend={(filterArray) => setFilter(filterArray)} />\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <LibraryContainer\n          dataLength={books.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {books!.map((book: Book, index: number) => {\n            return <BookTile key={index} book={book}></BookTile>;\n          })}\n        </LibraryContainer>\n      </div>\n    </AppWrapper>\n  );\n};\n\nexport default Library;\n\nconst LibraryContainer = styled(InfiniteScroll)`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\nimport {\n  faArrowLeft,\n  faArrowRight,\n  faExternalLinkAlt,\n  faFileDownload,\n  faTag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../FormElements/TextButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LocalLoadingSpinner } from \"../../Loading\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookView = ({ book }: $Props) => {\n  const [base, setBase] = useState<string>(\"\");\n  const [numPages, setNumPages] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(1);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.readAsDataURL(book.data);\n    reader.onloadend = function () {\n      var base64data = reader.result;\n      if (base64data !== null) setBase(base64data.toString());\n    };\n  });\n\n  const showPdf = () => {\n    if (navigator.appVersion.toString().indexOf(\".NET\") > 0) {\n      window.navigator.msSaveBlob(book.data, book.name + \".pdf\"); // for IE browser\n    } else {\n      const url = URL.createObjectURL(book.data);\n      window.open(url, \"_blank\");\n    }\n  };\n\n  const downloadFile = (filename: string) => {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(book.data, filename);\n    } else {\n      var pdfURL = window.URL.createObjectURL(book.data);\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = pdfURL;\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n    setNumPages(numPages);\n    setPageNumber(1);\n  };\n\n  const changePage = (offset: number) => {\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\n  };\n\n  const previousPage = () => {\n    changePage(-1);\n  };\n\n  const nextPage = () => {\n    changePage(1);\n  };\n\n  const onItemClick = ({\n    pageNumber: itemPageNumber,\n  }: {\n    pageNumber: string;\n  }) => {\n    setPageNumber(+itemPageNumber);\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <DocumentWrapper>\n          <div>\n            <TextButton\n              onClick={nextPage}\n              text={\"Next\"}\n              disabled={pageNumber >= numPages}\n              icon={faArrowRight}\n            />\n            <TextButton\n              onClick={previousPage}\n              text={\"Previous\"}\n              disabled={pageNumber <= 1}\n              icon={faArrowLeft}\n            />\n            Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n          </div>\n          <Document\n            file={base}\n            onLoadSuccess={onDocumentLoadSuccess}\n            onItemClick={onItemClick}\n            loading={LocalLoadingSpinner}\n          >\n            <Page pageNumber={pageNumber} loading={LocalLoadingSpinner} />\n          </Document>\n        </DocumentWrapper>\n      </View>\n      <View>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n        <TextButton\n          onClick={() => showPdf()}\n          text={\"Show PDF\"}\n          icon={faExternalLinkAlt}\n        />\n        <TextButton\n          onClick={() => downloadFile(book.name + \".pdf\")}\n          text={\"Downlaod PDF\"}\n          icon={faFileDownload}\n        />\n        <TagWrapper>\n          {book.tags &&\n            book.tags.map((tag: string, index: number) => (\n              <Tag key={index}>\n                <FontAwesomeIcon icon={faTag} /> {tag}\n              </Tag>\n            ))}\n        </TagWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default BookView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 10px;\n  margin-right: 5px;\n`;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 auto;\n  height: auto;\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nconst DocumentWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n\n  .react-pdf__Document {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .react-pdf__Outline {\n    flex: 1 1 auto;\n    max-height: 600px;\n    overflow: hidden;\n  }\n  .react-pdf__Page {\n    flex: 1 1 auto;\n    width: 100%;\n    max-width: 600px;\n    overflow: hidden;\n    border-radius: 5px;\n\n    .react-pdf__Page__canvas {\n      width: 100% !important;\n      height: auto !important;\n    }\n    .react-pdf__Page__textContent {\n      width: 100% !important;\n      height: auto !important;\n      top: 0 !important;\n      left: 0 !important;\n      transform: none !important;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\n\nimport {\n  faLink,\n  faImage,\n  faFileImport,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../FormElements/NumberField\";\nimport StringField from \"../../FormElements/StringField\";\nimport FileField from \"../../FormElements/FileField\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n  onEdit: (value: Book) => void;\n}\n\nconst BookEditView = ({ book, onEdit }: $Props) => {\n  const triggerImportFiles = (fileList: FileList | null) => {\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      if (files.length === 1) onEdit({ ...book, data: files[0] });\n    }\n  };\n\n  const onTagChange = (oldTag: string, value: string) => {\n    let tags = book.tags.map((tag: string) => {\n      if (tag === oldTag) {\n        return value;\n      } else {\n        return tag;\n      }\n    });\n    onEdit({ ...book, tags: tags });\n  };\n\n  const addNewTag = () => {\n    onEdit({\n      ...book,\n      tags: [...book.tags, \"\"],\n    });\n  };\n\n  const removeTag = (oldTag: string) => {\n    let tags = book.tags;\n    const index: number = tags.indexOf(oldTag);\n    if (index !== -1) {\n      tags.splice(index, 1);\n      onEdit({ ...book, tags: tags });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <BookView>\n        <StringField\n          value={book.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...book, name: name })}\n        />\n        <FileField\n          label=\"\"\n          isMulti={false}\n          icon={faFileImport}\n          onChange={(file) => triggerImportFiles(file)}\n        />\n        <StringField\n          value={book.cover}\n          label=\"Cover\"\n          icon={faImage}\n          onChange={(cover) => onEdit({ ...book, cover: cover })}\n        />\n        <NumberField\n          value={book.pages}\n          label=\"Pages\"\n          icon={faLink}\n          onChange={(pages) => onEdit({ ...book, pages: pages })}\n        />\n      </BookView>\n      <TagView>\n        {book.tags.map((tag: string, index: number) => {\n          return (\n            <TagWrapper key={index}>\n              <StringField\n                value={tag}\n                label=\"Tag\"\n                onChange={(name) => onTagChange(tag, name)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTag(tag)} />\n            </TagWrapper>\n          );\n        })}\n        <TagWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewTag()} />\n        </TagWrapper>\n      </TagView>\n    </CenterWrapper>\n  );\n};\n\nexport default BookEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst BookView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst TagView = styled(BookView)``;\n\nconst TagWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport Book from \"../../../Data/Book\";\nimport { remove, updateWithCallback } from \"../../../Services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BookView from \"./BookView\";\nimport BookEditView from \"./BookEditView\";\nimport BackButton from \"../../FormElements/BackButton\";\nimport IconButton from \"../../FormElements/IconButton\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookDetail = ({ book }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(false);\n  const [bookObj, editBook] = useState<Book>(book);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteBook = (bookId: number | undefined) => {\n    remove(\"books\", bookId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (bookObj !== book) {\n      setUnsavedChanges(true);\n    }\n  }, [bookObj,book]);\n\n  const updateBook = (tableName: string, bookObj: Book) => {\n    updateWithCallback(tableName, bookObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateBook(\"books\", bookObj)}\n              icon={faSave}\n            />\n            <IconButton\n              onClick={() => deleteBook(bookObj.id)}\n              icon={faTrash}\n            />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <BookEditView book={bookObj} onEdit={(value) => editBook(value)} />\n      ) : (\n        <BookView book={bookObj} />\n      )}\n    </>\n  );\n};\n\nexport default BookDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nconst EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color:\n    ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n\n  ${ToggleRight} {\n    background-color:\n    ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }}}\n    ;\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItem } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { id: string };\n\nconst IdToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItem(db.books, +match.params.id);\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Id</>}\n      {!error && !loading && book !== undefined ? (\n        <BookDetail book={book} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default IdToBook;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../Database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../Hooks/DexieHooks\";\nimport AppWrapper from \"../../../AppWrapper\";\nimport { LoadingSpinner } from \"../../../Loading\";\nimport BookDetail from \"../BookDetail\";\n\ntype TParams = { name: string };\n\nconst NameToBook = ({ match }: RouteComponentProps<TParams>) => {\n  const db = new MyAppDatabase();\n  const [book, loading, error] = useItemByAttr(\n    db.books,\n    \"name\",\n    match.params.name\n  );\n\n  return (\n    <AppWrapper>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Fail by Name</>}\n      {!error && !loading && book !== undefined ? (\n        <BookDetail book={book} />\n      ) : (\n        \"\"\n      )}\n    </AppWrapper>\n  );\n};\n\nexport default NameToBook;\n","import React from \"react\";\nimport { MemoryRouter, Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/Theme/MyThemeProvider\";\n\nimport Options from \"./components/Options/Options\";\nimport SpellOverview from \"./components/Entities/Spells/SpellOverview\";\nimport IdToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/IdToSpell\";\nimport NameToSpell from \"./components/Entities/Spells/Detail/LinkWrapper/NameToSpell\";\nimport NameToGear from \"./components/Entities/Gear/Detail/LinkWrapper/NameToGear\";\nimport IdToGear from \"./components/Entities/Gear/Detail/LinkWrapper/IdToGear\";\nimport GearOverview from \"./components/Entities/Gear/GearOverview\";\nimport MonsterOverview from \"./components/Entities/Monster/MonsterOverview\";\nimport NameToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/NameToMonster\";\nimport IdToMonster from \"./components/Entities/Monster/Detail/LinkWrapper/IdToMonster\";\nimport NameToRace from \"./components/Entities/Races/Detail/LinkWrapper/NameToRace\";\nimport IdToRace from \"./components/Entities/Races/Detail/LinkWrapper/IdToRace\";\nimport NameToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/NameToSubrace\";\nimport IdToSubrace from \"./components/Entities/Subraces/Detail/LinkWrapper/IdToSubrace\";\nimport RaceOverview from \"./components/Entities/Races/RaceOverview\";\nimport NameToItem from \"./components/Entities/Item/Detail/LinkWrapper/NameToItem\";\nimport IdToItem from \"./components/Entities/Item/Detail/LinkWrapper/IdToItem\";\nimport ItemOverview from \"./components/Entities/Item/ItemOverview\";\nimport NameToClass from \"./components/Entities/Classes/Detail/LinkWrapper/NameToClass\";\nimport IdToClass from \"./components/Entities/Classes/Detail/LinkWrapper/IdToClass\";\nimport ClassOverview from \"./components/Entities/Classes/ClassOverview\";\nimport NameToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/NameToSubclass\";\nimport IdToSubclass from \"./components/Entities/Subclasses/Detail/LinkWrapper/IdToSubclass\";\nimport NameToChar from \"./components/Entities/Chars/Detail/LinkWrapper/NameToChar\";\nimport IdToChar from \"./components/Entities/Chars/Detail/LinkWrapper/IdToChar\";\nimport CharOverview from \"./components/Entities/Chars/CharOverview\";\nimport CharLab from \"./components/Entities/Chars/Lab/CharLab\";\nimport EncounterOverview from \"./components/Encounters/EncounterOverview\";\nimport NameToEncounter from \"./components/Encounters/Detail/LinkWrapper/NameToEncounter\";\nimport IdToEncounter from \"./components/Encounters/Detail/LinkWrapper/IdToEncounter\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Library from \"./components/Library/Library\";\nimport IdToBook from \"./components/Library/Detail/LinkWrapper/IdToBook\";\nimport NameToBook from \"./components/Library/Detail/LinkWrapper/NameToBook\";\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <MemoryRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Library}></Route>\n          <Route path=\"/spell-detail/name/:name\" component={NameToSpell}></Route>\n          <Route path=\"/spell-detail/id/:id\" component={IdToSpell}></Route>\n          <Route path=\"/spell-overview\" component={SpellOverview}></Route>\n          <Route path=\"/gear-detail/name/:name\" component={NameToGear}></Route>\n          <Route path=\"/gear-detail/id/:id\" component={IdToGear}></Route>\n          <Route path=\"/gear-overview\" component={GearOverview}></Route>\n          <Route path=\"/item-detail/name/:name\" component={NameToItem}></Route>\n          <Route path=\"/item-detail/id/:id\" component={IdToItem}></Route>\n          <Route path=\"/item-overview\" component={ItemOverview}></Route>\n          <Route path=\"/monster-detail/name/:name\" component={NameToMonster}></Route>\n          <Route path=\"/monster-detail/id/:id\" component={IdToMonster}></Route>\n          <Route path=\"/monster-overview\" component={MonsterOverview}></Route>\n          <Route path=\"/race-detail/name/:name\" component={NameToRace}></Route>\n          <Route path=\"/race-detail/id/:id\" component={IdToRace}></Route>\n          <Route path=\"/race-overview\" component={RaceOverview}></Route>\n          <Route path=\"/subrace-detail/name/:name\" component={NameToSubrace}></Route>\n          <Route path=\"/subrace-detail/id/:id\" component={IdToSubrace}></Route>\n          <Route path=\"/class-detail/name/:name\" component={NameToClass}></Route>\n          <Route path=\"/class-detail/id/:id\" component={IdToClass}></Route>\n          <Route path=\"/class-overview\" component={ClassOverview}></Route>\n          <Route path=\"/subclass-detail/name/:name\" component={NameToSubclass}></Route>\n          <Route path=\"/subclass-detail/id/:id\" component={IdToSubclass}></Route>\n          <Route path=\"/char-detail/name/:name\" component={NameToChar}></Route>\n          <Route path=\"/char-detail/id/:id\" component={IdToChar}></Route>\n          <Route path=\"/char-overview\" component={CharOverview}></Route>\n          <Route path=\"/char-lab\" component={CharLab}></Route>\n          <Route path=\"/options\" component={Options}></Route>\n          <Route path=\"/encounter-detail/name/:name\" component={NameToEncounter}></Route>\n          <Route path=\"/encounter-detail/id/:id\" component={IdToEncounter}></Route>\n          <Route path=\"/encounter-overview\" component={EncounterOverview}></Route>\n          <Route path=\"/statistics\" component={Statistics}></Route>\n          <Route path=\"/book-detail/name/:name\" component={NameToBook}></Route>\n          <Route path=\"/book-detail/id/:id\" component={IdToBook}></Route>\n          <Route path=\"/library\" component={Library}></Route>\n        </Switch>\n      </MemoryRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}