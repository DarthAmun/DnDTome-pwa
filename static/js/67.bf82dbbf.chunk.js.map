{"version":3,"sources":["data/Gear.tsx","components/entities/gear/details/link_wrapper/NameToGear.tsx","components/general_elements/ErrorTile.tsx"],"names":["Gear","id","name","sources","description","pic","cost","damage","weight","properties","type","filename","this","isGear","arg","nameCheck","undefined","sourcesCheck","descriptionCheck","costCheck","damageCheck","weightCheck","propertiesCheck","typeCheck","picCheck","NameToGear","match","history","useHistory","db","MyAppDatabase","useItemByAttr","gears","params","gear","loading","error","text","buttonText","onButton","newGear","createNewWithId","push","createNewGear","isNew","ErrorTile","Tile","PropWrapper","Name","Text","PropTitle","onClick","icon","faPlusCircle","styled","div","theme","tile","color","backgroundColor","boxShadow","headerColor","span","backgroundColorLink"],"mappings":"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","file":"static/js/67.bf82dbbf.chunk.js","sourcesContent":["import IEntity from \"./IEntity\";\n\nexport default class Gear implements IEntity {\n  id?: number;\n  name: string;\n  sources: string;\n  description: string;\n  pic: string;\n  cost: string;\n  damage: string;\n  weight: string;\n  properties: string;\n  type: string;\n  filename: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    sources?: string,\n    description?: string,\n    pic?: string,\n    cost?: string,\n    damage?: string,\n    weight?: string,\n    properties?: string,\n    type?: string,\n    filename?: string\n  ) {\n    this.name = name || \"\";\n    this.sources = sources || \"\";\n    this.description = description || \"\";\n    this.pic = pic || \"\";\n    this.cost = cost || \"\";\n    this.damage = damage || \"\";\n    this.weight = weight || \"\";\n    this.properties = properties || \"\";\n    this.type = type || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isGear(arg: any): arg is Gear {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    sourcesCheck &&\n    descriptionCheck &&\n    costCheck &&\n    damageCheck &&\n    weightCheck &&\n    propertiesCheck &&\n    typeCheck &&\n    picCheck\n  );\n}\n\nexport function findGearFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  sourcesCheck: boolean;\n  descriptionCheck: boolean;\n  costCheck: boolean;\n  damageCheck: boolean;\n  weightCheck: boolean;\n  propertiesCheck: boolean;\n  typeCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const descriptionCheck =\n    arg.description !== undefined && typeof arg.description == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const weightCheck = arg.weight !== undefined && typeof arg.weight == \"string\";\n  const propertiesCheck =\n    arg.properties !== undefined && typeof arg.properties == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    sourcesCheck: sourcesCheck,\n    descriptionCheck: descriptionCheck,\n    costCheck: costCheck,\n    damageCheck: damageCheck,\n    weightCheck: weightCheck,\n    propertiesCheck: propertiesCheck,\n    typeCheck: typeCheck,\n    picCheck: picCheck,\n  };\n}\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport GearDetail from \"../GearDetail\";\nimport Gear from \"../../../../../data/Gear\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\n\ntype TParams = { name: string };\n\nconst NameToGear = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [gear, loading, error] = useItemByAttr(db.gears, \"name\", match.params.name);\n\n  const createNewGear = () => {\n    let newGear = new Gear(0, match.params.name);\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && gear === undefined && (\n        <ErrorTile\n          text={\"No such gear exists. Want to creat such gear?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewGear()}\n        />\n      )}\n      {!error && !loading && gear !== undefined && (\n        <GearDetail gear={gear} isNew={gear.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default NameToGear;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n"],"sourceRoot":""}