{"version":3,"sources":["data/campaign/Quest.tsx","components/entities/quest/details/link_wrapper/NameToQuest.tsx","components/general_elements/ErrorTile.tsx"],"names":["Quest","id","name","pic","description","rewards","followQuest","sources","filename","this","isQuest","arg","nameCheck","undefined","picCheck","descriptionCheck","locationsCheck","locations","Array","isArray","rewardsCheck","sourcesCheck","NameToQuest","match","history","useHistory","db","MyAppDatabase","useItemByAttr","quests","params","quest","loading","error","text","buttonText","onButton","newQuest","createNewWithId","push","createNewQuest","isNew","ErrorTile","Tile","PropWrapper","Name","Text","PropTitle","onClick","icon","faPlusCircle","styled","div","theme","tile","color","backgroundColor","boxShadow","headerColor","span","backgroundColorLink"],"mappings":"qLAGqBA,EAUnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAlBHP,QAkBE,OAjBFC,UAiBE,OAhBFC,SAgBE,OAfFC,iBAeE,OAdFC,aAcE,OAbFC,iBAaE,OAZFC,aAYE,OAXFC,cAWE,EACAC,KAAKR,GAAKA,EACVQ,KAAKP,KAAOA,GAAQ,GACpBO,KAAKN,IAAMA,GAAO,GAClBM,KAAKL,YAAcA,GAAe,GAClCK,KAAKJ,QAAUA,GAAW,GAC1BI,KAAKH,YAAcA,GAAe,GAClCG,KAAKF,QAAUA,GAAW,GAC1BE,KAAKD,SAAWA,GAAY,IAIzB,SAASE,EAAQC,GACtB,IAAMC,OAAyBC,IAAbF,EAAIT,MAAyC,iBAAZS,EAAIT,KACjDY,OAAuBD,IAAZF,EAAIR,KAAuC,iBAAXQ,EAAIR,IAC/CY,OAAuCF,IAApBF,EAAIP,aAAuD,iBAAnBO,EAAIP,YAC/DY,OAAmCH,IAAlBF,EAAIM,WAA2BC,MAAMC,QAAQR,EAAIM,WAClEG,OAA+BP,IAAhBF,EAAIN,SAA+C,iBAAfM,EAAIN,QACvDgB,OAA+BR,IAAhBF,EAAIJ,SAA+C,iBAAfI,EAAIJ,QAE7D,OACEI,GACAC,GACAE,GACAC,GACAC,GACAI,GACAC,I,qICNWC,UA/BK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACjBC,EAAUC,cACRC,EAAK,IAAIC,IAFgD,EAG/BC,YAAcF,EAAGG,OAAQ,OAAQN,EAAMO,OAAO5B,MAHf,mBAGxD6B,EAHwD,KAGjDC,EAHiD,KAGxCC,EAHwC,KAa/D,OACE,qCACIA,GAASD,GAAW,kBAAC,IAAD,MACrBC,IAAUD,GAAW,sDACpBC,IAAUD,QAAqBnB,IAAVkB,GACrB,kBAAC,IAAD,CACEG,KAAM,kDACNC,WAAY,MACZC,SAAU,kBAhBK,WACrB,IAAIC,EAAW,IAAIrC,IAAM,EAAGuB,EAAMO,OAAO5B,aAClCmC,EAASpC,GAChBqC,YAAgB,SAAUD,GAAU,SAACpC,GACnCuB,EAAQe,KAAR,2BAAiCtC,OAYbuC,OAGlBP,IAAUD,QAAqBnB,IAAVkB,GACrB,kBAAC,IAAD,CAAaA,MAAOA,EAAOU,MAAsB,KAAfV,EAAM7B,U,swCCRjCwC,IAjBG,SAAC,GAA4C,IAA1CR,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SACrC,OACE,kBAACO,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kDAEF,kBAACC,EAAD,KACE,kBAACC,EAAD,eACCb,GAEH,kBAAC,IAAD,CAAYA,KAAMC,EAAYa,QAAS,kBAAMZ,KAAYa,KAAMC,SAQvE,IAAMP,EAAOQ,IAAOC,IAAV,KAEC,qBAAGC,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAGhC,qBAAGH,MAAkBC,KAAKG,aAUpCZ,EAAOM,IAAOC,IAAV,KAOC,qBAAGC,MAAkBC,KAAKI,eAK/Bd,EAAcO,IAAOC,IAAV,KASXL,EAAYI,IAAOQ,KAAV,KAEJ,qBAAGN,MAAkBC,KAAKM,uBAK/Bd,EAAOK,IAAOC,IAAV,KAQY,qBAAGC,MAAkBC,KAAKE","file":"static/js/72.51875797.chunk.js","sourcesContent":["import IEntity from \"../IEntity\";\n\n//quests:\"++id, name, pic, locations, origin, description, rewards, followQuest, sources, filename\",\nexport default class Quest implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  description: string;\n  rewards: string;\n  followQuest: string;\n  sources: string;\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    description?: string,\n    rewards?: string,\n    followQuest?: string,\n    sources?: string,\n    filename?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.description = description || \"\";\n    this.rewards = rewards || \"\";\n    this.followQuest = followQuest || \"\";\n    this.sources = sources || \"\";\n    this.filename = filename || \"\";\n  }\n}\n\nexport function isQuest(arg: any): arg is Quest {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const descriptionCheck = arg.description !== undefined && typeof arg.description == \"string\";\n  const locationsCheck = arg.locations !== undefined && Array.isArray(arg.locations);\n  const rewardsCheck = arg.rewards !== undefined && typeof arg.rewards == \"string\";\n  const sourcesCheck = arg.sources !== undefined && typeof arg.sources == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    picCheck &&\n    descriptionCheck &&\n    locationsCheck &&\n    rewardsCheck &&\n    sourcesCheck\n  );\n}\n\nexport function findQuestFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return {\n    nameCheck: nameCheck,\n  };\n}\n","import React from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport { MyAppDatabase } from \"../../../../../database/MyDatabase\";\nimport { useItemByAttr } from \"../../../../../hooks/DexieHooks\";\nimport { LoadingSpinner } from \"../../../../Loading\";\nimport QuestDetail from \"../QuestDetail\";\nimport Quest from \"../../../../../data/campaign/Quest\";\nimport { createNewWithId } from \"../../../../../services/DatabaseService\";\nimport ErrorTile from \"../../../../general_elements/ErrorTile\";\n\ntype TParams = { name: string };\n\nconst NameToQuest = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const db = new MyAppDatabase();\n  const [quest, loading, error] = useItemByAttr(db.quests, \"name\", match.params.name);\n\n  const createNewQuest = () => {\n    let newQuest = new Quest(0, match.params.name);\n    delete newQuest.id;\n    createNewWithId(\"quests\", newQuest, (id) => {\n      history.push(`/quest-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      {!error && loading && <LoadingSpinner />}\n      {error && !loading && <>Error occured</>}\n      {!error && !loading && quest === undefined && (\n        <ErrorTile\n          text={\"No such quest exists. Want to creat such quest?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewQuest()}\n        />\n      )}\n      {!error && !loading && quest !== undefined && (\n        <QuestDetail quest={quest} isNew={quest.name === \"\" ? true : false} />\n      )}\n    </>\n  );\n};\n\nexport default NameToQuest;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n"],"sourceRoot":""}