{"version":3,"sources":["data/Book.tsx","data/RandomTable.tsx","../../node_modules/tslib/tslib.es6.js","../../node_modules/throttle-debounce/dist/index.esm.js","components/entities/campaigns/CampaignSearchBar.tsx","components/form_elements/StringSearchField.tsx","components/entities/chars/CharSearchBar.tsx","components/entities/encounters/EncounterSearchBar.tsx","components/entities/events/EventSearchBar.tsx","components/form_elements/MultipleSelectField.tsx","components/entities/gear/GearSearchBar.tsx","components/entities/groups/GroupSearchBar.tsx","components/entities/items/ItemSearchBar.tsx","components/entities/locations/LocationSearchBar.tsx","components/entities/monsters/MonsterSearchBar.tsx","components/entities/npcs/NpcSearchBar.tsx","components/entities/quests/QuestSearchBar.tsx","components/entities/races/RaceSearchBar.tsx","components/entities/random_tables/RandomTableSearchBar.tsx","components/entities/selections/SelectionSearchBar.tsx","components/entities/spells/SpellSearchBar.tsx","components/entities/worlds/WorldSearchBar.tsx","components/entities/classes/ClassSearchBar.tsx","components/entities/library/BookSearchBar.tsx","components/entities/library/BookTile.tsx","components/entities/random_tables/RandomTableTile.tsx","components/entities/selections/SelectionTile.tsx","components/general_elements/EntityOverview.tsx","hooks/QueryHook.tsx","components/form_elements/NumberField.tsx","data/Filter.tsx","components/form_elements/CheckField.tsx"],"names":["Book","id","name","cover","data","pages","tags","this","Blob","RandomTable","filename","header","rows","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","assign","t","s","i","n","arguments","length","prototype","call","apply","delay","noTrailing","callback","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","self","elapsed","Date","now","args","exec","clear","undefined","setTimeout","cancel","__","constructor","create","CampaignSearchBar","useState","open","setOpen","filters","setFilters","history","useHistory","setName","StringField","value","label","onChange","IconButton","onClick","newFilters","Filter","push","JSON","stringify","search","icon","faSearch","ReactDOM","unstable_batchedUpdates","faRedoAlt","newCampaign","Campaign","createNewWithId","createNewCampaign","faPlusCircle","exportFilteredFromTable","faFileExport","StringSearchField","sort","field","transform","mobile","changeSort","Field","LabelText","Icon","Input","type","e","target","Sort","faChevronCircleUp","faChevronCircleDown","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","CharSearchBar","campaign","setCampaign","sources","setSources","setSort","faLink","map","filter","fieldName","EncounterSearchBar","newEncounter","Encounter","createNewEncounter","EventSearchBar","date","setDate","rotation","newEvent","Event","createNewEvent","MultipleSelectField","options","handleChange","result","opt","StyledSelect","isMulti","classNamePrefix","Select","buttons","GearSearchBar","cost","setCost","weight","setWeight","setType","typeList","setTypeList","properties","setProperties","damage","setDamage","description","setDescription","useEffect","reciveAttributeSelection","types","toString","faCoins","faWeightHanging","faCrosshairs","faBook","newGear","Gear","createNewGear","GroupSearchBar","onSend","newGroup","Group","createNewGroup","ItemSearchBar","rarity","setRarity","rarityList","setRarityList","base","setBase","baseList","setBaseList","attunment","setAttunment","rarities","bases","CheckField","newItem","Item","createNewItem","LocationSearchBar","newLocation","Location","createNewLocation","MonsterSearchBar","cr","setCr","subtype","setSubType","subtypeList","setSubTypeList","alignment","setAlignment","speed","setSpeed","senses","setSenses","lang","setLang","skills","setSkills","dmgVulnerabilitie","setDmgVulnerabilitie","dmgResistance","setDmgResistance","dmgImmunities","setDmgImmunities","conImmunities","setConImmunities","ablt","setAblt","sAblt","setSAblt","lAblt","setLAblt","subtypes","NumberField","newMonster","Monster","createNewMonster","NpcSearchBar","newNpc","Npc","createNewNpc","QuestSearchBar","newQuest","Quest","createNewQuest","RaceSearchBar","abilityScores","setAbilityScores","newRace","Race","createNewRace","RandomTableSearchBar","newRandomTable","createNewRandomTable","SelectionSearchBar","newSelection","Selection","createNewSelection","SpellSearchBar","school","setSchool","schoolList","setSchoolList","level","setLevel","levelList","setLevelList","ritual","setRitual","time","setTime","range","setRange","duration","setDuration","components","setComponents","text","setText","classes","setClasses","schools","levels","faHistory","faPowerOff","rotate","faHourglassHalf","faMortarPestle","faUser","faBookOpen","newSpell","Spell","createNewSpell","WorldSearchBar","newWorld","World","createNewWorld","ClassSearchBar","newClass","Class","createNewClass","BookSearchBar","setTags","setPages","newBook","createNewBook","BookTile","book","getPicture","useCallback","Tile","to","pic","PropWrapper","Name","PropRowWrapper","RowProp","faTags","tag","index","Tag","key","Link","boxShadow","headerColor","Image","ImgContainer","ImageElm","src","Empty","img","span","backgroundColorLink","RandomTableTile","randomTable","SelectionTile","selection","WideProp","selectionOptions","Prop","EntityOverview","match","rawFilters","URLSearchParams","useLocation","get","entityName","setEntityName","setFilter","allEntitys","setAllEntitys","entitys","setEntitys","start","end","hasMore","scrollParam","setParam","parse","newMatch","path","split","includes","replaceAll","reciveAllFiltered","results","slice","searchbars","classe","event","gear","group","item","location","monster","npc","quest","race","spell","world","char","encounter","tiles","CampaignTile","ClassTile","EventTile","GearTile","GroupTile","ItemTile","LocationTile","MonsterTile","NpcTile","QuestTile","RaceTile","SpellTile","WorldTile","CharTile","EncounterTile","React","createElement","style","width","EntityContainer","dataLength","next","concat","loader","Loading","entity","InfiniteScroll","max","step","filedName","defaultChecked","checked","Checkmark"],"mappings":"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","file":"static/js/17.349a4d24.chunk.js","sourcesContent":["import IEntity from \"./IEntity\";\n\nexport default class Book implements IEntity{\n  id?: number;\n  name: string;\n  cover: string;\n  data: Blob;\n  pages: number;\n  tags: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    cover?: string,\n    data?: Blob,\n    pages?: number,\n    tags?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.cover = cover || \"\";\n    this.data = data || new Blob();\n    this.pages = pages || 0;\n    this.tags = tags || [];\n  }\n}\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nfunction throttle (delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    var args = arguments;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, args);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\n\nfunction debounce (delay, atBegin, callback) {\n  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n}\n\nexport { throttle, debounce };\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Campaign from \"../../../data/campaign/Campaign\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst CampaignSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/campaign-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/campaign-overview}`);\n  };\n\n  const createNewCampaign = () => {\n    let newCampaign = new Campaign();\n    delete newCampaign.id;\n    createNewWithId(\"campaigns\", newCampaign, (id) => {\n      history.push(`/campaign-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"campaigns\", filters, \"DnDTome_filtered_campaigns.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewCampaign()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CampaignSearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport IconButton from \"./IconButton\";\n\ninterface $Props {\n  value: string;\n  sort: { name: string; label: string; sort: number };\n  field: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  mobile?: boolean;\n  onChange: (value: string, sort: { name: string; label: string; sort: number }) => void;\n}\n\nconst StringSearchField = ({\n  value,\n  sort,\n  field,\n  label,\n  icon,\n  transform,\n  mobile,\n  onChange,\n}: $Props) => {\n  const changeSort = () => {\n    if (sort.label === label) {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: (sort.sort + 1) % 3,\n      });\n    } else {\n      onChange(value, {\n        name: field,\n        label: label,\n        sort: 1,\n      });\n    }\n  };\n\n  return (\n    <Field mobile={mobile === undefined ? true : mobile}>\n      <LabelText onClick={() => changeSort()}>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onChange(e.target.value, sort)}></Input>\n      {sort.sort !== 0 && sort.label === label && (\n        <Sort>\n          {sort.sort === 1 && <IconButton onClick={() => changeSort()} icon={faChevronCircleUp} />}\n          {sort.sort === 2 && (\n            <IconButton onClick={() => changeSort()} icon={faChevronCircleDown} />\n          )}\n        </Sort>\n      )}\n    </Field>\n  );\n};\n\nexport default StringSearchField;\n\ntype MobileType = {\n  mobile?: boolean;\n};\n\nconst Field = styled.label<MobileType>`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ mobile }) => (!mobile ? \"@media (max-width: 576px) {display: none;}\" : \"\")}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n  min-width: max-content;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n\nconst Sort = styled.div`\n  flex: 1 1 auto;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst CharSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [campaign, setCampaign] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (campaign !== \"\") {\n      newFilters = [...newFilters, new Filter(\"campaign\", campaign)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/char-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCampaign(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/char-overview}`);\n  };\n\n  const createNewChar = () => {\n    history.push(`/char-lab`);\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"chars\", filters, \"DnDTome_filtered_chars.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={campaign}\n          sort={sort}\n          field={\"campaign\"}\n          label=\"Campaign\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setCampaign(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewChar()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default CharSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Encounter from \"../../../data/encounter/Encounter\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst EncounterSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/encounter-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/encounter-overview}`);\n  };\n\n  const createNewEncounter = () => {\n    let newEncounter = new Encounter();\n    delete newEncounter.id;\n    createNewWithId(\"encounters\", newEncounter, (id) => {\n      history.push(`/encounter-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"encounters\", filters, \"DnDTome_filtered_encounters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewEncounter()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default EncounterSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Event from \"../../../data/world/Event\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst EventSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [date, setDate] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (date !== \"\") {\n      newFilters = [...newFilters, new Filter(\"date\", date)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/event-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDate(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/event-overview}`);\n  };\n\n  const createNewEvent = () => {\n    let newEvent = new Event();\n    delete newEvent.id;\n    createNewWithId(\"events\", newEvent, (id) => {\n      history.push(`/event-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"events\", filters, \"DnDTome_filtered_events.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={date}\n          sort={sort}\n          field={\"date\"}\n          label=\"Date\"\n          onChange={(date: string, sort: { name: string; label: string; sort: number }) => {\n            setDate(date);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} rotation={90} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewEvent()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default EventSearchBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string[]) => void;\n}\n\nconst MultipleSelectField = ({\n  options,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const handleChange = (\n    options: {\n      value: string;\n      label: string;\n    }[]\n  ) => {\n    if (options !== null && options !== undefined) {\n      let result: string[] = options.map(\n        (opt: { value: string; label: string }) => {\n          return opt.value;\n        }\n      );\n      onChange(result);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        isMulti\n        classNamePrefix=\"react-select\"\n        options={options}\n        onChange={(\n          options: {\n            value: string;\n            label: string;\n          }[]\n        ) => handleChange(options)}\n      />\n    </Field>\n  );\n};\n\nexport default MultipleSelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faCoins,\n  faWeightHanging,\n  faCrosshairs,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Gear from \"../../../data/Gear\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst GearSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<string>(\"\");\n  const [weight, setWeight] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [properties, setProperties] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"gears\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cost !== \"\") {\n      newFilters = [...newFilters, new Filter(\"cost\", cost)];\n    }\n    if (weight !== \"\") {\n      newFilters = [...newFilters, new Filter(\"weight\", weight)];\n    }\n    if (properties !== \"\") {\n      newFilters = [...newFilters, new Filter(\"properties\", properties)];\n    }\n    if (damage !== \"\") {\n      newFilters = [...newFilters, new Filter(\"damage\", damage)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/gear-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCost(\"\");\n      setWeight(\"\");\n      setProperties(\"\");\n      setDamage(\"\");\n      setSources(\"\");\n      setType([]);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/gear-overview}`);\n  };\n\n  const createNewGear = () => {\n    let newGear = new Gear();\n    delete newGear.id;\n    createNewWithId(\"gears\", newGear, (id) => {\n      history.push(`/gear-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"gears\", filters, \"DnDTome_filtered_gears.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={cost}\n          sort={sort}\n          field={\"cost\"}\n          label=\"Cost\"\n          icon={faCoins}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setCost(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={weight}\n          sort={sort}\n          field={\"weight\"}\n          label=\"Weight\"\n          icon={faWeightHanging}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setWeight(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={damage}\n          sort={sort}\n          field={\"damage\"}\n          label=\"Damage\"\n          icon={faCrosshairs}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDamage(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={properties}\n          sort={sort}\n          field={\"properties\"}\n          label=\"Properties\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setProperties(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewGear()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default GearSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport Group from \"../../../data/campaign/Group\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\ninterface $Props {\n  onSend: (filters: Filter[]) => void;\n}\n\nconst GroupSearchBar = ({ onSend }: $Props) => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/group-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/group-overview}`);\n  };\n\n  const createNewGroup = () => {\n    let newGroup = new Group();\n    delete newGroup.id;\n    createNewWithId(\"groups\", newGroup, (id) => {\n      history.push(`/group-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"groups\", filters, \"DnDTome_filtered_groups.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewGroup()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default GroupSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport Item from \"../../../data/Item\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst ItemSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [rarity, setRarity] = useState<string[]>([]);\n  const [rarityList, setRarityList] = useState<{ value: string; label: string }[]>([]);\n  const [base, setBase] = useState<string[]>([]);\n  const [baseList, setBaseList] = useState<{ value: string; label: string }[]>([]);\n  const [attunment, setAttunment] = useState<number>(0);\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"items\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"items\", \"rarity\", function (result) {\n      let rarities = result.map((rarity) => {\n        if (rarity === \"\") {\n          return { value: rarity.toString(), label: \"Empty\" };\n        }\n        return { value: rarity.toString(), label: rarity.toString() };\n      });\n      setRarityList(rarities);\n    });\n    reciveAttributeSelection(\"items\", \"base\", function (result) {\n      let bases = result.map((base) => {\n        if (base === \"\") {\n          return { value: base.toString(), label: \"Empty\" };\n        }\n        return { value: base.toString(), label: base.toString() };\n      });\n      setBaseList(bases);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (rarity.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"rarity\", rarity)];\n    }\n    if (base.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"base\", base)];\n    }\n    if (attunment) {\n      newFilters = [...newFilters, new Filter(\"attunment\", attunment)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/item-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setType([]);\n      setRarity([]);\n      setBase([]);\n      setAttunment(0);\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/item-overview`);\n  };\n\n  const createNewItem = () => {\n    let newItem = new Item();\n    delete newItem.id;\n    createNewWithId(\"items\", newItem, (id) => {\n      history.push(`/item-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"items\", filters, \"DnDTome_filtered_items.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Types\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={rarityList}\n          label=\"Rarities\"\n          onChange={(rarities: string[]) => setRarity(rarities)}\n        />\n        <MultipleSelectField\n          options={baseList}\n          label=\"Bases\"\n          onChange={(bases: string[]) => setBase(bases)}\n        />\n        <CheckField\n          value={!!attunment}\n          label=\"Attunment\"\n          onChange={(attunment) => setAttunment(attunment ? 1 : 0)}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewItem()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ItemSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Location from \"../../../data/world/Location\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst LocationSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/location-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/location-overview}`);\n  };\n\n  const createNewLocation = () => {\n    let newLocation = new Location();\n    delete newLocation.id;\n    createNewWithId(\"locations\", newLocation, (id) => {\n      history.push(`/location-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"locations\", filters, \"DnDTome_filtered_locations.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewLocation()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default LocationSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faSearch,\n  faRedoAlt,\n  faLink,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Monster from \"../../../data/Monster\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst MonsterSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [cr, setCr] = useState<number>(-1);\n  const [type, setType] = useState<string[]>([]);\n  const [typeList, setTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [subtype, setSubType] = useState<string[]>([]);\n  const [subtypeList, setSubTypeList] = useState<{ value: string; label: string }[]>([]);\n  const [alignment, setAlignment] = useState<string>(\"\");\n  const [speed, setSpeed] = useState<string>(\"\");\n  const [senses, setSenses] = useState<string>(\"\");\n  const [lang, setLang] = useState<string>(\"\");\n  const [skills, setSkills] = useState<string>(\"\");\n  const [dmgVulnerabilitie, setDmgVulnerabilitie] = useState<string>(\"\");\n  const [dmgResistance, setDmgResistance] = useState<string>(\"\");\n  const [dmgImmunities, setDmgImmunities] = useState<string>(\"\");\n  const [conImmunities, setConImmunities] = useState<string>(\"\");\n  const [ablt, setAblt] = useState<string>(\"\");\n  const [sAblt, setSAblt] = useState<string>(\"\");\n  const [lAblt, setLAblt] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"monsters\", \"type\", function (result) {\n      let types = result.map((type) => {\n        if (type === \"\") {\n          return { value: type.toString(), label: \"Empty\" };\n        }\n        return { value: type.toString(), label: type.toString() };\n      });\n      setTypeList(types);\n    });\n    reciveAttributeSelection(\"monsters\", \"subtype\", function (result) {\n      let subtypes = result.map((subtype) => {\n        if (subtype === \"\") {\n          return { value: subtype.toString(), label: \"Empty\" };\n        }\n        return { value: subtype.toString(), label: subtype.toString() };\n      });\n      setSubTypeList(subtypes);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (cr !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", cr)];\n    }\n    if (alignment !== \"\") {\n      newFilters = [...newFilters, new Filter(\"alignment\", alignment)];\n    }\n    if (speed !== \"\") {\n      newFilters = [...newFilters, new Filter(\"speed\", speed)];\n    }\n    if (senses !== \"\") {\n      newFilters = [...newFilters, new Filter(\"senses\", senses)];\n    }\n    if (lang !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lang\", lang)];\n    }\n    if (skills !== \"\") {\n      newFilters = [...newFilters, new Filter(\"skills\", skills)];\n    }\n    if (dmgVulnerabilitie !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgVulnerabilitie\", dmgVulnerabilitie)];\n    }\n    if (dmgResistance !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgResistance\", dmgResistance)];\n    }\n    if (dmgImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"dmgImmunities\", dmgImmunities)];\n    }\n    if (conImmunities !== \"\") {\n      newFilters = [...newFilters, new Filter(\"conImmunities\", conImmunities)];\n    }\n    if (ablt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"ablt\", ablt)];\n    }\n    if (sAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sAblt\", sAblt)];\n    }\n    if (lAblt !== \"\") {\n      newFilters = [...newFilters, new Filter(\"lAblt\", lAblt)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    if (type.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"type\", type)];\n    }\n    if (subtype.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"subtype\", subtype)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/monster-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setCr(-1);\n      setSpeed(\"\");\n      setAlignment(\"\");\n      setSubType([]);\n      setType([]);\n      setSkills(\"\");\n      setSenses(\"\");\n      setLang(\"\");\n      setDmgVulnerabilitie(\"\");\n      setDmgResistance(\"\");\n      setConImmunities(\"\");\n      setDmgImmunities(\"\");\n      setAblt(\"\");\n      setSAblt(\"\");\n      setLAblt(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/monster-overview}`);\n  };\n\n  const createNewMonster = () => {\n    let newMonster = new Monster();\n    delete newMonster.id;\n    createNewWithId(\"monsters\", newMonster, (id) => {\n      history.push(`/monster-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"monsters\", filters, \"DnDTome_filtered_monsters.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={cr} label=\"Cr\" onChange={(cr: number) => setCr(cr)} />\n        <MultipleSelectField\n          options={typeList}\n          label=\"Type\"\n          onChange={(types: string[]) => setType(types)}\n        />\n        <MultipleSelectField\n          options={subtypeList}\n          label=\"Subtype\"\n          onChange={(subtypes: string[]) => setSubType(subtypes)}\n        />\n        <StringSearchField\n          value={alignment}\n          sort={sort}\n          field={\"alignment\"}\n          label=\"Alignment\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAlignment(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={speed}\n          sort={sort}\n          field={\"speed\"}\n          label=\"Speed\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSpeed(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={skills}\n          sort={sort}\n          field={\"skills\"}\n          label=\"Skills\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSkills(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={senses}\n          sort={sort}\n          field={\"senses\"}\n          label=\"Senses\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSenses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={lang}\n          sort={sort}\n          field={\"lang\"}\n          label=\"Languages\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLang(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgVulnerabilitie}\n          sort={sort}\n          field={\"dmgVulnerabilitie\"}\n          label=\"Vulnerabilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgVulnerabilitie(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgResistance}\n          sort={sort}\n          field={\"dmgResistance\"}\n          label=\"Resistances\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgResistance(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={dmgImmunities}\n          sort={sort}\n          field={\"dmgImmunities\"}\n          label=\"Immunities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDmgImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={conImmunities}\n          sort={sort}\n          field={\"conImmunities\"}\n          label=\"Con. Immun.\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setConImmunities(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={ablt}\n          sort={sort}\n          field={\"ablt\"}\n          label=\"Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={sAblt}\n          sort={sort}\n          field={\"sAblt\"}\n          label=\"Spezial Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          mobile={false}\n          value={lAblt}\n          sort={sort}\n          field={\"lAblt\"}\n          label=\"Legendary Abilities\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setLAblt(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewMonster()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default MonsterSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Npc from \"../../../data/campaign/Npc\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst NpcSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/npc-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/npc-overview}`);\n  };\n\n  const createNewNpc = () => {\n    let newNpc = new Npc();\n    delete newNpc.id;\n    createNewWithId(\"npcs\", newNpc, (id) => {\n      history.push(`/npc-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"npcs\", filters, \"DnDTome_filtered_npcs.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewNpc()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default NpcSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faBook,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Quest from \"../../../data/campaign/Quest\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst QuestSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (description !== \"\") {\n      newFilters = [...newFilters, new Filter(\"description\", description)];\n    }\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/quest-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setDescription(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/quest-overview}`);\n  };\n\n  const createNewQuest = () => {\n    let newQuest = new Quest();\n    delete newQuest.id;\n    createNewWithId(\"quests\", newQuest, (id) => {\n      history.push(`/quest-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"quests\", filters, \"DnDTome_filtered_quests.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={description}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBook}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDescription(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewQuest()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default QuestSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Race from \"../../../data/races/Race\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst RaceSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [abilityScores, setAbilityScores] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (abilityScores !== \"\") {\n      newFilters = [...newFilters, new Filter(\"abilityScores\", abilityScores)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/race-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setAbilityScores(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/race-overview)}`);\n  };\n\n  const createNewRace = () => {\n    let newRace = new Race();\n    delete newRace.id;\n    createNewWithId(\"races\", newRace, (id) => {\n      history.push(`/race-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"races\", filters, \"DnDTome_filtered_races.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={abilityScores}\n          sort={sort}\n          field={\"abilityScores\"}\n          label=\"Ability Scores\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => setSources(sources)}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRace()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RaceSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport Filter from \"../../../data/Filter\";\nimport RandomTable from \"../../../data/RandomTable\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst RandomTableSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/randomTable-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/eandomTable-overview}`);\n  };\n\n  const createNewRandomTable = () => {\n    let newRandomTable = new RandomTable();\n    delete newRandomTable.id;\n    createNewWithId(\"randomTables\", newRandomTable, (id) => {\n      history.push(`/randomTable-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"randomTables\", filters, \"DnDTome_filtered_randomTables.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewRandomTable()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default RandomTableSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Selection from \"../../../data/Selection\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst SelectionSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/selection-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/selection-overview}`);\n  };\n\n  const createNewSelection = () => {\n    let newSelection = new Selection();\n    delete newSelection.id;\n    createNewWithId(\"selections\", newSelection, (id) => {\n      history.push(`/selection-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"selections\", filters, \"DnDTome_filtered_selections.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSelection()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SelectionSearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\nimport {\n  reciveAttributeSelection,\n  createNewWithId,\n  exportFilteredFromTable,\n} from \"../../../services/DatabaseService\";\n\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n  faBookOpen,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MultipleSelectField from \"../../form_elements/MultipleSelectField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport CheckField from \"../../form_elements/CheckField\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Spell from \"../../../data/Spell\";\nimport {\n  FixedBar,\n  FieldGroup,\n  SearchBar,\n  CreateButton,\n  ExportButton,\n  LeftTooltip,\n} from \"../../SearchbarStyle\";\n\nconst SpellSearchBar = () => {\n  let history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  const [name, setName] = useState<string>(\"\");\n  const [school, setSchool] = useState<string[]>([]);\n  const [schoolList, setSchoolList] = useState<{ value: string; label: string }[]>([]);\n  const [level, setLevel] = useState<number[]>([]);\n  const [levelList, setLevelList] = useState<{ value: string; label: string }[]>([]);\n  const [ritual, setRitual] = useState<number>(0);\n  const [time, setTime] = useState<string>(\"\");\n  const [range, setRange] = useState<string>(\"\");\n  const [duration, setDuration] = useState<string>(\"\");\n  const [components, setComponents] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [classes, setClasses] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  useEffect(() => {\n    reciveAttributeSelection(\"spells\", \"school\", function (result) {\n      let schools = result.map((school) => {\n        if (school === \"\") {\n          return { value: school.toString(), label: \"Empty\" };\n        }\n        return { value: school.toString(), label: school.toString() };\n      });\n      setSchoolList(schools);\n    });\n    reciveAttributeSelection(\"spells\", \"level\", function (result) {\n      let levels = result.map((level) => {\n        if (level === \"\") {\n          return { value: level.toString(), label: \"Empty\" };\n        }\n        return { value: level.toString(), label: level.toString() };\n      });\n      setLevelList(levels);\n    });\n  }, []);\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (time !== \"\") {\n      newFilters = [...newFilters, new Filter(\"time\", time)];\n    }\n    if (range !== \"\") {\n      newFilters = [...newFilters, new Filter(\"range\", range)];\n    }\n    if (duration !== \"\") {\n      newFilters = [...newFilters, new Filter(\"duration\", duration)];\n    }\n    if (components !== \"\") {\n      newFilters = [...newFilters, new Filter(\"components\", components)];\n    }\n    if (text !== \"\") {\n      newFilters = [...newFilters, new Filter(\"text\", text)];\n    }\n    if (classes !== \"\") {\n      newFilters = [...newFilters, new Filter(\"classes\", classes)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n    if (school.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"school\", school)];\n    }\n    if (level.length !== 0) {\n      newFilters = [...newFilters, new Filter(\"level\", level)];\n    }\n    if (ritual) {\n      newFilters = [...newFilters, new Filter(\"ritual\", ritual)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/spell-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setLevel([]);\n      setSchool([]);\n      setRitual(0);\n      setTime(\"\");\n      setRange(\"\");\n      setDuration(\"\");\n      setComponents(\"\");\n      setText(\"\");\n      setClasses(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/spell-overview`);\n  };\n\n  const createNewSpell = () => {\n    let newSpell = new Spell();\n    delete newSpell.id;\n    createNewWithId(\"spells\", newSpell, (id) => {\n      history.push(`/spell-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"spells\", filters, \"DnDTome_filtered_spells.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <MultipleSelectField\n          options={schoolList}\n          label=\"School\"\n          onChange={(schools: string[]) => setSchool(schools)}\n        />\n        <FieldGroup>\n          <MultipleSelectField\n            options={levelList}\n            label=\"Level\"\n            onChange={(levels: string[]) =>\n              setLevel(\n                levels.map((level) => {\n                  return +level;\n                })\n              )\n            }\n          />\n          <CheckField\n            value={!!ritual}\n            label=\"Ritual\"\n            onChange={(ritual) => setRitual(ritual ? 1 : 0)}\n          />\n        </FieldGroup>\n        <StringSearchField\n          value={time}\n          sort={sort}\n          field={\"time\"}\n          label=\"Time\"\n          icon={faHistory}\n          onChange={(time: string, sort: { name: string; label: string; sort: number }) => {\n            setTime(time);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={range}\n          sort={sort}\n          field={\"range\"}\n          label=\"Range\"\n          icon={faPowerOff}\n          transform={{ rotate: 42 }}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setRange(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={duration}\n          sort={sort}\n          field={\"duration\"}\n          label=\"Duration\"\n          icon={faHourglassHalf}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setDuration(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={components}\n          sort={sort}\n          field={\"components\"}\n          label=\"Comp.\"\n          icon={faMortarPestle}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setComponents(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={classes}\n          sort={sort}\n          field={\"classes\"}\n          label=\"Classes\"\n          icon={faUser}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setClasses(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={text}\n          sort={sort}\n          field={\"text\"}\n          label=\"Text\"\n          icon={faBookOpen}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setText(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} rotation={90} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewSpell()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default SpellSearchBar;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from \"react-router\";\nimport World from \"../../../data/world/World\";\nimport Filter from \"../../../data/Filter\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\n\nimport { faSearch, faRedoAlt, faPlusCircle, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport StringField from \"../../form_elements/StringField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst WorldSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/world-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setOpen(false);\n    });\n    history.push(`/world-overview}`);\n  };\n\n  const createNewWorld = () => {\n    let newWorld = new World();\n    delete newWorld.id;\n    createNewWithId(\"worlds\", newWorld, (id) => {\n      history.push(`/world-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"worlds\", filters, \"DnDTome_filtered_worlds.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringField value={name} label=\"Name\" onChange={(name: string) => setName(name)} />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewWorld()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default WorldSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Filter from \"../../../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  faLink,\n  faSearch,\n  faRedoAlt,\n  faPlusCircle,\n  faFileExport,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport Class from \"../../../data/classes/Class\";\nimport { createNewWithId, exportFilteredFromTable } from \"../../../services/DatabaseService\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, ExportButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst ClassSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  const [filters, setFilters] = useState<Filter[]>([]);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [sources, setSources] = useState<string>(\"\");\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (sources !== \"\") {\n      newFilters = [...newFilters, new Filter(\"sources\", sources)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setFilters(newFilters);\n    setOpen(false);\n    history.push(`/classe-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setSources(\"\");\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/classe-overview}`);\n  };\n\n  const createNewClass = () => {\n    let newClass = new Class();\n    delete newClass.id;\n    createNewWithId(\"classes\", newClass, (id) => {\n      history.push(`/classe-detail/id/${id}`);\n    });\n  };\n\n  const exportFiltered = () => {\n    exportFilteredFromTable(\"classes\", filters, \"DnDTome_filtered_classes.json\");\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={sources}\n          sort={sort}\n          field={\"sources\"}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setSources(name);\n            setSort(sort);\n          }}\n        />\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewClass()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n      <ExportButton onClick={() => exportFiltered()}>\n        <FontAwesomeIcon icon={faFileExport} />\n        <LeftTooltip>Export filtered</LeftTooltip>\n      </ExportButton>\n    </>\n  );\n};\n\nexport default ClassSearchBar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport { createNewWithId } from \"../../../services/DatabaseService\";\nimport Filter from \"../../../data/Filter\";\nimport Book from \"../../../data/Book\";\n\nimport { faSearch, faRedoAlt, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport NumberField from \"../../form_elements/NumberField\";\nimport StringSearchField from \"../../form_elements/StringSearchField\";\nimport { FixedBar, SearchBar, CreateButton, LeftTooltip } from \"../../SearchbarStyle\";\n\nconst BookSearchBar = () => {\n  const [open, setOpen] = useState(false);\n  let history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [pages, setPages] = useState<number>(-1);\n\n  const [sort, setSort] = useState<{\n    name: string;\n    label: string;\n    sort: number;\n  }>({\n    name: \"\",\n    label: \"\",\n    sort: 0,\n  });\n\n  const search = () => {\n    let newFilters: Filter[] = [];\n    if (name !== \"\") {\n      newFilters = [...newFilters, new Filter(\"name\", name)];\n    }\n    if (tags !== \"\") {\n      newFilters = [...newFilters, new Filter(\"tags\", tags)];\n    }\n    if (pages !== -1) {\n      newFilters = [...newFilters, new Filter(\"cr\", pages)];\n    }\n\n    newFilters = newFilters.map((filter: Filter) => {\n      if (sort.name === filter.fieldName) {\n        return { ...filter, sort: sort.sort };\n      }\n      return filter;\n    });\n\n    setOpen(false);\n    history.push(`/book-overview?filter=${JSON.stringify(newFilters)}`);\n  };\n\n  const reset = () => {\n    ReactDOM.unstable_batchedUpdates(() => {\n      setName(\"\");\n      setTags(\"\");\n      setPages(-1);\n      setOpen(false);\n      setSort({\n        name: \"\",\n        label: \"\",\n        sort: 0,\n      });\n    });\n    history.push(`/book-overview}`);\n  };\n\n  const createNewBook = () => {\n    let newBook = new Book();\n    delete newBook.id;\n    createNewWithId(\"books\", newBook, (id) => {\n      history.push(`/book-detail/id/${id}`);\n    });\n  };\n\n  return (\n    <>\n      <FixedBar open={open}>\n        <StringSearchField\n          value={name}\n          sort={sort}\n          field={\"name\"}\n          label=\"Name\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setName(name);\n            setSort(sort);\n          }}\n        />\n        <StringSearchField\n          value={tags}\n          sort={sort}\n          field={\"tags\"}\n          label=\"Tags\"\n          onChange={(name: string, sort: { name: string; label: string; sort: number }) => {\n            setTags(name);\n            setSort(sort);\n          }}\n        />\n        <NumberField value={pages} label=\"Pages\" onChange={(pages: number) => setPages(pages)} />\n\n        <IconButton onClick={() => search()} icon={faSearch} />\n        <IconButton onClick={() => reset()} icon={faRedoAlt} />\n\n        <SearchBar onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchBar>\n      </FixedBar>\n      <CreateButton onClick={() => createNewBook()}>\n        <FontAwesomeIcon icon={faPlusCircle} />\n        <LeftTooltip>Add new</LeftTooltip>\n      </CreateButton>\n    </>\n  );\n};\n\nexport default BookSearchBar;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Book from \"../../../data/Book\";\n\nimport { GiResize } from \"react-icons/gi\";\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  book: Book;\n}\n\nconst BookTile = ({ book }: $Props) => {\n  const getPicture = useCallback(() => {\n    if (book !== undefined) {\n      if (book.cover === \"\" || book.cover === null) {\n        return \"\";\n      }\n      return book.cover;\n    }\n    return \"\";\n  }, [book]);\n\n  return (\n    <Tile to={\"/book-detail/id/\" + book.id}>\n      {getPicture() !== \"\" ? <Image pic={getPicture()}></Image> : \"\"}\n      <PropWrapper>\n        <Name>\n          <b>{book.name}</b>\n        </Name>\n\n        <PropRowWrapper>\n          <RowProp>\n            <GiResize />\n            {book.pages}\n          </RowProp>\n          <RowProp>\n            <FontAwesomeIcon icon={faTags} />\n            {book.tags &&\n              book.tags.map((tag: string, index: number) => <Tag key={index}>{tag}</Tag>)}\n          </RowProp>\n        </PropRowWrapper>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default BookTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  font-size: 14px;\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return (\n      <ImgContainer>\n        <ImageElm src={pic}></ImageElm>\n      </ImgContainer>\n    );\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImgContainer = styled.div`\n  margin: 5px;\n`;\nconst ImageElm = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`;\nconst Empty = styled.div``;\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 10px;\n  padding: 5px;\n  margin-top: -5px;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../data/RandomTable\";\n\nimport { GiResize } from \"react-icons/gi\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableTile = ({ randomTable }: $Props) => {\n  return (\n    <Tile to={\"/randomTable-detail/id/\" + randomTable.id}>\n      <PropWrapper>\n        <Name>\n          <b>{randomTable.name}</b>\n        </Name>\n\n        <PropRowWrapper>\n          <RowProp>\n            <GiResize />\n            Rows: {randomTable.rows.length}\n          </RowProp>\n        </PropRowWrapper>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default RandomTableTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n  text-decoration: none;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  flex: 1 1 auto;\n  padding: 10px;\n  margin: 5px 5px 5px 0;\n  color: ${({ theme }) => theme.tile.headerColor};\n  font-size: 14px;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst PropRowWrapper = styled(PropWrapper)`\n  flex-wrap: nowrap;\n  padding: 0 0 5px 0;\n  flex: 1 1 auto;\n  width: 100%;\n`;\n\nconst RowProp = styled.div`\n  height: 12px;\n  margin: 0 5px 0 0;\n  flex: 1 1 auto;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n}\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Selection from \"../../../data/Selection\";\n\ninterface $Props {\n  selection: Selection;\n}\n\nconst SelectionTile = ({ selection }: $Props) => {\n  return (\n    <Tile to={\"/selection-detail/id/\" + selection.id}>\n      <Name>\n        <b>{selection.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <WideProp>Options: {selection.selectionOptions.length}</WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default SelectionTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport styled from \"styled-components\";\nimport Filter from \"../../data/Filter\";\nimport IEntity from \"../../data/IEntity\";\nimport { reciveAllFiltered } from \"../../services/DatabaseService\";\n\nimport { LoadingSpinner } from \"../Loading\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport CampaignSearchBar from \"../entities/campaigns/CampaignSearchBar\";\nimport CharSearchBar from \"../entities/chars/CharSearchBar\";\nimport EncounterSearchBar from \"../entities/encounters/EncounterSearchBar\";\nimport EventSearchBar from \"../entities/events/EventSearchBar\";\nimport GearSearchBar from \"../entities/gear/GearSearchBar\";\nimport GroupSearchBar from \"../entities/groups/GroupSearchBar\";\nimport ItemSearchBar from \"../entities/items/ItemSearchBar\";\nimport LocationSearchBar from \"../entities/locations/LocationSearchBar\";\nimport MonsterSearchBar from \"../entities/monsters/MonsterSearchBar\";\nimport NpcSearchBar from \"../entities/npcs/NpcSearchBar\";\nimport QuestSearchBar from \"../entities/quests/QuestSearchBar\";\nimport RaceSearchBar from \"../entities/races/RaceSearchBar\";\nimport RandomTableSearchBar from \"../entities/random_tables/RandomTableSearchBar\";\nimport SelectionSearchBar from \"../entities/selections/SelectionSearchBar\";\nimport SpellSearchBar from \"../entities/spells/SpellSearchBar\";\nimport WorldSearchBar from \"../entities/worlds/WorldSearchBar\";\nimport ClassSearchBar from \"../entities/classes/ClassSearchBar\";\nimport BookSearchBar from \"../entities/library/BookSearchBar\";\n\nimport CampaignTile from \"../entities/campaigns/CampaignTile\";\nimport CharTile from \"../entities/chars/CharTile\";\nimport ClassTile from \"../entities/classes/ClassTile\";\nimport EncounterTile from \"../entities/encounters/EncounterTile\";\nimport EventTile from \"../entities/events/EventTile\";\nimport GearTile from \"../entities/gear/GearTile\";\nimport GroupTile from \"../entities/groups/GroupTile\";\nimport ItemTile from \"../entities/items/ItemTile\";\nimport BookTile from \"../entities/library/BookTile\";\nimport LocationTile from \"../entities/locations/LocationTile\";\nimport MonsterTile from \"../entities/monsters/MonsterTile\";\nimport NpcTile from \"../entities/npcs/NpcTile\";\nimport QuestTile from \"../entities/quests/QuestTile\";\nimport RaceTile from \"../entities/races/RaceTile\";\nimport RandomTableTile from \"../entities/random_tables/RandomTableTile\";\nimport SelectionTile from \"../entities/selections/SelectionTile\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport WorldTile from \"../entities/worlds/WorldTile\";\nimport { useQuery } from \"../../hooks/QueryHook\";\n\nconst EntityOverview = ({ match }: RouteComponentProps) => {\n  const rawFilters = useQuery().get(\"filter\");\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [filters, setFilter] = useState<Filter[]>([]);\n  const [allEntitys, setAllEntitys] = useState<IEntity[]>([]);\n  const [entitys, setEntitys] = useState<IEntity[]>([]);\n  const [scrollParam, setParam] = useState<{\n    start: number;\n    end: number;\n    hasMore: boolean;\n  }>({\n    start: 100,\n    end: 120,\n    hasMore: true,\n  });\n\n  useEffect(() => {\n    if (rawFilters !== null) setFilter(JSON.parse(rawFilters));\n    else setFilter([]);\n    setAllEntitys([]);\n    setEntitys([]);\n    setParam({\n      start: 100,\n      end: 120,\n      hasMore: true,\n    });\n    let newMatch: string = match.path\n      .split(\"/\")\n      .filter((match: string) => match.includes(\"-overview\"))[0]\n      .replaceAll(\"-overview\", \"\");\n    setEntityName(newMatch);\n  }, [match, rawFilters]);\n\n  useEffect(() => {\n    if (entityName !== \"\")\n      reciveAllFiltered(entityName + \"s\", filters, (results: any[]) => {\n        setAllEntitys(results);\n        setEntitys(results.slice(0, 100));\n        if (results.length === 0) {\n          setParam({\n            start: 0,\n            end: 0,\n            hasMore: false,\n          });\n        }\n      });\n  }, [filters, entityName]);\n\n  const fetchMoreData = () => {\n    if (entitys.length === allEntitys.length) {\n      setParam({\n        start: scrollParam.start + 20,\n        end: scrollParam.end + 20,\n        hasMore: false,\n      });\n      return;\n    }\n    setEntitys((s) => s.concat(allEntitys.slice(scrollParam.start, scrollParam.end)));\n    setParam({\n      start: scrollParam.start + 20,\n      end: scrollParam.end + 20,\n      hasMore: true,\n    });\n  };\n\n  const searchbars = {\n    campaign: CampaignSearchBar,\n    classe: ClassSearchBar,\n    event: EventSearchBar,\n    gear: GearSearchBar,\n    group: GroupSearchBar,\n    item: ItemSearchBar,\n    book: BookSearchBar,\n    location: LocationSearchBar,\n    monster: MonsterSearchBar,\n    npc: NpcSearchBar,\n    quest: QuestSearchBar,\n    race: RaceSearchBar,\n    randomTable: RandomTableSearchBar,\n    selection: SelectionSearchBar,\n    spell: SpellSearchBar,\n    world: WorldSearchBar,\n    char: CharSearchBar,\n    encounter: EncounterSearchBar,\n  };\n\n  const tiles = {\n    campaign: CampaignTile,\n    classe: ClassTile,\n    event: EventTile,\n    gear: GearTile,\n    group: GroupTile,\n    item: ItemTile,\n    book: BookTile,\n    location: LocationTile,\n    monster: MonsterTile,\n    npc: NpcTile,\n    quest: QuestTile,\n    race: RaceTile,\n    randomTable: RandomTableTile,\n    selection: SelectionTile,\n    spell: SpellTile,\n    world: WorldTile,\n    char: CharTile,\n    encounter: EncounterTile,\n  };\n\n  return (\n    <>\n      {entityName !== \"\" && React.createElement(searchbars[entityName], {})}\n      <div id=\"scrollable\" style={{ width: \"100%\" }}>\n        <EntityContainer\n          dataLength={entitys.length}\n          next={fetchMoreData}\n          hasMore={scrollParam.hasMore}\n          loader={<LoadingSpinner />}\n        >\n          {entityName !== \"\" &&\n            entitys.length > 0 &&\n            entitys!.map((entity: IEntity, index: number) => {\n              return React.createElement(tiles[entityName], {\n                key: index,\n                [entityName]: entity,\n              });\n            })}\n        </EntityContainer>\n      </div>\n    </>\n  );\n};\n\nexport default EntityOverview;\n\nconst EntityContainer = styled(InfiniteScroll)`\n  margin-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n","import { useLocation } from \"react-router-dom\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","export default class Filter {\n  fieldName: string;\n  value: string | boolean | number | string[] | boolean[] | number[];\n  sort: number;\n  constructor(\n    filedName: string,\n    value: string | boolean | number | string[] | boolean[] | number[],\n    sort?: number\n  ) {\n    this.fieldName = filedName;\n    this.value = value;\n    this.sort = sort || 0;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}