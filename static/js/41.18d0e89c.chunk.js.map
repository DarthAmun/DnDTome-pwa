{"version":3,"sources":["components/form_elements/EnumField.tsx","data/chars/ClassSet.tsx","data/chars/Skills.tsx","data/chars/Saves.tsx","data/chars/Money.tsx","data/chars/RaceSet.tsx","data/chars/Char.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","components/entities/chars/lab/CharLabGeneral.tsx","components/entities/chars/lab/CharLabClass.tsx","components/entities/chars/lab/CharLabRace.tsx","components/entities/chars/lab/CharLabAbilities.tsx","components/entities/chars/lab/CharLabEquipment.tsx","components/entities/chars/lab/CharLab.tsx","components/form_elements/NumberField.tsx","components/general_elements/TabBar.tsx","components/form_elements/AutoStringField.tsx","components/form_elements/CheckField.tsx"],"names":["EnumField","options","value","label","icon","transform","onChange","handleChange","option","undefined","Field","LabelText","Icon","StyledSelect","classNamePrefix","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","Select","input","buttons","ClassSet","classe","level","subclasse","this","isClassSet","arg","classeCheck","levelCheck","subclasseCheck","Skills","acrobaticsProf","animalHandlingProf","arcanaProf","athleticsProf","deceptionProf","historyProf","insightProf","intimidationProf","investigationProf","medicineProf","natureProf","perceptionProf","performanceProf","persuasionProf","religionProf","sleightOfHandProf","stealthProf","survivalProf","Saves","strSaveProf","dexSaveProf","conSaveProf","intSaveProf","wisSaveProf","chaSaveProf","Money","copper","silver","electrum","gold","platinum","RaceSet","race","subrace","Char","id","name","player","campaign","pic","classes","background","spells","spellSlots","activeSelections","currencyBonis","items","monsters","ac","hp","currentHp","init","speed","str","dex","con","int","wis","cha","saves","actions","profsLangs","senses","money","skills","spellNotes","alignment","inspiration","castingHit","castingDC","isChar","nameCheck","playerCheck","campaignCheck","picCheck","raceCheck","subraceCheck","isRaceSet","backgroundCheck","acCheck","hpCheck","currentHpCheck","initCheck","classesCheck","Array","isArray","IconButton","floatLeft","disabled","onClick","SimpleButton","left","DisabledSimpleButton","height","TextButton","text","button","hoverColor","StringField","placeholder","Input","type","e","target","LinkCheck","useState","loading","setLoading","entitiyFound","setEntity","useEffect","newType","recivePromiseByAttributeCount","then","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","FormatedText","formatedText","setFormatedText","history","useHistory","cut","cutStart","cutEnd","substr","formatLink","useCallback","includes","parts","split","formattedParts","forEach","part","index","codePart","linkParts","link","push","TextPart","key","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","span","backgroundColorLink","th","td","CharLabGeneral","char","completed","CenterWrapper","CharView","AutoStringField","optionTable","faCheckCircle","length","CharLabClass","setClasses","changeClassLevel","oldClassSet","classSet","changeClass","changeClassSubclass","subclass","reciveAllFiltered","fieldName","sort","results","PropWrapper","NumberField","faTrash","oldClass","newClassList","filter","removeClass","filters","faPlus","addNewClass","Text","PropTitle","proficiencies","equipment","CharLabRace","setRace","setSubrace","abilityScores","traits","trait","TraitWrapper","TraitName","TraitLevel","TraitText","CharLabAbilities","prof","setProf","calcLevel","featureSets","featureSet","profBonus","formatProf","faMinus","faAngleUp","faAngleDoubleUp","formatScore","score","Math","floor","calcSkill","skillProf","stat","changeProf","profName","profValue","changeSaveProf","PropWithProf","PropText","PropProf","CharLabEquipment","onChangeItem","newItem","i","origin","onChangeItemAttribute","item","Container","CheckField","attuned","attunment","attribute","charAt","toUpperCase","slice","oldItem","newItemList","removeItem","addNewItem","CharLab","activeTab","setTab","newChar","updateChar","completedGeneral","setGeneral","completedClass","setClass","completedRace","completedAbilities","setAbilities","completedEquipment","setEquipment","recalcClasses","a","bonis","fullClassList","classList","recivePromiseByAttribute","Promise","all","class","boni","isCurrency","max","spellslots","slots","updatedBonis","newBoni","updatedOldBonis","old","from","updatedSpellSlots","newSpellSlots","updatedOldSlots","updatedChar","TabBar","children","tab","View","nextTab","Prop","faEdit","saveWithCallback","result","step","Bar","child","Tab","isActive","props","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","itemList","reciveAllFilteredPromise","o","concat","data","onSearch","searchTerm","newOptions","Options","opt","Option","defaultChecked","checked","Checkmark"],"mappings":"i0CAkDeA,IAhCG,SAAC,GAOJ,IANbC,EAMY,EANZA,QACAC,EAKY,EALZA,MACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,KACAC,EAEY,EAFZA,UACAC,EACY,EADZA,SAGMC,EAAe,SAACC,GACL,OAAXA,QAA8BC,IAAXD,GACrBF,EAASE,EAAON,QAIpB,OACE,kBAACQ,EAAD,KACE,kBAACC,EAAD,KACGP,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,GAE5D,kBAACU,EAAD,CACEC,gBAAgB,eAChBZ,MAAOA,EACPD,QAASA,EACTK,SAAU,SAACE,GAAD,OACRD,EAAaC,QASvB,IAAME,EAAQK,IAAOZ,MAAV,KACA,qBAAGa,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAY1CP,EAAOG,YAAOK,IAAPL,CAAH,KAMC,qBAAGC,MAAkBK,KAAKC,aAG/BX,EAAYI,IAAOQ,IAAV,KAITV,EAAeE,YAAOS,IAAPT,CAAH,KAMI,qBAAGC,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,SAIzB,qBAAGF,MAAkBU,QAAQR,SAGlB,qBAAGF,MAAkBS,MAAMN,mBAK3B,qBAAGH,MAAkBS,MAAMN,mBAGzB,qBAAGH,MAAkBU,QAAQP,mBACxC,qBAAGH,MAAkBU,QAAQR,SAGlB,qBAAGF,MAAkBU,QAAQP,mBACxC,qBAAGH,MAAkBU,QAAQR,U,iHC1GvBS,EAKjB,WACIC,EACAC,EACAC,GACD,yBARHF,YAQE,OAPFC,WAOE,OANFC,eAME,EACEC,KAAKF,MAAQA,EACbE,KAAKH,OAASA,EACdG,KAAKD,UAAYA,GAIhB,SAASE,EAAWC,GACzB,IAAMC,OAA6BzB,IAAfwB,EAAIL,QAA6C,iBAAdK,EAAIL,OACrDO,OAA2B1B,IAAdwB,EAAIJ,OAA2C,iBAAbI,EAAIJ,MACnDO,OAAmC3B,IAAlBwB,EAAIH,WAAmD,iBAAjBG,EAAIH,UACjE,OACEG,GACAE,GACAD,GACAE,I,iHCxBeC,EAoBnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAtCHjB,oBAsCE,OArCFC,wBAqCE,OApCFC,gBAoCE,OAnCFC,mBAmCE,OAlCFC,mBAkCE,OAjCFC,iBAiCE,OAhCFC,iBAgCE,OA/BFC,sBA+BE,OA9BFC,uBA8BE,OA7BFC,kBA6BE,OA5BFC,gBA4BE,OA3BFC,oBA2BE,OA1BFC,qBA0BE,OAzBFC,oBAyBE,OAxBFC,kBAwBE,OAvBFC,uBAuBE,OAtBFC,iBAsBE,OArBFC,kBAqBE,EACAxB,KAAKO,eAAiBA,GAAkB,EACxCP,KAAKQ,mBAAqBA,GAAsB,EAChDR,KAAKS,WAAaA,GAAc,EAChCT,KAAKU,cAAgBA,GAAiB,EACtCV,KAAKW,cAAgBA,GAAiB,EACtCX,KAAKY,YAAcA,GAAe,EAClCZ,KAAKa,YAAcA,GAAe,EAClCb,KAAKc,iBAAmBA,GAAoB,EAC5Cd,KAAKe,kBAAoBA,GAAqB,EAC9Cf,KAAKgB,aAAeA,GAAgB,EACpChB,KAAKiB,WAAaA,GAAc,EAChCjB,KAAKkB,eAAiBA,GAAkB,EACxClB,KAAKmB,gBAAkBA,GAAmB,EAC1CnB,KAAKoB,eAAiBA,GAAkB,EACxCpB,KAAKqB,aAAeA,GAAgB,EACpCrB,KAAKsB,kBAAoBA,GAAqB,EAC9CtB,KAAKuB,YAAcA,GAAe,EAClCvB,KAAKwB,aAAeA,GAAgB,G,ICzDnBC,EAQnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAdHL,iBAcE,OAbFC,iBAaE,OAZFC,iBAYE,OAXFC,iBAWE,OAVFC,iBAUE,OATFC,iBASE,EACA/B,KAAK0B,YAAcA,GAAe,EAClC1B,KAAK2B,YAAcA,GAAe,EAClC3B,KAAK4B,YAAcA,GAAe,EAClC5B,KAAK6B,YAAcA,GAAe,EAClC7B,KAAK8B,YAAcA,GAAe,EAClC9B,KAAK+B,YAAcA,GAAe,G,ICrBjBC,EAOnB,WACEC,EACAC,EACAC,EACAC,EACAC,GACC,yBAZHJ,YAYE,OAXFC,YAWE,OAVFC,cAUE,OATFC,UASE,OARFC,cAQE,EACArC,KAAKiC,OAASA,GAAU,EACxBjC,KAAKkC,OAASA,GAAU,EACxBlC,KAAKmC,SAAWA,GAAY,EAC5BnC,KAAKoC,KAAOA,GAAQ,EACpBpC,KAAKqC,SAAWA,GAAY,G,aClBXC,EAInB,WAAYC,EAAeC,GAAmB,yBAH9CD,UAG6C,OAF7CC,aAE6C,EAC3CxC,KAAKuC,KAAOA,GAAQ,GACpBvC,KAAKwC,QAAUA,GAAW,I,ICCTC,EAqDnB,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAR,EACAS,EACAC,EACAC,EACAC,EAWAC,EACAC,EAMAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACC,yBAxGHlC,QAwGE,OAvGFC,UAuGE,OAtGFC,YAsGE,OArGFC,cAqGE,OApGFC,SAoGE,OAnGFC,aAmGE,OAlGFR,UAkGE,OAjGFS,gBAiGE,OAhGFC,YAgGE,OA/FFC,gBA+FE,OA9FFC,sBA8FE,OAnFFC,mBAmFE,OAlFFC,WAkFE,OA5EFC,cA4EE,OA3EFC,QA2EE,OA1EFC,QA0EE,OAzEFC,eAyEE,OAxEFC,UAwEE,OAvEFC,WAuEE,OAtEFC,SAsEE,OArEFC,SAqEE,OApEFC,SAoEE,OAnEFC,SAmEE,OAlEFC,SAkEE,OAjEFC,SAiEE,OAhEFC,WAgEE,OA/DFC,aA+DE,OA9DFC,gBA8DE,OA7DFC,YA6DE,OA5DFC,WA4DE,OA3DFC,YA2DE,OA1DFC,gBA0DE,OAzDFC,eAyDE,OAxDFC,iBAwDE,OAvDFC,gBAuDE,OAtDFC,eAsDE,EACA5E,KAAK0C,GAAKA,IAAO,EACjB1C,KAAK2C,KAAOA,GAAQ,GACpB3C,KAAK4C,OAASA,GAAU,GACxB5C,KAAK6C,SAAWA,GAAY,GAC5B7C,KAAK8C,IAAMA,GAAO,GAClB9C,KAAK+C,QAAUA,GAAW,GAC1B/C,KAAKuC,KAAOA,GAAQ,IAAID,EACxBtC,KAAKgD,WAAaA,GAAc,GAChChD,KAAKiD,OAASA,GAAU,GACxBjD,KAAKkD,WAAaA,GAAc,GAChClD,KAAKmD,iBAAmBA,GAAoB,GAC5CnD,KAAKoD,cAAgBA,GAAiB,GACtCpD,KAAKqD,MAAQA,GAAS,GACtBrD,KAAKsD,SAAWA,GAAY,GAC5BtD,KAAKuD,GAAKA,GAAM,EAChBvD,KAAKwD,GAAKA,GAAM,EAChBxD,KAAKyD,UAAYA,GAAa,EAC9BzD,KAAK0D,KAAOA,GAAQ,EACpB1D,KAAK2D,MAAQA,GAAS,GACtB3D,KAAK4D,IAAMA,GAAO,EAClB5D,KAAK6D,IAAMA,GAAO,EAClB7D,KAAK8D,IAAMA,GAAO,EAClB9D,KAAK+D,IAAMA,GAAO,EAClB/D,KAAKgE,IAAMA,GAAO,EAClBhE,KAAKiE,IAAMA,GAAO,EAClBjE,KAAKkE,MAAQA,GAAS,IAAIzC,EAC1BzB,KAAKmE,QAAUA,GAAW,GAC1BnE,KAAKoE,WAAaA,GAAc,GAChCpE,KAAKqE,OAASA,GAAU,GACxBrE,KAAKsE,MAAQA,GAAS,IAAItC,EAC1BhC,KAAKuE,OAASA,GAAU,IAAIjE,EAC5BN,KAAKwE,WAAaA,GAAc,GAChCxE,KAAKyE,UAAYA,GAAa,GAC9BzE,KAAK0E,YAAcA,GAAe,EAClC1E,KAAK2E,WAAaA,GAAc,EAChC3E,KAAK4E,UAAYA,GAAa,GAI3B,SAASC,EAAO3E,GACrB,IAAM4E,OAAyBpG,IAAbwB,EAAIyC,MAAyC,iBAAZzC,EAAIyC,KACjDoC,OAA6BrG,IAAfwB,EAAI0C,QAA6C,iBAAd1C,EAAI0C,OACrDoC,OAAiCtG,IAAjBwB,EAAI2C,UAAiD,iBAAhB3C,EAAI2C,SACzDoC,OAAuBvG,IAAZwB,EAAI4C,KAAuC,iBAAX5C,EAAI4C,IAC/CoC,OAAyBxG,IAAbwB,EAAIqC,MDnJjB,SAAmBrC,GACxB,IAAMgF,OAAyBxG,IAAbwB,EAAIqC,MAAyC,iBAAZrC,EAAIqC,KACjD4C,OACYzG,IAAhBwB,EAAIsC,SAA+C,iBAAftC,EAAIsC,QAC1C,OAAOtC,GAAOgF,GAAaC,EC+IiBC,CAAUlF,EAAIqC,MACpD8C,OAAqC3G,IAAnBwB,EAAI8C,YAAqD,iBAAlB9C,EAAI8C,WAC7DsC,OAAqB5G,IAAXwB,EAAIqD,IAAqC,iBAAVrD,EAAIqD,GAC7CgC,OAAqB7G,IAAXwB,EAAIsD,IAAqC,iBAAVtD,EAAIsD,GAC7CgC,OAAmC9G,IAAlBwB,EAAIuD,WAAmD,iBAAjBvD,EAAIuD,UAC3DgC,OAAyB/G,IAAbwB,EAAIwD,MAAyC,iBAAZxD,EAAIwD,KACjDgC,OACYhH,IAAhBwB,EAAI6C,SAAyB4C,MAAMC,QAAQ1F,EAAI6C,UAAY9C,YAAWC,EAAI6C,QAAQ,IACpF,OACE7C,GACA4E,GACAC,GACAC,GACAC,GACAC,GACAG,GACAC,GACAC,GACAC,GACAC,GACAC,I,oyBCjJWG,IAjBI,SAAC,GAA+D,IAA7DxH,EAA4D,EAA5DA,KAAMyH,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,SAAUzH,EAAiC,EAAjCA,UAAW0H,EAAsB,EAAtBA,QAC1D,OACE,qCACID,GACA,kBAACE,EAAD,CAAcC,KAAMJ,EAAWE,QAASA,GACtC,kBAACnH,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,KAGhCyH,GACC,kBAACI,EAAD,KACE,kBAACtH,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,OAavC,IAAM2H,EAAejH,IAAOQ,IAAV,KACP,qBAAGP,MAAkBU,QAAQR,SAClB,qBAAGF,MAAkBU,QAAQP,mBAKvC,qBAAGH,MAAkBU,QAAQyG,UACxB,qBAAGnH,MAAkBU,QAAQyG,UACnC,qBAAGF,KAAmB,OAAS,WAkBpCC,EAAuBnH,YAAOiH,EAAPjH,CAAH,KACf,qBAAGC,MAAkBU,QAAQP,mBAClB,qBAAGH,MAAkBU,QAAQR,SAI7CN,EAAOG,YAAOK,IAAPL,CAAH,M,gxBChDKqH,IARI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMjI,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWyH,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QACrD,OACE,kBAACC,EAAD,CAAcD,QAASA,EAASD,SAAUA,GACvC1H,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DgI,IAOhE,IAAML,EAAejH,IAAOuH,OAAV,KACP,qBAAGtH,MAAkBU,QAAQR,SAClB,qBAAGF,MAAkBU,QAAQP,mBAGvC,qBAAGH,MAAkBU,QAAQyG,UACxB,qBAAGnH,MAAkBU,QAAQyG,UAajC,qBAAGnH,MAAkBU,QAAQ6G,cAIlB,qBAAGvH,MAAkBU,QAAQoG,YAS/ClH,EAAOG,YAAOK,IAAPL,CAAH,M,u9BC3BKyH,IAdK,SAAC,GAAD,IAAGtI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOsI,EAAjB,EAAiBA,YAAarI,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,UAAWC,EAA/C,EAA+CA,SAA/C,OAClB,kBAACI,EAAD,KACE,kBAACC,EAAD,KACGP,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,GAE5D,kBAACuI,EAAD,CACEC,KAAK,OACLzI,MAAOA,EACPI,SAAU,SAACsI,GAAD,OAAOtI,EAASsI,EAAEC,OAAO3I,QACnCuI,YAAaA,MAOnB,IAAM/H,EAAQK,IAAOZ,MAAV,KACA,qBAAGa,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CP,EAAOG,YAAOK,IAAPL,CAAH,KAMC,qBAAGC,MAAkBK,KAAKC,aAG/BX,EAAYI,IAAOQ,IAAV,KAITmH,EAAQ3H,IAAOU,MAAV,KAMW,qBAAGT,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,U,wIC6BvB4H,EAnEG,SAAC,GAA4B,IAA1BH,EAAyB,EAAzBA,KAAMjE,EAAmB,EAAnBA,KAAmB,EACdqE,oBAAkB,GADJ,mBACrCC,EADqC,KAC5BC,EAD4B,OAEVF,oBAAkB,GAFR,mBAErCG,EAFqC,KAEvBC,EAFuB,KAI5CC,qBAAU,WACR,IAAIC,EAAUV,EAAO,IACR,UAATA,GAA6B,aAATA,IAAqBU,EAAUV,EAAO,MAC9DW,YAA8BD,EAAS,OAAQ3E,GAAM6E,MAAK,SAACC,GACzDL,EAAUK,EAAQ,GAClBP,GAAW,QAEZ,CAACN,EAAMjE,IA+CV,OACE,oCACGsE,GAAW,kBAAC,IAAD,OACVA,IAAYE,GAAgB,kBAAC,IAAD,OAC5BF,GAAWE,GAAgB,oCAjDd,SAACP,GAClB,OAAQA,GACN,IAAK,QACH,OAAO,kBAAC,IAAD,CAAiBvI,KAAMqJ,MAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACL,IAAK,UACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACL,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,CAAiBrJ,KAAMsJ,MAChC,IAAK,UACH,OAAO,kBAAC,IAAD,CAAiBtJ,KAAMuJ,MAChC,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,CAAiBvJ,KAAMwJ,MAChC,IAAK,MACH,OAAO,kBAAC,IAAD,MACT,IAAK,cACH,OAAO,kBAAC,IAAD,CAAiBxJ,KAAMyJ,OAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,QACE,MAAO,IAQuBC,CAAWnB,M,ysBC2BlCoB,IA/GM,SAAC,GAAsB,IAApB1B,EAAmB,EAAnBA,KAAmB,EACDU,qBADC,mBAClCiB,EADkC,KACpBC,EADoB,KAErCC,EAAUC,cAERC,EAAM,SAACzE,EAAa0E,EAAkBC,GAC1C,OAAO3E,EAAI4E,OAAO,EAAGF,GAAY1E,EAAI4E,OAAOD,EAAS,IAGjDE,EAAaC,uBACjB,SAACpC,GACC,QAAa5H,IAAT4H,EAAoB,CACtB,GAAIA,EAAKqC,SAAS,OAASrC,EAAKqC,SAAS,MAAO,CAC9C,IAAMC,EAAQtC,EAAKuC,MAAM,MACrBC,EAAwB,GAkB5B,OAjBAF,EAAMG,SAAQ,SAACC,EAAcC,GAC3B,GAAID,EAAKL,SAAS,MAAO,CACvB,IAAMO,EAAqBF,EAAKH,MAAM,MAChCM,EAAsBD,EAAS,GAAGL,MAAM,KACxCO,EAAe,IAAMD,EAAU,GAAK,gBAAkBA,EAAU,GACtEL,EAAeO,KACb,kBAACC,EAAD,CAAUC,IAAKN,GACb,kBAACO,EAAD,CAAMxD,QAAS,kBAAMmC,EAAQkB,KAAKD,KAChC,kBAAC,EAAD,CAAWxC,KAAMuC,EAAU,GAAIxG,KAAMwG,EAAU,KADjD,IACyDA,EAAU,IAEnE,kBAACG,EAAD,KAAWJ,EAAS,UAIX,KAATF,GAAaF,EAAeO,KAAK,kBAACC,EAAD,CAAUC,IAAKN,GAAQD,OAGzD,oCAAGF,GAEV,OAAO,kBAACQ,EAAD,KAAWhD,MAIxB,CAAC6B,IAGGsB,EAAcf,uBAClB,SAACgB,GACC,GAAIA,EAASf,SAAS,aAAc,CAClC,IAAMgB,EAAkBrD,EAAKuC,MAAM,aAC7Be,EAAsBD,EAAM,GAAGd,MAAM,MACvCgB,GAAS,EACb,OACE,oCACGpB,EAAWkB,EAAM,IAClB,+BACE,+BACGC,EAAUE,KAAI,SAACC,EAAad,GAC3B,GAAIc,EAAIpB,SAAS,KAAM,CACrB,GAAIkB,EAAQ,CACVA,GAAS,EACT,IAAMG,EAAQD,EAAIlB,MAAM,KACxB,OACE,wBAAIU,IAAKN,GACNe,EAAMF,KAAI,SAACG,EAAchB,GACxB,OAAO,kBAACiB,EAAD,CAAeX,IAAKN,GAAQgB,OAKzC,IAAMD,EAAQD,EAAIlB,MAAM,KACxB,OACE,wBAAIU,IAAKN,GACNe,EAAMF,KAAI,SAACG,EAAchB,GACxB,OAAO,kBAACkB,EAAD,CAAWZ,IAAKN,GAAQR,EAAWwB,QAMlD,OAAO,0CAKdxB,EAAWkB,EAAM,KAItB,OAAOlB,EAAWiB,KAGtB,CAACpD,EAAMmC,IAGH2B,EAAa1B,uBACjB,SAACgB,GACC,KAAOA,EAASf,SAAS,OAAO,CAC9B,IAAML,EAAWoB,EAASW,QAAQ,MAC5B9B,EAASmB,EAASW,QAAQ,MAAQ,EACxCX,EAAWrB,EAAIqB,EAAUpB,EAAUC,GAErC,OAAOkB,EAAYC,KAErB,CAACD,IAUH,OAPApC,qBAAU,WACR,QAAa3I,IAAT4H,EAAoB,CACtB,IAAI2B,EAAemC,EAAW9D,GAC9B4B,EAAgBD,MAEjB,CAAC3B,EAAM6B,EAASiC,IAEZ,oCAAGnC,IA5GZ,IAiHMuB,EAAOxK,IAAOsL,KAAV,KAEY,qBAAGrL,MAAkBC,KAAKqL,uBAGrC,qBAAGtL,MAAkBC,KAAKE,mBAO/BkK,EAAWtK,IAAOsL,KAAV,KAIRJ,EAAgBlL,IAAOwL,GAAV,KACG,qBAAGvL,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,SAKhCgL,EAAYnL,IAAOyL,GAAV,KACO,qBAAGxL,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,U,irBCpItC,IAmCeuL,EAnCQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMpM,EAAkC,EAAlCA,SAAUqM,EAAwB,EAAxBA,UACxC,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACrE,EAAA,EAAD,CACEtI,MAAOwM,EAAKhI,KACZvE,MAAM,SACNG,SAAU,SAACoE,GAAD,OAAUpE,EAAS,2BAAKoM,GAAN,IAAYhI,KAAMA,QAEhD,kBAAC8D,EAAA,EAAD,CACEtI,MAAOwM,EAAK/H,OACZxE,MAAM,WACNG,SAAU,SAACqE,GAAD,OAAYrE,EAAS,2BAAKoM,GAAN,IAAY/H,OAAQA,QAEpD,kBAACmI,EAAA,EAAD,CACEC,YAAa,YACb7M,MAAOwM,EAAK9H,SACZzE,MAAM,WACNG,SAAU,SAACsE,GAAD,OAActE,EAAS,2BAAKoM,GAAN,IAAY9H,SAAUA,QAExD,kBAAC4D,EAAA,EAAD,CACEtI,MAAOwM,EAAK7H,IACZ1E,MAAM,UACNG,SAAU,SAACuE,GAAD,OAASvE,EAAS,2BAAKoM,GAAN,IAAY7H,IAAKA,QAE9C,kBAAC+C,EAAA,EAAD,CACExH,KAAM4M,IACNlF,WAAY4E,GAAQA,EAAKhI,KAAKuI,OAAS,GAAKP,EAAK/H,OAAOsI,OAAS,GACjElF,QAAS,kBAAM4E,GAAU,EAAM,eASnCC,EAAgB7L,IAAOQ,IAAV,KASbsL,EAAW9L,IAAOQ,IAAV,KACH,qBAAGP,MAAkBC,KAAKC,S,gnCC1CrC,IAmIegM,EAnIM,SAAC,GAA2C,IAAzCR,EAAwC,EAAxCA,KAAMpM,EAAkC,EAAlCA,SAAUqM,EAAwB,EAAxBA,UAAwB,EAChC5D,mBAAkB,IADc,mBACvDjE,EADuD,KAC9CqI,EAD8C,KAYxDC,EAAmB3C,uBACvB,SAAC4C,EAAuBxL,GACtB,IAAIiD,EAAU4H,EAAK5H,QAAQ+G,KAAI,SAACyB,GAC9B,OAAIA,IAAaD,EACR,2BAAKC,GAAZ,IAAsBzL,MAAOA,IAEtByL,KAGXhN,EAAS,2BAAKoM,GAAN,IAAY5H,QAASA,OAE/B,CAAC4H,EAAMpM,IAEHiN,EAAc9C,uBAClB,SAAC4C,EAAuBzL,GACtB,IAAIkD,EAAU4H,EAAK5H,QAAQ+G,KAAI,SAACyB,GAC9B,OAAIA,IAAaD,EACR,2BAAKC,GAAZ,IAAsB1L,OAAQA,IAEvB0L,KAGXhN,EAAS,2BAAKoM,GAAN,IAAY5H,QAASA,OAE/B,CAAC4H,EAAMpM,IAEHkN,EAAsB/C,uBAC1B,SAAC4C,EAAuBI,GACtB,IAAI3I,EAAU4H,EAAK5H,QAAQ+G,KAAI,SAACyB,GAC9B,OAAIA,IAAaD,EACR,2BAAKC,GAAZ,IAAsBxL,UAAW2L,IAE1BH,KAGXhN,EAAS,2BAAKoM,GAAN,IAAY5H,QAASA,OAE/B,CAAC4H,EAAMpM,IAuBT,OApBA8I,qBAAU,WACJsD,EAAK5H,QAAQmI,OAAS,GACxBS,YACE,UACA,CACE,CACEC,UAAW,OACXzN,MAAOwM,EAAK5H,QAAQ+G,KAAI,SAACjK,GACvB,OAAOA,EAAOA,UAEhBgM,KAAM,KAGV,SAACC,GACCV,EAAWU,QAIhB,CAACnB,IAGF,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGA,EAAK5H,QAAQ+G,KAAI,SAACyB,EAAoBtC,GACrC,OACE,kBAAC8C,EAAD,CAAaxC,IAAKN,GAChB,kBAAC+C,EAAA,EAAD,CACE7N,MAAOoN,EAASzL,MAChB1B,MAAM,UACNG,SAAU,SAACuB,GAAD,OAAWuL,EAAiBE,EAAUzL,MAElD,kBAAC+F,EAAA,EAAD,CAAYxH,KAAM4N,KAASjG,QAAS,kBAhF5B,SAACkG,GACnB,IAAIC,EAAexB,EAAK5H,QAAQqJ,QAAO,SAACvM,GAAD,OAAYA,IAAWqM,KAC9D3N,EAAS,2BAAKoM,GAAN,IAAY5H,QAASoJ,KA8EuBE,CAAYd,MACtD,kBAACR,EAAA,EAAD,CACEC,YAAa,UACb7M,MAAOoN,EAAS1L,OAChBzB,MAAM,UACNG,SAAU,SAACsB,GAAD,OAAY2L,EAAYD,EAAU1L,MAE9C,kBAACkL,EAAA,EAAD,CACEC,YAAa,aACbsB,QAAS,CAAC,CAAEV,UAAW,OAAQzN,MAAOoN,EAAS1L,OAAQgM,KAAM,IAC7D1N,MAAOoN,EAASxL,UAChB3B,MAAM,WACNG,SAAU,SAACwB,GAAD,OAAe0L,EAAoBF,EAAUxL,UAK/D,kBAACsG,EAAA,EAAD,CAAYC,KAAM,gBAAiBjI,KAAMkO,IAAQvG,QAAS,kBA7F5C,WAClB,IAAImG,EAAexB,EAAK5H,QACxBoJ,EAAa9C,KAAK,CAAExJ,OAAQ,GAAIE,UAAW,GAAID,MAAO,IACtDvB,EAAS,2BAAKoM,GAAN,IAAY5H,QAASoJ,KA0FuCK,MAChE,kBAAC3G,EAAA,EAAD,CACExH,KAAM4M,IACNlF,WAEI4E,GACAA,EAAK5H,QAAQmI,OAAS,GACtBP,EAAK5H,QAAQ,GAAGlD,OAAOqL,OAAS,GAChCP,EAAK5H,QAAQ,GAAGjD,MAAQ,GAG5BkG,QAAS,kBAAM4E,GAAU,EAAM,WAEjC,kBAACmB,EAAD,KACGhJ,GACCA,EAAQ+G,KAAI,SAACjK,EAAeoJ,GAC1B,OACE,kBAACwD,EAAD,CAAMlD,IAAKN,GACT,kBAACyD,EAAD,KAAY7M,EAAO8C,KAAnB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAMzG,EAAO8M,gBAC3B,6BACA,kBAAC3E,EAAA,EAAD,CAAc1B,KAAMzG,EAAO+M,oBAYvC/B,EAAgB7L,IAAOQ,IAAV,KASbsL,EAAW9L,IAAOQ,IAAV,KACH,qBAAGP,MAAkBC,KAAKC,SAc/B4M,EAAc/M,IAAOQ,IAAV,KASXkN,EAAY1N,IAAOsL,KAAV,KAEJ,qBAAGrL,MAAkBC,KAAKqL,uBAK/BkC,EAAOzN,IAAOQ,IAAV,KAQY,qBAAGP,MAAkBC,KAAKE,mB,q8CCrLhD,IAsIeyN,EAtIK,SAAC,GAA2C,IAAzClC,EAAwC,EAAxCA,KAAMpM,EAAkC,EAAlCA,SAAUqM,EAAwB,EAAxBA,UAAwB,EAC/B5D,mBAAkB,IADa,mBACtDjE,EADsD,KAC7CqI,EAD6C,OAGrCpE,qBAHqC,mBAGtDzE,EAHsD,KAGhDuK,EAHgD,OAI/B9F,qBAJ+B,mBAItDxE,EAJsD,KAI7CuK,EAJ6C,KAgD7D,OA1CA1F,qBAAU,WACRsE,YACE,UACA,CACE,CACEC,UAAW,OACXzN,MAAOwM,EAAK5H,QAAQ+G,KAAI,SAACjK,GACvB,OAAOA,EAAOA,UAEhBgM,KAAM,KAGV,SAACC,GACCV,EAAWU,QAGd,CAACnB,EAAK5H,UAETsE,qBAAU,WACJsD,EAAKpI,MAAQoI,EAAKpI,KAAKA,KAAK2I,OAAS,GACvCS,YACE,QACA,CAAC,CAAEC,UAAW,OAAQzN,MAAOwM,EAAKpI,KAAKA,KAAMsJ,KAAM,KACnD,SAACC,GACCgB,EAAQhB,EAAQ,SAIrB,CAACnB,IAEJtD,qBAAU,WACJsD,EAAKpI,MAAQoI,EAAKpI,KAAKC,QAAQ0I,OAAS,GAC1CS,YACE,WACA,CAAC,CAAEC,UAAW,OAAQzN,MAAOwM,EAAKpI,KAAKC,QAASqJ,KAAM,KACtD,SAACC,GACCiB,EAAWjB,EAAQ,SAIxB,CAACnB,IAGF,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACG5H,GACCA,EAAQ+G,KAAI,SAACjK,EAAeoJ,GAC1B,OACE,kBAAC,GAAD,CAAMM,IAAKN,GACT,kBAAC,EAAD,KAAYpJ,EAAO8C,KAAnB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAMzG,EAAO8M,uBAOzC,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEC,YAAa,QACb7M,MAAOwM,EAAKpI,KAAKA,KACjBnE,MAAM,SACNG,SAAU,SAACgE,GAAD,OACRhE,EAAS,2BAAKoM,GAAN,IAAYpI,KAAK,2BAAMoI,EAAKpI,MAAZ,IAAkBA,KAAMA,UAGpD,kBAACwI,EAAA,EAAD,CACEC,YAAa,WACb7M,MAAOwM,EAAKpI,KAAKC,QACjBpE,MAAM,UACNG,SAAU,SAACiE,GAAD,OACRjE,EAAS,2BAAKoM,GAAN,IAAYpI,KAAK,2BAAMoI,EAAKpI,MAAZ,IAAkBC,QAASA,UAGvD,kBAACqD,EAAA,EAAD,CACExH,KAAM4M,IACNlF,WAAY4E,GAAQA,EAAKpI,MAAQoI,EAAKpI,KAAKA,KAAK2I,OAAS,GACzDlF,QAAS,kBAAM4E,GAAU,EAAM,gBAEjC,kBAAC,EAAD,KACGrI,GACC,kBAAC,GAAD,KACE,kBAAC,EAAD,KAAYA,EAAKI,KAAjB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAM/D,EAAKyK,gBACzB,6BACA,kBAAChF,EAAA,EAAD,CAAc1B,KAAM/D,EAAKoB,QACxBpB,EAAK0K,OAAOnD,KAAI,SAACoD,EAAcjE,GAC9B,OACE,kBAACkE,GAAD,CAAc5D,IAAKN,GACjB,kBAACmE,GAAD,KAAYF,EAAMvK,MAClB,kBAAC0K,GAAD,eAAoBH,EAAMpN,OAC1B,kBAACwN,GAAD,KACE,kBAACtF,EAAA,EAAD,CAAc1B,KAAM4G,EAAM5G,aAOrC9D,GACC,kBAAC,GAAD,KACE,kBAAC,EAAD,KAAYA,EAAQG,KAApB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAM9D,EAAQwK,gBAC5B,6BACA,kBAAChF,EAAA,EAAD,CAAc1B,KAAM9D,EAAQoE,OAC3BpE,EAAQyK,OAAOnD,KAAI,SAACoD,EAAcjE,GACjC,OACE,kBAACkE,GAAD,CAAc5D,IAAKN,GACjB,kBAACmE,GAAD,KAAYF,EAAMvK,MAClB,kBAAC0K,GAAD,eAAoBH,EAAMpN,OAC1B,kBAACwN,GAAD,KACE,kBAACtF,EAAA,EAAD,CAAc1B,KAAM4G,EAAM5G,kBAgB5CuE,EAAgB7L,IAAOQ,IAAV,KASbsL,EAAW9L,IAAOQ,IAAV,KACH,qBAAGP,MAAkBC,KAAKC,SAc/B4M,EAAc/M,IAAOQ,IAAV,KASXkN,EAAY1N,IAAOsL,KAAV,KAEJ,qBAAGrL,MAAkBC,KAAKqL,uBAK/BkC,GAAOzN,IAAOQ,IAAV,KAQY,qBAAGP,MAAkBC,KAAKE,mBAG1C+N,GAAenO,IAAOQ,IAAV,KAKZ4N,GAAYpO,IAAOQ,IAAV,KAGT6N,GAAarO,IAAOQ,IAAV,KACV8N,GAAYtO,IAAOQ,IAAV,K,m6DC5Lf,IA8Ze+N,GA9ZU,SAAC,GAA2C,IAAzC5C,EAAwC,EAAxCA,KAAMpM,EAAkC,EAAlCA,SAAUqM,EAAwB,EAAxBA,UAAwB,EAC1C5D,mBAAiB,GADyB,mBAC3DwG,EAD2D,KACrDC,EADqD,OAEpCzG,mBAAkB,IAFkB,mBAE3DjE,EAF2D,KAElDqI,EAFkD,OAG1CpE,qBAH0C,mBAG3DzE,EAH2D,KAGrDuK,EAHqD,OAIpC9F,qBAJoC,mBAI3DxE,EAJ2D,KAIlDuK,EAJkD,KAM5DW,EAAYhF,uBAAY,WAC5B,IAAI5I,EAAQ,EAIZ,OAHA6K,EAAK5H,QAAQgG,SAAQ,SAAClJ,GACpBC,GAASD,EAAOC,SAEXA,IACN,CAAC6K,IAEJtD,qBAAU,WACR,GAAItE,GAAWA,EAAQmI,OAAS,EAAG,CACjC,IAAMpL,EAAQ4N,IACd3K,EAAQ,GAAG4K,YAAY5E,SAAQ,SAAC6E,GAC1BA,EAAW9N,QAAUA,GACvB2N,EAAQG,EAAWC,iBAIxB,CAAC9K,EAAS2K,IAEbrG,qBAAU,WACRsE,YACE,UACA,CACE,CACEC,UAAW,OACXzN,MAAOwM,EAAK5H,QAAQ+G,KAAI,SAACjK,GACvB,OAAOA,EAAOA,UAEhBgM,KAAM,KAGV,SAACC,GACCV,EAAWU,QAGd,CAACnB,EAAK5H,QAAS2K,IAElBrG,qBAAU,WACJsD,EAAKpI,MAAQoI,EAAKpI,KAAKA,KAAK2I,OAAS,GACvCS,YACE,QACA,CAAC,CAAEC,UAAW,OAAQzN,MAAOwM,EAAKpI,KAAKA,KAAMsJ,KAAM,KACnD,SAACC,GACCgB,EAAQhB,EAAQ,SAIrB,CAACnB,IAEJtD,qBAAU,WACJsD,EAAKpI,MAAQoI,EAAKpI,KAAKC,QAAQ0I,OAAS,GAC1CS,YACE,WACA,CAAC,CAAEC,UAAW,OAAQzN,MAAOwM,EAAKpI,KAAKC,QAASqJ,KAAM,KACtD,SAACC,GACCiB,EAAWjB,EAAQ,SAIxB,CAACnB,IAEJ,IAAMmD,EAAapF,uBAAY,SAAC8E,GAC9B,YAAa9O,IAAT8O,GAA+B,IAATA,EACjBO,IACW,IAATP,EACFQ,IAEAC,MAER,IAEGC,EAAcxF,uBAAY,SAACyF,GAE/B,OADUC,KAAKC,OAAOF,EAAQ,IAAM,KAEnC,IAEGG,EAAY5F,uBAChB,SAAC6F,EAAmBC,GAClB,OAAOD,EAAYf,EAAOU,EAAYM,KAExC,CAACN,EAAaV,IAGViB,EAAa/F,uBACjB,SAACgG,GACC,IACIC,EADmBhE,EAAKpG,OACLmK,GACvBC,GAAaA,EAAY,GAAK,EAC9BpQ,EAAS,2BAAKoM,GAAN,IAAYpG,OAAO,2BAAMoG,EAAKpG,QAAZ,mBAAqBmK,EAAWC,SAE5D,CAAChE,EAAMpM,IAGHqQ,EAAiBlG,uBACrB,SAACgG,GACC,IACIC,EADiBhE,EAAKzG,MACJwK,GACtBC,GAAaA,EAAY,GAAK,EAC9BpQ,EAAS,2BAAKoM,GAAN,IAAYzG,MAAM,2BAAMyG,EAAKzG,OAAZ,mBAAoBwK,EAAWC,SAE1D,CAAChE,EAAMpM,IAGT,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGwE,GACCA,EAAQ+G,KAAI,SAACjK,EAAeoJ,GAC1B,OACE,kBAAC,GAAD,CAAMM,IAAKN,GACT,kBAAC,GAAD,KAAYpJ,EAAO8C,KAAnB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAMzG,EAAO8M,oBAInC,kBAAC,GAAD,KACGpK,GACC,oCACE,kBAAC,GAAD,KAAYA,EAAKI,KAAjB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAM/D,EAAKyK,iBAG7B,6BACCxK,GACC,oCACE,kBAAC,GAAD,KAAYA,EAAQG,KAApB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAM9D,EAAQwK,qBAOxC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAChB,EAAA,EAAD,CACE7N,MAAOwM,EAAK/G,IACZxF,MAAM,WACNG,SAAU,SAACqF,GAAD,OAASrF,EAAS,2BAAKoM,GAAN,IAAY/G,IAAKA,QAE9C,kBAACoI,EAAA,EAAD,CACE7N,MAAOwM,EAAK9G,IACZzF,MAAM,YACNG,SAAU,SAACsF,GAAD,OAAStF,EAAS,2BAAKoM,GAAN,IAAY9G,IAAKA,QAE9C,kBAACmI,EAAA,EAAD,CACE7N,MAAOwM,EAAK7G,IACZ1F,MAAM,eACNG,SAAU,SAACuF,GAAD,OAASvF,EAAS,2BAAKoM,GAAN,IAAY7G,IAAKA,QAE9C,kBAACkI,EAAA,EAAD,CACE7N,MAAOwM,EAAK5G,IACZ3F,MAAM,eACNG,SAAU,SAACwF,GAAD,OAASxF,EAAS,2BAAKoM,GAAN,IAAY5G,IAAKA,QAE9C,kBAACiI,EAAA,EAAD,CACE7N,MAAOwM,EAAK3G,IACZ5F,MAAM,SACNG,SAAU,SAACyF,GAAD,OAASzF,EAAS,2BAAKoM,GAAN,IAAY3G,IAAKA,QAE9C,kBAACgI,EAAA,EAAD,CACE7N,MAAOwM,EAAK1G,IACZ7F,MAAM,WACNG,SAAU,SAAC0F,GAAD,OAAS1F,EAAS,2BAAKoM,GAAN,IAAY1G,IAAKA,QAE9C,kBAAC4B,EAAA,EAAD,CACExH,KAAM4M,IACNlF,WAEI4E,GACAA,EAAK/G,IAAM,GACX+G,EAAK9G,IAAM,GACX8G,EAAK7G,IAAM,GACX6G,EAAK5G,IAAM,GACX4G,EAAK3G,IAAM,GACX2G,EAAK1G,IAAM,GAGf+B,QAAS,kBAAM4E,GAAU,EAAM,gBAEjC,kBAAC,GAAD,KACE,kBAACiE,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMxC,YAAaiJ,EAAK/G,MAE1C,kBAACmL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMxC,iBAGtC,kBAACmN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMvC,YAAagJ,EAAK9G,MAE1C,kBAACkL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMvC,iBAGtC,kBAACkN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMtC,YAAa+I,EAAK7G,MAE1C,kBAACiL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMtC,iBAGtC,kBAACiN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMrC,YAAa8I,EAAK5G,MAE1C,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMrC,iBAGtC,kBAACgN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMpC,YAAa6I,EAAK3G,MAE1C,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMpC,iBAGtC,kBAAC+M,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKzG,MAAMnC,YAAa4I,EAAK1G,MAE1C,kBAAC8K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO+H,EAAe,iBACvC,kBAAC/P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKzG,MAAMnC,kBAIxC,kBAAC,GAAD,KACE,kBAAC8M,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,oBACCR,EAAU3D,EAAKpG,OAAOhE,eAAgBoK,EAAK/G,MAE9C,kBAACmL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,oBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOhE,oBAGvC,kBAACsO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,yBACCR,EAAU3D,EAAKpG,OAAO/D,mBAAoBmK,EAAK3G,MAElD,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,wBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO/D,wBAGvC,kBAACqO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,gBACCR,EAAU3D,EAAKpG,OAAO9D,WAAYkK,EAAK5G,MAE1C,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,gBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO9D,gBAGvC,kBAACoO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,mBACCR,EAAU3D,EAAKpG,OAAO7D,cAAeiK,EAAK9G,MAE7C,kBAACkL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,mBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO7D,mBAGvC,kBAACmO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,mBACCR,EAAU3D,EAAKpG,OAAO5D,cAAegK,EAAK1G,MAE7C,kBAAC8K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,mBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO5D,mBAGvC,kBAACkO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,iBACCR,EAAU3D,EAAKpG,OAAO3D,YAAa+J,EAAK5G,MAE3C,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,iBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO3D,iBAGvC,kBAACiO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,iBACCR,EAAU3D,EAAKpG,OAAO1D,YAAa8J,EAAK3G,MAE3C,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,iBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO1D,iBAGvC,kBAACgO,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,sBACCR,EAAU3D,EAAKpG,OAAOzD,iBAAkB6J,EAAK1G,MAEhD,kBAAC8K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,sBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOzD,sBAGvC,kBAAC+N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,uBACCR,EAAU3D,EAAKpG,OAAOxD,kBAAmB4J,EAAK5G,MAEjD,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,uBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOxD,uBAGvC,kBAAC8N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKpG,OAAOvD,aAAc2J,EAAK3G,MAE5C,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,kBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOvD,kBAGvC,kBAAC6N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,gBACCR,EAAU3D,EAAKpG,OAAOtD,WAAY0J,EAAK5G,MAE1C,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,gBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOtD,gBAGvC,kBAAC4N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,oBACCR,EAAU3D,EAAKpG,OAAOrD,eAAgByJ,EAAK3G,MAE9C,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,oBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOrD,oBAGvC,kBAAC2N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,qBACCR,EAAU3D,EAAKpG,OAAOpD,gBAAiBwJ,EAAK1G,MAE/C,kBAAC8K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,qBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOpD,qBAGvC,kBAAC0N,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,oBACCR,EAAU3D,EAAKpG,OAAOnD,eAAgBuJ,EAAK1G,MAE9C,kBAAC8K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,oBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOnD,oBAGvC,kBAACyN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKpG,OAAOlD,aAAcsJ,EAAK5G,MAE5C,kBAACgL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,kBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOlD,kBAGvC,kBAACwN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,yBACCR,EAAU3D,EAAKpG,OAAOjD,kBAAmBqJ,EAAK9G,MAEjD,kBAACkL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,uBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOjD,uBAGvC,kBAACuN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,iBACCR,EAAU3D,EAAKpG,OAAOhD,YAAaoJ,EAAK9G,MAE3C,kBAACkL,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,iBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAOhD,iBAGvC,kBAACsN,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,kBACCR,EAAU3D,EAAKpG,OAAO/C,aAAcmJ,EAAK3G,MAE5C,kBAAC+K,GAAD,CAAU/I,QAAS,SAACa,GAAD,OAAO4H,EAAW,kBACnC,kBAAC5P,GAAD,CAAMR,KAAMyP,EAAWnD,EAAKpG,OAAO/C,uBAY7CqJ,GAAgB7L,IAAOQ,IAAV,MASbsL,GAAW9L,IAAOQ,IAAV,MACH,qBAAGP,MAAkBC,KAAKC,SAc/B4M,GAAc/M,IAAOQ,IAAV,MASXqP,GAAe7P,IAAOQ,IAAV,MAQZsP,GAAW9P,IAAOQ,IAAV,MAMQ,qBAAGP,MAAkBC,KAAKE,mBAG1CqN,GAAOzN,IAAOQ,IAAV,MAQY,qBAAGP,MAAkBC,KAAKE,mBAG1C2P,GAAW/P,IAAOQ,IAAV,MAOQ,qBAAGP,MAAkBC,KAAKE,mBAS1CsN,GAAY1N,IAAOsL,KAAV,MAEJ,qBAAGrL,MAAkBC,KAAKqL,uBAK/B1L,GAAOG,YAAOK,KAAPL,CAAH,MAKC,qBAAGC,MAAkBK,KAAKC,a,0xCC7frC,IAiKeyP,GAjKU,SAAC,GAA2C,IAAzCrE,EAAwC,EAAxCA,KAAMpM,EAAkC,EAAlCA,SAAUqM,EAAwB,EAAxBA,UAAwB,EACpC5D,mBAAkB,IADkB,mBAC3DjE,EAD2D,KAClDqI,EADkD,KAGlE/D,qBAAU,WACRsE,YACE,UACA,CACE,CACEC,UAAW,OACXzN,MAAOwM,EAAK5H,QAAQ+G,KAAI,SAACjK,GACvB,OAAOA,EAAOA,UAEhBgM,KAAM,KAGV,SAACC,GACCV,EAAWU,QAGd,CAACnB,EAAK5H,UAET,IAqBMkM,EAAe,SAACC,EAAiBC,GACrC,IAAI9L,EAAQsH,EAAKtH,MACjBA,EAAM8L,GAAGC,OAASF,EAClB3Q,EAAS,2BAAKoM,GAAN,IAAYtH,MAAOA,MAEvBgM,EAAwB,SAC5BH,EAMAC,GAEA,IAAI9L,EAAQsH,EAAKtH,MACjBA,EAAM8L,GAAKD,EACX3Q,EAAS,2BAAKoM,GAAN,IAAYtH,MAAOA,MAG7B,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGN,GACCA,EAAQ+G,KAAI,SAACjK,EAAeoJ,GAC1B,OACE,kBAAC,GAAD,CAAMM,IAAKN,GACT,kBAAC,GAAD,KAAYpJ,EAAO8C,KAAnB,KACA,kBAACqF,EAAA,EAAD,CAAc1B,KAAMzG,EAAO8M,gBAC3B,6BACA,kBAAC3E,EAAA,EAAD,CAAc1B,KAAMzG,EAAO+M,mBAOzC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGjC,EAAKtH,MAAMyG,KACV,SACEwF,EAMArG,GAEA,OACE,kBAACsG,GAAD,CAAWhG,IAAKN,GACd,kBAAC8B,EAAA,EAAD,CACEC,YAAa,CAAC,QAAS,SACvB7M,MAAOmR,EAAKF,OACZhR,MAAM,OACNG,SAAU,SAAC2Q,GAAD,OAAaD,EAAaC,EAASjG,MAE/C,kBAACuG,GAAA,EAAD,CACErR,QAASmR,EAAKG,QACdrR,MAAM,YACNG,SAAU,SAACmR,GAAD,OACRL,EAAsB,2BAEfC,GAFc,IAGjBG,QAASC,IAEXzG,MAIN,kBAACuG,GAAA,EAAD,CACErR,QAASmR,EAAK9B,KACdpP,MAAM,OACNG,SAAU,SAACiP,GAAD,OACR6B,EAAsB,2BAAKC,GAAN,IAAY9B,KAAMA,IAAQvE,MAGnD,kBAAChL,GAAA,EAAD,CACEC,QAAS,CACP,CAAEC,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,QAEzBD,MAAO,CACLA,MAAOmR,EAAKK,UACZvR,MACEkR,EAAKK,UAAUC,OAAO,GAAGC,cACzBP,EAAKK,UAAUG,MAAM,IAEzB1R,MAAM,YACNG,SAAU,SAACqI,GAAD,OACRyI,EAAsB,2BAAKC,GAAN,IAAYK,UAAW/I,IAAQqC,MAGxD,kBAACpD,EAAA,EAAD,CAAYxH,KAAM4N,KAASjG,QAAS,kBAvHjC,SAAC+J,GAMlB,IAAIC,EAAcrF,EAAKtH,MAAM+I,QAC3B,SAACkD,GAAD,OAAUA,EAAKF,SAAWW,EAAQX,UAEpC7Q,EAAS,2BAAKoM,GAAN,IAAYtH,MAAO2M,KA8G6BC,CAAWX,UAK7D,kBAACjJ,EAAA,EAAD,CACEC,KAAM,eACNjI,KAAMkO,IACNvG,QAAS,kBApHA,WACjB,IAAIgK,EAAcrF,EAAKtH,MACvB2M,EAAY3G,KAAK,CACf+F,OAAQ,GACRK,SAAS,EACTjC,MAAM,EACNmC,UAAW,QAEbpR,EAAS,2BAAKoM,GAAN,IAAYtH,MAAO2M,KA4GJE,MAEjB,kBAACrK,EAAA,EAAD,CACExH,KAAM4M,IACNlF,WAAY4E,GAAQA,EAAKpI,MAAQoI,EAAKpI,KAAKA,KAAK2I,OAAS,GACzDlF,QAAS,kBAAM4E,GAAU,EAAM,mBAUrCC,GAAgB7L,IAAOQ,IAAV,MASbsL,GAAW9L,IAAOQ,IAAV,MACH,qBAAGP,MAAkBC,KAAKC,SAc/B4M,GAAc/M,IAAOQ,IAAV,MASXkN,GAAY1N,IAAOsL,KAAV,MAEJ,qBAAGrL,MAAkBC,KAAKqL,uBAK/BkC,GAAOzN,IAAOQ,IAAV,MAQY,qBAAGP,MAAkBC,KAAKE,mBAG1CmQ,GAAYvQ,IAAOQ,IAAV,M,ijCCiFA2Q,UA7SC,WACd,IAAIhI,EAAUC,cADM,EAEQpB,mBAAiB,WAFzB,mBAEboJ,EAFa,KAEFC,EAFE,OAGUrJ,mBAAe,IAAIvE,KAH7B,mBAGb6N,EAHa,KAGJC,EAHI,OAKmBvJ,oBAAkB,GALrC,mBAKbwJ,EALa,KAKKC,EALL,OAMezJ,oBAAkB,GANjC,mBAMb0J,EANa,KAMGC,EANH,OAOa3J,oBAAkB,GAP/B,mBAOb4J,EAPa,KAOE9D,EAPF,OAQuB9F,oBAAkB,GARzC,mBAQb6J,EARa,KAQOC,EARP,OASuB9J,oBAAkB,GATzC,mBASb+J,EATa,KASOC,EATP,KAgCdC,EAAa,uCAAG,WAAOtG,GAAP,iCAAAuG,EAAA,6DAChBC,EAA0D,GAC1DjO,EAIE,GACFkO,EAAwD,GACxDC,EAA8B,GAElC,UAAA1G,EAAK5H,eAAL,SAAcgG,SAAQ,SAAClJ,GACrBwR,EAAUhI,KACRiI,YAAyB,UAAW,OAAQzR,EAAOA,YAZnC,SAeE0R,QAAQC,IAAIH,GAfd,cAgBb,QADDvF,EAfc,cAgBb,IAAPA,KAAS/C,SAAQ,SAAClJ,GAChB8K,EAAK5H,QAAQgG,SAAQ,SAACwC,GAChB1L,EAAO8C,OAAS4I,EAAS1L,QAC3BuR,EAAc/H,KAAK,CAAEoI,MAAO5R,EAAQ0L,SAAUA,UAKvC,OAAb6F,QAAa,IAAbA,KAAerI,SAAQ,SAAClJ,GACtB,IACsB,EADlB+N,EAAa/N,EAAO4R,MAAM9D,YAAY9N,EAAO0L,SAASzL,MAAQ,GAC9D8N,EAAWuD,QACb,UAAAvD,EAAWuD,aAAX,SAAkBpI,SAAQ,SAAC2I,GACrBA,EAAKC,aACPR,EAAK,sBACAA,GADA,CAEH,CACE/B,OAAQsC,EAAK/O,KACbxE,OAAQuT,EAAKvT,MACbyT,KAAMF,EAAKvT,cAMjByP,EAAWiE,YAAcjE,EAAWiE,WAAW3G,OAAS,IAC1DhI,EAAU,sBACLA,GADK,CAER,CACEkM,OAAQvP,EAAO4R,MAAM9O,KACrBmP,MAAOlE,EAAWiE,WAClBD,IAAKhE,EAAWiE,kBAMpBlH,EAAKvH,eAAiBuH,EAAKvH,cAAc8H,OAAS,IAChD6G,EAAeZ,EAAMrH,KAAI,SAACkI,GAAa,IAAD,EACpCC,EAAe,UAAGtH,EAAKvH,qBAAR,aAAG,EAAoB0G,KAAI,SAACoI,GAC7C,OAAIF,EAAQ5C,SAAW8C,EAAI9C,OAClB,CACLA,OAAQ4C,EAAQ5C,OAChBjR,MAAO+T,EAAI/T,MACXyT,IAAKI,EAAQJ,KAGR,QAGX,OACEK,GACAA,EAAgB/G,OAAS,QACFxM,IAAvBuT,EAAgB,IACO,OAAvBA,EAAgB,GAETA,EAAgB,GAEhBD,OAGSD,EAAa7G,OAAS,IACxCiG,EAAQxL,MAAMwM,KAAKJ,IAInBpH,EAAKzH,YAAcyH,EAAKzH,WAAWgI,OAAS,IAC1CkH,EAD6C,UACzBlP,SADyB,aACzB,EAAY4G,KAAI,SAACuI,GAAmB,IAAD,EACrDC,EAAe,UAAG3H,EAAKzH,kBAAR,aAAG,EAAiB4G,KAAI,SAACoI,GAC1C,OAAIG,EAAcjD,SAAW8C,EAAI9C,OACxB,CACLA,OAAQiD,EAAcjD,OACtB0C,MAAOI,EAAIJ,MACXF,IAAKS,EAAcT,KAGd,QAGX,OACEU,GACAA,EAAgBpH,OAAS,QACFxM,IAAvB4T,EAAgB,IACO,OAAvBA,EAAgB,GAETA,EAAgB,GAEhBD,OAGcD,EAAkBlH,OAAS,IAClDhI,EAAayC,MAAMwM,KAAKC,IAIxBG,EA9GgB,2BA+Gf5H,GA/Ge,IAgHlBzH,WAAYA,EACZE,cAAe+N,IAEjBZ,EAAWgC,GAnHS,kBAoHbA,GApHa,4CAAH,sDAgInB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,SAAU,CACR,UACA,QACA,OACA,YACA,YACA,YAEFlU,SAAU,SAACmU,GAAD,OAAiBrC,EAAOqC,IAClCtC,UAAWA,IAEb,kBAAC,GAAD,KACE,kBAACuC,GAAD,KACiB,YAAdvC,GACC,qCACII,GACA,kBAAC,EAAD,CACE7F,KAAM2F,EACN/R,SAAUgS,EACV3F,UA3KM,SAACzM,EAAgByU,GACrCnC,EAAWtS,GACXkS,EAAOuC,MA4KIpC,GACC,kBAAC,GAAD,KACE,kBAACqC,GAAD,+CACA,kBAAChN,EAAA,EAAD,CAAYxH,KAAMyU,IAAQ9M,QAAS,kBAAMyK,GAAW,QAK7C,UAAdL,GACC,qCACIM,GACA,kBAAC,EAAD,CACE/F,KAAM2F,EACN/R,SAAUgS,EACV3F,UAxLI,SAACzM,EAAgByU,GACnCjC,EAASxS,GACTkS,EAAOuC,MAyLIlC,GACC,kBAAC,GAAD,KACE,kBAACmC,GAAD,+CACA,kBAAChN,EAAA,EAAD,CAAYxH,KAAMyU,IAAQ9M,QAAS,kBAAM2K,GAAS,QAK3C,SAAdP,GACC,qCACIQ,GACA,kBAAC,EAAD,CACEjG,KAAM2F,EACN/R,SAAUgS,EACV3F,UArMG,SAACzM,EAAgByU,GAClC9F,EAAQ3O,GACRkS,EAAOuC,MAsMIhC,GACC,kBAAC,GAAD,KACE,kBAACiC,GAAD,4CACA,kBAAChN,EAAA,EAAD,CAAYxH,KAAMyU,IAAQ9M,QAAS,kBAAM8G,GAAQ,QAK1C,cAAdsD,GACC,qCACIS,GACA,kBAAC,GAAD,CACElG,KAAM2F,EACN/R,SAAUgS,EACV3F,UAlNQ,SAACzM,EAAgByU,GACvC9B,EAAa3S,GACbkS,EAAOuC,MAmNI/B,GACC,kBAAC,GAAD,KACE,kBAACgC,GAAD,iDACA,kBAAChN,EAAA,EAAD,CACExH,KAAMyU,IACN9M,QAAS,kBAAM8K,GAAa,QAMvB,cAAdV,GACC,qCACIW,GACA,kBAAC,GAAD,CACEpG,KAAM2F,EACN/R,SAAUgS,EACV3F,UAlOQ,SAACzM,EAAgByU,GACvC5B,EAAa7S,GACbkS,EAAOuC,MAmOI7B,GACC,kBAAC,GAAD,KACE,kBAAC8B,GAAD,iDACA,kBAAChN,EAAA,EAAD,CACExH,KAAMyU,IACN9M,QAAS,kBAAMgL,GAAa,QAMvB,aAAdZ,GACC,sCACKI,IACAE,IACAE,IACAC,IACAL,IACAO,IACD,kBAAC,GAAD,KACE,kBAAC8B,GAAD,mCAGHrC,GACCE,GACAE,GACAC,GACAL,GACAO,GACE,kBAAC,GAAD,KACE,kBAAC8B,GAAD,qBACA,kBAAChN,EAAA,EAAD,CACExH,KAAM4M,IACNjF,QAAS,WAzI3BiL,EAAcX,GAAS9I,MAAK,SAAC+K,UACpBA,EAAW,GAClBQ,YAAiB,QAASR,GAAa,SAACS,GACtC7K,EAAQkB,KAAR,0BAAgC2J,mBA3JxC,IA+SMnI,GAAgB7L,IAAOQ,IAAV,MAQbmT,GAAO3T,IAAOQ,IAAV,MACC,qBAAGP,MAAkBC,KAAKC,SAgB/B4M,GAAc/M,IAAOQ,IAAV,MASXqT,GAAO7T,IAAOQ,IAAV,MAOY,qBAAGP,MAAkBC,KAAKE,mBAOnC,qBAAGH,MAAkBK,KAAKC,c,m8BCrUxByM,IA3BK,SAAC,GAAoE,IAAlE7N,EAAiE,EAAjEA,MAAOyT,EAA0D,EAA1DA,IAAKqB,EAAqD,EAArDA,KAAM7U,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SAC/D,OACE,kBAACI,EAAD,KACE,kBAACC,EAAD,KACGP,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,GAE3DwT,GACC,kBAACjL,EAAD,CACEC,KAAK,SACLgL,IAAKA,EACLqB,KAAMA,GAAc,EACpB9U,MAAOA,EACPI,SAAU,SAACsI,GAAD,OAAOtI,GAAUsI,EAAEC,OAAO3I,WAGtCyT,GACA,kBAACjL,EAAD,CACEC,KAAK,SACLqM,KAAMA,GAAc,EACpB9U,MAAOA,EACPI,SAAU,SAACsI,GAAD,OAAOtI,GAAUsI,EAAEC,OAAO3I,YAS9C,IAAMQ,EAAQK,IAAOZ,MAAV,KACA,qBAAGa,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAe1CP,EAAOG,YAAOK,IAAPL,CAAH,KAMC,qBAAGC,MAAkBK,KAAKC,aAG/BX,EAAYI,IAAOQ,IAAV,KAITmH,EAAQ3H,IAAOU,MAAV,KAOW,qBAAGT,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,U,u3BC7DvBqT,IAdA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUrC,EAAkC,EAAlCA,UAAW7R,EAAuB,EAAvBA,SACrC,OACE,kBAAC2U,EAAD,KACGT,EAAS3I,KAAI,SAACqJ,EAAOlK,GACpB,OACE,kBAACmK,EAAD,CAAK7J,IAAKN,EAAOjD,QAAS,SAACa,GAAD,OAAOtI,EAAS4U,IAAQE,SAAUF,IAAU/C,GACnE+C,QAUb,IAAMD,EAAMlU,IAAOQ,IAAV,KACE,qBAAGP,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAqB1CgU,EAAMpU,IAAOQ,IAAV,KAQa,qBAAGP,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,SAOd,qBAAGF,MAAkBU,QAAQP,mBACxC,qBAAGH,MAAkBU,QAAQR,SAGtC,SAACmU,GACD,GAAIA,EAAMD,SACR,MAAM,qBAAN,OAA4BC,EAAMrU,MAAMU,QAAQP,gBAAhD,4BACSkU,EAAMrU,MAAMU,QAAQR,MAD7B,S,+gDCmBS4L,IArES,SAAC,GAQV,IAPbC,EAOY,EAPZA,YACAsB,EAMY,EANZA,QACAnO,EAKY,EALZA,MACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,KACAC,EAEY,EAFZA,UACAC,EACY,EADZA,SACY,EACWyI,mBAA4BgE,GAA5CuI,EADK,sBAEkBvM,mBAAoB,IAFtC,mBAEL9I,EAFK,KAEIsV,EAFJ,OAGkCxM,mBAAoB,IAHtD,mBAGLyM,EAHK,KAGYC,EAHZ,KAKNC,EAAejL,sBAAW,uCAC9B,WAAO6K,GAAP,eAAArC,EAAA,6DACM0C,EAAiC,GACrCL,EAAaxK,SAAQ,SAACY,GACpBiK,EAASvK,KAAKwK,YAAyBlK,OAAmBjL,IAAZ4N,EAAwBA,EAAU,QAHpF,SAKwBiF,QAAQC,IAAIoC,GALpC,cAMU7K,SAAQ,SAAC1F,GACfmQ,GAAW,SAACM,GAAD,OAAOA,EAAEC,OAAO1Q,SAP/B,2CAD8B,sDAW9B,CAACiJ,IAGHjF,qBAAU,WACoB,kBAAjBkM,GACT5H,YAAkB4H,OAA0B7U,IAAZ4N,EAAwBA,EAAU,IAAI,SAAC0H,GACrER,EAAWQ,MAGXT,aAAwB5N,OAAS4N,EAAarI,OAAS,GACzDyI,EAAaJ,KAEd,CAACA,EAAcI,EAAcrH,IAEhC,IAAM2H,EAAWvL,uBACf,SAACwL,GACC3V,EAAS2V,GACT,IAAIC,EAAajW,EAAQkO,QAAO,SAAC3N,GAC/B,OAAOA,EAAOkE,KAAKgG,SAASuL,MAE9BR,EAAmBS,KAErB,CAACjW,EAASK,IAGZ,OACE,kBAACI,EAAD,KACE,kBAACC,EAAD,KACGP,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,GAE5D,kBAACuI,EAAD,CAAOC,KAAK,OAAOzI,MAAOA,EAAOI,SAAU,SAACsI,GAAD,OAAOoN,EAASpN,EAAEC,OAAO3I,UACpE,kBAACiW,EAAD,KACGX,EAAgBvI,OAAS,GACxBuI,EAAgB3J,KAAI,SAACuK,EAAKpL,GACxB,OACE,kBAACqL,EAAD,CAAQ/K,IAAKN,EAAOjD,QAAS,SAACa,GAAD,OAAOoN,EAASI,EAAI1R,QAC9C0R,EAAI1R,YAWrB,IAAMhE,EAAQK,IAAOZ,MAAV,KACA,qBAAGa,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAiB1CP,EAAOG,YAAOK,IAAPL,CAAH,KAMC,qBAAGC,MAAkBK,KAAKC,aAG/BX,EAAYI,IAAOQ,IAAV,KAIT4U,EAAUpV,IAAOQ,IAAV,KAgBP8U,EAAStV,IAAOQ,IAAV,KAGD,qBAAGP,MAAkBS,MAAMP,SAChB,qBAAGF,MAAkBS,MAAMN,mBAK3CuH,EAAQ3H,IAAOU,MAAV,KAMW,qBAAGT,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,QAIxBiV,I,2nDChIC5E,IAhBI,SAAC,GAAyD,IAAvDrR,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SACnD,OACE,kBAACI,EAAD,KACE,kBAACC,EAAD,KACGP,EAAO,kBAACQ,EAAD,CAAMR,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,GAE5D,kBAACuI,EAAD,CACEC,KAAK,WACL2N,eAAgBpW,EAChBI,SAAU,SAACsI,GAAD,OAAOtI,EAASsI,EAAEC,OAAO0N,YAErC,kBAACC,EAAD,QAON,IAAM9V,EAAQK,IAAOZ,MAAV,KACA,qBAAGa,MAAkBC,KAAKC,SACf,qBAAGF,MAAkBC,KAAKE,mBAiB1CP,EAAOG,YAAOK,IAAPL,CAAH,KAMC,qBAAGC,MAAkBK,KAAKC,aAG/BX,EAAYI,IAAOQ,IAAV,KAITiV,EAAYzV,IAAOQ,IAAV,KAQO,qBAAGP,MAAkBS,MAAMN,mBACtC,qBAAGH,MAAkBS,MAAMP,SAsBhCwH,EAAQ3H,IAAOU,MAAV,IASK+U,GACQ,qBAAGxV,MAAkBK,KAAKC,aACrC,qBAAGN,MAAkBU,QAAQR,QAG1BsV","file":"static/js/41.18d0e89c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\n\ninterface $Props {\n  options: { value: string; label: string }[];\n  value: { value: string; label: string };\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst EnumField = ({\n  options,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n\n  const handleChange = (option: { value: string; label: string }) => {\n    if (option !== null && option !== undefined) {\n      onChange(option.value);\n    }\n  };\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <StyledSelect\n        classNamePrefix=\"react-select\"\n        value={value}\n        options={options}\n        onChange={(option: { value: string; label: string }) =>\n          handleChange(option)\n        }\n      />\n    </Field>\n  );\n};\n\nexport default EnumField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  \n  .react-select__single-value {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","export default class ClassSet {\n    classe: string;\n    level: number;\n    subclasse: string;\n  \n    constructor(\n        classe: string,\n        level: number,\n        subclasse: string,\n    ) {\n        this.level = level;\n        this.classe = classe;\n        this.subclasse = subclasse;\n    }\n  }\n  \n  export function isClassSet(arg: any): arg is ClassSet {\n    const classeCheck = arg.classe !== undefined && typeof arg.classe == \"string\";\n    const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n    const subclasseCheck = arg.subclasse !== undefined && typeof arg.subclasse == \"string\";\n    return (\n      arg &&\n      levelCheck &&\n      classeCheck &&\n      subclasseCheck\n    );\n  }\n  ","export default class Skills {\n  acrobaticsProf: number;\n  animalHandlingProf: number;\n  arcanaProf: number;\n  athleticsProf: number;\n  deceptionProf: number;\n  historyProf: number;\n  insightProf: number;\n  intimidationProf: number;\n  investigationProf: number;\n  medicineProf: number;\n  natureProf: number;\n  perceptionProf: number;\n  performanceProf: number;\n  persuasionProf: number;\n  religionProf: number;\n  sleightOfHandProf: number;\n  stealthProf: number;\n  survivalProf: number;\n\n  constructor(\n    acrobaticsProf?: number,\n    animalHandlingProf?: number,\n    arcanaProf?: number,\n    athleticsProf?: number,\n    deceptionProf?: number,\n    historyProf?: number,\n    insightProf?: number,\n    intimidationProf?: number,\n    investigationProf?: number,\n    medicineProf?: number,\n    natureProf?: number,\n    perceptionProf?: number,\n    performanceProf?: number,\n    persuasionProf?: number,\n    religionProf?: number,\n    sleightOfHandProf?: number,\n    stealthProf?: number,\n    survivalProf?: number\n  ) {\n    this.acrobaticsProf = acrobaticsProf || 0;\n    this.animalHandlingProf = animalHandlingProf || 0;\n    this.arcanaProf = arcanaProf || 0;\n    this.athleticsProf = athleticsProf || 0;\n    this.deceptionProf = deceptionProf || 0;\n    this.historyProf = historyProf || 0;\n    this.insightProf = insightProf || 0;\n    this.intimidationProf = intimidationProf || 0;\n    this.investigationProf = investigationProf || 0;\n    this.medicineProf = medicineProf || 0;\n    this.natureProf = natureProf || 0;\n    this.perceptionProf = perceptionProf || 0;\n    this.performanceProf = performanceProf || 0;\n    this.persuasionProf = persuasionProf || 0;\n    this.religionProf = religionProf || 0;\n    this.sleightOfHandProf = sleightOfHandProf || 0;\n    this.stealthProf = stealthProf || 0;\n    this.survivalProf = survivalProf || 0;\n  }\n}\n\nexport function isSkills(arg: any): arg is Skills {\n  const acrobaticsProfCheck =\n    arg.acrobaticsProf !== undefined && typeof arg.acrobaticsProf == \"number\";\n  const arcanaProfCheck =\n    arg.arcanaProf !== undefined && typeof arg.arcanaProf == \"number\";\n  const animalHandlingProfCheck =\n    arg.animalHandlingProf !== undefined &&\n    typeof arg.animalHandlingProf == \"number\";\n  const athleticsProfCheck =\n    arg.athleticsProf !== undefined && typeof arg.athleticsProf == \"number\";\n  const deceptionProfCheck =\n    arg.deceptionProf !== undefined && typeof arg.deceptionProf == \"number\";\n  const historyProfCheck =\n    arg.historyProf !== undefined && typeof arg.historyProf == \"number\";\n  const insightProfCheck =\n    arg.insightProf !== undefined && typeof arg.insightProf == \"number\";\n  const intimidationProfCheck =\n    arg.intimidationProf !== undefined &&\n    typeof arg.intimidationProf == \"number\";\n  const investigationProfCheck =\n    arg.investigationProf !== undefined &&\n    typeof arg.investigationProf == \"number\";\n  const medicineProfCheck =\n    arg.medicineProf !== undefined && typeof arg.medicineProf == \"number\";\n  const natureProfCheck =\n    arg.natureProf !== undefined && typeof arg.natureProf == \"number\";\n  const perceptionProfCheck =\n    arg.perceptionProf !== undefined && typeof arg.perceptionProf == \"number\";\n  const performanceProfCheck =\n    arg.performanceProf !== undefined && typeof arg.performanceProf == \"number\";\n  const persuasionProfCheck =\n    arg.persuasionProf !== undefined && typeof arg.persuasionProf == \"number\";\n  const religionProfCheck =\n    arg.religionProf !== undefined && typeof arg.religionProf == \"number\";\n  const sleightOfHandProfCheck =\n    arg.sleightOfHand !== undefined && typeof arg.sleightOfHand == \"number\";\n  const stealthProfCheck =\n    arg.stealthProf !== undefined && typeof arg.stealthProf == \"number\";\n  const survivalProfCheck =\n    arg.survivalProf !== undefined && typeof arg.survivalProf == \"number\";\n  return (\n    arg &&\n    acrobaticsProfCheck &&\n    arcanaProfCheck &&\n    animalHandlingProfCheck &&\n    athleticsProfCheck &&\n    deceptionProfCheck &&\n    historyProfCheck &&\n    insightProfCheck &&\n    intimidationProfCheck &&\n    investigationProfCheck &&\n    medicineProfCheck &&\n    natureProfCheck &&\n    perceptionProfCheck &&\n    performanceProfCheck &&\n    persuasionProfCheck &&\n    religionProfCheck &&\n    sleightOfHandProfCheck &&\n    stealthProfCheck &&\n    survivalProfCheck\n  );\n}\n","export default class Saves {\n  strSaveProf: number;\n  dexSaveProf: number;\n  conSaveProf: number;\n  intSaveProf: number;\n  wisSaveProf: number;\n  chaSaveProf: number;\n\n  constructor(\n    strSaveProf?: number,\n    dexSaveProf?: number,\n    conSaveProf?: number,\n    intSaveProf?: number,\n    wisSaveProf?: number,\n    chaSaveProf?: number\n  ) {\n    this.strSaveProf = strSaveProf || 0;\n    this.dexSaveProf = dexSaveProf || 0;\n    this.conSaveProf = conSaveProf || 0;\n    this.intSaveProf = intSaveProf || 0;\n    this.wisSaveProf = wisSaveProf || 0;\n    this.chaSaveProf = chaSaveProf || 0;\n  }\n}\n\nexport function isSaves(arg: any): arg is Saves {\n  const strSaveProfCheck =\n    arg.strSaveProf !== undefined && typeof arg.strSaveProf == \"number\";\n  const dexSaveProfCheck =\n    arg.dexSaveProf !== undefined && typeof arg.dexSaveProf == \"number\";\n  const conSaveProfCheck =\n    arg.conSaveProf !== undefined && typeof arg.conSaveProf == \"number\";\n  const intSaveProfCheck =\n    arg.intSaveProf !== undefined && typeof arg.intSaveProf == \"number\";\n  const wisSaveProfCheck =\n    arg.wisSaveProf !== undefined && typeof arg.wisSaveProf == \"number\";\n  const chaSaveProfCheck =\n    arg.chaSaveProf !== undefined && typeof arg.chaSaveProf == \"number\";\n\n  return (\n    arg &&\n    strSaveProfCheck &&\n    dexSaveProfCheck &&\n    conSaveProfCheck &&\n    intSaveProfCheck &&\n    wisSaveProfCheck &&\n    chaSaveProfCheck\n  );\n}\n","export default class Money {\n  copper: number;\n  silver: number;\n  electrum: number;\n  gold: number;\n  platinum: number;\n\n  constructor(\n    copper?: number,\n    silver?: number,\n    electrum?: number,\n    gold?: number,\n    platinum?: number\n  ) {\n    this.copper = copper || 0;\n    this.silver = silver || 0;\n    this.electrum = electrum || 0;\n    this.gold = gold || 0;\n    this.platinum = platinum || 0;\n  }\n}\n\nexport function isMoney(arg: any): arg is Money {\n  const copperCheck = arg.copper !== undefined && typeof arg.copper == \"number\";\n  const silverCheck = arg.silver !== undefined && typeof arg.silver == \"number\";\n  const electrumCheck =\n    arg.electrum !== undefined && typeof arg.electrum == \"number\";\n  const goldCheck = arg.gold !== undefined && typeof arg.gold == \"number\";\n  const platinumCheck =\n    arg.platinum !== undefined && typeof arg.platinum == \"number\";\n  return (\n    arg &&\n    copperCheck &&\n    silverCheck &&\n    electrumCheck &&\n    goldCheck &&\n    platinumCheck\n  );\n}\n","export default class RaceSet {\n  race: string;\n  subrace: string;\n\n  constructor(race?: string, subrace?: string) {\n    this.race = race || \"\";\n    this.subrace = subrace || \"\";\n  }\n}\n\nexport function isRaceSet(arg: any): arg is RaceSet {\n  const raceCheck = arg.race !== undefined && typeof arg.race == \"string\";\n  const subraceCheck =\n    arg.subrace !== undefined && typeof arg.subrace == \"string\";\n  return arg && raceCheck && subraceCheck;\n}\n","import Skills from \"./Skills\";\nimport Saves from \"./Saves\";\nimport Money from \"./Money\";\nimport IEntity from \"../IEntity\";\nimport ClassSet, { isClassSet } from \"./ClassSet\";\nimport RaceSet, { isRaceSet } from \"./RaceSet\";\n\nexport default class Char implements IEntity {\n  id?: number;\n  name: string;\n  player: string;\n  campaign: string;\n  pic: string;\n  classes: ClassSet[];\n  race: RaceSet;\n  background: string;\n  spells: string[];\n  spellSlots: { origin: string; slots: number[]; max: number[] }[];\n  activeSelections: {\n    selectionName: string;\n    activeOption: {\n      entityName: string;\n      entityText: string;\n      level: number;\n    };\n    featureName: string;\n    featureCount: number;\n    className: string;\n  }[];\n  currencyBonis: { origin: string; value: number; max: number }[];\n  items: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }[];\n  monsters: string[];\n  ac: number;\n  hp: number;\n  currentHp: number;\n  init: number;\n  speed: string;\n  str: number;\n  dex: number;\n  con: number;\n  int: number;\n  wis: number;\n  cha: number;\n  saves: Saves;\n  actions: string;\n  profsLangs: string;\n  senses: string;\n  money: Money;\n  skills: Skills;\n  spellNotes: string;\n  alignment: string;\n  inspiration: number;\n  castingHit: number;\n  castingDC: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    player?: string,\n    campaign?: string,\n    pic?: string,\n    classes?: ClassSet[],\n    race?: RaceSet,\n    background?: string,\n    spells?: string[],\n    spellSlots?: { origin: string; slots: number[]; max: number[] }[],\n    activeSelections?: {\n      selectionName: string;\n      activeOption: {\n        entityName: string;\n        entityText: string;\n        level: number;\n      };\n      featureName: string;\n      featureCount: number;\n      className: string;\n    }[],\n    currencyBonis?: { origin: string; value: number; max: number }[],\n    items?: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    }[],\n    monsters?: string[],\n    ac?: number,\n    hp?: number,\n    currentHp?: number,\n    init?: number,\n    speed?: string,\n    str?: number,\n    dex?: number,\n    con?: number,\n    int?: number,\n    wis?: number,\n    cha?: number,\n    saves?: Saves,\n    actions?: string,\n    profsLangs?: string,\n    senses?: string,\n    money?: Money,\n    skills?: Skills,\n    spellNotes?: string,\n    alignment?: string,\n    inspiration?: number,\n    castingHit?: number,\n    castingDC?: number\n  ) {\n    this.id = id || -1;\n    this.name = name || \"\";\n    this.player = player || \"\";\n    this.campaign = campaign || \"\";\n    this.pic = pic || \"\";\n    this.classes = classes || [];\n    this.race = race || new RaceSet();\n    this.background = background || \"\";\n    this.spells = spells || [];\n    this.spellSlots = spellSlots || [];\n    this.activeSelections = activeSelections || [];\n    this.currencyBonis = currencyBonis || [];\n    this.items = items || [];\n    this.monsters = monsters || [];\n    this.ac = ac || 0;\n    this.hp = hp || 0;\n    this.currentHp = currentHp || 0;\n    this.init = init || 0;\n    this.speed = speed || \"\";\n    this.str = str || 0;\n    this.dex = dex || 0;\n    this.con = con || 0;\n    this.int = int || 0;\n    this.wis = wis || 0;\n    this.cha = cha || 0;\n    this.saves = saves || new Saves();\n    this.actions = actions || \"\";\n    this.profsLangs = profsLangs || \"\";\n    this.senses = senses || \"\";\n    this.money = money || new Money();\n    this.skills = skills || new Skills();\n    this.spellNotes = spellNotes || \"\";\n    this.alignment = alignment || \"\";\n    this.inspiration = inspiration || 0;\n    this.castingHit = castingHit || 0;\n    this.castingDC = castingDC || 0;\n  }\n}\n\nexport function isChar(arg: any): arg is Char {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const playerCheck = arg.player !== undefined && typeof arg.player == \"string\";\n  const campaignCheck = arg.campaign !== undefined && typeof arg.campaign == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  const raceCheck = arg.race !== undefined && isRaceSet(arg.race);\n  const backgroundCheck = arg.background !== undefined && typeof arg.background == \"string\";\n  const acCheck = arg.ac !== undefined && typeof arg.ac == \"number\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const currentHpCheck = arg.currentHp !== undefined && typeof arg.currentHp == \"number\";\n  const initCheck = arg.init !== undefined && typeof arg.init == \"number\";\n  const classesCheck =\n    arg.classes !== undefined && Array.isArray(arg.classes) && isClassSet(arg.classes[0]);\n  return (\n    arg &&\n    nameCheck &&\n    playerCheck &&\n    campaignCheck &&\n    picCheck &&\n    raceCheck &&\n    backgroundCheck &&\n    acCheck &&\n    hpCheck &&\n    currentHpCheck &&\n    initCheck &&\n    classesCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    let newType = type + \"s\";\n    if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n    recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <AutoStringField\n          optionTable={\"campaigns\"}\n          value={char.campaign}\n          label=\"Campaign\"\n          onChange={(campaign) => onChange({ ...char, campaign: campaign })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\nimport Class from \"../../../../data/classes/Class\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabClass = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const removeClass = (oldClass: ClassSet) => {\n    let newClassList = char.classes.filter((classe) => classe !== oldClass);\n    onChange({ ...char, classes: newClassList });\n  };\n  const addNewClass = () => {\n    let newClassList = char.classes;\n    newClassList.push({ classe: \"\", subclasse: \"\", level: 0 });\n    onChange({ ...char, classes: newClassList });\n  };\n  const changeClassLevel = useCallback(\n    (oldClassSet: ClassSet, level: number) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, level: level };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClass = useCallback(\n    (oldClassSet: ClassSet, classe: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, classe: classe };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n  const changeClassSubclass = useCallback(\n    (oldClassSet: ClassSet, subclass: string) => {\n      let classes = char.classes.map((classSet: ClassSet) => {\n        if (classSet === oldClassSet) {\n          return { ...classSet, subclasse: subclass };\n        } else {\n          return classSet;\n        }\n      });\n      onChange({ ...char, classes: classes });\n    },\n    [char, onChange]\n  );\n\n  useEffect(() => {\n    if (char.classes.length > 0) {\n      reciveAllFiltered(\n        \"classes\",\n        [\n          {\n            fieldName: \"name\",\n            value: char.classes.map((classe) => {\n              return classe.classe;\n            }),\n            sort: 0,\n          },\n        ],\n        (results: any[]) => {\n          setClasses(results);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <CenterWrapper>\n      <CharView>\n        {char.classes.map((classSet: ClassSet, index: number) => {\n          return (\n            <PropWrapper key={index}>\n              <NumberField\n                value={classSet.level}\n                label=\"Level *\"\n                onChange={(level) => changeClassLevel(classSet, level)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeClass(classSet)} />\n              <AutoStringField\n                optionTable={\"classes\"}\n                value={classSet.classe}\n                label=\"Class *\"\n                onChange={(classe) => changeClass(classSet, classe)}\n              />\n              <AutoStringField\n                optionTable={\"subclasses\"}\n                filters={[{ fieldName: \"type\", value: classSet.classe, sort: 0 }]}\n                value={classSet.subclasse}\n                label=\"Subclass\"\n                onChange={(subclasse) => changeClassSubclass(classSet, subclasse)}\n              />\n            </PropWrapper>\n          );\n        })}\n        <TextButton text={\"Add new Class\"} icon={faPlus} onClick={() => addNewClass()} />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={\n            !(\n              char &&\n              char.classes.length > 0 &&\n              char.classes[0].classe.length > 1 &&\n              char.classes[0].level > 0\n            )\n          }\n          onClick={() => completed(true, \"Race\")}\n        />\n        <PropWrapper>\n          {classes &&\n            classes.map((classe: Class, index: number) => {\n              return (\n                <Text key={index}>\n                  <PropTitle>{classe.name}:</PropTitle>\n                  <FormatedText text={classe.proficiencies} />\n                  <br />\n                  <FormatedText text={classe.equipment} />\n                </Text>\n              );\n            })}\n        </PropWrapper>\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabClass;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Race from \"../../../../data/races/Race\";\nimport Trait from \"../../../../data/races/Trait\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabRace = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <AutoStringField\n            optionTable={\"races\"}\n            value={char.race.race}\n            label=\"Race *\"\n            onChange={(race) =>\n              onChange({ ...char, race: { ...char.race, race: race } })\n            }\n          />\n          <AutoStringField\n            optionTable={\"subraces\"}\n            value={char.race.subrace}\n            label=\"Subrace\"\n            onChange={(subrace) =>\n              onChange({ ...char, race: { ...char.race, subrace: subrace } })\n            }\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Abilities\")}\n          />\n          <PropWrapper>\n            {race && (\n              <Text>\n                <PropTitle>{race.name}:</PropTitle>\n                <FormatedText text={race.abilityScores} />\n                <br />\n                <FormatedText text={race.speed} />\n                {race.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n            {subrace && (\n              <Text>\n                <PropTitle>{subrace.name}:</PropTitle>\n                <FormatedText text={subrace.abilityScores} />\n                <br />\n                <FormatedText text={subrace.type} />\n                {subrace.traits.map((trait: Trait, index: number) => {\n                  return (\n                    <TraitWrapper key={index}>\n                      <TraitName>{trait.name}</TraitName>\n                      <TraitLevel>Level: {trait.level}</TraitLevel>\n                      <TraitText>\n                        <FormatedText text={trait.text} />\n                      </TraitText>\n                    </TraitWrapper>\n                  );\n                })}\n              </Text>\n            )}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabRace;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TraitWrapper = styled.div`\n  width: calc(100% - 24px);\n  padding: 10px;\n  margin: 2px;\n`;\nconst TraitName = styled.div`\n  font-weight: bold;\n`;\nconst TraitLevel = styled.div``;\nconst TraitText = styled.div``;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Saves from \"../../../../data/chars/Saves\";\nimport Skills from \"../../../../data/chars/Skills\";\nimport Class from \"../../../../data/classes/Class\";\nimport FeatureSet from \"../../../../data/classes/FeatureSet\";\nimport Race from \"../../../../data/races/Race\";\nimport Subrace from \"../../../../data/races/Subrace\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleUp,\n  faAngleUp,\n  faCheckCircle,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabAbilities = ({ char, onChange, completed }: $Props) => {\n  const [prof, setProf] = useState<number>(0);\n  const [classes, setClasses] = useState<Class[]>([]);\n  const [race, setRace] = useState<Race>();\n  const [subrace, setSubrace] = useState<Subrace>();\n\n  const calcLevel = useCallback(() => {\n    let level = 0;\n    char.classes.forEach((classe) => {\n      level += classe.level;\n    });\n    return level;\n  }, [char]);\n\n  useEffect(() => {\n    if (classes && classes.length > 0) {\n      const level = calcLevel();\n      classes[0].featureSets.forEach((featureSet: FeatureSet) => {\n        if (featureSet.level === level) {\n          setProf(featureSet.profBonus);\n        }\n      });\n    }\n  }, [classes, calcLevel]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes, calcLevel]);\n\n  useEffect(() => {\n    if (char.race && char.race.race.length > 1) {\n      reciveAllFiltered(\n        \"races\",\n        [{ fieldName: \"name\", value: char.race.race, sort: 0 }],\n        (results: any[]) => {\n          setRace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  useEffect(() => {\n    if (char.race && char.race.subrace.length > 1) {\n      reciveAllFiltered(\n        \"subraces\",\n        [{ fieldName: \"name\", value: char.race.subrace, sort: 0 }],\n        (results: any[]) => {\n          setSubrace(results[0]);\n        }\n      );\n    }\n  }, [char]);\n\n  const formatProf = useCallback((prof: number) => {\n    if (prof === undefined || prof === 0) {\n      return faMinus;\n    } else if (prof === 1) {\n      return faAngleUp;\n    } else {\n      return faAngleDoubleUp;\n    }\n  }, []);\n\n  const formatScore = useCallback((score: number) => {\n    let mod = Math.floor((score - 10) / 2);\n    return mod;\n  }, []);\n\n  const calcSkill = useCallback(\n    (skillProf: number, stat: number) => {\n      return skillProf * prof + formatScore(stat);\n    },\n    [formatScore, prof]\n  );\n\n  const changeProf = useCallback(\n    (profName: string) => {\n      const skills: Skills = char.skills;\n      let profValue = skills[profName];\n      profValue = (profValue + 1) % 3;\n      onChange({ ...char, skills: { ...char.skills, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  const changeSaveProf = useCallback(\n    (profName: string) => {\n      const saves: Saves = char.saves;\n      let profValue = saves[profName];\n      profValue = (profValue + 1) % 2;\n      onChange({ ...char, saves: { ...char.saves, [profName]: profValue } });\n    },\n    [char, onChange]\n  );\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                  </Text>\n                );\n              })}\n            <Text>\n              {race && (\n                <>\n                  <PropTitle>{race.name}:</PropTitle>\n                  <FormatedText text={race.abilityScores} />\n                </>\n              )}\n              <br />\n              {subrace && (\n                <>\n                  <PropTitle>{subrace.name}:</PropTitle>\n                  <FormatedText text={subrace.abilityScores} />\n                </>\n              )}\n            </Text>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          <NumberField\n            value={char.str}\n            label=\"Strength\"\n            onChange={(str) => onChange({ ...char, str: str })}\n          />\n          <NumberField\n            value={char.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onChange({ ...char, dex: dex })}\n          />\n          <NumberField\n            value={char.con}\n            label=\"Constitution\"\n            onChange={(con) => onChange({ ...char, con: con })}\n          />\n          <NumberField\n            value={char.int}\n            label=\"Intelligence\"\n            onChange={(int) => onChange({ ...char, int: int })}\n          />\n          <NumberField\n            value={char.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onChange({ ...char, wis: wis })}\n          />\n          <NumberField\n            value={char.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onChange({ ...char, cha: cha })}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={\n              !(\n                char &&\n                char.str > 0 &&\n                char.dex > 0 &&\n                char.con > 0 &&\n                char.int > 0 &&\n                char.wis > 0 &&\n                char.cha > 0\n              )\n            }\n            onClick={() => completed(true, \"Equipment\")}\n          />\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Str Save:</PropTitle>\n                {calcSkill(char.saves.strSaveProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"strSaveProf\")}>\n                <Icon icon={formatProf(char.saves.strSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Dex Save:</PropTitle>\n                {calcSkill(char.saves.dexSaveProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"dexSaveProf\")}>\n                <Icon icon={formatProf(char.saves.dexSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Con Save:</PropTitle>\n                {calcSkill(char.saves.conSaveProf, char.con)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"conSaveProf\")}>\n                <Icon icon={formatProf(char.saves.conSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Int Save:</PropTitle>\n                {calcSkill(char.saves.intSaveProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"intSaveProf\")}>\n                <Icon icon={formatProf(char.saves.intSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Wis Save:</PropTitle>\n                {calcSkill(char.saves.wisSaveProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"wisSaveProf\")}>\n                <Icon icon={formatProf(char.saves.wisSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Cha Save:</PropTitle>\n                {calcSkill(char.saves.chaSaveProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeSaveProf(\"chaSaveProf\")}>\n                <Icon icon={formatProf(char.saves.chaSaveProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n          <PropWrapper>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Acrobatics:</PropTitle>\n                {calcSkill(char.skills.acrobaticsProf, char.str)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"acrobaticsProf\")}>\n                <Icon icon={formatProf(char.skills.acrobaticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Animal Handling:</PropTitle>\n                {calcSkill(char.skills.animalHandlingProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"animalHandlingProf\")}>\n                <Icon icon={formatProf(char.skills.animalHandlingProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Arcana:</PropTitle>\n                {calcSkill(char.skills.arcanaProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"arcanaProf\")}>\n                <Icon icon={formatProf(char.skills.arcanaProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Athletics:</PropTitle>\n                {calcSkill(char.skills.athleticsProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"athleticsProf\")}>\n                <Icon icon={formatProf(char.skills.athleticsProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Deception:</PropTitle>\n                {calcSkill(char.skills.deceptionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"deceptionProf\")}>\n                <Icon icon={formatProf(char.skills.deceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>History:</PropTitle>\n                {calcSkill(char.skills.historyProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"historyProf\")}>\n                <Icon icon={formatProf(char.skills.historyProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Insight:</PropTitle>\n                {calcSkill(char.skills.insightProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"insightProf\")}>\n                <Icon icon={formatProf(char.skills.insightProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Intimidation:</PropTitle>\n                {calcSkill(char.skills.intimidationProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"intimidationProf\")}>\n                <Icon icon={formatProf(char.skills.intimidationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Investigation:</PropTitle>\n                {calcSkill(char.skills.investigationProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"investigationProf\")}>\n                <Icon icon={formatProf(char.skills.investigationProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Medicine:</PropTitle>\n                {calcSkill(char.skills.medicineProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"medicineProf\")}>\n                <Icon icon={formatProf(char.skills.medicineProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Nature:</PropTitle>\n                {calcSkill(char.skills.natureProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"natureProf\")}>\n                <Icon icon={formatProf(char.skills.natureProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Perception:</PropTitle>\n                {calcSkill(char.skills.perceptionProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"perceptionProf\")}>\n                <Icon icon={formatProf(char.skills.perceptionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Performance:</PropTitle>\n                {calcSkill(char.skills.performanceProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"performanceProf\")}>\n                <Icon icon={formatProf(char.skills.performanceProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Persuasion:</PropTitle>\n                {calcSkill(char.skills.persuasionProf, char.cha)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"persuasionProf\")}>\n                <Icon icon={formatProf(char.skills.persuasionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Religion:</PropTitle>\n                {calcSkill(char.skills.religionProf, char.int)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"religionProf\")}>\n                <Icon icon={formatProf(char.skills.religionProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Sleight Of Hand:</PropTitle>\n                {calcSkill(char.skills.sleightOfHandProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"sleightOfHandProf\")}>\n                <Icon icon={formatProf(char.skills.sleightOfHandProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Stealth:</PropTitle>\n                {calcSkill(char.skills.stealthProf, char.dex)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"stealthProf\")}>\n                <Icon icon={formatProf(char.skills.stealthProf)} />\n              </PropProf>\n            </PropWithProf>\n            <PropWithProf>\n              <PropText>\n                <PropTitle>Survival:</PropTitle>\n                {calcSkill(char.skills.survivalProf, char.wis)}\n              </PropText>\n              <PropProf onClick={(e) => changeProf(\"survivalProf\")}>\n                <Icon icon={formatProf(char.skills.survivalProf)} />\n              </PropProf>\n            </PropWithProf>\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabAbilities;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropWithProf = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n\n  display: flex;\n`;\n\nconst PropText = styled.div`\n  flex: 2 2 auto;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropProf = styled.div`\n  flex: 1 1;\n  max-width: max-content;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    width: 17px !important;\n    height: 17px !important;\n    margin: 0;\n  }\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Char from \"../../../../data/chars/Char\";\nimport Class from \"../../../../data/classes/Class\";\nimport { reciveAllFiltered } from \"../../../../services/DatabaseService\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport {\n  faCheckCircle,\n  faPlus,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport CheckField from \"../../../form_elements/CheckField\";\nimport EnumField from \"../../../form_elements/EnumField\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  char: Char;\n  onChange: (character: Char) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabEquipment = ({ char, onChange, completed }: $Props) => {\n  const [classes, setClasses] = useState<Class[]>([]);\n\n  useEffect(() => {\n    reciveAllFiltered(\n      \"classes\",\n      [\n        {\n          fieldName: \"name\",\n          value: char.classes.map((classe) => {\n            return classe.classe;\n          }),\n          sort: 0,\n        },\n      ],\n      (results: any[]) => {\n        setClasses(results);\n      }\n    );\n  }, [char.classes]);\n\n  const removeItem = (oldItem: {\n    origin: string;\n    attuned: boolean;\n    prof: boolean;\n    attribute: string;\n  }) => {\n    let newItemList = char.items.filter(\n      (item) => item.origin !== oldItem.origin\n    );\n    onChange({ ...char, items: newItemList });\n  };\n  const addNewItem = () => {\n    let newItemList = char.items;\n    newItemList.push({\n      origin: \"\",\n      attuned: false,\n      prof: false,\n      attribute: \"str\",\n    });\n    onChange({ ...char, items: newItemList });\n  };\n  const onChangeItem = (newItem: string, i: number) => {\n    let items = char.items;\n    items[i].origin = newItem;\n    onChange({ ...char, items: items });\n  };\n  const onChangeItemAttribute = (\n    newItem: {\n      origin: string;\n      attuned: boolean;\n      prof: boolean;\n      attribute: string;\n    },\n    i: number\n  ) => {\n    let items = char.items;\n    items[i] = newItem;\n    onChange({ ...char, items: items });\n  };\n\n  return (\n    <>\n      <CenterWrapper>\n        <CharView>\n          <PropWrapper>\n            {classes &&\n              classes.map((classe: Class, index: number) => {\n                return (\n                  <Text key={index}>\n                    <PropTitle>{classe.name}:</PropTitle>\n                    <FormatedText text={classe.proficiencies} />\n                    <br />\n                    <FormatedText text={classe.equipment} />\n                  </Text>\n                );\n              })}\n          </PropWrapper>\n        </CharView>\n      </CenterWrapper>\n      <CenterWrapper>\n        <CharView>\n          {char.items.map(\n            (\n              item: {\n                origin: string;\n                attuned: boolean;\n                prof: boolean;\n                attribute: string;\n              },\n              index: number\n            ) => {\n              return (\n                <Container key={index}>\n                  <AutoStringField\n                    optionTable={[\"items\", \"gears\"]}\n                    value={item.origin}\n                    label=\"Item\"\n                    onChange={(newItem) => onChangeItem(newItem, index)}\n                  />\n                  <CheckField\n                    value={!!item.attuned}\n                    label=\"Attunment\"\n                    onChange={(attunment) =>\n                      onChangeItemAttribute(\n                        {\n                          ...item,\n                          attuned: attunment,\n                        },\n                        index\n                      )\n                    }\n                  />\n                  <CheckField\n                    value={!!item.prof}\n                    label=\"Prof\"\n                    onChange={(prof) =>\n                      onChangeItemAttribute({ ...item, prof: prof }, index)\n                    }\n                  />\n                  <EnumField\n                    options={[\n                      { value: \"str\", label: \"Str\" },\n                      { value: \"dex\", label: \"Dex\" },\n                      { value: \"con\", label: \"Con\" },\n                      { value: \"int\", label: \"Int\" },\n                      { value: \"wis\", label: \"Wis\" },\n                      { value: \"cha\", label: \"Cha\" },\n                    ]}\n                    value={{\n                      value: item.attribute,\n                      label:\n                        item.attribute.charAt(0).toUpperCase() +\n                        item.attribute.slice(1),\n                    }}\n                    label=\"Attribute\"\n                    onChange={(type) =>\n                      onChangeItemAttribute({ ...item, attribute: type }, index)\n                    }\n                  />\n                  <IconButton icon={faTrash} onClick={() => removeItem(item)} />\n                </Container>\n              );\n            }\n          )}\n          <TextButton\n            text={\"Add new Item\"}\n            icon={faPlus}\n            onClick={() => addNewItem()}\n          />\n          <IconButton\n            icon={faCheckCircle}\n            disabled={!(char && char.race && char.race.race.length > 1)}\n            onClick={() => completed(true, \"Finished\")}\n          />\n        </CharView>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLabEquipment;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n\nconst PropWrapper = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 20px);\n  margin: 0 0 5px 0;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 600px;\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { recivePromiseByAttribute, saveWithCallback } from \"../../../../services/DatabaseService\";\nimport ClassSet from \"../../../../data/chars/ClassSet\";\nimport Boni from \"../../../../data/classes/Boni\";\nimport Class from \"../../../../data/classes/Class\";\nimport Char from \"../../../../data/chars/Char\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport CharLabClass from \"./CharLabClass\";\nimport CharLabRace from \"./CharLabRace\";\nimport CharLabAbilities from \"./CharLabAbilities\";\nimport CharLabEquipment from \"./CharLabEquipment\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Char>(new Char());\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const recalcClasses = async (char: Char) => {\n    let bonis: { origin: string; value: number; max: number }[] = [];\n    let spellSlots: {\n      origin: string;\n      slots: number[];\n      max: number[];\n    }[] = [];\n    let fullClassList: { class: Class; classSet: ClassSet }[] = [];\n    let classList: Promise<Class>[] = [];\n\n    char.classes?.forEach((classe) => {\n      classList.push(\n        recivePromiseByAttribute(\"classes\", \"name\", classe.classe)\n      );\n    });\n    const results = await Promise.all(classList);\n    results?.forEach((classe: Class) => {\n      char.classes.forEach((classSet) => {\n        if (classe.name === classSet.classe) {\n          fullClassList.push({ class: classe, classSet: classSet });\n        }\n      });\n    });\n\n    fullClassList?.forEach((classe: { class: Class; classSet: ClassSet }) => {\n      let featureSet = classe.class.featureSets[classe.classSet.level - 1];\n      if (featureSet.bonis) {\n        featureSet.bonis?.forEach((boni: Boni) => {\n          if (boni.isCurrency) {\n            bonis = [\n              ...bonis,\n              {\n                origin: boni.name,\n                value: +boni.value,\n                max: +boni.value,\n              },\n            ];\n          }\n        });\n      }\n      if (featureSet.spellslots && featureSet.spellslots.length > 0) {\n        spellSlots = [\n          ...spellSlots,\n          {\n            origin: classe.class.name,\n            slots: featureSet.spellslots,\n            max: featureSet.spellslots,\n          },\n        ];\n      }\n    });\n\n    if (char.currencyBonis && char.currencyBonis.length > 0) {\n      let updatedBonis = bonis.map((newBoni) => {\n        let updatedOldBonis = char.currencyBonis?.map((old) => {\n          if (newBoni.origin === old.origin) {\n            return {\n              origin: newBoni.origin,\n              value: old.value,\n              max: newBoni.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldBonis &&\n          updatedOldBonis.length > 0 &&\n          updatedOldBonis[0] !== undefined &&\n          updatedOldBonis[0] !== null\n        ) {\n          return updatedOldBonis[0];\n        } else {\n          return newBoni;\n        }\n      });\n      if (updatedBonis && updatedBonis.length > 0) {\n        bonis = Array.from(updatedBonis);\n      }\n    }\n\n    if (char.spellSlots && char.spellSlots.length > 0) {\n      let updatedSpellSlots = spellSlots?.map((newSpellSlots) => {\n        let updatedOldSlots = char.spellSlots?.map((old) => {\n          if (newSpellSlots.origin === old.origin) {\n            return {\n              origin: newSpellSlots.origin,\n              slots: old.slots,\n              max: newSpellSlots.max,\n            };\n          } else {\n            return null;\n          }\n        });\n        if (\n          updatedOldSlots &&\n          updatedOldSlots.length > 0 &&\n          updatedOldSlots[0] !== undefined &&\n          updatedOldSlots[0] !== null\n        ) {\n          return updatedOldSlots[0];\n        } else {\n          return newSpellSlots;\n        }\n      });\n      if (updatedSpellSlots && updatedSpellSlots.length > 0) {\n        spellSlots = Array.from(updatedSpellSlots);\n      }\n    }\n\n    let updatedChar = {\n      ...char,\n      spellSlots: spellSlots,\n      currencyBonis: bonis,\n    };\n    updateChar(updatedChar);\n    return updatedChar;\n  };\n\n  const saveChar = () => {\n    recalcClasses(newChar).then((updatedChar) => {\n      delete updatedChar[\"id\"];\n      saveWithCallback(\"chars\", updatedChar, (result) => {\n        history.push(`/char-detail/id/${result}`);\n      });\n    });\n  }\n\n  return (\n    <>\n      <TabBar\n        children={[\n          \"General\",\n          \"Class\",\n          \"Race\",\n          \"Abilities\",\n          \"Equipment\",\n          \"Finished\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateGeneral}\n                />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Class\" && (\n            <>\n              {!completedClass && (\n                <CharLabClass\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateClass}\n                />\n              )}\n              {completedClass && (\n                <PropWrapper>\n                  <Prop>Would you like to edit classes again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setClass(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Race\" && (\n            <>\n              {!completedRace && (\n                <CharLabRace\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateRace}\n                />\n              )}\n              {completedRace && (\n                <PropWrapper>\n                  <Prop>Would you like to edit race again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setRace(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Abilities\" && (\n            <>\n              {!completedAbilities && (\n                <CharLabAbilities\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateAbilities}\n                />\n              )}\n              {completedAbilities && (\n                <PropWrapper>\n                  <Prop>Would you like to edit abilities again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setAbilities(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Equipment\" && (\n            <>\n              {!completedEquipment && (\n                <CharLabEquipment\n                  char={newChar}\n                  onChange={updateChar}\n                  completed={updateEquipment}\n                />\n              )}\n              {completedEquipment && (\n                <PropWrapper>\n                  <Prop>Would you like to edit equipment again? </Prop>\n                  <IconButton\n                    icon={faEdit}\n                    onClick={() => setEquipment(false)}\n                  />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedAbilities ||\n                !completedGeneral||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <PropWrapper>\n                    <Prop>Create Char?</Prop>\n                    <IconButton\n                      icon={faCheckCircle}\n                      onClick={() => saveChar()}\n                    />\n                  </PropWrapper>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n"],"sourceRoot":""}