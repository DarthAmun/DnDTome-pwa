{"version":3,"sources":["components/form_elements/TextButton.tsx","components/home/Home.tsx"],"names":["TextButton","text","icon","transform","disabled","onClick","SimpleButton","Icon","styled","button","theme","buttons","color","backgroundColor","height","hoverColor","FontAwesomeIcon","Home","history","useHistory","General","WideHomeSection","SelectionTitle","SectionText","packageJson","version","ExternalLink","href","target","rel","className","faDiscord","faReddit","HomeSection","faCog","ButtonBar","push","faQuestionCircle","div","tile","boxShadow","input","a"],"mappings":"o1BAuBeA,IARI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QACrD,OACE,kBAACC,EAAD,CAAcD,QAASA,EAASD,SAAUA,GACvCF,EAAO,kBAACK,EAAD,CAAML,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DF,IAOhE,IAAMK,EAAeE,IAAOC,OAAV,KACP,qBAAGC,MAAkBC,QAAQC,SAClB,qBAAGF,MAAkBC,QAAQE,mBAGvC,qBAAGH,MAAkBC,QAAQG,UACxB,qBAAGJ,MAAkBC,QAAQG,UAajC,qBAAGJ,MAAkBC,QAAQI,cAIlB,qBAAGL,MAAkBC,QAAQP,YAS/CG,EAAOC,YAAOQ,IAAPR,CAAH,M,81DCwBKS,UAvEF,WACX,IAAIC,EAAUC,cAEd,OACE,oCACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,4BACA,kBAACC,EAAD,8JAEoE,IAClE,+BAAKC,EAAYC,SAHnB,KAKA,kBAACF,EAAD,kQAKA,kBAACA,EAAD,4RAMA,kBAACA,EAAD,gEAC0D,6BACxD,kBAACG,EAAD,CACEC,KAAK,6BACLC,OAAO,SACPC,IAAI,sBACJC,UAAU,WAEV,kBAAC,IAAD,CAAiB5B,KAAM6B,MANzB,qBAQA,kBAACL,EAAD,CACEC,KAAK,oCACLC,OAAO,SACPC,IAAI,sBACJC,UAAU,UAEV,kBAAC,IAAD,CAAiB5B,KAAM8B,MANzB,sBAUJ,kBAACC,EAAD,KACE,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAiBpB,KAAMgC,MADzB,YAGA,kBAACX,EAAD,4EAGA,kBAACY,EAAD,KACE,kBAAC,IAAD,CAAYlC,KAAM,gBAAiBI,QAAS,kBAAMa,EAAQkB,KAAR,iBAGtD,kBAACH,EAAD,KACE,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAiBpB,KAAMmC,MADzB,SAGA,kBAACd,EAAD,8FAGA,kBAACY,EAAD,KACE,kBAAC,IAAD,CAAYlC,KAAM,OAAQI,QAAS,kBAAMa,EAAQkB,KAAR,iBAUrD,IAAMhB,EAAUZ,IAAO8B,IAAV,KASPL,EAAczB,IAAO8B,IAAV,KAEN,qBAAG5B,MAAkB6B,KAAK3B,SACf,qBAAGF,MAAkB6B,KAAK1B,mBAGhC,qBAAGH,MAAkB6B,KAAKC,aAWpCnB,EAAkBb,YAAOyB,EAAPzB,CAAH,KAIfc,EAAiBd,IAAO8B,IAAV,KAST,qBAAG5B,MAAkB+B,MAAM7B,SAChB,qBAAGF,MAAkB+B,MAAM5B,mBAG3CU,EAAcf,IAAO8B,IAAV,KAMXH,EAAY3B,YAAOe,EAAPf,CAAH,KAKTkB,EAAelB,IAAOkC,EAAV,KAII,qBAAGhC,MAAkBC,QAAQE,mBAUxC,qBAAGH,MAAkBC,QAAQC","file":"static/js/77.61a4d8d6.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport packageJson from \"../../../package.json\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { faCog, faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { faDiscord, faReddit } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Home = () => {\n  let history = useHistory();\n\n  return (\n    <>\n      <General>\n        <WideHomeSection>\n          <SelectionTitle>Welcome to DnDTome!</SelectionTitle>\n          <SectionText>\n            DnDTome is a progressive web app that lets you manage all of your campaigns, spells,\n            classes and more. It is in continous development and currently in{\" \"}\n            <b>v{packageJson.version}</b>.\n          </SectionText>\n          <SectionText>\n            You can install this webapp as a app in certain browsers. For more infos on this visit\n            the discord or the help section down below. Additionally this webapp works without an connection to the internet once\n            visited. So no worries playing in the woods.\n          </SectionText>\n          <SectionText>\n            If the webapp does not contain anything please import data via the options. For more\n            infos on this visit the discord. None of you data is shared via the internet. Everything\n            you put into this webapp is stored inside your browser. You can however export and\n            import everything.\n          </SectionText>\n          <SectionText>\n            If you have suggestions or encounter a bug please visit:<br></br>\n            <ExternalLink\n              href=\"https://discord.gg/2KB3tzG\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"discord\"\n            >\n              <FontAwesomeIcon icon={faDiscord} /> Join the discord\n            </ExternalLink>\n            <ExternalLink\n              href=\"https://www.reddit.com/r/DnDTome/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"reddit\"\n            >\n              <FontAwesomeIcon icon={faReddit} /> Join the reddit\n            </ExternalLink>\n          </SectionText>\n        </WideHomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faCog} /> Options\n          </SelectionTitle>\n          <SectionText>\n            To import/export or to make other adjustments to your collection...\n          </SectionText>\n          <ButtonBar>\n            <TextButton text={\"Go to options\"} onClick={() => history.push(`/options`)} />\n          </ButtonBar>\n        </HomeSection>\n        <HomeSection>\n          <SelectionTitle>\n            <FontAwesomeIcon icon={faQuestionCircle} /> Help\n          </SelectionTitle>\n          <SectionText>\n            Help on where to find what and how to add tables or hyperlinks inside of text fields.\n          </SectionText>\n          <ButtonBar>\n            <TextButton text={\"Help\"} onClick={() => history.push(`/help`)} />\n          </ButtonBar>\n        </HomeSection>\n      </General>\n    </>\n  );\n};\n\nexport default Home;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  align-content: stretch;\n`;\n\nconst HomeSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  align-content: space-between;\n`;\n\nconst WideHomeSection = styled(HomeSection)`\n  flex: 1 1 100%;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  max-height: 20px;\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n\nconst ButtonBar = styled(SectionText)`\n  align-self: flex-end;\n  max-height: 50px;\n`;\n\nconst ExternalLink = styled.a`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 38px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 36px;\n\n  &.patreon {\n    background-color: rgb(232, 91, 70);\n  }\n  &.discord {\n    background-color: #7289da;\n  }\n  &.reddit {\n    background-color: #ff4500;\n  }\n`;\n"],"sourceRoot":""}