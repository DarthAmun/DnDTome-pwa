{"version":3,"sources":["components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/entities/monster/details/MonsterView.tsx","components/entities/monster/details/MonsterEditView.tsx","components/entities/monster/details/MonsterDetail.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","hooks/DexieHooks.tsx","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/general_elements/Dialog.tsx","components/form_elements/NumberField.tsx","components/form_elements/TextField.tsx","../node_modules/peerjs/dist sync"],"names":["IconButton","icon","floatLeft","disabled","transform","onClick","SimpleButton","left","Icon","DisabledSimpleButton","styled","div","theme","buttons","color","backgroundColor","height","FontAwesomeIcon","TextButton","text","button","hoverColor","StringField","value","label","placeholder","onChange","Field","LabelText","Input","type","e","target","tile","main","highlight","input","MonsterView","monster","useState","send","setSend","isLegendary","useCallback","undefined","lAblt","trim","sAblt","includes","getPicture","pic","formatCr","cr","CenterWrapper","ImageView","View","Type","subtype","Flag","CR","Name","name","PropWrapper","Prop","PropTitle","str","dex","con","int","wis","cha","faShieldAlt","ac","hp","size","alignment","faRunning","speed","senses","lang","savingThrows","skills","dmgVulnerabilitie","dmgResistance","dmgImmunities","conImmunities","faLink","sources","faPaperPlane","P2PSender","data","mode","ablt","Text","FormatedText","span","backgroundColorLink","Image","ImageElm","src","Empty","img","MonsterEditView","onEdit","NumberField","FieldGroup","faImage","TextField","faBookOpen","MonsterDetail","isNew","editMode","setMode","monsterObj","editMonster","showAlert","setAlert","showDeleteDialog","setDeleteDialog","message","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","useEffect","Dialog","faExclamationTriangle","confirmeText","confirmeClick","remove","id","goBack","abortText","abortClick","TopBar","BackButton","faArrowLeft","action","toString","title","tableName","updateWithCallback","result","setTimeout","updateMonster","faSave","faTrash","Message","LinkCheck","loading","setLoading","entitiyFound","setEntity","recivePromiseByAttributeCount","then","count","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","link","push","TextPart","key","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","th","td","useItem","effect","setEffect","reducer","state","error","useReducer","dispatch","get","catch","useItemByAttr","attr","attrValue","where","equals","first","Back","ToggleLeft","ToggleRight","EditToggle","props","setName","peer","setPeer","setError","brokerId","min","max","password","characters","i","length","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","console","log","on","conn","errorData","disconnected","destroyed","reconnect","reciveAllPromise","results","faExclamationCircle","DialogWrapper","ButtonBar","textarea","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/15.0ac48545.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  onClick: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPaperPlane,\n  faRunning,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { GiResize, GiAngelOutfit, GiLifeBar } from \"react-icons/gi\";\nimport { MdRecordVoiceOver, MdRemoveRedEye } from \"react-icons/md\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport P2PSender from \"../../../p2p/P2PSender\";\n\ninterface $Props {\n  monster: Monster;\n}\n\nconst MonsterView = ({ monster }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n  \n  const isLegendary = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.lAblt.trim() !== \"\" || monster.sAblt.includes(\"Legendary\")) {\n        return \"L\";\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  const getPicture = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.pic === \"\" || monster.pic === null) {\n        return \"\";\n      }\n      return monster.pic;\n    }\n    return \"\";\n  }, [monster]);\n\n  const formatCr = useCallback(() => {\n    if (monster !== undefined) {\n      if (monster.cr === 0.125) {\n        return \"⅛\";\n      } else if (monster.cr === 0.25) {\n        return \"¼\";\n      } else if (monster.cr === 0.5) {\n        return \"½\";\n      } else {\n        return monster.cr;\n      }\n    }\n    return \"\";\n  }, [monster]);\n\n  return (\n    <CenterWrapper>\n      {getPicture() !== \"\" ? (\n        <ImageView>\n          <Image pic={getPicture()}></Image>\n        </ImageView>\n      ) : (\n        \"\"\n      )}\n      <View>\n        <Type>\n          {monster.type}{\" \"}\n          {monster.subtype.trim() !== \"\" ? \"(\" + monster.subtype + \")\" : \"\"}\n        </Type>\n\n        <Flag>\n          <b>{isLegendary()}</b>\n        </Flag>\n\n        <CR>\n          <b>{formatCr()}</b>\n        </CR>\n        <Name>\n          <b>{monster.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>\n            <PropTitle>Str:</PropTitle>\n            {monster.str}\n          </Prop>\n          <Prop>\n            <PropTitle>Dex:</PropTitle>\n            {monster.dex}\n          </Prop>\n          <Prop>\n            <PropTitle>Con:</PropTitle>\n            {monster.con}\n          </Prop>\n          <Prop>\n            <PropTitle>Int:</PropTitle>\n            {monster.int}\n          </Prop>\n          <Prop>\n            <PropTitle>Wis:</PropTitle>\n            {monster.wis}\n          </Prop>\n          <Prop>\n            <PropTitle>Cha:</PropTitle>\n            {monster.cha}\n          </Prop>\n          <Prop>\n            <Icon icon={faShieldAlt} />\n            {monster.ac}\n          </Prop>\n          <Prop>\n            <GiLifeBar />\n            {monster.hp}\n          </Prop>\n          <Prop>\n            <GiResize />\n            {monster.size}\n          </Prop>\n          <Prop>\n            <GiAngelOutfit />\n            {monster.alignment}\n          </Prop>\n          <Prop>\n            <Icon icon={faRunning} />\n            {monster.speed}\n          </Prop>\n          <Prop>\n            <MdRemoveRedEye />\n            {monster.senses}\n          </Prop>\n          <Prop>\n            <MdRecordVoiceOver />\n            {monster.lang}\n          </Prop>\n          {monster.savingThrows && <Prop>{monster.savingThrows}</Prop>}\n          {monster.skills && (\n            <Prop>\n              <PropTitle>Skills:</PropTitle>\n              {monster.skills}\n            </Prop>\n          )}\n          {monster.dmgVulnerabilitie && (\n            <Prop>{monster.dmgVulnerabilitie}</Prop>\n          )}\n          {monster.dmgResistance && (\n            <Prop>\n              <PropTitle>Resistance:</PropTitle>\n              {monster.dmgResistance}\n            </Prop>\n          )}\n          {monster.dmgImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.dmgImmunities}\n            </Prop>\n          )}\n          {monster.conImmunities && (\n            <Prop>\n              <PropTitle>Immunities:</PropTitle>\n              {monster.conImmunities}\n            </Prop>\n          )}\n          <Prop>\n            <Icon icon={faLink} />\n            {monster.sources}\n          </Prop>\n        </PropWrapper>\n        <PropWrapper>\n        {!send && (\n          <TextButton\n            text={`Send ${monster.name}`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={monster} mode={\"THIS\"} />}\n      </PropWrapper>\n      </View>\n      {monster.ablt && (\n        <View>\n          <Text>\n            <PropTitle>Abilities:</PropTitle>\n            <FormatedText text={monster.ablt} />\n          </Text>\n        </View>\n      )}\n      {monster.sAblt && (\n        <View>\n          <Text>\n            <PropTitle>Spezial Abilities:</PropTitle>\n            <FormatedText text={monster.sAblt} />\n          </Text>\n        </View>\n      )}\n      {monster.lAblt && (\n        <View>\n          <Text>\n            <PropTitle>Legendary Abilities:</PropTitle>\n            <FormatedText text={monster.lAblt} />\n          </Text>\n        </View>\n      )}\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  max-width: 600px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst ImageView = styled(View)`\n  justify-content: flex-end;\n  flex: 1 1 300px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst CR = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Type = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  line-height: 30px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  float: left;\n  width: calc(100% - 6px);\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  if (pic !== \"\") {\n    return <ImageElm src={pic}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.img`\n  margin: 5px;\n  max-height: 30vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Monster from \"../../../../data/Monster\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nimport { faLink, faBookOpen, faImage } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  monster: Monster;\n  onEdit: (value: Monster) => void;\n}\n\nconst MonsterEditView = ({ monster, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={monster.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...monster, name: name })}\n        />\n        <StringField\n          value={monster.type}\n          label=\"Type\"\n          onChange={(type) => onEdit({ ...monster, type: type })}\n        />\n        <StringField\n          value={monster.subtype}\n          label=\"Subtype\"\n          onChange={(subtype) => onEdit({ ...monster, subtype: subtype })}\n        />\n        <StringField\n          value={monster.alignment}\n          label=\"Alignment\"\n          onChange={(alignment) => onEdit({ ...monster, alignment: alignment })}\n        />\n        <StringField\n          value={monster.size}\n          label=\"Size\"\n          onChange={(size) => onEdit({ ...monster, size: size })}\n        />\n        <NumberField\n          value={monster.cr}\n          label=\"CR\"\n          onChange={(cr) => onEdit({ ...monster, cr: cr })}\n        />\n        <FieldGroup>\n          <NumberField\n            value={monster.hp}\n            label=\"Hp\"\n            onChange={(hp) => onEdit({ ...monster, hp: hp })}\n          />\n          <NumberField\n            value={monster.ac}\n            label=\"Ac\"\n            onChange={(ac) => onEdit({ ...monster, ac: ac })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.str}\n            label=\"Strength\"\n            onChange={(str) => onEdit({ ...monster, str: str })}\n          />\n          <NumberField\n            value={monster.dex}\n            label=\"Dexterity\"\n            onChange={(dex) => onEdit({ ...monster, dex: dex })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.con}\n            label=\"Constitution\"\n            onChange={(con) => onEdit({ ...monster, con: con })}\n          />\n          <NumberField\n            value={monster.int}\n            label=\"Intelligence\"\n            onChange={(int) => onEdit({ ...monster, int: int })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={monster.wis}\n            label=\"Wisdom\"\n            onChange={(wis) => onEdit({ ...monster, wis: wis })}\n          />\n          <NumberField\n            value={monster.cha}\n            label=\"Charisma\"\n            onChange={(cha) => onEdit({ ...monster, cha: cha })}\n          />\n        </FieldGroup>\n        <StringField\n          value={monster.speed}\n          label=\"Speed\"\n          onChange={(speed) => onEdit({ ...monster, speed: speed })}\n        />\n        <StringField\n          value={monster.senses}\n          label=\"Senses\"\n          onChange={(senses) => onEdit({ ...monster, senses: senses })}\n        />\n        <StringField\n          value={monster.lang}\n          label=\"Lang\"\n          onChange={(lang) => onEdit({ ...monster, lang: lang })}\n        />\n        <StringField\n          value={monster.savingThrows}\n          label=\"Saving Throws\"\n          onChange={(savingThrows) =>\n            onEdit({ ...monster, savingThrows: savingThrows })\n          }\n        />\n        <StringField\n          value={monster.skills}\n          label=\"Skills\"\n          onChange={(skills) => onEdit({ ...monster, skills: skills })}\n        />\n        <StringField\n          value={monster.dmgVulnerabilitie}\n          label=\"Vulnerabilities\"\n          onChange={(dmgVulnerabilitie) =>\n            onEdit({ ...monster, dmgVulnerabilitie: dmgVulnerabilitie })\n          }\n        />\n        <StringField\n          value={monster.dmgResistance}\n          label=\"Resistances\"\n          onChange={(dmgResistance) =>\n            onEdit({ ...monster, dmgResistance: dmgResistance })\n          }\n        />\n        <StringField\n          value={monster.dmgImmunities}\n          label=\"Immunities\"\n          onChange={(dmgImmunities) =>\n            onEdit({ ...monster, dmgImmunities: dmgImmunities })\n          }\n        />\n        <StringField\n          value={monster.conImmunities}\n          label=\"Condition Immunities\"\n          onChange={(conImmunities) =>\n            onEdit({ ...monster, conImmunities: conImmunities })\n          }\n        />\n        <StringField\n          value={monster.sources}\n          label=\"Sources\"\n          icon={faLink}\n          onChange={(sources) => onEdit({ ...monster, sources: sources })}\n        />\n        <StringField\n          value={monster.pic}\n          label=\"Picture\"\n          icon={faImage}\n          onChange={(pic) => onEdit({ ...monster, pic: pic })}\n        />\n        <TextField\n          value={monster.ablt}\n          label=\"Abilites\"\n          icon={faBookOpen}\n          onChange={(ablt) => onEdit({ ...monster, ablt: ablt })}\n        />\n        <TextField\n          value={monster.sAblt}\n          label=\"Spezial Abilities\"\n          icon={faBookOpen}\n          onChange={(sAblt) => onEdit({ ...monster, sAblt: sAblt })}\n        />\n        <TextField\n          value={monster.lAblt}\n          label=\"Legendary Abilities\"\n          icon={faBookOpen}\n          onChange={(lAblt) => onEdit({ ...monster, lAblt: lAblt })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default MonsterEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MonsterView from \"./MonsterView\";\nimport MonsterEditView from \"./MonsterEditView\";\nimport BackButton from \"../../../form_elements/BackButton\";\nimport Monster from \"../../../../data/Monster\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { remove, updateWithCallback } from \"../../../../services/DatabaseService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dialog from \"../../../general_elements/Dialog\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../../../general_elements/ToggleStyle\";\n\ninterface $Props {\n  monster: Monster;\n  isNew: boolean;\n}\n\nconst MonsterDetail = ({ monster, isNew }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n  const [monsterObj, editMonster] = useState<Monster>(monster);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteMonster = () => {\n    setDeleteDialog(true);\n  };\n\n  useEffect(() => {\n    if (monsterObj !== monster) {\n      setUnsavedChanges(true);\n    }\n  }, [monsterObj, monster]);\n\n  const updateMonster = (tableName: string, monsterObj: Monster) => {\n    updateWithCallback(tableName, monsterObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(\"Saved successful!\");\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${monster.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(\"monsters\", monster.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {unsavedChanges && <Icon icon={faExclamationTriangle} title={\"Unsaved changes!\"} />}\n        {editMode && (\n          <>\n            <IconButton onClick={() => updateMonster(\"monsters\", monsterObj)} icon={faSave} />\n            <IconButton onClick={() => deleteMonster()} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode ? (\n        <MonsterEditView monster={monsterObj} onEdit={(value) => editMonster(value)} />\n      ) : (\n        <MonsterView monster={monsterObj} />\n      )}\n    </>\n  );\n};\n\nexport default MonsterDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  min-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    recivePromiseByAttributeCount(type + \"s\", \"name\", name).then((count: number) => {\n      setEntity(count > 0);\n      setLoading(false);\n    });\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n        return <GiWomanElfFace />;\n      case \"class\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n        case \"group\":\n          return <HiUserGroup />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              const link: string = \"/\" + linkParts[0] + \"-detail/name/\" + linkParts[1];\n              formattedParts.push(\n                <TextPart key={index}>\n                  <Link onClick={() => history.push(link)}>\n                    <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                  </Link>\n                  <TextPart>{codePart[1]}</TextPart>\n                </TextPart>\n              );\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <>{formatedText}</>;\n};\n\nexport default FormatedText;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import Dexie from \"dexie\";\nimport { useReducer, useEffect, useCallback, useState } from \"react\";\nimport Filter from \"../data/Filter\";\nimport ReactDOM from \"react-dom\";\n\ntype TableState<T> = [T[] | undefined, boolean, Dexie.DexieError | undefined];\ntype TableAction<T> =\n  | { type: \"resolved\"; data: T[] }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\ntype ItemState<T> = [T | undefined, boolean, Dexie.DexieError | undefined];\ntype ItemAction<T> =\n  | { type: \"resolved\"; data: T }\n  | { type: \"empty\" }\n  | { type: \"reset\" }\n  | { type: \"error\"; error: Dexie.DexieError };\n\nexport const useTable = <T, U>(table: Dexie.Table<T, U>): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .toArray()\n          .then((data) => {\n            dispatch({\n              type: \"resolved\",\n              data,\n            });\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect]);\n\n  return state;\n};\n\nexport const useTableByFilter = <T, U>(\n  table: Dexie.Table<T, U>,\n  filters: Filter[]\n): TableState<T> => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter[]>(filters);\n  const reducer = useCallback((state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      case \"reset\":\n        return [undefined, true, undefined];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (filter !== filters) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        dispatch({ type: \"reset\" });\n        setFilter(filters);\n        setEffect(true);\n      });\n    }\n  }, [filter, filters, setEffect]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () => console.time(\"filtered get all\");\n      table\n        .filter((obj: T) => {\n          let test: boolean[] = [];\n          filters.forEach((filter) => {\n            if (typeof filter.value === \"string\") {\n              test.push(\n                // @ts-ignore\n                obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n              );\n            } else if (typeof filter.value === \"number\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (typeof filter.value === \"boolean\") {\n              // @ts-ignore\n              test.push(obj[filter.fieldName] === filter.value);\n            } else if (filter.value instanceof Array) {\n              let arrayTest: boolean = false;\n              filter.value.forEach((filterPart: string | boolean | number) => {\n                if (typeof filterPart === \"string\") {\n                  if (\n                    // @ts-ignore\n                    obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n                  )\n                    arrayTest = true;\n                } else if (typeof filterPart === \"number\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                } else if (typeof filterPart === \"boolean\") {\n                  // @ts-ignore\n                  if (obj[filter.fieldName] === filterPart) arrayTest = true;\n                }\n              });\n              test.push(arrayTest);\n            }\n          });\n\n          let result = true;\n          test.forEach((val) => {\n            if (!val) result = false;\n          });\n          return result;\n        })\n        .sortBy(\"name\")\n        .then((data) => {\n          console.timeEnd(\"filtered get all\");\n          dispatch({\n            type: \"resolved\",\n            data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"error\",\n            error,\n          });\n        });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, effect, filters]);\n\n  return state;\n};\n\nexport const useItem = <T, U>(table: Dexie.Table<T, U>, id: U) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .get(id)\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, id, effect]);\n\n  return state;\n};\n\nexport const useItemByAttr = <T, U>(table: Dexie.Table<T, U>, attr: string, attrValue: string) => {\n  const [effect, setEffect] = useState<boolean>(true);\n  const reducer = useCallback((state: ItemState<T>, action: ItemAction<T>): ItemState<T> => {\n    switch (action.type) {\n      case \"resolved\":\n        return [action.data, false, undefined];\n      case \"empty\":\n        return [undefined, false, undefined];\n      case \"error\":\n        return [undefined, false, action.error];\n      default:\n        return [undefined, true, undefined];\n    }\n  }, []);\n\n  const [state, dispatch] = useReducer(reducer, [undefined, true, undefined]);\n\n  useEffect(() => {\n    if (effect) {\n      const getAndDispatch = () =>\n        table\n          .where(attr)\n          .equals(attrValue)\n          .first()\n          .then((data) => {\n            if (data !== undefined) {\n              dispatch({\n                type: \"resolved\",\n                data,\n              });\n            } else {\n              dispatch({\n                type: \"empty\",\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: \"error\",\n              error,\n            });\n          });\n\n      getAndDispatch();\n      setEffect(false);\n    }\n  }, [table, attr, attrValue, effect]);\n\n  return state;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({\n  value,\n  max,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 95;"],"sourceRoot":""}